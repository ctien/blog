{"version":3,"sources":["webpack:///path---2018-05-25-viet-code-javascript-tot-hon-voi-webpack-715c676b0c364de28424.js","webpack:///./.cache/json/2018-05-25-viet-code-javascript-tot-hon-voi-webpack.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/2018-05-25-viet-code-javascript-tot-hon-voi-webpack.json","module","exports","data","markdownRemark","html","frontmatter","date","path","tags","title","desc","pathContext","prev","next","excerpt","id","timeToRead"],"mappings":"AAAAA,cAAc,KAERC,6GACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,wwUAA+2TC,aAAqpBC,KAAA,eAAAC,KAAA,uDAAAC,MAAA,wBAAAC,MAAA,0CAAAC,KAAA,sFAAkQC,aAAgBC,MAAA,EAAAC,MAAqBC,QAAA,6PAAAV,KAAA;AAAsvrBW,GAAA,+GAAAC,WAAA,EAAAX,aAAscC,KAAA,2BAAAC,KAAA,4CAAAC,MAAA,sBAAAC,MAAA","file":"path---2018-05-25-viet-code-javascript-tot-hon-voi-webpack-715c676b0c364de28424.js","sourcesContent":["webpackJsonp([26],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/2018-05-25-viet-code-javascript-tot-hon-voi-webpack.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Vấn đề</h2>\\n<p>Viết code client-side nếu không có các công cụ hỗ trợ thì trước sau vì cũng giống như đống hỗn độn trên desktop, để maintain và người khác có thể vào đọc hiểu được thì việc code được tổ chức tốt là điều ai cũng biết, lý thuyết là thế, nhưng nếu cứ làm việc theo kiểu cũ cứ quăng script tràng lan bằng thẻ <code>&#x3C;script></code> sẽ chẳng dễ gì sắp xếp và nhớ nổi cái nào là cái nào nếu, add thêm cỡ chục files, <em>best practice</em> khuyên rằng hạn chế số lượng file script càng ít càng tốt, tốt nhất là 1 file duy nhất.</p>\\n<p>Trước đây có nhiều giải pháp cho vấn đề như là Gulp, dùng để bunch toàn bộ javascript thành 1 file. Nhưng chưa đủ. Với Gulp chúng ta đã đẩy các dependency ngang hàng nhau, và phụ thuộc vào biến global để chia sẽ dữ liệu giữa các files.</p>\\n<h3>Cách tốt hơn</h3>\\n<p>Nếu trước đây chưa từng sử dụng mấy cái tool để quản lý asset ở frontend, tốt nhất là học luôn Webpack, bỏ qua Gulp, Gruntjs luôn. Còn nếu nếu đã từng dùng mấy task runner kiểu Gulp, Gruntjs, thì chuyển qua dùng webpack cũng không khó khăn lắm, chỉ là khác nhau cách tổ chức và quản lý dependency.</p>\\n<h2>Webpack vs. Gulp</h2>\\n<p>Chắc đã từng nghe tới câu này: <strong>Gulp là task runner, Webpack là module bundler</strong>, ý nhĩa thật sự sau câu này là gì?</p>\\n<p>Gulp là công cụ tự động hóa tốt, cho phép chúng ta setup một mớ các tiến trình phức tạp cần thực hiện (một cách tự động) bằng javascript, rồi chạy nó bằng một lệnh duy nhất. Vấn đề với Gulp là nếu code file A depend vào code ở file B, bạn cần báo cáo với Gulp để nó include file A trước, và khi bạn thêm càng lúc càng nhiều file depend chồng chéo kiểu này, cây dependency là lớn dần, và sẽ gần như không thể maintain được nữa, vì chúng ta phải config bằng tay, nếu sử dụng file manifest với plugin <code>asset-builder</code> cũng không thể cứu vãn.</p>\\n<p><img src=\\\"https://res.cloudinary.com/forestry-demo/image/fetch/c_limit,dpr_auto,f_auto,q_80,w_674/https://forestry.io/uploads/2018/03/webpack_fighter_of_the_gulpstack_champion_of_the_bundle.png\\\"></p>\\n<p>Bài toàn dependency này đã được Webpack giải quyết triệt để. Những gì bạn cần làm là báo với Webpack file <strong>entry</strong> point mình cần bundle là gì, chuyện bạn <em>import module</em> lúc code sẽ do webpack đảm nhiệm chuyện dựng lên dependency graph, webpack sẽ bundle cho bạn 1 file duy nhất bạn cần. Chúng ta khỏi phải báo cáo với webpack thứ tự các file nào cần trước hay sau, để đó Webpack lo!</p>\\n<p>Ngắn gọn là: với Gulp dependency bị giới hạn vì nó yêu cầu mình tự chỉ định sự phụ thuộc, Webpack thì nó dùng logic để tính toán rồi bundle đúng thứ tự.</p>\\n<h2>Viết code Module</h2>\\n<p>Để Webpack hoạt động như phép màu như vậy, chúng ta chỉ cần viết javascript của mình dạng <em>module</em>. Viết module trong javascript là tách các file ra thành nhiều file, việc sử dụng code giữa các file sẽ thực hiện bằng <strong>export</strong> và <strong>import</strong></p>\\n<p>Webpack hổ trỡ 2 chuẩn module hóa hiện giờ là <strong>EcmaScript</strong> và  <strong>CommonJS</strong>. Ví dụ bên dưới để hình dung cách viết module trong file <code>hello.js</code> rồi <strong>import</strong> vào trong file <code>app.js</code> bằng cả 2 kiểu viết EcmaScript và CommonJS</p>\\n<p>Viết kiểu <strong>EcmaScript</strong></p>\\n<p>file hello.js</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">hello</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Hello Binh An!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>file app.js</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>hello<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./hello'</span>\\n<span class=\\\"token function\\\">helle</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>Viết kiểu <strong>CommonJS</strong></p>\\n<p>file hello.js</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code>module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Hello Bình An!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>file app.js</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./hello'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">hello</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h2>Cấu hình Webpack</h2>\\n<p>Một điểm hay của webpack là nếu có ai đó đã config rồi thì những người sau không cần phải vào file config để hiểu cách tổ chức code, chỉ cần hiểu được cách tổ chức code của project.</p>\\n<p>Giờ thử config đơn giản nhất để hiểu một số thành phần quan trọng nhất của webpack</p>\\n<p>Tổ chức project như vầy</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>src/\\n    app.js\\nwebpack.config.js</code></pre>\\n      </div>\\n<p>Mặt định Webpack sẽ tìm file config với tên là <code>webpack.config.js</code>. Tiếp chúng ta cần cài webpack và webpack-cli</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>npm init -y\\nnpm install --save-dev webpack webpack-cli</code></pre>\\n      </div>\\n<p>Trong file <code>webpack.config.js</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">var</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./src/app.js'</span><span class=\\\"token punctuation\\\">,</span>\\n    output<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        path<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'dist'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        filename<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'bundle.js'</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>2 phần quan trọng nhất mà phải biết là <strong>entry</strong> - file source nằm ở đâu và <strong>output</strong> - file sẽ bundle ở đâu. Sử dụng module <code>path</code> để biết vị trí thực tế lúc chạy.</p>\\n<p>Chạy CLI để bundle</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>./node_modules/webpack-cli/bin/webpack.js</code></pre>\\n      </div>\\n<p>Nó sẽ đọc source trong file <code>src/app.js</code> rồi compile vào <code>dist/bundle.js</code>. Thư mục sau khi chạy xong sẽ có</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>dist/\\n    bundle.js\\nsrc/\\n    app.js\\npackage.json\\nwebpack.config.js</code></pre>\\n      </div>\\n<p>Để rút chạy đoạn CLI dài ngoằn <code>./node_modules/webpack-cli/bin/webpack.js</code> có thể thêm một custom script trong file <code>package.json</code>. Bạn có thể chạy nó bằng <code>npm run SCRIPT_NAME</code></p>\\n<p>Thêm vào trong package.json</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>    \\n    <span class=\\\"token property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"test\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"echo \\\\\\\"Error: no test specified\\\\\\\" &amp;&amp; exit 1\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"build\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"./node_modules/webpack-cli/bin/webpack.js\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"watch\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"./node_modules/webpack-cli/bin/webpack.js --watch\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Giờ chúng ta có thể chạy bằng lệnh <code>npm run build</code>, ở trên chúng ta cũng vừa thêm đoạn <code>npm run watch</code>, thêm option <code>--watch</code> để khi có bất kỳ thay đổi nào nó sẽ tự động detect và compile lại.</p>\\n<p>!!!! CUNG HỶ !!!!!</p>\\n<p>Bạn đã chạm được vào cánh cửa đầu tiên của webpack, webpack còn nhiều khả năng nữa, tuy nhiên module bundle là core feature, bài tiếp theo chúng ta sẽ khám phá nhiều hơn như loaders, plugins, development server.</p>\\n<p><a href=\\\"https://forestry.io/blog/write-better-javascript-with-webpack/\\\">Link bài gốc</a></p>\\n<p>Tác giả: DJ Walker</p>\",\"frontmatter\":{\"date\":\"May 25, 2018\",\"path\":\"/2018-05-25-viet-code-javascript-tot-hon-voi-webpack\",\"tags\":[\"javascript\",\"webpack\"],\"title\":\"Webpack là gì và tại sao ta phải xài nó\",\"desc\":\"Bài này sẽ nói rõ tại sao Webpack là sự lựa chọn sáng suốt cho bundle javascript\"}}},\"pathContext\":{\"prev\":false,\"next\":{\"excerpt\":\"controlled component vs. uncontrolled component Không giống các element DOM, element FORM sẽ làm việc hơi khác trong React. Data của form sẽ được xử lý bởi component, không phải bởi DOM, thông thường chúng ta sử dụng controlled component, data của...\",\"html\":\"<p><img src=\\\"\\\"></p>\\n<h2>controlled component vs. uncontrolled component</h2>\\n<p>Không giống các element DOM, element FORM sẽ làm việc hơi khác trong React. Data của form sẽ được xử lý bởi component, không phải bởi DOM, thông thường chúng ta sử dụng controlled component, data của form sẽ được đưa vô component <code>state</code> như hình bên dưới</p>\\n<p><img src=\\\"https://process.filestackapi.com/cache=expiry:max/Qb7pi8kTzenybAUcijaB\\\"></p>\\n<p>Data từ <code>dump components</code> sẽ được gởi vô hàm callback, nơi chúng ta lưu lại các thay đổi</p>\\n<p>Nếu sử dụng uncontrolled component, tương tự như HTML form truyền thống, dữ liệu sẽ nằm trong DOM, không nằm trong component state, các component <code>&#x3C;input /></code> hay <code>&#x3C;textarea/></code> sẽ tự quản lý state của nó và tự động thay đổi khi user nhập dữ liệu, nếu cần dữ liệu này, chúng ta query tới DOM đó để lấy giá trị bằng <code>ref</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">UncontrolledComponentForm</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleSubmit <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleSubmit<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleSubmit</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'The value is: '</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>input<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    e<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">preventDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>form</span> <span class=\\\"token attr-name\\\">onSubmit</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleSubmit<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>label</span><span class=\\\"token punctuation\\\">></span></span>\\n          Name<span class=\\\"token punctuation\\\">:</span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>text<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">ref</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span>input<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>input <span class=\\\"token operator\\\">=</span> input <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>label</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>submit<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Submit<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>form</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Đa số các trường hợp mình thường sử dụng controlled component để làm form, nhìn vào trực quan hơn và mình có thể validate được dữ liệu lúc nhập vào luôn.</p>\\n<h2>Dựng Form</h2>\\n<p>Sẽ có khá nhiều thư viện có sẵn để làm việc với form, nhưng với cá nhân mình, mình vẫn thích tự build hơn vì nếu mình muốn thêm validate đặc biệt hay tùy biến behavior của nó cũng đơn giản hơn, đồng thời giúp chúng ta nắm rõ hơn về React Form luôn.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>Component<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>  \\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Import Components */</span>\\n<span class=\\\"token keyword\\\">import</span> CheckBox <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/CheckBox'</span><span class=\\\"token punctuation\\\">;</span>  \\n<span class=\\\"token keyword\\\">import</span> Input <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/Input'</span><span class=\\\"token punctuation\\\">;</span>  \\n<span class=\\\"token keyword\\\">import</span> TextArea <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/TextArea'</span><span class=\\\"token punctuation\\\">;</span>  \\n<span class=\\\"token keyword\\\">import</span> Select <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/Select'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Button <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/Button'</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FormContainer</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>  \\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      newUser<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n        email<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n        age<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n        gender<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n        expertise<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n        about<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span>\\n\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\n      genderOptions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'Male'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Female'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Others'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      skillOptions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'Programming'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Development'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Design'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Testing'</span><span class=\\\"token punctuation\\\">]</span>\\n\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* This life cycle hook gets executed when the component mounts */</span>\\n\\n  handleFormSubmit <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Form submission logic</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  handleClearForm <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Logic for resetting the form</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  changeValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//update state</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>form</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>container<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">onSubmit</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleFormSubmit<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>changeValue<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Name of the user */</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>changeValue<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Input for Age */</span><span class=\\\"token punctuation\\\">}</span> \\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Select</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>changeValue<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Gender Selection */</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>CheckBox</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>changeValue<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* List of Skills (eg. Programmer, developer) */</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>TextArea</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>changeValue<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* About you */</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleFormSubmit<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n            Submit\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Button</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleClearForm<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n            Reset\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Button</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>form</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> FormContainer<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>Mình sẽ không đi sâu vào các component <code>Input</code>, <code>Select</code>, <code>Checkbox</code>, <code>TextArea</code>, các bạn có thể sử dụng một UI library React bất kỳ, hoặc tự build nếu thích, đa phần các library này sẽ cho phép sử dụng cả 2 kiểu controlled/uncontrolled</p>\\n<p>Hàm <code>handleClearForm</code> sẽ reset toàn bộ state</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code>handleClearForm <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  e<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">preventDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> \\n    newUser<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n      age<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n      gender<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n      skills<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      about<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Bên trong hàm <code>handleFormSubmit</code> ta có thể lấy giá trị của form và thực hiện một xử lý như <code>dispatch</code> ra một action</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code>handleFormSubmit <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    e<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">preventDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">let</span> userData <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>newUser<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// nếu connect FormContainer vào Redux, ta có thể dùng dispatch ở đây</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">someFunction</span><span class=\\\"token punctuation\\\">(</span>userData<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>   \\n</code></pre>\\n      </div>\\n<p>Bài này tác giả chưa đề cập những vấn đề sâu hơn như validate, bài sau mình sẽ bổ sung thêm.</p>\\n<p><a href=\\\"https://www.codementor.io/blizzerand/building-forms-using-react-everything-you-need-to-know-iz3eyoq4y\\\">Link bài gốc</a></p>\\n<p>Tác giả: Manjunath</p>\",\"id\":\"E:/anluu/luckyluu/posts/2018-05-22-lam-viec-voi-form-trong-react/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":3,\"frontmatter\":{\"date\":\"2018-05-22T13:35:13.234Z\",\"path\":\"/2018-05-22-lam-viec-voi-form-trong-react\",\"tags\":[\"javascript\",\"react\"],\"title\":\"Làm việc với Form trong React\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2018-05-25-viet-code-javascript-tot-hon-voi-webpack-715c676b0c364de28424.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Vấn đề</h2>\\n<p>Viết code client-side nếu không có các công cụ hỗ trợ thì trước sau vì cũng giống như đống hỗn độn trên desktop, để maintain và người khác có thể vào đọc hiểu được thì việc code được tổ chức tốt là điều ai cũng biết, lý thuyết là thế, nhưng nếu cứ làm việc theo kiểu cũ cứ quăng script tràng lan bằng thẻ <code>&#x3C;script></code> sẽ chẳng dễ gì sắp xếp và nhớ nổi cái nào là cái nào nếu, add thêm cỡ chục files, <em>best practice</em> khuyên rằng hạn chế số lượng file script càng ít càng tốt, tốt nhất là 1 file duy nhất.</p>\\n<p>Trước đây có nhiều giải pháp cho vấn đề như là Gulp, dùng để bunch toàn bộ javascript thành 1 file. Nhưng chưa đủ. Với Gulp chúng ta đã đẩy các dependency ngang hàng nhau, và phụ thuộc vào biến global để chia sẽ dữ liệu giữa các files.</p>\\n<h3>Cách tốt hơn</h3>\\n<p>Nếu trước đây chưa từng sử dụng mấy cái tool để quản lý asset ở frontend, tốt nhất là học luôn Webpack, bỏ qua Gulp, Gruntjs luôn. Còn nếu nếu đã từng dùng mấy task runner kiểu Gulp, Gruntjs, thì chuyển qua dùng webpack cũng không khó khăn lắm, chỉ là khác nhau cách tổ chức và quản lý dependency.</p>\\n<h2>Webpack vs. Gulp</h2>\\n<p>Chắc đã từng nghe tới câu này: <strong>Gulp là task runner, Webpack là module bundler</strong>, ý nhĩa thật sự sau câu này là gì?</p>\\n<p>Gulp là công cụ tự động hóa tốt, cho phép chúng ta setup một mớ các tiến trình phức tạp cần thực hiện (một cách tự động) bằng javascript, rồi chạy nó bằng một lệnh duy nhất. Vấn đề với Gulp là nếu code file A depend vào code ở file B, bạn cần báo cáo với Gulp để nó include file A trước, và khi bạn thêm càng lúc càng nhiều file depend chồng chéo kiểu này, cây dependency là lớn dần, và sẽ gần như không thể maintain được nữa, vì chúng ta phải config bằng tay, nếu sử dụng file manifest với plugin <code>asset-builder</code> cũng không thể cứu vãn.</p>\\n<p><img src=\\\"https://res.cloudinary.com/forestry-demo/image/fetch/c_limit,dpr_auto,f_auto,q_80,w_674/https://forestry.io/uploads/2018/03/webpack_fighter_of_the_gulpstack_champion_of_the_bundle.png\\\"></p>\\n<p>Bài toàn dependency này đã được Webpack giải quyết triệt để. Những gì bạn cần làm là báo với Webpack file <strong>entry</strong> point mình cần bundle là gì, chuyện bạn <em>import module</em> lúc code sẽ do webpack đảm nhiệm chuyện dựng lên dependency graph, webpack sẽ bundle cho bạn 1 file duy nhất bạn cần. Chúng ta khỏi phải báo cáo với webpack thứ tự các file nào cần trước hay sau, để đó Webpack lo!</p>\\n<p>Ngắn gọn là: với Gulp dependency bị giới hạn vì nó yêu cầu mình tự chỉ định sự phụ thuộc, Webpack thì nó dùng logic để tính toán rồi bundle đúng thứ tự.</p>\\n<h2>Viết code Module</h2>\\n<p>Để Webpack hoạt động như phép màu như vậy, chúng ta chỉ cần viết javascript của mình dạng <em>module</em>. Viết module trong javascript là tách các file ra thành nhiều file, việc sử dụng code giữa các file sẽ thực hiện bằng <strong>export</strong> và <strong>import</strong></p>\\n<p>Webpack hổ trỡ 2 chuẩn module hóa hiện giờ là <strong>EcmaScript</strong> và  <strong>CommonJS</strong>. Ví dụ bên dưới để hình dung cách viết module trong file <code>hello.js</code> rồi <strong>import</strong> vào trong file <code>app.js</code> bằng cả 2 kiểu viết EcmaScript và CommonJS</p>\\n<p>Viết kiểu <strong>EcmaScript</strong></p>\\n<p>file hello.js</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">hello</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Hello Binh An!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>file app.js</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>hello<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./hello'</span>\\n<span class=\\\"token function\\\">helle</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>Viết kiểu <strong>CommonJS</strong></p>\\n<p>file hello.js</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code>module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Hello Bình An!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>file app.js</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> hello <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./hello'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">hello</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h2>Cấu hình Webpack</h2>\\n<p>Một điểm hay của webpack là nếu có ai đó đã config rồi thì những người sau không cần phải vào file config để hiểu cách tổ chức code, chỉ cần hiểu được cách tổ chức code của project.</p>\\n<p>Giờ thử config đơn giản nhất để hiểu một số thành phần quan trọng nhất của webpack</p>\\n<p>Tổ chức project như vầy</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>src/\\n    app.js\\nwebpack.config.js</code></pre>\\n      </div>\\n<p>Mặt định Webpack sẽ tìm file config với tên là <code>webpack.config.js</code>. Tiếp chúng ta cần cài webpack và webpack-cli</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>npm init -y\\nnpm install --save-dev webpack webpack-cli</code></pre>\\n      </div>\\n<p>Trong file <code>webpack.config.js</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">var</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'./src/app.js'</span><span class=\\\"token punctuation\\\">,</span>\\n    output<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        path<span class=\\\"token punctuation\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'dist'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        filename<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'bundle.js'</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>2 phần quan trọng nhất mà phải biết là <strong>entry</strong> - file source nằm ở đâu và <strong>output</strong> - file sẽ bundle ở đâu. Sử dụng module <code>path</code> để biết vị trí thực tế lúc chạy.</p>\\n<p>Chạy CLI để bundle</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>./node_modules/webpack-cli/bin/webpack.js</code></pre>\\n      </div>\\n<p>Nó sẽ đọc source trong file <code>src/app.js</code> rồi compile vào <code>dist/bundle.js</code>. Thư mục sau khi chạy xong sẽ có</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>dist/\\n    bundle.js\\nsrc/\\n    app.js\\npackage.json\\nwebpack.config.js</code></pre>\\n      </div>\\n<p>Để rút chạy đoạn CLI dài ngoằn <code>./node_modules/webpack-cli/bin/webpack.js</code> có thể thêm một custom script trong file <code>package.json</code>. Bạn có thể chạy nó bằng <code>npm run SCRIPT_NAME</code></p>\\n<p>Thêm vào trong package.json</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>    \\n    <span class=\\\"token property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"test\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"echo \\\\\\\"Error: no test specified\\\\\\\" &amp;&amp; exit 1\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"build\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"./node_modules/webpack-cli/bin/webpack.js\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"watch\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"./node_modules/webpack-cli/bin/webpack.js --watch\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Giờ chúng ta có thể chạy bằng lệnh <code>npm run build</code>, ở trên chúng ta cũng vừa thêm đoạn <code>npm run watch</code>, thêm option <code>--watch</code> để khi có bất kỳ thay đổi nào nó sẽ tự động detect và compile lại.</p>\\n<p>!!!! CUNG HỶ !!!!!</p>\\n<p>Bạn đã chạm được vào cánh cửa đầu tiên của webpack, webpack còn nhiều khả năng nữa, tuy nhiên module bundle là core feature, bài tiếp theo chúng ta sẽ khám phá nhiều hơn như loaders, plugins, development server.</p>\\n<p><a href=\\\"https://forestry.io/blog/write-better-javascript-with-webpack/\\\">Link bài gốc</a></p>\\n<p>Tác giả: DJ Walker</p>\",\"frontmatter\":{\"date\":\"May 25, 2018\",\"path\":\"/2018-05-25-viet-code-javascript-tot-hon-voi-webpack\",\"tags\":[\"javascript\",\"webpack\"],\"title\":\"Webpack là gì và tại sao ta phải xài nó\",\"desc\":\"Bài này sẽ nói rõ tại sao Webpack là sự lựa chọn sáng suốt cho bundle javascript\"}}},\"pathContext\":{\"prev\":false,\"next\":{\"excerpt\":\"controlled component vs. uncontrolled component Không giống các element DOM, element FORM sẽ làm việc hơi khác trong React. Data của form sẽ được xử lý bởi component, không phải bởi DOM, thông thường chúng ta sử dụng controlled component, data của...\",\"html\":\"<p><img src=\\\"\\\"></p>\\n<h2>controlled component vs. uncontrolled component</h2>\\n<p>Không giống các element DOM, element FORM sẽ làm việc hơi khác trong React. Data của form sẽ được xử lý bởi component, không phải bởi DOM, thông thường chúng ta sử dụng controlled component, data của form sẽ được đưa vô component <code>state</code> như hình bên dưới</p>\\n<p><img src=\\\"https://process.filestackapi.com/cache=expiry:max/Qb7pi8kTzenybAUcijaB\\\"></p>\\n<p>Data từ <code>dump components</code> sẽ được gởi vô hàm callback, nơi chúng ta lưu lại các thay đổi</p>\\n<p>Nếu sử dụng uncontrolled component, tương tự như HTML form truyền thống, dữ liệu sẽ nằm trong DOM, không nằm trong component state, các component <code>&#x3C;input /></code> hay <code>&#x3C;textarea/></code> sẽ tự quản lý state của nó và tự động thay đổi khi user nhập dữ liệu, nếu cần dữ liệu này, chúng ta query tới DOM đó để lấy giá trị bằng <code>ref</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">UncontrolledComponentForm</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleSubmit <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleSubmit<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleSubmit</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'The value is: '</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>input<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    e<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">preventDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>form</span> <span class=\\\"token attr-name\\\">onSubmit</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleSubmit<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>label</span><span class=\\\"token punctuation\\\">></span></span>\\n          Name<span class=\\\"token punctuation\\\">:</span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>text<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">ref</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span>input<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>input <span class=\\\"token operator\\\">=</span> input <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>label</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>submit<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Submit<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>form</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Đa số các trường hợp mình thường sử dụng controlled component để làm form, nhìn vào trực quan hơn và mình có thể validate được dữ liệu lúc nhập vào luôn.</p>\\n<h2>Dựng Form</h2>\\n<p>Sẽ có khá nhiều thư viện có sẵn để làm việc với form, nhưng với cá nhân mình, mình vẫn thích tự build hơn vì nếu mình muốn thêm validate đặc biệt hay tùy biến behavior của nó cũng đơn giản hơn, đồng thời giúp chúng ta nắm rõ hơn về React Form luôn.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>Component<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>  \\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Import Components */</span>\\n<span class=\\\"token keyword\\\">import</span> CheckBox <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/CheckBox'</span><span class=\\\"token punctuation\\\">;</span>  \\n<span class=\\\"token keyword\\\">import</span> Input <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/Input'</span><span class=\\\"token punctuation\\\">;</span>  \\n<span class=\\\"token keyword\\\">import</span> TextArea <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/TextArea'</span><span class=\\\"token punctuation\\\">;</span>  \\n<span class=\\\"token keyword\\\">import</span> Select <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/Select'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Button <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../components/Button'</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FormContainer</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>  \\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      newUser<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n        email<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n        age<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n        gender<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n        expertise<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n        about<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span>\\n\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\n      genderOptions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'Male'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Female'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Others'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      skillOptions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'Programming'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Development'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Design'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Testing'</span><span class=\\\"token punctuation\\\">]</span>\\n\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* This life cycle hook gets executed when the component mounts */</span>\\n\\n  handleFormSubmit <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Form submission logic</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  handleClearForm <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Logic for resetting the form</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  changeValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//update state</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>form</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>container<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">onSubmit</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleFormSubmit<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>changeValue<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Name of the user */</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>changeValue<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Input for Age */</span><span class=\\\"token punctuation\\\">}</span> \\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Select</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>changeValue<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Gender Selection */</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>CheckBox</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>changeValue<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* List of Skills (eg. Programmer, developer) */</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>TextArea</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>changeValue<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* About you */</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleFormSubmit<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n            Submit\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Button</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleClearForm<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n            Reset\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Button</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>form</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> FormContainer<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>Mình sẽ không đi sâu vào các component <code>Input</code>, <code>Select</code>, <code>Checkbox</code>, <code>TextArea</code>, các bạn có thể sử dụng một UI library React bất kỳ, hoặc tự build nếu thích, đa phần các library này sẽ cho phép sử dụng cả 2 kiểu controlled/uncontrolled</p>\\n<p>Hàm <code>handleClearForm</code> sẽ reset toàn bộ state</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code>handleClearForm <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  e<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">preventDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> \\n    newUser<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n      age<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n      gender<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n      skills<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      about<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Bên trong hàm <code>handleFormSubmit</code> ta có thể lấy giá trị của form và thực hiện một xử lý như <code>dispatch</code> ra một action</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code>handleFormSubmit <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    e<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">preventDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">let</span> userData <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>newUser<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// nếu connect FormContainer vào Redux, ta có thể dùng dispatch ở đây</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">someFunction</span><span class=\\\"token punctuation\\\">(</span>userData<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>   \\n</code></pre>\\n      </div>\\n<p>Bài này tác giả chưa đề cập những vấn đề sâu hơn như validate, bài sau mình sẽ bổ sung thêm.</p>\\n<p><a href=\\\"https://www.codementor.io/blizzerand/building-forms-using-react-everything-you-need-to-know-iz3eyoq4y\\\">Link bài gốc</a></p>\\n<p>Tác giả: Manjunath</p>\",\"id\":\"E:/anluu/luckyluu/posts/2018-05-22-lam-viec-voi-form-trong-react/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":3,\"frontmatter\":{\"date\":\"2018-05-22T13:35:13.234Z\",\"path\":\"/2018-05-22-lam-viec-voi-form-trong-react\",\"tags\":[\"javascript\",\"react\"],\"title\":\"Làm việc với Form trong React\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2018-05-25-viet-code-javascript-tot-hon-voi-webpack.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/2018-05-25-viet-code-javascript-tot-hon-voi-webpack.json\n// module chunks = 26"],"sourceRoot":""}