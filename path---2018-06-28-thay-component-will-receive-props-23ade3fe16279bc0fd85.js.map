{"version":3,"sources":["webpack:///path---2018-06-28-thay-component-will-receive-props-23ade3fe16279bc0fd85.js","webpack:///./.cache/json/2018-06-28-thay-component-will-receive-props.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/2018-06-28-thay-component-will-receive-props.json","module","exports","data","markdownRemark","html","frontmatter","date","path","tags","title","desc","pathContext","prev","excerpt","id","timeToRead","next"],"mappings":"AAAAA,cAAc,KAERC,sGACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,mzLAA8jLC,aAA+cC,KAAA,gBAAAC,KAAA,gDAAAC,MAAA,sBAAAC,MAAA,8DAAAC,KAAA,4JAAoVC,aAAgBC,MAAQC,QAAA,8PAAAT,KAAA,i8BAAAU,GAAA,iJAAAC,WAAA,EAAAV,aAA84CC,KAAA,2BAAAC,KAAA,uEAAAC,MAAA,0BAAAC,MAAA,qDAA8MO,MAASH,QAAA,4PAAAT,KAAA,s5fAA2+gBU,GAAA,8HAAAC,WAAA,EAAAV,aAAiaC,KAAA,2BAAAC,KAAA,oDAAAC,MAAA,cAAAC,MAAA","file":"path---2018-06-28-thay-component-will-receive-props-23ade3fe16279bc0fd85.js","sourcesContent":["webpackJsonp([34],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/2018-06-28-thay-component-will-receive-props.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Cụ thể <code>getDerivedStateFromProps</code> sẽ được dùng để thay cho <code>componentWillReceiveProps</code>, giờ nó cũng đã trở thành <code>UNSAFE_componentWillReceiveProps</code></p>\\n<p>Hàm <code>getDerivedStateFromProps</code> là một phương thức <code>static</code> sẽ chạy khi component nhận được <em>props</em> và đã được khởi tạo. Bởi vì nó là một phương thức <code>static</code> nên không thể sử dụng <code>this</code> bên trong phương thức này hoặc truy cập tới các phương thức khác. Không giống với <code>componentWillReceiveProps</code> chúng ta không dùng được <code>this.setState</code>, nếu muốn cập nhập lại <code>state</code> nào đó ta trả về một object hoặc <code>null</code> nếu không muốn update state nào cả</p>\\n<p>Code sử dụng <code>componentWillReceiveProps</code> trước đây</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token function\\\">componentWillReceiveProps</span><span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">.</span>someValue <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>someValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Perform some operation</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>someState<span class=\\\"token punctuation\\\">:</span> someValue <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">classMethod</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Giờ code lại bằng <code>getDerivedStateFromProps</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// mục tiêu xử lý ở hàm này là những return giá trị state sẽ bị thay đổi khi prop thay đổi</span>\\n<span class=\\\"token keyword\\\">static</span> <span class=\\\"token function\\\">getDerivedStateFromProps</span><span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">,</span> prevState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n   <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">.</span>path <span class=\\\"token operator\\\">!==</span> prevState<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n     <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> path<span class=\\\"token punctuation\\\">:</span> nextProps<span class=\\\"token punctuation\\\">.</span>path <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ở đây chúng ta sẽ set state</span>\\n<span class=\\\"token function\\\">componentDidUpdate</span><span class=\\\"token punctuation\\\">(</span>prevProps<span class=\\\"token punctuation\\\">,</span> prevState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>prevState<span class=\\\"token punctuation\\\">.</span>path <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Thục hiện update state</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">classMethod</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Hàm <code>getDerivedStateFromProps</code> sẽ nhận vào 2 params <code>nextProps</code> và <code>prevState</code>. Chúng ta cần lưu giá trị của <em>props</em> <code>path</code> vào <em>state</em> là <code>path</code>, thực hiện kiểm tra ở đây nếu thấy khác nhau thì return lại object <code>{path: nextProps.path}</code>, khi đó ở <code>componentDidUpdate</code> giá trị của <code>prevState.path</code> sẽ khác với giá trị <code>this.state.path</code> ví <code>this.state.path</code> đã được set lại ở <code>getDerivedStateFromProps</code> trước đó</p>\\n<p>Cảm ơn bạn đã đọc hết bài viết</p>\\n<p><a href=\\\"https://hackernoon.com/replacing-componentwillreceiveprops-with-getderivedstatefromprops-c3956f7ce607\\\">Link bài viết của tác giả Amanshu Kataria</a></p>\",\"frontmatter\":{\"date\":\"June 28, 2018\",\"path\":\"/2018-06-28-thay-component-will-receive-props\",\"tags\":[\"react\",\"javascript\"],\"title\":\"Thay componentWillReceiveProps với getDerivedStateFromProps\",\"desc\":\"Từ bản release React 16.3, các phương thức lifecycle có thay chút ít, một số không còn được khuyến khích sử dụng và thay thế bằng một phương thức khác\"}}},\"pathContext\":{\"prev\":{\"excerpt\":\"Đăng nhập vào Goddady, mở tab My Products, chọn nút  Manage Cuộn xuống ở dưới cuối trang, click link  Manage DNS Hàng type  A , nhập vào IP của Github Server: 185.199.108.153, lên đây xem  https://help.github.com/articles/setting-up-an-apex-domain/...\",\"html\":\"<p>Đăng nhập vào Goddady, mở tab My Products, chọn nút <strong>Manage</strong></p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/800/1*Y9e7HtJvVv7jshINs46mTA.png\\\"></p>\\n<p>Cuộn xuống ở dưới cuối trang, click link <strong>Manage DNS</strong></p>\\n<ul>\\n<li>Hàng type <strong>A</strong>, nhập vào IP của Github Server: 185.199.108.153, lên đây xem <a href=\\\"https://help.github.com/articles/setting-up-an-apex-domain/\\\">https://help.github.com/articles/setting-up-an-apex-domain/</a></li>\\n<li>Hàng CNAME với Name \\\"www\\\" nhập địa chỉ url trang github page muốn trỏ tới, ví dụ như luubinhan.github.io/blog/</li>\\n</ul>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/800/1*vL7RX_AyXRsSfO27NYF5iA.png\\\"></p>\\n<p>Bên trong thư mục public của site, tạo thêm file tên CNAME, mở file này lên, nhập nội dung là tên miền</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/800/1*zJsdMXE8aiHEuu6ObDu7ow.png\\\"></p>\\n<p>Xong, dễ cực. Cảm ơn bạn đã đọc hết bài viết</p>\",\"id\":\"C:/xampp/htdocs/luckyluu/posts/2018-07-01-huong-dan-cai-dat-ten-mien-cho-githubpage-su-dung-godady/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":1,\"frontmatter\":{\"date\":\"2018-07-01T13:35:13.234Z\",\"path\":\"/2018-07-01-huong-dan-cai-dat-ten-mien-cho-githubpage-su-dung-godady\",\"tags\":[\"web\",\"dns\",\"githubpage\"],\"title\":\"Hướng dẫn setup tên miền GoDaddy với Github Page\"}},\"next\":{\"excerpt\":\"console.log, console.error, console.warn và console.info Đây là những phương thức được sử dụng nhiều nhất. Có thể truyền vào 1 hoặc nhiều parameter, mỗi parameter trường vào sẽ được hiển thị về kết quả ở dạng string và cách nhau bằng khoảng trắng...\",\"html\":\"<h1>console.log, console.error, console.warn và console.info</h1>\\n<p>Đây là những phương thức được sử dụng nhiều nhất. Có thể truyền vào 1 hoặc nhiều parameter, mỗi parameter trường vào sẽ được hiển thị về kết quả ở dạng string và cách nhau bằng khoảng trắng, trong trường hợp là object hay array thì nó hiện thị dạng cây</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*1Zh9s1-XCx27o6FAKGb5Hg.png\\\"></p>\\n<h1>console.group</h1>\\n<p>Phương thức này cho phép nhóm các câu <code>console.log</code> vào trong một group có thể collapse. Syntax rất đơn giản, đặt các câu console.log  vào giữa cặp <code>console.group('ten-group')</code> và <code>console.groupEnd()</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">doSomething</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">group</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'doSomething Proifle'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> _data <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'evauating data: '</span><span class=\\\"token punctuation\\\">,</span> _data<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> _fullName <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>obj<span class=\\\"token punctuation\\\">.</span>firstName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>obj<span class=\\\"token punctuation\\\">.</span>lastName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fullName: '</span><span class=\\\"token punctuation\\\">,</span> _fullName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> _id <span class=\\\"token operator\\\">=</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">random</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'id: '</span><span class=\\\"token punctuation\\\">,</span> _id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">groupEnd</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">doSomething</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>firstName<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'An'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'lastName'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Luu'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Kết quả</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*PWOoWRhG9lWjhU4z6qFCOQ.png\\\"></p>\\n<h1>console.table</h1>\\n<p>Từ khi biết đến <code>console.table</code> cuộc đời tui bước sang trang mới! Hiển thị JSON bên trong console.log thì kinh dị lắm, với <code>console.table</code> sẽ hiển thị mảng dữ liệu trong table cực dể dòm</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> typeOfConsole <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'log'</span><span class=\\\"token punctuation\\\">,</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'standard'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'info'</span><span class=\\\"token punctuation\\\">,</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'standard'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'table'</span><span class=\\\"token punctuation\\\">,</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'WOW'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">table</span><span class=\\\"token punctuation\\\">(</span>typeOfConsole<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> mySocial <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  facebook<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  linkedIn<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  flickr<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  instagram<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  VKontaktebadoo<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">table</span><span class=\\\"token punctuation\\\">(</span>mySocial<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'Socials'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'I an account'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Thế này thì sao</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*Fb2VQtATz3uCH2hw6yVB-w.png\\\"></p>\\n<h1>console.count, console.time, console.timeEnd</h1>\\n<p>Vũ khí cần thiết để debug, <code>console.count</code> trả về số lần và thời gian hàm <code>count()</code> đượcg gọi.</p>\\n<p>Truyền vào tên cho <code>console.time</code>, gọi <code>console.timeEnd</code> để dừng thời gian và hiển thị kết quả, đặt đoạn code cần đo thời gian chạy giữa 2 hàm này</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code>console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">time</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'total'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">time</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'init arr'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> arr <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Array</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">timeEnd</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'init arr'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">var</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> arr<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  arr<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Object</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> _type <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'even'</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'odd'</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">count</span><span class=\\\"token punctuation\\\">(</span>_type <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">'added'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">timeEnd</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'total'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>Kết quả</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*Fc8jI1oaCE57aB-baawGaw.png\\\"></p>\\n<h1>console.trace và console.assert</h1>\\n<p>Cả hai hàm này sẽ in ra một đoạn thông báo kèm với dòng code thứ mấy trong file. Tưởng tượng chúng ta tạo một thư viện js và muốn thông báo đến user lỗi xuất hiện ở đâu. Khác biệt của <code>console.assert</code> khác với <code>console.trace</code> là nó chỉ in kết quả nếu điều kiện để kiểm tra trả về <code>false</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">lesserThan</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">,</span> b<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">assert</span><span class=\\\"token punctuation\\\">(</span> a <span class=\\\"token operator\\\">&lt;</span> b<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">'message'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'a is not lesser than b'</span><span class=\\\"token punctuation\\\">,</span>  <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> a<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">:</span> b<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  \\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token function\\\">lesserThan</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">trace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'End'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*oeGhwHWJ0JALyKZMJq_inw.png\\\"></p>\\n<h1>Xóa hết console</h1>\\n<p>Nếu chúng đang sử dụng webpack, nếu muốn xóa hết toàn bộ các chổ có console trong lúc build production thì dễ ợt, dùng uglifyjs-webpack-plugin</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> UglifyJsPlugin <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'uglifyjs-webpack-plugin'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">var</span> debug <span class=\\\"token operator\\\">=</span> process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span>NODE_ENV <span class=\\\"token operator\\\">!==</span> <span class=\\\"token string\\\">\\\"production\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\noptimization<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        minimizer<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">!</span>debug <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">UglifyJsPlugin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Compression specific options</span>\\n                uglifyOptions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Eliminate comments</span>\\n                    comments<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n                    compress<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                       <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// remove warnings</span>\\n                       warnings<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n                       <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Drop console statements</span>\\n                       drop_console<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n                    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n           <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Cảm ơn bạn đã đọc hết bài viết</p>\\n<p><a href=\\\"https://medium.freecodecamp.org/how-you-can-improve-your-workflow-using-the-javascript-console-bdd7823a9472\\\">Link bài viết gốc của tác giả Riccardo Canella</a></p>\",\"id\":\"C:/xampp/htdocs/luckyluu/posts/2018-06-24-lam-viec-voi-console-trong-javascript/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":2,\"frontmatter\":{\"date\":\"2018-06-24T13:35:13.234Z\",\"path\":\"/2018-06-24-lam-viec-voi-console-trong-javascript\",\"tags\":[\"javascript\"],\"title\":\"Làm việc với console trong javascript\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2018-06-28-thay-component-will-receive-props-23ade3fe16279bc0fd85.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Cụ thể <code>getDerivedStateFromProps</code> sẽ được dùng để thay cho <code>componentWillReceiveProps</code>, giờ nó cũng đã trở thành <code>UNSAFE_componentWillReceiveProps</code></p>\\n<p>Hàm <code>getDerivedStateFromProps</code> là một phương thức <code>static</code> sẽ chạy khi component nhận được <em>props</em> và đã được khởi tạo. Bởi vì nó là một phương thức <code>static</code> nên không thể sử dụng <code>this</code> bên trong phương thức này hoặc truy cập tới các phương thức khác. Không giống với <code>componentWillReceiveProps</code> chúng ta không dùng được <code>this.setState</code>, nếu muốn cập nhập lại <code>state</code> nào đó ta trả về một object hoặc <code>null</code> nếu không muốn update state nào cả</p>\\n<p>Code sử dụng <code>componentWillReceiveProps</code> trước đây</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token function\\\">componentWillReceiveProps</span><span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">.</span>someValue <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>someValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Perform some operation</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>someState<span class=\\\"token punctuation\\\">:</span> someValue <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">classMethod</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Giờ code lại bằng <code>getDerivedStateFromProps</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// mục tiêu xử lý ở hàm này là những return giá trị state sẽ bị thay đổi khi prop thay đổi</span>\\n<span class=\\\"token keyword\\\">static</span> <span class=\\\"token function\\\">getDerivedStateFromProps</span><span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">,</span> prevState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n   <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">.</span>path <span class=\\\"token operator\\\">!==</span> prevState<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n     <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> path<span class=\\\"token punctuation\\\">:</span> nextProps<span class=\\\"token punctuation\\\">.</span>path <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ở đây chúng ta sẽ set state</span>\\n<span class=\\\"token function\\\">componentDidUpdate</span><span class=\\\"token punctuation\\\">(</span>prevProps<span class=\\\"token punctuation\\\">,</span> prevState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>prevState<span class=\\\"token punctuation\\\">.</span>path <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Thục hiện update state</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">classMethod</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Hàm <code>getDerivedStateFromProps</code> sẽ nhận vào 2 params <code>nextProps</code> và <code>prevState</code>. Chúng ta cần lưu giá trị của <em>props</em> <code>path</code> vào <em>state</em> là <code>path</code>, thực hiện kiểm tra ở đây nếu thấy khác nhau thì return lại object <code>{path: nextProps.path}</code>, khi đó ở <code>componentDidUpdate</code> giá trị của <code>prevState.path</code> sẽ khác với giá trị <code>this.state.path</code> ví <code>this.state.path</code> đã được set lại ở <code>getDerivedStateFromProps</code> trước đó</p>\\n<p>Cảm ơn bạn đã đọc hết bài viết</p>\\n<p><a href=\\\"https://hackernoon.com/replacing-componentwillreceiveprops-with-getderivedstatefromprops-c3956f7ce607\\\">Link bài viết của tác giả Amanshu Kataria</a></p>\",\"frontmatter\":{\"date\":\"June 28, 2018\",\"path\":\"/2018-06-28-thay-component-will-receive-props\",\"tags\":[\"react\",\"javascript\"],\"title\":\"Thay componentWillReceiveProps với getDerivedStateFromProps\",\"desc\":\"Từ bản release React 16.3, các phương thức lifecycle có thay chút ít, một số không còn được khuyến khích sử dụng và thay thế bằng một phương thức khác\"}}},\"pathContext\":{\"prev\":{\"excerpt\":\"Đăng nhập vào Goddady, mở tab My Products, chọn nút  Manage Cuộn xuống ở dưới cuối trang, click link  Manage DNS Hàng type  A , nhập vào IP của Github Server: 185.199.108.153, lên đây xem  https://help.github.com/articles/setting-up-an-apex-domain/...\",\"html\":\"<p>Đăng nhập vào Goddady, mở tab My Products, chọn nút <strong>Manage</strong></p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/800/1*Y9e7HtJvVv7jshINs46mTA.png\\\"></p>\\n<p>Cuộn xuống ở dưới cuối trang, click link <strong>Manage DNS</strong></p>\\n<ul>\\n<li>Hàng type <strong>A</strong>, nhập vào IP của Github Server: 185.199.108.153, lên đây xem <a href=\\\"https://help.github.com/articles/setting-up-an-apex-domain/\\\">https://help.github.com/articles/setting-up-an-apex-domain/</a></li>\\n<li>Hàng CNAME với Name \\\"www\\\" nhập địa chỉ url trang github page muốn trỏ tới, ví dụ như luubinhan.github.io/blog/</li>\\n</ul>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/800/1*vL7RX_AyXRsSfO27NYF5iA.png\\\"></p>\\n<p>Bên trong thư mục public của site, tạo thêm file tên CNAME, mở file này lên, nhập nội dung là tên miền</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/800/1*zJsdMXE8aiHEuu6ObDu7ow.png\\\"></p>\\n<p>Xong, dễ cực. Cảm ơn bạn đã đọc hết bài viết</p>\",\"id\":\"C:/xampp/htdocs/luckyluu/posts/2018-07-01-huong-dan-cai-dat-ten-mien-cho-githubpage-su-dung-godady/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":1,\"frontmatter\":{\"date\":\"2018-07-01T13:35:13.234Z\",\"path\":\"/2018-07-01-huong-dan-cai-dat-ten-mien-cho-githubpage-su-dung-godady\",\"tags\":[\"web\",\"dns\",\"githubpage\"],\"title\":\"Hướng dẫn setup tên miền GoDaddy với Github Page\"}},\"next\":{\"excerpt\":\"console.log, console.error, console.warn và console.info Đây là những phương thức được sử dụng nhiều nhất. Có thể truyền vào 1 hoặc nhiều parameter, mỗi parameter trường vào sẽ được hiển thị về kết quả ở dạng string và cách nhau bằng khoảng trắng...\",\"html\":\"<h1>console.log, console.error, console.warn và console.info</h1>\\n<p>Đây là những phương thức được sử dụng nhiều nhất. Có thể truyền vào 1 hoặc nhiều parameter, mỗi parameter trường vào sẽ được hiển thị về kết quả ở dạng string và cách nhau bằng khoảng trắng, trong trường hợp là object hay array thì nó hiện thị dạng cây</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*1Zh9s1-XCx27o6FAKGb5Hg.png\\\"></p>\\n<h1>console.group</h1>\\n<p>Phương thức này cho phép nhóm các câu <code>console.log</code> vào trong một group có thể collapse. Syntax rất đơn giản, đặt các câu console.log  vào giữa cặp <code>console.group('ten-group')</code> và <code>console.groupEnd()</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">doSomething</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">group</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'doSomething Proifle'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> _data <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Date</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'evauating data: '</span><span class=\\\"token punctuation\\\">,</span> _data<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> _fullName <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>obj<span class=\\\"token punctuation\\\">.</span>firstName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>obj<span class=\\\"token punctuation\\\">.</span>lastName<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fullName: '</span><span class=\\\"token punctuation\\\">,</span> _fullName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> _id <span class=\\\"token operator\\\">=</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">random</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'id: '</span><span class=\\\"token punctuation\\\">,</span> _id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">groupEnd</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">doSomething</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>firstName<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'An'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'lastName'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Luu'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Kết quả</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*PWOoWRhG9lWjhU4z6qFCOQ.png\\\"></p>\\n<h1>console.table</h1>\\n<p>Từ khi biết đến <code>console.table</code> cuộc đời tui bước sang trang mới! Hiển thị JSON bên trong console.log thì kinh dị lắm, với <code>console.table</code> sẽ hiển thị mảng dữ liệu trong table cực dể dòm</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> typeOfConsole <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'log'</span><span class=\\\"token punctuation\\\">,</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'standard'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'info'</span><span class=\\\"token punctuation\\\">,</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'standard'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'table'</span><span class=\\\"token punctuation\\\">,</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'WOW'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">table</span><span class=\\\"token punctuation\\\">(</span>typeOfConsole<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> mySocial <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  facebook<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  linkedIn<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  flickr<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  instagram<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  VKontaktebadoo<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">table</span><span class=\\\"token punctuation\\\">(</span>mySocial<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'Socials'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'I an account'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>Thế này thì sao</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*Fb2VQtATz3uCH2hw6yVB-w.png\\\"></p>\\n<h1>console.count, console.time, console.timeEnd</h1>\\n<p>Vũ khí cần thiết để debug, <code>console.count</code> trả về số lần và thời gian hàm <code>count()</code> đượcg gọi.</p>\\n<p>Truyền vào tên cho <code>console.time</code>, gọi <code>console.timeEnd</code> để dừng thời gian và hiển thị kết quả, đặt đoạn code cần đo thời gian chạy giữa 2 hàm này</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code>console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">time</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'total'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">time</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'init arr'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> arr <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Array</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">timeEnd</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'init arr'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">var</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> arr<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  arr<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Object</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> _type <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'even'</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'odd'</span><span class=\\\"token punctuation\\\">;</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">count</span><span class=\\\"token punctuation\\\">(</span>_type <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">'added'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">timeEnd</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'total'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>Kết quả</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*Fc8jI1oaCE57aB-baawGaw.png\\\"></p>\\n<h1>console.trace và console.assert</h1>\\n<p>Cả hai hàm này sẽ in ra một đoạn thông báo kèm với dòng code thứ mấy trong file. Tưởng tượng chúng ta tạo một thư viện js và muốn thông báo đến user lỗi xuất hiện ở đâu. Khác biệt của <code>console.assert</code> khác với <code>console.trace</code> là nó chỉ in kết quả nếu điều kiện để kiểm tra trả về <code>false</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">lesserThan</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">,</span> b<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">assert</span><span class=\\\"token punctuation\\\">(</span> a <span class=\\\"token operator\\\">&lt;</span> b<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">'message'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'a is not lesser than b'</span><span class=\\\"token punctuation\\\">,</span>  <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">:</span> a<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">:</span> b<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  \\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token function\\\">lesserThan</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">trace</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'End'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/1600/1*oeGhwHWJ0JALyKZMJq_inw.png\\\"></p>\\n<h1>Xóa hết console</h1>\\n<p>Nếu chúng đang sử dụng webpack, nếu muốn xóa hết toàn bộ các chổ có console trong lúc build production thì dễ ợt, dùng uglifyjs-webpack-plugin</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">const</span> UglifyJsPlugin <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'uglifyjs-webpack-plugin'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">var</span> debug <span class=\\\"token operator\\\">=</span> process<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span>NODE_ENV <span class=\\\"token operator\\\">!==</span> <span class=\\\"token string\\\">\\\"production\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\noptimization<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        minimizer<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">!</span>debug <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">UglifyJsPlugin</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Compression specific options</span>\\n                uglifyOptions<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Eliminate comments</span>\\n                    comments<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n                    compress<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                       <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// remove warnings</span>\\n                       warnings<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n                       <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Drop console statements</span>\\n                       drop_console<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n                    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n           <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Cảm ơn bạn đã đọc hết bài viết</p>\\n<p><a href=\\\"https://medium.freecodecamp.org/how-you-can-improve-your-workflow-using-the-javascript-console-bdd7823a9472\\\">Link bài viết gốc của tác giả Riccardo Canella</a></p>\",\"id\":\"C:/xampp/htdocs/luckyluu/posts/2018-06-24-lam-viec-voi-console-trong-javascript/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":2,\"frontmatter\":{\"date\":\"2018-06-24T13:35:13.234Z\",\"path\":\"/2018-06-24-lam-viec-voi-console-trong-javascript\",\"tags\":[\"javascript\"],\"title\":\"Làm việc với console trong javascript\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2018-06-28-thay-component-will-receive-props.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/2018-06-28-thay-component-will-receive-props.json\n// module chunks = 34"],"sourceRoot":""}