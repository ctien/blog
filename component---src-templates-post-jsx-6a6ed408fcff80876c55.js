webpackJsonp([213130420965792],[
/* 0 */,
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */
/***/ (function(module, exports) {

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	}
	
	module.exports = _defineProperty;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "createInstantSearch", {
	  enumerable: true,
	  get: function get() {
	    return _createInstantSearch.default;
	  }
	});
	Object.defineProperty(exports, "createIndex", {
	  enumerable: true,
	  get: function get() {
	    return _createIndex.default;
	  }
	});
	Object.defineProperty(exports, "createConnector", {
	  enumerable: true,
	  get: function get() {
	    return _createConnector.default;
	  }
	});
	Object.defineProperty(exports, "HIGHLIGHT_TAGS", {
	  enumerable: true,
	  get: function get() {
	    return _highlight.HIGHLIGHT_TAGS;
	  }
	});
	Object.defineProperty(exports, "version", {
	  enumerable: true,
	  get: function get() {
	    return _version.default;
	  }
	});
	Object.defineProperty(exports, "translatable", {
	  enumerable: true,
	  get: function get() {
	    return _translatable.default;
	  }
	});
	Object.defineProperty(exports, "Configure", {
	  enumerable: true,
	  get: function get() {
	    return _Configure.default;
	  }
	});
	Object.defineProperty(exports, "connectAutoComplete", {
	  enumerable: true,
	  get: function get() {
	    return _connectAutoComplete.default;
	  }
	});
	Object.defineProperty(exports, "connectBreadcrumb", {
	  enumerable: true,
	  get: function get() {
	    return _connectBreadcrumb.default;
	  }
	});
	Object.defineProperty(exports, "connectConfigure", {
	  enumerable: true,
	  get: function get() {
	    return _connectConfigure.default;
	  }
	});
	Object.defineProperty(exports, "connectCurrentRefinements", {
	  enumerable: true,
	  get: function get() {
	    return _connectCurrentRefinements.default;
	  }
	});
	Object.defineProperty(exports, "connectGeoSearch", {
	  enumerable: true,
	  get: function get() {
	    return _connectGeoSearch.default;
	  }
	});
	Object.defineProperty(exports, "connectHierarchicalMenu", {
	  enumerable: true,
	  get: function get() {
	    return _connectHierarchicalMenu.default;
	  }
	});
	Object.defineProperty(exports, "connectHighlight", {
	  enumerable: true,
	  get: function get() {
	    return _connectHighlight.default;
	  }
	});
	Object.defineProperty(exports, "connectHits", {
	  enumerable: true,
	  get: function get() {
	    return _connectHits.default;
	  }
	});
	Object.defineProperty(exports, "connectHitsPerPage", {
	  enumerable: true,
	  get: function get() {
	    return _connectHitsPerPage.default;
	  }
	});
	Object.defineProperty(exports, "connectInfiniteHits", {
	  enumerable: true,
	  get: function get() {
	    return _connectInfiniteHits.default;
	  }
	});
	Object.defineProperty(exports, "connectMenu", {
	  enumerable: true,
	  get: function get() {
	    return _connectMenu.default;
	  }
	});
	Object.defineProperty(exports, "connectNumericMenu", {
	  enumerable: true,
	  get: function get() {
	    return _connectNumericMenu.default;
	  }
	});
	Object.defineProperty(exports, "connectPagination", {
	  enumerable: true,
	  get: function get() {
	    return _connectPagination.default;
	  }
	});
	Object.defineProperty(exports, "connectPoweredBy", {
	  enumerable: true,
	  get: function get() {
	    return _connectPoweredBy.default;
	  }
	});
	Object.defineProperty(exports, "connectRange", {
	  enumerable: true,
	  get: function get() {
	    return _connectRange.default;
	  }
	});
	Object.defineProperty(exports, "connectRefinementList", {
	  enumerable: true,
	  get: function get() {
	    return _connectRefinementList.default;
	  }
	});
	Object.defineProperty(exports, "connectScrollTo", {
	  enumerable: true,
	  get: function get() {
	    return _connectScrollTo.default;
	  }
	});
	Object.defineProperty(exports, "connectSearchBox", {
	  enumerable: true,
	  get: function get() {
	    return _connectSearchBox.default;
	  }
	});
	Object.defineProperty(exports, "connectSortBy", {
	  enumerable: true,
	  get: function get() {
	    return _connectSortBy.default;
	  }
	});
	Object.defineProperty(exports, "connectStateResults", {
	  enumerable: true,
	  get: function get() {
	    return _connectStateResults.default;
	  }
	});
	Object.defineProperty(exports, "connectStats", {
	  enumerable: true,
	  get: function get() {
	    return _connectStats.default;
	  }
	});
	Object.defineProperty(exports, "connectToggleRefinement", {
	  enumerable: true,
	  get: function get() {
	    return _connectToggleRefinement.default;
	  }
	});
	
	var _createInstantSearch = _interopRequireDefault(__webpack_require__(375));
	
	var _createIndex = _interopRequireDefault(__webpack_require__(374));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _highlight = __webpack_require__(112);
	
	var _version = _interopRequireDefault(__webpack_require__(178));
	
	var _translatable = _interopRequireDefault(__webpack_require__(379));
	
	var _Configure = _interopRequireDefault(__webpack_require__(380));
	
	var _connectAutoComplete = _interopRequireDefault(__webpack_require__(353));
	
	var _connectBreadcrumb = _interopRequireDefault(__webpack_require__(354));
	
	var _connectConfigure = _interopRequireDefault(__webpack_require__(177));
	
	var _connectCurrentRefinements = _interopRequireDefault(__webpack_require__(355));
	
	var _connectGeoSearch = _interopRequireDefault(__webpack_require__(356));
	
	var _connectHierarchicalMenu = _interopRequireDefault(__webpack_require__(357));
	
	var _connectHighlight = _interopRequireDefault(__webpack_require__(358));
	
	var _connectHits = _interopRequireDefault(__webpack_require__(359));
	
	var _connectHitsPerPage = _interopRequireDefault(__webpack_require__(360));
	
	var _connectInfiniteHits = _interopRequireDefault(__webpack_require__(361));
	
	var _connectMenu = _interopRequireDefault(__webpack_require__(362));
	
	var _connectNumericMenu = _interopRequireDefault(__webpack_require__(363));
	
	var _connectPagination = _interopRequireDefault(__webpack_require__(364));
	
	var _connectPoweredBy = _interopRequireDefault(__webpack_require__(365));
	
	var _connectRange = _interopRequireDefault(__webpack_require__(366));
	
	var _connectRefinementList = _interopRequireDefault(__webpack_require__(367));
	
	var _connectScrollTo = _interopRequireDefault(__webpack_require__(368));
	
	var _connectSearchBox = _interopRequireDefault(__webpack_require__(369));
	
	var _connectSortBy = _interopRequireDefault(__webpack_require__(370));
	
	var _connectStateResults = _interopRequireDefault(__webpack_require__(371));
	
	var _connectStats = _interopRequireDefault(__webpack_require__(372));
	
	var _connectToggleRefinement = _interopRequireDefault(__webpack_require__(373));

/***/ }),
/* 8 */
/***/ (function(module, exports) {

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}
	
	module.exports = _classCallCheck;

/***/ }),
/* 9 */
/***/ (function(module, exports) {

	function _defineProperties(target, props) {
	  for (var i = 0; i < props.length; i++) {
	    var descriptor = props[i];
	    descriptor.enumerable = descriptor.enumerable || false;
	    descriptor.configurable = true;
	    if ("value" in descriptor) descriptor.writable = true;
	    Object.defineProperty(target, descriptor.key, descriptor);
	  }
	}
	
	function _createClass(Constructor, protoProps, staticProps) {
	  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
	  if (staticProps) _defineProperties(Constructor, staticProps);
	  return Constructor;
	}
	
	module.exports = _createClass;

/***/ }),
/* 10 */
/***/ (function(module, exports) {

	function _getPrototypeOf(o) {
	  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
	    return o.__proto__ || Object.getPrototypeOf(o);
	  };
	  return _getPrototypeOf(o);
	}
	
	module.exports = _getPrototypeOf;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	var setPrototypeOf = __webpack_require__(211);
	
	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function");
	  }
	
	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) setPrototypeOf(subClass, superClass);
	}
	
	module.exports = _inherits;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	var _typeof = __webpack_require__(213);
	
	var assertThisInitialized = __webpack_require__(19);
	
	function _possibleConstructorReturn(self, call) {
	  if (call && (_typeof(call) === "object" || typeof call === "function")) {
	    return call;
	  }
	
	  return assertThisInitialized(self);
	}
	
	module.exports = _possibleConstructorReturn;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

	function _interopRequireWildcard(obj) {
	  if (obj && obj.__esModule) {
	    return obj;
	  } else {
	    var newObj = {};
	
	    if (obj != null) {
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
	
	          if (desc.get || desc.set) {
	            Object.defineProperty(newObj, key, desc);
	          } else {
	            newObj[key] = obj[key];
	          }
	        }
	      }
	    }
	
	    newObj.default = obj;
	    return newObj;
	  }
	}
	
	module.exports = _interopRequireWildcard;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.capitalize = exports.isSpecialClick = exports.createClassNames = void 0;
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var createClassNames = function createClassNames(block) {
	  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ais';
	  return function () {
	    for (var _len = arguments.length, elements = new Array(_len), _key = 0; _key < _len; _key++) {
	      elements[_key] = arguments[_key];
	    }
	
	    var suitElements = elements.filter(function (element) {
	      return element || element === '';
	    }).map(function (element) {
	      var baseClassName = "".concat(prefix, "-").concat(block);
	      return element ? "".concat(baseClassName, "-").concat(element) : baseClassName;
	    });
	    return (0, _classnames.default)(suitElements);
	  };
	};
	
	exports.createClassNames = createClassNames;
	
	var isSpecialClick = function isSpecialClick(event) {
	  var isMiddleClick = event.button === 1;
	  return Boolean(isMiddleClick || event.altKey || event.ctrlKey || event.metaKey || event.shiftKey);
	};
	
	exports.isSpecialClick = isSpecialClick;
	
	var capitalize = function capitalize(key) {
	  return key.length === 0 ? '' : "".concat(key[0].toUpperCase()).concat(key.slice(1));
	};
	
	exports.capitalize = capitalize;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createConnector;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(22));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(20));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _find2 = _interopRequireDefault(__webpack_require__(26));
	
	var _isEqual2 = _interopRequireDefault(__webpack_require__(168));
	
	var _has2 = _interopRequireDefault(__webpack_require__(52));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _utils = __webpack_require__(113);
	
	/**
	 * @typedef {object} ConnectorDescription
	 * @property {string} displayName - the displayName used by the wrapper
	 * @property {function} refine - a function to filter the local state
	 * @property {function} getSearchParameters - function transforming the local state to a SearchParameters
	 * @property {function} getMetadata - metadata of the widget
	 * @property {function} transitionState - hook after the state has changed
	 * @property {function} getProvidedProps - transform the state into props passed to the wrapped component.
	 * Receives (props, widgetStates, searchState, metadata) and returns the local state.
	 * @property {function} getId - Receives props and return the id that will be used to identify the widget
	 * @property {function} cleanUp - hook when the widget will unmount. Receives (props, searchState) and return a cleaned state.
	 * @property {object} propTypes - PropTypes forwarded to the wrapped component.
	 * @property {object} defaultProps - default values for the props
	 */
	
	/**
	 * Connectors are the HOC used to transform React components
	 * into InstantSearch widgets.
	 * In order to simplify the construction of such connectors
	 * `createConnector` takes a description and transform it into
	 * a connector.
	 * @param {ConnectorDescription} connectorDesc the description of the connector
	 * @return {Connector} a function that wraps a component into
	 * an instantsearch connected one.
	 */
	function createConnector(connectorDesc) {
	  if (!connectorDesc.displayName) {
	    throw new Error('`createConnector` requires you to provide a `displayName` property.');
	  }
	
	  var hasRefine = (0, _has2.default)(connectorDesc, 'refine');
	  var hasSearchForFacetValues = (0, _has2.default)(connectorDesc, 'searchForFacetValues');
	  var hasSearchParameters = (0, _has2.default)(connectorDesc, 'getSearchParameters');
	  var hasMetadata = (0, _has2.default)(connectorDesc, 'getMetadata');
	  var hasTransitionState = (0, _has2.default)(connectorDesc, 'transitionState');
	  var hasCleanUp = (0, _has2.default)(connectorDesc, 'cleanUp');
	  var hasShouldComponentUpdate = (0, _has2.default)(connectorDesc, 'shouldComponentUpdate');
	  var isWidget = hasSearchParameters || hasMetadata || hasTransitionState;
	  return function (Composed) {
	    var _class, _temp;
	
	    return _temp = _class =
	    /*#__PURE__*/
	    function (_Component) {
	      (0, _inherits2.default)(Connector, _Component);
	
	      function Connector() {
	        var _getPrototypeOf2;
	
	        var _this;
	
	        (0, _classCallCheck2.default)(this, Connector);
	
	        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
	          _args[_key] = arguments[_key];
	        }
	
	        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Connector)).call.apply(_getPrototypeOf2, [this].concat(_args)));
	        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "mounted", false);
	        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "unmounting", false);
	        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "refine", function () {
	          var _connectorDesc$refine;
	
	          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	            args[_key2] = arguments[_key2];
	          }
	
	          _this.context.ais.onInternalStateUpdate((_connectorDesc$refine = connectorDesc.refine).call.apply(_connectorDesc$refine, [(0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), _this.props, _this.context.ais.store.getState().widgets].concat(args)));
	        });
	        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "createURL", function () {
	          var _connectorDesc$refine2;
	
	          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	            args[_key3] = arguments[_key3];
	          }
	
	          return _this.context.ais.createHrefForState((_connectorDesc$refine2 = connectorDesc.refine).call.apply(_connectorDesc$refine2, [(0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), _this.props, _this.context.ais.store.getState().widgets].concat(args)));
	        });
	        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "searchForFacetValues", function () {
	          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
	            args[_key4] = arguments[_key4];
	          }
	
	          _this.context.ais.onSearchForFacetValues(connectorDesc.searchForFacetValues.apply(connectorDesc, [_this.props, _this.context.ais.store.getState().widgets].concat(args)));
	        });
	        _this.state = {
	          props: _this.getProvidedProps((0, _objectSpread2.default)({}, _this.props, {
	            // @MAJOR: We cannot drop this beacuse it's a breaking change. The
	            // prop is provided to `createConnector.getProvidedProps`. All the
	            // custom connectors are impacted by this change. It should be fine
	            // to drop it in the next major though.
	            canRender: false
	          }))
	        };
	
	        if (false) {
	          var onlyGetProvidedPropsUsage = !(0, _find2.default)(Object.keys(connectorDesc), function (key) {
	            return ['getMetadata', 'getSearchParameters', 'refine', 'cleanUp'].indexOf(key) > -1;
	          });
	
	          if (onlyGetProvidedPropsUsage && connectorDesc.displayName.substr(0, 7) !== 'Algolia') {
	            // eslint-disable-next-line no-console
	            console.warn('react-instantsearch: it seems that you are using the `createConnector` api ' + 'only to access the `searchState` and the `searchResults` through `getProvidedProps`.' + 'We are now provided a dedicated API' + ' the `connectStateResults` connector that you should use instead. The `createConnector` API will be ' + 'soon deprecated and will break in future next major versions.' + '\n\n' + 'See more at https://community.algolia.com/react-instantsearch/connectors/connectStateResults.html' + '\n' + 'and https://community.algolia.com/react-instantsearch/guide/Conditional_display.html');
	          }
	        }
	
	        return _this;
	      }
	
	      (0, _createClass2.default)(Connector, [{
	        key: "componentWillMount",
	        value: function componentWillMount() {
	          if (connectorDesc.getSearchParameters) {
	            this.context.ais.onSearchParameters(connectorDesc.getSearchParameters.bind(this), this.context, this.props);
	          }
	        }
	      }, {
	        key: "componentDidMount",
	        value: function componentDidMount() {
	          var _this2 = this;
	
	          this.mounted = true;
	          this.unsubscribe = this.context.ais.store.subscribe(function () {
	            if (!_this2.unmounting) {
	              _this2.setState({
	                props: _this2.getProvidedProps((0, _objectSpread2.default)({}, _this2.props, {
	                  // @MAJOR: see constructor
	                  canRender: true
	                }))
	              });
	            }
	          });
	
	          if (isWidget) {
	            this.unregisterWidget = this.context.ais.widgetsManager.registerWidget(this);
	          }
	        }
	      }, {
	        key: "componentWillReceiveProps",
	        value: function componentWillReceiveProps(nextProps) {
	          if (!(0, _isEqual2.default)(this.props, nextProps)) {
	            this.setState({
	              props: this.getProvidedProps((0, _objectSpread2.default)({}, nextProps, {
	                // @MAJOR: see constructor
	                canRender: this.mounted
	              }))
	            });
	
	            if (isWidget) {
	              this.context.ais.widgetsManager.update();
	
	              if (connectorDesc.transitionState) {
	                this.context.ais.onSearchStateChange(connectorDesc.transitionState.call(this, nextProps, this.context.ais.store.getState().widgets, this.context.ais.store.getState().widgets));
	              }
	            }
	          }
	        }
	      }, {
	        key: "shouldComponentUpdate",
	        value: function shouldComponentUpdate(nextProps, nextState) {
	          if (hasShouldComponentUpdate) {
	            return connectorDesc.shouldComponentUpdate.call(this, this.props, nextProps, this.state, nextState);
	          }
	
	          var propsEqual = (0, _utils.shallowEqual)(this.props, nextProps);
	
	          if (this.state.props === null || nextState.props === null) {
	            if (this.state.props === nextState.props) {
	              return !propsEqual;
	            }
	
	            return true;
	          }
	
	          return !propsEqual || !(0, _utils.shallowEqual)(this.state.props, nextState.props);
	        }
	      }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	          this.unmounting = true;
	
	          if (this.unsubscribe) {
	            this.unsubscribe();
	          }
	
	          if (this.unregisterWidget) {
	            this.unregisterWidget();
	
	            if (hasCleanUp) {
	              var nextState = connectorDesc.cleanUp.call(this, this.props, this.context.ais.store.getState().widgets);
	              this.context.ais.store.setState((0, _objectSpread2.default)({}, this.context.ais.store.getState(), {
	                widgets: nextState
	              }));
	              this.context.ais.onSearchStateChange((0, _utils.removeEmptyKey)(nextState));
	            }
	          }
	        }
	      }, {
	        key: "getProvidedProps",
	        value: function getProvidedProps(props) {
	          var _this$context$ais$sto = this.context.ais.store.getState(),
	              widgets = _this$context$ais$sto.widgets,
	              results = _this$context$ais$sto.results,
	              resultsFacetValues = _this$context$ais$sto.resultsFacetValues,
	              searching = _this$context$ais$sto.searching,
	              searchingForFacetValues = _this$context$ais$sto.searchingForFacetValues,
	              isSearchStalled = _this$context$ais$sto.isSearchStalled,
	              metadata = _this$context$ais$sto.metadata,
	              error = _this$context$ais$sto.error;
	
	          var searchResults = {
	            results: results,
	            searching: searching,
	            searchingForFacetValues: searchingForFacetValues,
	            isSearchStalled: isSearchStalled,
	            error: error
	          };
	          return connectorDesc.getProvidedProps.call(this, props, widgets, searchResults, metadata, // @MAJOR: move this attribute on the `searchResults` it doesn't
	          // makes sense to have it into a separate argument. The search
	          // flags are on the object why not the resutls?
	          resultsFacetValues);
	        }
	      }, {
	        key: "getSearchParameters",
	        value: function getSearchParameters(searchParameters) {
	          if (hasSearchParameters) {
	            return connectorDesc.getSearchParameters.call(this, searchParameters, this.props, this.context.ais.store.getState().widgets);
	          }
	
	          return null;
	        }
	      }, {
	        key: "getMetadata",
	        value: function getMetadata(nextWidgetsState) {
	          if (hasMetadata) {
	            return connectorDesc.getMetadata.call(this, this.props, nextWidgetsState);
	          }
	
	          return {};
	        }
	      }, {
	        key: "transitionState",
	        value: function transitionState(prevWidgetsState, nextWidgetsState) {
	          if (hasTransitionState) {
	            return connectorDesc.transitionState.call(this, this.props, prevWidgetsState, nextWidgetsState);
	          }
	
	          return nextWidgetsState;
	        }
	      }, {
	        key: "render",
	        value: function render() {
	          if (this.state.props === null) {
	            return null;
	          }
	
	          var refineProps = hasRefine ? {
	            refine: this.refine,
	            createURL: this.createURL
	          } : {};
	          var searchForFacetValuesProps = hasSearchForFacetValues ? {
	            searchForItems: this.searchForFacetValues
	          } : {};
	          return _react.default.createElement(Composed, (0, _extends2.default)({}, this.props, this.state.props, refineProps, searchForFacetValuesProps));
	        }
	      }]);
	      return Connector;
	    }(_react.Component), (0, _defineProperty2.default)(_class, "displayName", "".concat(connectorDesc.displayName, "(").concat((0, _utils.getDisplayName)(Composed), ")")), (0, _defineProperty2.default)(_class, "defaultClassNames", Composed.defaultClassNames), (0, _defineProperty2.default)(_class, "propTypes", connectorDesc.propTypes), (0, _defineProperty2.default)(_class, "defaultProps", connectorDesc.defaultProps), (0, _defineProperty2.default)(_class, "contextTypes", {
	      // @TODO: more precise state manager propType
	      ais: _propTypes.default.object.isRequired,
	      multiIndexContext: _propTypes.default.object
	    }), _temp;
	  };
	}

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	/* todo: I want this to actually be an array of Function | string but that causes errors */
	if (true) Object.defineProperty(exports, "babelPluginFlowReactPropTypes_proptype_StyleSheet", {
	  value: __webpack_require__(3).shape({
	    create: __webpack_require__(3).func.isRequired
	  })
	});
	
	/* eslint-disable no-undef */

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getIndexId = getIndexId;
	exports.getResults = getResults;
	exports.hasMultipleIndices = hasMultipleIndices;
	exports.refineValue = refineValue;
	exports.getCurrentRefinementValue = getCurrentRefinementValue;
	exports.cleanUpValue = cleanUpValue;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _objectSpread12 = _interopRequireDefault(__webpack_require__(20));
	
	var _get2 = _interopRequireDefault(__webpack_require__(105));
	
	var _omit2 = _interopRequireDefault(__webpack_require__(37));
	
	var _has2 = _interopRequireDefault(__webpack_require__(52));
	
	function getIndexId(context) {
	  return context && context.multiIndexContext ? context.multiIndexContext.targetedIndex : context.ais.mainTargetedIndex;
	}
	
	function getResults(searchResults, context) {
	  if (searchResults.results && !searchResults.results.hits) {
	    return searchResults.results[getIndexId(context)] ? searchResults.results[getIndexId(context)] : null;
	  } else {
	    return searchResults.results ? searchResults.results : null;
	  }
	}
	
	function hasMultipleIndices(context) {
	  return context && context.multiIndexContext;
	} // eslint-disable-next-line max-params
	
	
	function refineValue(searchState, nextRefinement, context, resetPage, namespace) {
	  if (hasMultipleIndices(context)) {
	    return namespace ? refineMultiIndexWithNamespace(searchState, nextRefinement, context, resetPage, namespace) : refineMultiIndex(searchState, nextRefinement, context, resetPage);
	  } else {
	    // When we have a multi index page with shared widgets we should also
	    // reset their page to 1 if the resetPage is provided. Otherwise the
	    // indices will always be reset
	    // see: https://github.com/algolia/react-instantsearch/issues/310
	    // see: https://github.com/algolia/react-instantsearch/issues/637
	    if (searchState.indices && resetPage) {
	      Object.keys(searchState.indices).forEach(function (targetedIndex) {
	        searchState = refineValue(searchState, {
	          page: 1
	        }, {
	          multiIndexContext: {
	            targetedIndex: targetedIndex
	          }
	        }, true, namespace);
	      });
	    }
	
	    return namespace ? refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) : refineSingleIndex(searchState, nextRefinement, resetPage);
	  }
	}
	
	function refineMultiIndex(searchState, nextRefinement, context, resetPage) {
	  var page = resetPage ? {
	    page: 1
	  } : undefined;
	  var indexId = getIndexId(context);
	  var state = (0, _has2.default)(searchState, "indices.".concat(indexId)) ? (0, _objectSpread12.default)({}, searchState.indices, (0, _defineProperty2.default)({}, indexId, (0, _objectSpread12.default)({}, searchState.indices[indexId], nextRefinement, page))) : (0, _objectSpread12.default)({}, searchState.indices, (0, _defineProperty2.default)({}, indexId, (0, _objectSpread12.default)({}, nextRefinement, page)));
	  return (0, _objectSpread12.default)({}, searchState, {
	    indices: state
	  });
	}
	
	function refineSingleIndex(searchState, nextRefinement, resetPage) {
	  var page = resetPage ? {
	    page: 1
	  } : undefined;
	  return (0, _objectSpread12.default)({}, searchState, nextRefinement, page);
	} // eslint-disable-next-line max-params
	
	
	function refineMultiIndexWithNamespace(searchState, nextRefinement, context, resetPage, namespace) {
	  var _objectSpread4;
	
	  var indexId = getIndexId(context);
	  var page = resetPage ? {
	    page: 1
	  } : undefined;
	  var state = (0, _has2.default)(searchState, "indices.".concat(indexId)) ? (0, _objectSpread12.default)({}, searchState.indices, (0, _defineProperty2.default)({}, indexId, (0, _objectSpread12.default)({}, searchState.indices[indexId], (_objectSpread4 = {}, (0, _defineProperty2.default)(_objectSpread4, namespace, (0, _objectSpread12.default)({}, searchState.indices[indexId][namespace], nextRefinement)), (0, _defineProperty2.default)(_objectSpread4, "page", 1), _objectSpread4)))) : (0, _objectSpread12.default)({}, searchState.indices, (0, _defineProperty2.default)({}, indexId, (0, _objectSpread12.default)((0, _defineProperty2.default)({}, namespace, nextRefinement), page)));
	  return (0, _objectSpread12.default)({}, searchState, {
	    indices: state
	  });
	}
	
	function refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) {
	  var page = resetPage ? {
	    page: 1
	  } : undefined;
	  return (0, _objectSpread12.default)({}, searchState, (0, _defineProperty2.default)({}, namespace, (0, _objectSpread12.default)({}, searchState[namespace], nextRefinement)), page);
	}
	
	function getNamespaceAndAttributeName(id) {
	  var parts = id.match(/^([^.]*)\.(.*)/);
	  var namespace = parts && parts[1];
	  var attributeName = parts && parts[2];
	  return {
	    namespace: namespace,
	    attributeName: attributeName
	  };
	} // eslint-disable-next-line max-params
	
	
	function getCurrentRefinementValue(props, searchState, context, id, defaultValue) {
	  var refinementsCallback = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : function (x) {
	    return x;
	  };
	  var indexId = getIndexId(context);
	
	  var _getNamespaceAndAttri = getNamespaceAndAttributeName(id),
	      namespace = _getNamespaceAndAttri.namespace,
	      attributeName = _getNamespaceAndAttri.attributeName;
	
	  var refinements = hasMultipleIndices(context) && searchState.indices && namespace && searchState.indices["".concat(indexId)] && (0, _has2.default)(searchState.indices["".concat(indexId)][namespace], "".concat(attributeName)) || hasMultipleIndices(context) && searchState.indices && (0, _has2.default)(searchState, "indices.".concat(indexId, ".").concat(id)) || !hasMultipleIndices(context) && namespace && (0, _has2.default)(searchState[namespace], attributeName) || !hasMultipleIndices(context) && (0, _has2.default)(searchState, id);
	
	  if (refinements) {
	    var currentRefinement;
	
	    if (hasMultipleIndices(context)) {
	      currentRefinement = namespace ? (0, _get2.default)(searchState.indices["".concat(indexId)][namespace], attributeName) : (0, _get2.default)(searchState.indices[indexId], id);
	    } else {
	      currentRefinement = namespace ? (0, _get2.default)(searchState[namespace], attributeName) : (0, _get2.default)(searchState, id);
	    }
	
	    return refinementsCallback(currentRefinement);
	  }
	
	  if (props.defaultRefinement) {
	    return props.defaultRefinement;
	  }
	
	  return defaultValue;
	}
	
	function cleanUpValue(searchState, context, id) {
	  var indexId = getIndexId(context);
	
	  var _getNamespaceAndAttri2 = getNamespaceAndAttributeName(id),
	      namespace = _getNamespaceAndAttri2.namespace,
	      attributeName = _getNamespaceAndAttri2.attributeName;
	
	  if (hasMultipleIndices(context) && Boolean(searchState.indices)) {
	    return cleanUpValueWithMutliIndex({
	      attribute: attributeName,
	      searchState: searchState,
	      indexId: indexId,
	      id: id,
	      namespace: namespace
	    });
	  }
	
	  return cleanUpValueWithSingleIndex({
	    attribute: attributeName,
	    searchState: searchState,
	    id: id,
	    namespace: namespace
	  });
	}
	
	function cleanUpValueWithSingleIndex(_ref) {
	  var searchState = _ref.searchState,
	      id = _ref.id,
	      namespace = _ref.namespace,
	      attribute = _ref.attribute;
	
	  if (namespace) {
	    return (0, _objectSpread12.default)({}, searchState, (0, _defineProperty2.default)({}, namespace, (0, _omit2.default)(searchState[namespace], attribute)));
	  }
	
	  return (0, _omit2.default)(searchState, id);
	}
	
	function cleanUpValueWithMutliIndex(_ref2) {
	  var searchState = _ref2.searchState,
	      indexId = _ref2.indexId,
	      id = _ref2.id,
	      namespace = _ref2.namespace,
	      attribute = _ref2.attribute;
	  var indexSearchState = searchState.indices[indexId];
	
	  if (namespace && indexSearchState) {
	    return (0, _objectSpread12.default)({}, searchState, {
	      indices: (0, _objectSpread12.default)({}, searchState.indices, (0, _defineProperty2.default)({}, indexId, (0, _objectSpread12.default)({}, indexSearchState, (0, _defineProperty2.default)({}, namespace, (0, _omit2.default)(indexSearchState[namespace], attribute)))))
	    });
	  }
	
	  return (0, _omit2.default)(searchState, "indices.".concat(indexId, ".").concat(id));
	}

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2017 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg) && arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			classNames.default = classNames;
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ }),
/* 19 */
/***/ (function(module, exports) {

	function _assertThisInitialized(self) {
	  if (self === void 0) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return self;
	}
	
	module.exports = _assertThisInitialized;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	var defineProperty = __webpack_require__(6);
	
	function _objectSpread(target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i] != null ? arguments[i] : {};
	    var ownKeys = Object.keys(source);
	
	    if (typeof Object.getOwnPropertySymbols === 'function') {
	      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
	        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
	      }));
	    }
	
	    ownKeys.forEach(function (key) {
	      defineProperty(target, key, source[key]);
	    });
	  }
	
	  return target;
	}
	
	module.exports = _objectSpread;

/***/ }),
/* 21 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;
	
	module.exports = isArray;


/***/ }),
/* 22 */
/***/ (function(module, exports) {

	function _extends() {
	  module.exports = _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];
	
	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }
	
	    return target;
	  };
	
	  return _extends.apply(this, arguments);
	}
	
	module.exports = _extends;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = __webpack_require__(1);
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var PanelCallbackHandler =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(PanelCallbackHandler, _Component);
	
	  function PanelCallbackHandler() {
	    (0, _classCallCheck2.default)(this, PanelCallbackHandler);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PanelCallbackHandler).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(PanelCallbackHandler, [{
	    key: "componentWillMount",
	    value: function componentWillMount() {
	      if (this.context.setCanRefine) {
	        this.context.setCanRefine(this.props.canRefine);
	      }
	    }
	  }, {
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.context.setCanRefine && this.props.canRefine !== nextProps.canRefine) {
	        this.context.setCanRefine(nextProps.canRefine);
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return this.props.children;
	    }
	  }]);
	  return PanelCallbackHandler;
	}(_react.Component);
	
	(0, _defineProperty2.default)(PanelCallbackHandler, "propTypes", {
	  children: _propTypes.default.node.isRequired,
	  canRefine: _propTypes.default.bool.isRequired
	});
	(0, _defineProperty2.default)(PanelCallbackHandler, "contextTypes", {
	  setCanRefine: _propTypes.default.func
	});
	var _default = PanelCallbackHandler;
	exports.default = _default;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	var baseKeys = __webpack_require__(192),
	    getTag = __webpack_require__(120),
	    isArguments = __webpack_require__(60),
	    isArray = __webpack_require__(21),
	    isArrayLike = __webpack_require__(84),
	    isBuffer = __webpack_require__(85),
	    isPrototype = __webpack_require__(121),
	    isTypedArray = __webpack_require__(86);
	
	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    setTag = '[object Set]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Checks if `value` is an empty object, collection, map, or set.
	 *
	 * Objects are considered empty if they have no own enumerable string keyed
	 * properties.
	 *
	 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	 * jQuery-like collections are considered empty if they have a `length` of `0`.
	 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	 * @example
	 *
	 * _.isEmpty(null);
	 * // => true
	 *
	 * _.isEmpty(true);
	 * // => true
	 *
	 * _.isEmpty(1);
	 * // => true
	 *
	 * _.isEmpty([1, 2, 3]);
	 * // => false
	 *
	 * _.isEmpty({ 'a': 1 });
	 * // => false
	 */
	function isEmpty(value) {
	  if (value == null) {
	    return true;
	  }
	  if (isArrayLike(value) &&
	      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
	        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
	    return !value.length;
	  }
	  var tag = getTag(value);
	  if (tag == mapTag || tag == setTag) {
	    return !value.size;
	  }
	  if (isPrototype(value)) {
	    return !baseKeys(value).length;
	  }
	  for (var key in value) {
	    if (hasOwnProperty.call(value, key)) {
	      return false;
	    }
	  }
	  return true;
	}
	
	module.exports = isEmpty;


/***/ }),
/* 25 */,
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	var createFind = __webpack_require__(293),
	    findIndex = __webpack_require__(165);
	
	/**
	 * Iterates over elements of `collection`, returning the first element
	 * `predicate` returns truthy for. The predicate is invoked with three
	 * arguments: (value, index|key, collection).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to inspect.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {*} Returns the matched element, else `undefined`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'age': 36, 'active': true },
	 *   { 'user': 'fred',    'age': 40, 'active': false },
	 *   { 'user': 'pebbles', 'age': 1,  'active': true }
	 * ];
	 *
	 * _.find(users, function(o) { return o.age < 40; });
	 * // => object for 'barney'
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.find(users, { 'age': 1, 'active': true });
	 * // => object for 'pebbles'
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.find(users, ['active', false]);
	 * // => object for 'fred'
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.find(users, 'active');
	 * // => object for 'barney'
	 */
	var find = createFind(findIndex);
	
	module.exports = find;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.clones = exports.CONTEXT_KEY = exports.LOCAL_ATTR = exports.SC_ATTR = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _BrowserStyleSheet = __webpack_require__(435);
	
	var _BrowserStyleSheet2 = _interopRequireDefault(_BrowserStyleSheet);
	
	var _ServerStyleSheet = __webpack_require__(80);
	
	var _ServerStyleSheet2 = _interopRequireDefault(_ServerStyleSheet);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var SC_ATTR = exports.SC_ATTR = 'data-styled-components';
	var LOCAL_ATTR = exports.LOCAL_ATTR = 'data-styled-components-is-local';
	var CONTEXT_KEY = exports.CONTEXT_KEY = '__styled-components-stylesheet__';
	
	/* eslint-disable flowtype/object-type-delimiter */
	
	/* eslint-enable flowtype/object-type-delimiter */
	
	var instance = null;
	// eslint-disable-next-line no-use-before-define
	var clones = exports.clones = [];
	
	var StyleSheet = function () {
	  function StyleSheet(tagConstructor) {
	    var tags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
	    var names = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	    _classCallCheck(this, StyleSheet);
	
	    this.hashes = {};
	    this.deferredInjections = {};
	    this.stylesCacheable = typeof document !== 'undefined';
	
	    this.tagConstructor = tagConstructor;
	    this.tags = tags;
	    this.names = names;
	    this.constructComponentTagMap();
	  }
	  // helper for `ComponentStyle` to know when it cache static styles.
	  // staticly styled-component can not safely cache styles on the server
	  // without all `ComponentStyle` instances saving a reference to the
	  // the styleSheet instance they last rendered with,
	  // or listening to creation / reset events. otherwise you might create
	  // a component with one stylesheet and render it another api response
	  // with another, losing styles on from your server-side render.
	
	
	  StyleSheet.prototype.constructComponentTagMap = function constructComponentTagMap() {
	    var _this = this;
	
	    this.componentTags = {};
	
	    this.tags.forEach(function (tag) {
	      Object.keys(tag.components).forEach(function (componentId) {
	        _this.componentTags[componentId] = tag;
	      });
	    });
	  };
	
	  /* Best level of caching—get the name from the hash straight away. */
	
	
	  StyleSheet.prototype.getName = function getName(hash) {
	    return this.hashes[hash.toString()];
	  };
	
	  /* Second level of caching—if the name is already in the dom, don't
	   * inject anything and record the hash for getName next time. */
	
	
	  StyleSheet.prototype.alreadyInjected = function alreadyInjected(hash, name) {
	    if (!this.names[name]) return false;
	
	    this.hashes[hash.toString()] = name;
	    return true;
	  };
	
	  /* Third type of caching—don't inject components' componentId twice. */
	
	
	  StyleSheet.prototype.hasInjectedComponent = function hasInjectedComponent(componentId) {
	    return !!this.componentTags[componentId];
	  };
	
	  StyleSheet.prototype.deferredInject = function deferredInject(componentId, isLocal, css) {
	    if (this === instance) {
	      clones.forEach(function (clone) {
	        clone.deferredInject(componentId, isLocal, css);
	      });
	    }
	
	    this.getOrCreateTag(componentId, isLocal);
	    this.deferredInjections[componentId] = css;
	  };
	
	  StyleSheet.prototype.inject = function inject(componentId, isLocal, css, hash, name) {
	    if (this === instance) {
	      clones.forEach(function (clone) {
	        clone.inject(componentId, isLocal, css);
	      });
	    }
	
	    var tag = this.getOrCreateTag(componentId, isLocal);
	
	    var deferredInjection = this.deferredInjections[componentId];
	    if (deferredInjection) {
	      tag.inject(componentId, deferredInjection);
	      delete this.deferredInjections[componentId];
	    }
	
	    tag.inject(componentId, css, name);
	
	    if (hash && name) {
	      this.hashes[hash.toString()] = name;
	    }
	  };
	
	  StyleSheet.prototype.toHTML = function toHTML() {
	    return this.tags.map(function (tag) {
	      return tag.toHTML();
	    }).join('');
	  };
	
	  StyleSheet.prototype.toReactElements = function toReactElements() {
	    return this.tags.map(function (tag, i) {
	      return tag.toReactElement('sc-' + i);
	    });
	  };
	
	  StyleSheet.prototype.getOrCreateTag = function getOrCreateTag(componentId, isLocal) {
	    var existingTag = this.componentTags[componentId];
	    if (existingTag) {
	      return existingTag;
	    }
	
	    var lastTag = this.tags[this.tags.length - 1];
	    var componentTag = !lastTag || lastTag.isFull() || lastTag.isLocal !== isLocal ? this.createNewTag(isLocal) : lastTag;
	    this.componentTags[componentId] = componentTag;
	    componentTag.addComponent(componentId);
	    return componentTag;
	  };
	
	  StyleSheet.prototype.createNewTag = function createNewTag(isLocal) {
	    var newTag = this.tagConstructor(isLocal);
	    this.tags.push(newTag);
	    return newTag;
	  };
	
	  StyleSheet.reset = function reset(isServer) {
	    instance = StyleSheet.create(isServer);
	  };
	
	  /* We can make isServer totally implicit once Jest 20 drops and we
	   * can change environment on a per-test basis. */
	
	
	  StyleSheet.create = function create() {
	    var isServer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : typeof document === 'undefined';
	
	    return (isServer ? _ServerStyleSheet2.default : _BrowserStyleSheet2.default).create();
	  };
	
	  StyleSheet.clone = function clone(oldSheet) {
	    var newSheet = new StyleSheet(oldSheet.tagConstructor, oldSheet.tags.map(function (tag) {
	      return tag.clone();
	    }), _extends({}, oldSheet.names));
	
	    newSheet.hashes = _extends({}, oldSheet.hashes);
	    newSheet.deferredInjections = _extends({}, oldSheet.deferredInjections);
	    clones.push(newSheet);
	
	    return newSheet;
	  };
	
	  _createClass(StyleSheet, null, [{
	    key: 'instance',
	    get: function get() {
	      return instance || (instance = StyleSheet.create());
	    }
	  }]);
	
	  return StyleSheet;
	}();
	
	exports.default = StyleSheet;

/***/ }),
/* 28 */,
/* 29 */,
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(302);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ }),
/* 31 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      result = Array(length);
	
	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}
	
	module.exports = arrayMap;


/***/ }),
/* 32 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}
	
	module.exports = isObject;


/***/ }),
/* 33 */,
/* 34 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      result = Array(length);
	
	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}
	
	module.exports = arrayMap;


/***/ }),
/* 35 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(106),
	    overRest = __webpack_require__(160),
	    setToString = __webpack_require__(163);
	
	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  return setToString(overRest(func, start, identity), func + '');
	}
	
	module.exports = baseRest;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(34),
	    baseClone = __webpack_require__(256),
	    baseUnset = __webpack_require__(276),
	    castPath = __webpack_require__(42),
	    copyObject = __webpack_require__(152),
	    customOmitClone = __webpack_require__(297),
	    flatRest = __webpack_require__(155),
	    getAllKeysIn = __webpack_require__(156);
	
	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1,
	    CLONE_FLAT_FLAG = 2,
	    CLONE_SYMBOLS_FLAG = 4;
	
	/**
	 * The opposite of `_.pick`; this method creates an object composed of the
	 * own and inherited enumerable property paths of `object` that are not omitted.
	 *
	 * **Note:** This method is considerably slower than `_.pick`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [paths] The property paths to omit.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.omit(object, ['a', 'c']);
	 * // => { 'b': '2' }
	 */
	var omit = flatRest(function(object, paths) {
	  var result = {};
	  if (object == null) {
	    return result;
	  }
	  var isDeep = false;
	  paths = arrayMap(paths, function(path) {
	    path = castPath(path, object);
	    isDeep || (isDeep = path.length > 1);
	    return path;
	  });
	  copyObject(object, getAllKeysIn(object), result);
	  if (isDeep) {
	    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
	  }
	  var length = paths.length;
	  while (length--) {
	    baseUnset(result, paths[length]);
	  }
	  return result;
	});
	
	module.exports = omit;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _keys = __webpack_require__(471);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	exports.default = objectToGetParams;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* eslint-disable prefer-template */
	function objectToGetParams(object) {
	  return '?' + (0, _keys2.default)(object).filter(function (key) {
	    return !!object[key];
	  }).map(function (key) {
	    return key + '=' + encodeURIComponent(object[key]);
	  }).join('&');
	}
	/* eslint-enable prefer-template */

/***/ }),
/* 39 */
/***/ (function(module, exports) {

	module.exports = function clone(obj) {
	  return JSON.parse(JSON.stringify(obj));
	};


/***/ }),
/* 40 */
/***/ (function(module, exports) {

	
	var hasOwn = Object.prototype.hasOwnProperty;
	var toString = Object.prototype.toString;
	
	module.exports = function forEach (obj, fn, ctx) {
	    if (toString.call(fn) !== '[object Function]') {
	        throw new TypeError('iterator must be a function');
	    }
	    var l = obj.length;
	    if (l === +l) {
	        for (var i = 0; i < l; i++) {
	            fn.call(ctx, obj[i], i, obj);
	        }
	    } else {
	        for (var k in obj) {
	            if (hasOwn.call(obj, k)) {
	                fn.call(ctx, obj[k], k, obj);
	            }
	        }
	    }
	};
	


/***/ }),
/* 41 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.indexOf` which performs strict equality
	 * comparisons of values, i.e. `===`.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function strictIndexOf(array, value, fromIndex) {
	  var index = fromIndex - 1,
	      length = array.length;
	
	  while (++index < length) {
	    if (array[index] === value) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = strictIndexOf;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(21),
	    isKey = __webpack_require__(308),
	    stringToPath = __webpack_require__(319),
	    toString = __webpack_require__(61);
	
	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value, object) {
	  if (isArray(value)) {
	    return value;
	  }
	  return isKey(value, object) ? [value] : stringToPath(toString(value));
	}
	
	module.exports = castPath;


/***/ }),
/* 43 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}
	
	module.exports = arrayEach;


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

	var toFinite = __webpack_require__(172);
	
	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3.2);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3.2');
	 * // => 3
	 */
	function toInteger(value) {
	  var result = toFinite(value),
	      remainder = result % 1;
	
	  return result === result ? (remainder ? result - remainder : result) : 0;
	}
	
	module.exports = toInteger;


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(58),
	    isObject = __webpack_require__(32);
	
	/** `Object#toString` result references. */
	var asyncTag = '[object AsyncFunction]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    proxyTag = '[object Proxy]';
	
	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  if (!isObject(value)) {
	    return false;
	  }
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 9 which returns 'object' for typed arrays and other constructors.
	  var tag = baseGetTag(value);
	  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	}
	
	module.exports = isFunction;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(503);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(504);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _keys = __webpack_require__(471);
	
	var _keys2 = _interopRequireDefault(_keys);
	
	var _typeof2 = __webpack_require__(473);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(18);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _ieDetection = __webpack_require__(540);
	
	var _ieDetection2 = _interopRequireDefault(_ieDetection);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var isPromise = function isPromise(obj) {
	  return !!obj && ((typeof obj === 'undefined' ? 'undefined' : (0, _typeof3.default)(obj)) === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
	};
	
	function windowOpen(url, _ref, onShareWindowClose) {
	  var name = _ref.name,
	      _ref$height = _ref.height,
	      height = _ref$height === undefined ? 400 : _ref$height,
	      _ref$width = _ref.width,
	      width = _ref$width === undefined ? 550 : _ref$width;
	
	  /* eslint-disable no-mixed-operators */
	  var left = window.outerWidth / 2 + (window.screenX || window.screenLeft || 0) - width / 2;
	  var top = window.outerHeight / 2 + (window.screenY || window.screenTop || 0) - height / 2;
	  /* eslint-enable no-mixed-operators */
	
	  var config = {
	    height: height,
	    width: width,
	    left: left,
	    top: top,
	    location: 'no',
	    toolbar: 'no',
	    status: 'no',
	    directories: 'no',
	    menubar: 'no',
	    scrollbars: 'yes',
	    resizable: 'no',
	    centerscreen: 'yes',
	    chrome: 'yes'
	  };
	
	  var shareDialog = window.open(url, (0, _ieDetection2.default)(10) ? '' : name, (0, _keys2.default)(config).map(function (key) {
	    return key + '=' + config[key];
	  }).join(', '));
	
	  if (onShareWindowClose) {
	    var interval = window.setInterval(function () {
	      try {
	        if (shareDialog === null || shareDialog.closed) {
	          window.clearInterval(interval);
	          onShareWindowClose(shareDialog);
	        }
	      } catch (e) {
	        /* eslint-disable no-console */
	        console.error(e);
	        /* eslint-enable no-console */
	      }
	    }, 1000);
	  }
	
	  return shareDialog;
	}
	
	var ShareButton = function (_PureComponent) {
	  (0, _inherits3.default)(ShareButton, _PureComponent);
	
	  function ShareButton() {
	    var _ref2;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, ShareButton);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref2 = ShareButton.__proto__ || (0, _getPrototypeOf2.default)(ShareButton)).call.apply(_ref2, [this].concat(args))), _this), _this.onClick = function (e) {
	      var _this$props = _this.props,
	          disabled = _this$props.disabled,
	          onClick = _this$props.onClick,
	          openWindow = _this$props.openWindow,
	          beforeOnClick = _this$props.beforeOnClick;
	
	
	      if (disabled) {
	        return;
	      }
	
	      e.preventDefault();
	
	      var link = _this.link();
	
	      var clickHandler = openWindow ? function () {
	        return _this.openWindow(link);
	      } : function () {
	        return onClick(link);
	      };
	
	      if (beforeOnClick) {
	        var returnVal = beforeOnClick();
	
	        if (isPromise(returnVal)) {
	          returnVal.then(clickHandler);
	        } else {
	          clickHandler();
	        }
	      } else {
	        clickHandler();
	      }
	    }, _this.onKeyPress = function (e) {
	      if (e.key === 'Enter' || e.key === 13 || e.key === ' ' || e.key === 32) {
	        _this.onClick(e);
	      }
	    }, _this.openWindow = function (link) {
	      var _this$props2 = _this.props,
	          onShareWindowClose = _this$props2.onShareWindowClose,
	          windowWidth = _this$props2.windowWidth,
	          windowHeight = _this$props2.windowHeight;
	
	
	      var windowOptions = {
	        height: windowHeight,
	        width: windowWidth
	      };
	
	      windowOpen(link, windowOptions, onShareWindowClose);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  (0, _createClass3.default)(ShareButton, [{
	    key: 'link',
	    value: function link() {
	      var _props = this.props,
	          url = _props.url,
	          opts = _props.opts,
	          networkLink = _props.networkLink;
	
	      return networkLink(url, opts);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          additionalProps = _props2.additionalProps,
	          children = _props2.children,
	          className = _props2.className,
	          disabled = _props2.disabled,
	          disabledStyle = _props2.disabledStyle,
	          name = _props2.name,
	          network = _props2.network,
	          role = _props2.role,
	          style = _props2.style,
	          tabIndex = _props2.tabIndex;
	
	
	      var classes = (0, _classnames2.default)('SocialMediaShareButton', 'SocialMediaShareButton--' + network, {
	        'SocialMediaShareButton--disabled': !!disabled,
	        disabled: !!disabled
	      }, className);
	
	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({
	          name: name
	        }, additionalProps, {
	          role: role,
	          tabIndex: tabIndex,
	          onClick: this.onClick,
	          onKeyPress: this.onKeyPress,
	          className: classes,
	          style: (0, _extends3.default)({}, style, disabled ? disabledStyle : {}) }),
	        children
	      );
	    }
	  }]);
	  return ShareButton;
	}(_react.PureComponent);
	
	ShareButton.propTypes = {
	  additionalProps: _propTypes2.default.object,
	  children: _propTypes2.default.node,
	  className: _propTypes2.default.string,
	  disabled: _propTypes2.default.bool,
	  disabledStyle: _propTypes2.default.object,
	  name: _propTypes2.default.string,
	  network: _propTypes2.default.string.isRequired,
	  networkLink: _propTypes2.default.func.isRequired,
	  onClick: _propTypes2.default.func,
	  opts: _propTypes2.default.object,
	  openWindow: _propTypes2.default.bool,
	  url: _propTypes2.default.string.isRequired,
	  role: _propTypes2.default.string,
	  style: _propTypes2.default.object,
	  windowWidth: _propTypes2.default.number,
	  windowHeight: _propTypes2.default.number,
	  beforeOnClick: _propTypes2.default.func,
	  onShareWindowClose: _propTypes2.default.func,
	  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	};
	ShareButton.defaultProps = {
	  disabledStyle: {
	    opacity: 0.6
	  },
	  openWindow: true,
	  role: 'button',
	  tabIndex: '0'
	};
	
	
	function createShareButton(network, link) {
	  var optsMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {
	    return {};
	  };
	  var propTypes = arguments[3];
	  var defaultProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
	
	  var CreatedButton = function CreatedButton(props) {
	    return _react2.default.createElement(ShareButton, (0, _extends3.default)({}, props, {
	      network: network,
	      networkLink: link,
	      opts: optsMap(props) }));
	  };
	
	  CreatedButton.propTypes = propTypes;
	  CreatedButton.defaultProps = defaultProps;
	
	  return CreatedButton;
	}
	
	exports.default = createShareButton;

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';
	
	// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js
	// original notice:
	
	/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	function compare(a, b) {
	  if (a === b) {
	    return 0;
	  }
	
	  var x = a.length;
	  var y = b.length;
	
	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i];
	      y = b[i];
	      break;
	    }
	  }
	
	  if (x < y) {
	    return -1;
	  }
	  if (y < x) {
	    return 1;
	  }
	  return 0;
	}
	function isBuffer(b) {
	  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {
	    return global.Buffer.isBuffer(b);
	  }
	  return !!(b != null && b._isBuffer);
	}
	
	// based on node assert, original notice:
	
	// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
	//
	// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
	//
	// Originally from narwhal.js (http://narwhaljs.org)
	// Copyright (c) 2009 Thomas Robinson <280north.com>
	//
	// Permission is hereby granted, free of charge, to any person obtaining a copy
	// of this software and associated documentation files (the 'Software'), to
	// deal in the Software without restriction, including without limitation the
	// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
	// sell copies of the Software, and to permit persons to whom the Software is
	// furnished to do so, subject to the following conditions:
	//
	// The above copyright notice and this permission notice shall be included in
	// all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
	// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
	// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	var util = __webpack_require__(542);
	var hasOwn = Object.prototype.hasOwnProperty;
	var pSlice = Array.prototype.slice;
	var functionsHaveNames = (function () {
	  return function foo() {}.name === 'foo';
	}());
	function pToString (obj) {
	  return Object.prototype.toString.call(obj);
	}
	function isView(arrbuf) {
	  if (isBuffer(arrbuf)) {
	    return false;
	  }
	  if (typeof global.ArrayBuffer !== 'function') {
	    return false;
	  }
	  if (typeof ArrayBuffer.isView === 'function') {
	    return ArrayBuffer.isView(arrbuf);
	  }
	  if (!arrbuf) {
	    return false;
	  }
	  if (arrbuf instanceof DataView) {
	    return true;
	  }
	  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {
	    return true;
	  }
	  return false;
	}
	// 1. The assert module provides functions that throw
	// AssertionError's when particular conditions are not met. The
	// assert module must conform to the following interface.
	
	var assert = module.exports = ok;
	
	// 2. The AssertionError is defined in assert.
	// new assert.AssertionError({ message: message,
	//                             actual: actual,
	//                             expected: expected })
	
	var regex = /\s*function\s+([^\(\s]*)\s*/;
	// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js
	function getName(func) {
	  if (!util.isFunction(func)) {
	    return;
	  }
	  if (functionsHaveNames) {
	    return func.name;
	  }
	  var str = func.toString();
	  var match = str.match(regex);
	  return match && match[1];
	}
	assert.AssertionError = function AssertionError(options) {
	  this.name = 'AssertionError';
	  this.actual = options.actual;
	  this.expected = options.expected;
	  this.operator = options.operator;
	  if (options.message) {
	    this.message = options.message;
	    this.generatedMessage = false;
	  } else {
	    this.message = getMessage(this);
	    this.generatedMessage = true;
	  }
	  var stackStartFunction = options.stackStartFunction || fail;
	  if (Error.captureStackTrace) {
	    Error.captureStackTrace(this, stackStartFunction);
	  } else {
	    // non v8 browsers so we can have a stacktrace
	    var err = new Error();
	    if (err.stack) {
	      var out = err.stack;
	
	      // try to strip useless frames
	      var fn_name = getName(stackStartFunction);
	      var idx = out.indexOf('\n' + fn_name);
	      if (idx >= 0) {
	        // once we have located the function frame
	        // we need to strip out everything before it (and its line)
	        var next_line = out.indexOf('\n', idx + 1);
	        out = out.substring(next_line + 1);
	      }
	
	      this.stack = out;
	    }
	  }
	};
	
	// assert.AssertionError instanceof Error
	util.inherits(assert.AssertionError, Error);
	
	function truncate(s, n) {
	  if (typeof s === 'string') {
	    return s.length < n ? s : s.slice(0, n);
	  } else {
	    return s;
	  }
	}
	function inspect(something) {
	  if (functionsHaveNames || !util.isFunction(something)) {
	    return util.inspect(something);
	  }
	  var rawname = getName(something);
	  var name = rawname ? ': ' + rawname : '';
	  return '[Function' +  name + ']';
	}
	function getMessage(self) {
	  return truncate(inspect(self.actual), 128) + ' ' +
	         self.operator + ' ' +
	         truncate(inspect(self.expected), 128);
	}
	
	// At present only the three keys mentioned above are used and
	// understood by the spec. Implementations or sub modules can pass
	// other keys to the AssertionError's constructor - they will be
	// ignored.
	
	// 3. All of the following functions must throw an AssertionError
	// when a corresponding condition is not met, with a message that
	// may be undefined if not provided.  All assertion methods provide
	// both the actual and expected values to the assertion error for
	// display purposes.
	
	function fail(actual, expected, message, operator, stackStartFunction) {
	  throw new assert.AssertionError({
	    message: message,
	    actual: actual,
	    expected: expected,
	    operator: operator,
	    stackStartFunction: stackStartFunction
	  });
	}
	
	// EXTENSION! allows for well behaved errors defined elsewhere.
	assert.fail = fail;
	
	// 4. Pure assertion tests whether a value is truthy, as determined
	// by !!guard.
	// assert.ok(guard, message_opt);
	// This statement is equivalent to assert.equal(true, !!guard,
	// message_opt);. To test strictly for the value true, use
	// assert.strictEqual(true, guard, message_opt);.
	
	function ok(value, message) {
	  if (!value) fail(value, true, message, '==', assert.ok);
	}
	assert.ok = ok;
	
	// 5. The equality assertion tests shallow, coercive equality with
	// ==.
	// assert.equal(actual, expected, message_opt);
	
	assert.equal = function equal(actual, expected, message) {
	  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
	};
	
	// 6. The non-equality assertion tests for whether two objects are not equal
	// with != assert.notEqual(actual, expected, message_opt);
	
	assert.notEqual = function notEqual(actual, expected, message) {
	  if (actual == expected) {
	    fail(actual, expected, message, '!=', assert.notEqual);
	  }
	};
	
	// 7. The equivalence assertion tests a deep equality relation.
	// assert.deepEqual(actual, expected, message_opt);
	
	assert.deepEqual = function deepEqual(actual, expected, message) {
	  if (!_deepEqual(actual, expected, false)) {
	    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
	  }
	};
	
	assert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {
	  if (!_deepEqual(actual, expected, true)) {
	    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);
	  }
	};
	
	function _deepEqual(actual, expected, strict, memos) {
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;
	  } else if (isBuffer(actual) && isBuffer(expected)) {
	    return compare(actual, expected) === 0;
	
	  // 7.2. If the expected value is a Date object, the actual value is
	  // equivalent if it is also a Date object that refers to the same time.
	  } else if (util.isDate(actual) && util.isDate(expected)) {
	    return actual.getTime() === expected.getTime();
	
	  // 7.3 If the expected value is a RegExp object, the actual value is
	  // equivalent if it is also a RegExp object with the same source and
	  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
	  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
	    return actual.source === expected.source &&
	           actual.global === expected.global &&
	           actual.multiline === expected.multiline &&
	           actual.lastIndex === expected.lastIndex &&
	           actual.ignoreCase === expected.ignoreCase;
	
	  // 7.4. Other pairs that do not both pass typeof value == 'object',
	  // equivalence is determined by ==.
	  } else if ((actual === null || typeof actual !== 'object') &&
	             (expected === null || typeof expected !== 'object')) {
	    return strict ? actual === expected : actual == expected;
	
	  // If both values are instances of typed arrays, wrap their underlying
	  // ArrayBuffers in a Buffer each to increase performance
	  // This optimization requires the arrays to have the same type as checked by
	  // Object.prototype.toString (aka pToString). Never perform binary
	  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their
	  // bit patterns are not identical.
	  } else if (isView(actual) && isView(expected) &&
	             pToString(actual) === pToString(expected) &&
	             !(actual instanceof Float32Array ||
	               actual instanceof Float64Array)) {
	    return compare(new Uint8Array(actual.buffer),
	                   new Uint8Array(expected.buffer)) === 0;
	
	  // 7.5 For all other Object pairs, including Array objects, equivalence is
	  // determined by having the same number of owned properties (as verified
	  // with Object.prototype.hasOwnProperty.call), the same set of keys
	  // (although not necessarily the same order), equivalent values for every
	  // corresponding key, and an identical 'prototype' property. Note: this
	  // accounts for both named and indexed properties on Arrays.
	  } else if (isBuffer(actual) !== isBuffer(expected)) {
	    return false;
	  } else {
	    memos = memos || {actual: [], expected: []};
	
	    var actualIndex = memos.actual.indexOf(actual);
	    if (actualIndex !== -1) {
	      if (actualIndex === memos.expected.indexOf(expected)) {
	        return true;
	      }
	    }
	
	    memos.actual.push(actual);
	    memos.expected.push(expected);
	
	    return objEquiv(actual, expected, strict, memos);
	  }
	}
	
	function isArguments(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	}
	
	function objEquiv(a, b, strict, actualVisitedObjects) {
	  if (a === null || a === undefined || b === null || b === undefined)
	    return false;
	  // if one is a primitive, the other must be same
	  if (util.isPrimitive(a) || util.isPrimitive(b))
	    return a === b;
	  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))
	    return false;
	  var aIsArgs = isArguments(a);
	  var bIsArgs = isArguments(b);
	  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
	    return false;
	  if (aIsArgs) {
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return _deepEqual(a, b, strict);
	  }
	  var ka = objectKeys(a);
	  var kb = objectKeys(b);
	  var key, i;
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length !== kb.length)
	    return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] !== kb[i])
	      return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))
	      return false;
	  }
	  return true;
	}
	
	// 8. The non-equivalence assertion tests for any deep inequality.
	// assert.notDeepEqual(actual, expected, message_opt);
	
	assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
	  if (_deepEqual(actual, expected, false)) {
	    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
	  }
	};
	
	assert.notDeepStrictEqual = notDeepStrictEqual;
	function notDeepStrictEqual(actual, expected, message) {
	  if (_deepEqual(actual, expected, true)) {
	    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);
	  }
	}
	
	
	// 9. The strict equality assertion tests strict equality, as determined by ===.
	// assert.strictEqual(actual, expected, message_opt);
	
	assert.strictEqual = function strictEqual(actual, expected, message) {
	  if (actual !== expected) {
	    fail(actual, expected, message, '===', assert.strictEqual);
	  }
	};
	
	// 10. The strict non-equality assertion tests for strict inequality, as
	// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);
	
	assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
	  if (actual === expected) {
	    fail(actual, expected, message, '!==', assert.notStrictEqual);
	  }
	};
	
	function expectedException(actual, expected) {
	  if (!actual || !expected) {
	    return false;
	  }
	
	  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
	    return expected.test(actual);
	  }
	
	  try {
	    if (actual instanceof expected) {
	      return true;
	    }
	  } catch (e) {
	    // Ignore.  The instanceof check doesn't work for arrow functions.
	  }
	
	  if (Error.isPrototypeOf(expected)) {
	    return false;
	  }
	
	  return expected.call({}, actual) === true;
	}
	
	function _tryBlock(block) {
	  var error;
	  try {
	    block();
	  } catch (e) {
	    error = e;
	  }
	  return error;
	}
	
	function _throws(shouldThrow, block, expected, message) {
	  var actual;
	
	  if (typeof block !== 'function') {
	    throw new TypeError('"block" argument must be a function');
	  }
	
	  if (typeof expected === 'string') {
	    message = expected;
	    expected = null;
	  }
	
	  actual = _tryBlock(block);
	
	  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
	            (message ? ' ' + message : '.');
	
	  if (shouldThrow && !actual) {
	    fail(actual, expected, 'Missing expected exception' + message);
	  }
	
	  var userProvidedMessage = typeof message === 'string';
	  var isUnwantedException = !shouldThrow && util.isError(actual);
	  var isUnexpectedException = !shouldThrow && actual && !expected;
	
	  if ((isUnwantedException &&
	      userProvidedMessage &&
	      expectedException(actual, expected)) ||
	      isUnexpectedException) {
	    fail(actual, expected, 'Got unwanted exception' + message);
	  }
	
	  if ((shouldThrow && actual && expected &&
	      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
	    throw actual;
	  }
	}
	
	// 11. Expected to throw an error:
	// assert.throws(block, Error_opt, message_opt);
	
	assert.throws = function(block, /*optional*/error, /*optional*/message) {
	  _throws(true, block, error, message);
	};
	
	// EXTENSION! This is annoying to write outside this module.
	assert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {
	  _throws(false, block, error, message);
	};
	
	assert.ifError = function(err) { if (err) throw err; };
	
	var objectKeys = Object.keys || function (obj) {
	  var keys = [];
	  for (var key in obj) {
	    if (hasOwn.call(obj, key)) keys.push(key);
	  }
	  return keys;
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 48 */,
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

	var defineProperty = __webpack_require__(298);
	
	/**
	 * The base implementation of `assignValue` and `assignMergeValue` without
	 * value checks.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function baseAssignValue(object, key, value) {
	  if (key == '__proto__' && defineProperty) {
	    defineProperty(object, key, {
	      'configurable': true,
	      'enumerable': true,
	      'value': value,
	      'writable': true
	    });
	  } else {
	    object[key] = value;
	  }
	}
	
	module.exports = baseAssignValue;


/***/ }),
/* 50 */
/***/ (function(module, exports) {

	/**
	 * This method returns `undefined`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.3.0
	 * @category Util
	 * @example
	 *
	 * _.times(2, _.noop);
	 * // => [undefined, undefined]
	 */
	function noop() {
	  // No operation performed.
	}
	
	module.exports = noop;


/***/ }),
/* 51 */
/***/ (function(module, exports) {

	/**
	 * This method returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */
	function stubArray() {
	  return [];
	}
	
	module.exports = stubArray;


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(260),
	    hasPath = __webpack_require__(158);
	
	/**
	 * Checks if `path` is a direct property of `object`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = { 'a': { 'b': 2 } };
	 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.has(object, 'a');
	 * // => true
	 *
	 * _.has(object, 'a.b');
	 * // => true
	 *
	 * _.has(object, ['a', 'b']);
	 * // => true
	 *
	 * _.has(other, 'a');
	 * // => false
	 */
	function has(object, path) {
	  return object != null && hasPath(object, path, baseHas);
	}
	
	module.exports = has;


/***/ }),
/* 53 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ }),
/* 54 */
/***/ (function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(59);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);
	
	module.exports = nativeKeys;


/***/ }),
/* 56 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.reduce` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @param {boolean} [initAccum] Specify using the first element of `array` as
	 *  the initial value.
	 * @returns {*} Returns the accumulated value.
	 */
	function arrayReduce(array, iteratee, accumulator, initAccum) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  if (initAccum && length) {
	    accumulator = array[++index];
	  }
	  while (++index < length) {
	    accumulator = iteratee(accumulator, array[index], index, array);
	  }
	  return accumulator;
	}
	
	module.exports = arrayReduce;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = iconFactory;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function iconFactory(network, iconConfig) {
	  var Icon = function Icon(props) {
	    var className = props.className,
	        iconBgStyle = props.iconBgStyle,
	        logoFillColor = props.logoFillColor,
	        round = props.round,
	        size = props.size;
	
	
	    var baseStyle = {
	      width: size,
	      height: size
	    };
	
	    var classes = 'social-icon social-icon--' + network + ' ' + className;
	
	    return _react2.default.createElement(
	      'div',
	      { style: baseStyle },
	      _react2.default.createElement(
	        'svg',
	        {
	          viewBox: '0 0 64 64',
	          width: size,
	          height: size,
	          className: classes },
	        _react2.default.createElement(
	          'g',
	          null,
	          !round ? _react2.default.createElement('rect', {
	            width: '64',
	            height: '64',
	            fill: iconConfig.color,
	            style: iconBgStyle }) : _react2.default.createElement('circle', {
	            cx: '32',
	            cy: '32',
	            r: '31',
	            fill: iconConfig.color,
	            style: iconBgStyle })
	        ),
	        _react2.default.createElement(
	          'g',
	          null,
	          _react2.default.createElement('path', { d: iconConfig.icon, fill: logoFillColor })
	        )
	      )
	    );
	  };
	
	  Icon.propTypes = {
	    className: _propTypes2.default.string,
	    iconBgStyle: _propTypes2.default.object,
	    logoFillColor: _propTypes2.default.string,
	    round: _propTypes2.default.bool,
	    size: _propTypes2.default.number
	  };
	
	  Icon.defaultProps = {
	    className: '',
	    iconBgStyle: {},
	    logoFillColor: 'white',
	    size: 64
	  };
	
	  return Icon;
	}

/***/ }),
/* 58 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}
	
	module.exports = objectToString;


/***/ }),
/* 59 */
/***/ (function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ }),
/* 60 */
/***/ (function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ }),
/* 61 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// This file hosts our error definitions
	// We use custom error "types" so that we can act on them when we need it
	// e.g.: if error instanceof errors.UnparsableJSON then..
	
	var inherits = __webpack_require__(89);
	
	function AlgoliaSearchError(message, extraProperties) {
	  var forEach = __webpack_require__(40);
	
	  var error = this;
	
	  // try to get a stacktrace
	  if (typeof Error.captureStackTrace === 'function') {
	    Error.captureStackTrace(this, this.constructor);
	  } else {
	    error.stack = (new Error()).stack || 'Cannot get a stacktrace, browser is too old';
	  }
	
	  this.name = 'AlgoliaSearchError';
	  this.message = message || 'Unknown error';
	
	  if (extraProperties) {
	    forEach(extraProperties, function addToErrorObject(value, key) {
	      error[key] = value;
	    });
	  }
	}
	
	inherits(AlgoliaSearchError, Error);
	
	function createCustomError(name, message) {
	  function AlgoliaSearchCustomError() {
	    var args = Array.prototype.slice.call(arguments, 0);
	
	    // custom message not set, use default
	    if (typeof args[0] !== 'string') {
	      args.unshift(message);
	    }
	
	    AlgoliaSearchError.apply(this, args);
	    this.name = 'AlgoliaSearch' + name + 'Error';
	  }
	
	  inherits(AlgoliaSearchCustomError, AlgoliaSearchError);
	
	  return AlgoliaSearchCustomError;
	}
	
	// late exports to let various fn defs and inherits take place
	module.exports = {
	  AlgoliaSearchError: AlgoliaSearchError,
	  UnparsableJSON: createCustomError(
	    'UnparsableJSON',
	    'Could not parse the incoming response as JSON, see err.more for details'
	  ),
	  RequestTimeout: createCustomError(
	    'RequestTimeout',
	    'Request timed out before getting a response'
	  ),
	  Network: createCustomError(
	    'Network',
	    'Network issue, see err.more for details'
	  ),
	  JSONPScriptFail: createCustomError(
	    'JSONPScriptFail',
	    '<script> was loaded but did not call our provided callback'
	  ),
	  JSONPScriptError: createCustomError(
	    'JSONPScriptError',
	    '<script> unable to load due to an `error` event on it'
	  ),
	  Unknown: createCustomError(
	    'Unknown',
	    'Unknown error occured'
	  )
	};


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

	var foreach = __webpack_require__(40);
	
	module.exports = function map(arr, fn) {
	  var newArr = [];
	  foreach(arr, function(item, itemIndex) {
	    newArr.push(fn(item, itemIndex, arr));
	  });
	  return newArr;
	};


/***/ }),
/* 64 */,
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/* eslint-env browser */
	
	/**
	 * This is the web browser implementation of `debug()`.
	 */
	
	exports.log = log;
	exports.formatArgs = formatArgs;
	exports.save = save;
	exports.load = load;
	exports.useColors = useColors;
	exports.storage = localstorage();
	
	/**
	 * Colors.
	 */
	
	exports.colors = [
		'#0000CC',
		'#0000FF',
		'#0033CC',
		'#0033FF',
		'#0066CC',
		'#0066FF',
		'#0099CC',
		'#0099FF',
		'#00CC00',
		'#00CC33',
		'#00CC66',
		'#00CC99',
		'#00CCCC',
		'#00CCFF',
		'#3300CC',
		'#3300FF',
		'#3333CC',
		'#3333FF',
		'#3366CC',
		'#3366FF',
		'#3399CC',
		'#3399FF',
		'#33CC00',
		'#33CC33',
		'#33CC66',
		'#33CC99',
		'#33CCCC',
		'#33CCFF',
		'#6600CC',
		'#6600FF',
		'#6633CC',
		'#6633FF',
		'#66CC00',
		'#66CC33',
		'#9900CC',
		'#9900FF',
		'#9933CC',
		'#9933FF',
		'#99CC00',
		'#99CC33',
		'#CC0000',
		'#CC0033',
		'#CC0066',
		'#CC0099',
		'#CC00CC',
		'#CC00FF',
		'#CC3300',
		'#CC3333',
		'#CC3366',
		'#CC3399',
		'#CC33CC',
		'#CC33FF',
		'#CC6600',
		'#CC6633',
		'#CC9900',
		'#CC9933',
		'#CCCC00',
		'#CCCC33',
		'#FF0000',
		'#FF0033',
		'#FF0066',
		'#FF0099',
		'#FF00CC',
		'#FF00FF',
		'#FF3300',
		'#FF3333',
		'#FF3366',
		'#FF3399',
		'#FF33CC',
		'#FF33FF',
		'#FF6600',
		'#FF6633',
		'#FF9900',
		'#FF9933',
		'#FFCC00',
		'#FFCC33'
	];
	
	/**
	 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
	 * and the Firebug extension (any Firefox version) are known
	 * to support "%c" CSS customizations.
	 *
	 * TODO: add a `localStorage` variable to explicitly enable/disable colors
	 */
	
	// eslint-disable-next-line complexity
	function useColors() {
		// NB: In an Electron preload script, document will be defined but not fully
		// initialized. Since we know we're in Chrome, we'll just detect this case
		// explicitly
		if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
			return true;
		}
	
		// Internet Explorer and Edge do not support colors.
		if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
			return false;
		}
	
		// Is webkit? http://stackoverflow.com/a/16459606/376773
		// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
		return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
			// Is firebug? http://stackoverflow.com/a/398120/376773
			(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
			// Is firefox >= v31?
			// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
			(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
			// Double check webkit in userAgent just in case we are in a worker
			(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
	}
	
	/**
	 * Colorize log arguments if enabled.
	 *
	 * @api public
	 */
	
	function formatArgs(args) {
		args[0] = (this.useColors ? '%c' : '') +
			this.namespace +
			(this.useColors ? ' %c' : ' ') +
			args[0] +
			(this.useColors ? '%c ' : ' ') +
			'+' + module.exports.humanize(this.diff);
	
		if (!this.useColors) {
			return;
		}
	
		const c = 'color: ' + this.color;
		args.splice(1, 0, c, 'color: inherit');
	
		// The final "%c" is somewhat tricky, because there could be other
		// arguments passed either before or after the %c, so we need to
		// figure out the correct index to insert the CSS into
		let index = 0;
		let lastC = 0;
		args[0].replace(/%[a-zA-Z%]/g, match => {
			if (match === '%%') {
				return;
			}
			index++;
			if (match === '%c') {
				// We only are interested in the *last* %c
				// (the user may have provided their own)
				lastC = index;
			}
		});
	
		args.splice(lastC, 0, c);
	}
	
	/**
	 * Invokes `console.log()` when available.
	 * No-op when `console.log` is not a "function".
	 *
	 * @api public
	 */
	function log(...args) {
		// This hackery is required for IE8/9, where
		// the `console.log` function doesn't have 'apply'
		return typeof console === 'object' &&
			console.log &&
			console.log(...args);
	}
	
	/**
	 * Save `namespaces`.
	 *
	 * @param {String} namespaces
	 * @api private
	 */
	function save(namespaces) {
		try {
			if (namespaces) {
				exports.storage.setItem('debug', namespaces);
			} else {
				exports.storage.removeItem('debug');
			}
		} catch (error) {
			// Swallow
			// XXX (@Qix-) should we be logging these?
		}
	}
	
	/**
	 * Load `namespaces`.
	 *
	 * @return {String} returns the previously persisted debug modes
	 * @api private
	 */
	function load() {
		let r;
		try {
			r = exports.storage.getItem('debug');
		} catch (error) {
			// Swallow
			// XXX (@Qix-) should we be logging these?
		}
	
		// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
		if (!r && typeof process !== 'undefined' && 'env' in process) {
			r = ({"NODE_ENV":"production","PUBLIC_DIR":"/home/luubinhan/Documents/projects/blog/public","GATSBY_ALGOLIA_APP_ID":"68PEVEWLR7","GATSBY_ALGOLIA_SEARCH_KEY":"c3e0db897950a5f687e9d690d5fc9342"}).DEBUG;
		}
	
		return r;
	}
	
	/**
	 * Localstorage attempts to return the localstorage.
	 *
	 * This is necessary because safari throws
	 * when a user disables cookies/localstorage
	 * and you attempt to access it.
	 *
	 * @return {LocalStorage}
	 * @api private
	 */
	
	function localstorage() {
		try {
			// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
			// The Browser also has localStorage in the global context.
			return localStorage;
		} catch (error) {
			// Swallow
			// XXX (@Qix-) should we be logging these?
		}
	}
	
	module.exports = __webpack_require__(248)(exports);
	
	const {formatters} = module.exports;
	
	/**
	 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
	 */
	
	formatters.j = function (v) {
		try {
			return JSON.stringify(v);
		} catch (error) {
			return '[UnexpectedJSONParseError]: ' + error.message;
		}
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(90)))

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(71);
	
	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}
	
	module.exports = assocIndexOf;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(148),
	    keys = __webpack_require__(55);
	
	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}
	
	module.exports = baseForOwn;


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(146),
	    isObject = __webpack_require__(32);
	
	/**
	 * Creates a function that produces an instance of `Ctor` regardless of
	 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	 *
	 * @private
	 * @param {Function} Ctor The constructor to wrap.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCtor(Ctor) {
	  return function() {
	    // Use a `switch` statement to work with class constructors. See
	    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	    // for more details.
	    var args = arguments;
	    switch (args.length) {
	      case 0: return new Ctor;
	      case 1: return new Ctor(args[0]);
	      case 2: return new Ctor(args[0], args[1]);
	      case 3: return new Ctor(args[0], args[1], args[2]);
	      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	    }
	    var thisBinding = baseCreate(Ctor.prototype),
	        result = Ctor.apply(thisBinding, args);
	
	    // Mimic the constructor's `return` behavior.
	    // See https://es5.github.io/#x13.2.2 for more details.
	    return isObject(result) ? result : thisBinding;
	  };
	}
	
	module.exports = createCtor;


/***/ }),
/* 69 */
/***/ (function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(54);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = toKey;


/***/ }),
/* 71 */
/***/ (function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	module.exports = eq;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(41),
	    toInteger = __webpack_require__(44);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Gets the index at which the first occurrence of `value` is found in `array`
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons. If `fromIndex` is negative, it's used as the
	 * offset from the end of `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 * @example
	 *
	 * _.indexOf([1, 2, 1, 2], 2);
	 * // => 1
	 *
	 * // Search from the `fromIndex`.
	 * _.indexOf([1, 2, 1, 2], 2, 2);
	 * // => 3
	 */
	function indexOf(array, value, fromIndex) {
	  var length = array == null ? 0 : array.length;
	  if (!length) {
	    return -1;
	  }
	  var index = fromIndex == null ? 0 : toInteger(fromIndex);
	  if (index < 0) {
	    index = nativeMax(length + index, 0);
	  }
	  return baseIndexOf(array, value, index);
	}
	
	module.exports = indexOf;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(58),
	    getPrototype = __webpack_require__(157),
	    isObjectLike = __webpack_require__(53);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}
	
	module.exports = isPlainObject;


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(58),
	    isArray = __webpack_require__(21),
	    isObjectLike = __webpack_require__(53);
	
	/** `Object#toString` result references. */
	var stringTag = '[object String]';
	
	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
	}
	
	module.exports = isString;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	var basePick = __webpack_require__(270),
	    flatRest = __webpack_require__(155);
	
	/**
	 * Creates an object composed of the picked `object` properties.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [paths] The property paths to pick.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pick(object, ['a', 'c']);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var pick = flatRest(function(object, paths) {
	  return object == null ? {} : basePick(object, paths);
	});
	
	module.exports = pick;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(22));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _omit2 = _interopRequireDefault(__webpack_require__(37));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _utils = __webpack_require__(14);
	
	var Link =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Link, _Component);
	
	  function Link() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Link);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Link)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "onClick", function (e) {
	      if ((0, _utils.isSpecialClick)(e)) {
	        return;
	      }
	
	      _this.props.onClick();
	
	      e.preventDefault();
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(Link, [{
	    key: "render",
	    value: function render() {
	      return _react.default.createElement("a", (0, _extends2.default)({}, (0, _omit2.default)(this.props, 'onClick'), {
	        onClick: this.onClick
	      }));
	    }
	  }]);
	  return Link;
	}(_react.Component);
	
	exports.default = Link;
	(0, _defineProperty2.default)(Link, "propTypes", {
	  onClick: _propTypes.default.func.isRequired
	});

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _SearchBox = _interopRequireDefault(__webpack_require__(180));
	
	var itemsPropType = _propTypes.default.arrayOf(_propTypes.default.shape({
	  value: _propTypes.default.any,
	  label: _propTypes.default.node.isRequired,
	  items: function items() {
	    return itemsPropType.apply(void 0, arguments);
	  }
	}));
	
	var List =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(List, _Component);
	
	  function List() {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, List);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(List).call(this));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "onShowMoreClick", function () {
	      _this.setState(function (state) {
	        return {
	          extended: !state.extended
	        };
	      });
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getLimit", function () {
	      var _this$props = _this.props,
	          limit = _this$props.limit,
	          showMoreLimit = _this$props.showMoreLimit;
	      var extended = _this.state.extended;
	      return extended ? showMoreLimit : limit;
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "resetQuery", function () {
	      _this.setState({
	        query: ''
	      });
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "renderItem", function (item, resetQuery) {
	      var itemHasChildren = item.items && Boolean(item.items.length);
	      return _react.default.createElement("li", {
	        key: item.key || item.label,
	        className: _this.props.cx('item', item.isRefined && 'item--selected', item.noRefinement && 'item--noRefinement', itemHasChildren && 'item--parent')
	      }, _this.props.renderItem(item, resetQuery), itemHasChildren && _react.default.createElement("ul", {
	        className: _this.props.cx('list', 'list--child')
	      }, item.items.slice(0, _this.getLimit()).map(function (child) {
	        return _this.renderItem(child, item);
	      })));
	    });
	    _this.state = {
	      extended: false,
	      query: ''
	    };
	    return _this;
	  }
	
	  (0, _createClass2.default)(List, [{
	    key: "renderShowMore",
	    value: function renderShowMore() {
	      var _this$props2 = this.props,
	          showMore = _this$props2.showMore,
	          translate = _this$props2.translate,
	          cx = _this$props2.cx;
	      var extended = this.state.extended;
	      var disabled = this.props.limit >= this.props.items.length;
	
	      if (!showMore) {
	        return null;
	      }
	
	      return _react.default.createElement("button", {
	        disabled: disabled,
	        className: cx('showMore', disabled && 'showMore--disabled'),
	        onClick: this.onShowMoreClick
	      }, translate('showMore', extended));
	    }
	  }, {
	    key: "renderSearchBox",
	    value: function renderSearchBox() {
	      var _this2 = this;
	
	      var _this$props3 = this.props,
	          cx = _this$props3.cx,
	          searchForItems = _this$props3.searchForItems,
	          isFromSearch = _this$props3.isFromSearch,
	          translate = _this$props3.translate,
	          items = _this$props3.items,
	          selectItem = _this$props3.selectItem;
	      var noResults = items.length === 0 && this.state.query !== '' ? _react.default.createElement("div", {
	        className: cx('noResults')
	      }, translate('noResults')) : null;
	      return _react.default.createElement("div", {
	        className: cx('searchBox')
	      }, _react.default.createElement(_SearchBox.default, {
	        currentRefinement: this.state.query,
	        refine: function refine(value) {
	          _this2.setState({
	            query: value
	          });
	
	          searchForItems(value);
	        },
	        focusShortcuts: [],
	        translate: translate,
	        onSubmit: function onSubmit(e) {
	          e.preventDefault();
	          e.stopPropagation();
	
	          if (isFromSearch) {
	            selectItem(items[0], _this2.resetQuery);
	          }
	        }
	      }), noResults);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this3 = this;
	
	      var _this$props4 = this.props,
	          cx = _this$props4.cx,
	          items = _this$props4.items,
	          className = _this$props4.className,
	          searchable = _this$props4.searchable,
	          canRefine = _this$props4.canRefine;
	      var searchBox = searchable ? this.renderSearchBox() : null;
	      var rootClassName = (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className);
	
	      if (items.length === 0) {
	        return _react.default.createElement("div", {
	          className: rootClassName
	        }, searchBox);
	      } // Always limit the number of items we show on screen, since the actual
	      // number of retrieved items might vary with the `maxValuesPerFacet` config
	      // option.
	
	
	      return _react.default.createElement("div", {
	        className: rootClassName
	      }, searchBox, _react.default.createElement("ul", {
	        className: cx('list', !canRefine && 'list--noRefinement')
	      }, items.slice(0, this.getLimit()).map(function (item) {
	        return _this3.renderItem(item, _this3.resetQuery);
	      })), this.renderShowMore());
	    }
	  }]);
	  return List;
	}(_react.Component);
	
	(0, _defineProperty2.default)(List, "propTypes", {
	  cx: _propTypes.default.func.isRequired,
	  // Only required with showMore.
	  translate: _propTypes.default.func,
	  items: itemsPropType,
	  renderItem: _propTypes.default.func.isRequired,
	  selectItem: _propTypes.default.func,
	  className: _propTypes.default.string,
	  showMore: _propTypes.default.bool,
	  limit: _propTypes.default.number,
	  showMoreLimit: _propTypes.default.number,
	  show: _propTypes.default.func,
	  searchForItems: _propTypes.default.func,
	  searchable: _propTypes.default.bool,
	  isFromSearch: _propTypes.default.bool,
	  canRefine: _propTypes.default.bool
	});
	(0, _defineProperty2.default)(List, "defaultProps", {
	  className: '',
	  isFromSearch: false
	});
	var _default = List;
	exports.default = _default;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	Object.defineProperty(exports, "createConnector", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.createConnector;
	  }
	});
	Object.defineProperty(exports, "HIGHLIGHT_TAGS", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.HIGHLIGHT_TAGS;
	  }
	});
	Object.defineProperty(exports, "translatable", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.translatable;
	  }
	});
	Object.defineProperty(exports, "Configure", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.Configure;
	  }
	});
	Object.defineProperty(exports, "connectAutoComplete", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectAutoComplete;
	  }
	});
	Object.defineProperty(exports, "connectBreadcrumb", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectBreadcrumb;
	  }
	});
	Object.defineProperty(exports, "connectConfigure", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectConfigure;
	  }
	});
	Object.defineProperty(exports, "connectCurrentRefinements", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectCurrentRefinements;
	  }
	});
	Object.defineProperty(exports, "connectGeoSearch", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectGeoSearch;
	  }
	});
	Object.defineProperty(exports, "connectHierarchicalMenu", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectHierarchicalMenu;
	  }
	});
	Object.defineProperty(exports, "connectHighlight", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectHighlight;
	  }
	});
	Object.defineProperty(exports, "connectHits", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectHits;
	  }
	});
	Object.defineProperty(exports, "connectHitsPerPage", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectHitsPerPage;
	  }
	});
	Object.defineProperty(exports, "connectInfiniteHits", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectInfiniteHits;
	  }
	});
	Object.defineProperty(exports, "connectMenu", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectMenu;
	  }
	});
	Object.defineProperty(exports, "connectNumericMenu", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectNumericMenu;
	  }
	});
	Object.defineProperty(exports, "connectPagination", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectPagination;
	  }
	});
	Object.defineProperty(exports, "connectPoweredBy", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectPoweredBy;
	  }
	});
	Object.defineProperty(exports, "connectRange", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectRange;
	  }
	});
	Object.defineProperty(exports, "connectRefinementList", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectRefinementList;
	  }
	});
	Object.defineProperty(exports, "connectScrollTo", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectScrollTo;
	  }
	});
	Object.defineProperty(exports, "connectSearchBox", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectSearchBox;
	  }
	});
	Object.defineProperty(exports, "connectSortBy", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectSortBy;
	  }
	});
	Object.defineProperty(exports, "connectStateResults", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectStateResults;
	  }
	});
	Object.defineProperty(exports, "connectStats", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectStats;
	  }
	});
	Object.defineProperty(exports, "connectToggleRefinement", {
	  enumerable: true,
	  get: function get() {
	    return _reactInstantsearchCore.connectToggleRefinement;
	  }
	});
	Object.defineProperty(exports, "InstantSearch", {
	  enumerable: true,
	  get: function get() {
	    return _InstantSearch.default;
	  }
	});
	Object.defineProperty(exports, "Index", {
	  enumerable: true,
	  get: function get() {
	    return _Index.default;
	  }
	});
	Object.defineProperty(exports, "Breadcrumb", {
	  enumerable: true,
	  get: function get() {
	    return _Breadcrumb.default;
	  }
	});
	Object.defineProperty(exports, "ClearRefinements", {
	  enumerable: true,
	  get: function get() {
	    return _ClearRefinements.default;
	  }
	});
	Object.defineProperty(exports, "CurrentRefinements", {
	  enumerable: true,
	  get: function get() {
	    return _CurrentRefinements.default;
	  }
	});
	Object.defineProperty(exports, "HierarchicalMenu", {
	  enumerable: true,
	  get: function get() {
	    return _HierarchicalMenu.default;
	  }
	});
	Object.defineProperty(exports, "Highlight", {
	  enumerable: true,
	  get: function get() {
	    return _Highlight.default;
	  }
	});
	Object.defineProperty(exports, "Hits", {
	  enumerable: true,
	  get: function get() {
	    return _Hits.default;
	  }
	});
	Object.defineProperty(exports, "HitsPerPage", {
	  enumerable: true,
	  get: function get() {
	    return _HitsPerPage.default;
	  }
	});
	Object.defineProperty(exports, "InfiniteHits", {
	  enumerable: true,
	  get: function get() {
	    return _InfiniteHits.default;
	  }
	});
	Object.defineProperty(exports, "Menu", {
	  enumerable: true,
	  get: function get() {
	    return _Menu.default;
	  }
	});
	Object.defineProperty(exports, "MenuSelect", {
	  enumerable: true,
	  get: function get() {
	    return _MenuSelect.default;
	  }
	});
	Object.defineProperty(exports, "NumericMenu", {
	  enumerable: true,
	  get: function get() {
	    return _NumericMenu.default;
	  }
	});
	Object.defineProperty(exports, "Pagination", {
	  enumerable: true,
	  get: function get() {
	    return _Pagination.default;
	  }
	});
	Object.defineProperty(exports, "Panel", {
	  enumerable: true,
	  get: function get() {
	    return _Panel.default;
	  }
	});
	Object.defineProperty(exports, "PoweredBy", {
	  enumerable: true,
	  get: function get() {
	    return _PoweredBy.default;
	  }
	});
	Object.defineProperty(exports, "RangeInput", {
	  enumerable: true,
	  get: function get() {
	    return _RangeInput.default;
	  }
	});
	Object.defineProperty(exports, "RangeSlider", {
	  enumerable: true,
	  get: function get() {
	    return _RangeSlider.default;
	  }
	});
	Object.defineProperty(exports, "RatingMenu", {
	  enumerable: true,
	  get: function get() {
	    return _RatingMenu.default;
	  }
	});
	Object.defineProperty(exports, "RefinementList", {
	  enumerable: true,
	  get: function get() {
	    return _RefinementList.default;
	  }
	});
	Object.defineProperty(exports, "ScrollTo", {
	  enumerable: true,
	  get: function get() {
	    return _ScrollTo.default;
	  }
	});
	Object.defineProperty(exports, "SearchBox", {
	  enumerable: true,
	  get: function get() {
	    return _SearchBox.default;
	  }
	});
	Object.defineProperty(exports, "Snippet", {
	  enumerable: true,
	  get: function get() {
	    return _Snippet.default;
	  }
	});
	Object.defineProperty(exports, "SortBy", {
	  enumerable: true,
	  get: function get() {
	    return _SortBy.default;
	  }
	});
	Object.defineProperty(exports, "Stats", {
	  enumerable: true,
	  get: function get() {
	    return _Stats.default;
	  }
	});
	Object.defineProperty(exports, "ToggleRefinement", {
	  enumerable: true,
	  get: function get() {
	    return _ToggleRefinement.default;
	  }
	});
	Object.defineProperty(exports, "createClassNames", {
	  enumerable: true,
	  get: function get() {
	    return _utils.createClassNames;
	  }
	});
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _InstantSearch = _interopRequireDefault(__webpack_require__(412));
	
	var _Index = _interopRequireDefault(__webpack_require__(410));
	
	var _Breadcrumb = _interopRequireDefault(__webpack_require__(404));
	
	var _ClearRefinements = _interopRequireDefault(__webpack_require__(405));
	
	var _CurrentRefinements = _interopRequireDefault(__webpack_require__(406));
	
	var _HierarchicalMenu = _interopRequireDefault(__webpack_require__(407));
	
	var _Highlight = _interopRequireDefault(__webpack_require__(114));
	
	var _Hits = _interopRequireDefault(__webpack_require__(408));
	
	var _HitsPerPage = _interopRequireDefault(__webpack_require__(409));
	
	var _InfiniteHits = _interopRequireDefault(__webpack_require__(411));
	
	var _Menu = _interopRequireDefault(__webpack_require__(413));
	
	var _MenuSelect = _interopRequireDefault(__webpack_require__(414));
	
	var _NumericMenu = _interopRequireDefault(__webpack_require__(415));
	
	var _Pagination = _interopRequireDefault(__webpack_require__(416));
	
	var _Panel = _interopRequireDefault(__webpack_require__(417));
	
	var _PoweredBy = _interopRequireDefault(__webpack_require__(418));
	
	var _RangeInput = _interopRequireDefault(__webpack_require__(419));
	
	var _RangeSlider = _interopRequireDefault(__webpack_require__(420));
	
	var _RatingMenu = _interopRequireDefault(__webpack_require__(421));
	
	var _RefinementList = _interopRequireDefault(__webpack_require__(422));
	
	var _ScrollTo = _interopRequireDefault(__webpack_require__(423));
	
	var _SearchBox = _interopRequireDefault(__webpack_require__(424));
	
	var _Snippet = _interopRequireDefault(__webpack_require__(425));
	
	var _SortBy = _interopRequireDefault(__webpack_require__(426));
	
	var _Stats = _interopRequireDefault(__webpack_require__(427));
	
	var _ToggleRefinement = _interopRequireDefault(__webpack_require__(428));
	
	var _utils = __webpack_require__(14);

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.StyleSheetManager = exports.ServerStyleSheet = exports.withTheme = exports.ThemeProvider = exports.injectGlobal = exports.keyframes = exports.css = undefined;
	
	var _flatten = __webpack_require__(186);
	
	var _flatten2 = _interopRequireDefault(_flatten);
	
	var _stringifyRules = __webpack_require__(447);
	
	var _stringifyRules2 = _interopRequireDefault(_stringifyRules);
	
	var _generateAlphabeticName = __webpack_require__(442);
	
	var _generateAlphabeticName2 = _interopRequireDefault(_generateAlphabeticName);
	
	var _css = __webpack_require__(430);
	
	var _css2 = _interopRequireDefault(_css);
	
	var _ServerStyleSheet = __webpack_require__(80);
	
	var _ServerStyleSheet2 = _interopRequireDefault(_ServerStyleSheet);
	
	var _StyleSheetManager = __webpack_require__(183);
	
	var _StyleSheetManager2 = _interopRequireDefault(_StyleSheetManager);
	
	var _StyledComponent2 = __webpack_require__(437);
	
	var _StyledComponent3 = _interopRequireDefault(_StyledComponent2);
	
	var _ComponentStyle2 = __webpack_require__(436);
	
	var _ComponentStyle3 = _interopRequireDefault(_ComponentStyle2);
	
	var _styled2 = __webpack_require__(433);
	
	var _styled3 = _interopRequireDefault(_styled2);
	
	var _keyframes2 = __webpack_require__(432);
	
	var _keyframes3 = _interopRequireDefault(_keyframes2);
	
	var _injectGlobal2 = __webpack_require__(431);
	
	var _injectGlobal3 = _interopRequireDefault(_injectGlobal2);
	
	var _constructWithOptions2 = __webpack_require__(429);
	
	var _constructWithOptions3 = _interopRequireDefault(_constructWithOptions2);
	
	var _ThemeProvider = __webpack_require__(81);
	
	var _ThemeProvider2 = _interopRequireDefault(_ThemeProvider);
	
	var _withTheme = __webpack_require__(434);
	
	var _withTheme2 = _interopRequireDefault(_withTheme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* Instantiate singletons */
	
	
	/* Import components */
	
	
	/* Import singleton constructors */
	
	
	/* Import singletons */
	var ComponentStyle = (0, _ComponentStyle3.default)(_generateAlphabeticName2.default, _flatten2.default, _stringifyRules2.default);
	
	/* Import Higher Order Components */
	
	var constructWithOptions = (0, _constructWithOptions3.default)(_css2.default);
	var StyledComponent = (0, _StyledComponent3.default)(ComponentStyle, constructWithOptions);
	
	/* Instantiate exported singletons */
	var keyframes = (0, _keyframes3.default)(_generateAlphabeticName2.default, _stringifyRules2.default, _css2.default);
	var injectGlobal = (0, _injectGlobal3.default)(_stringifyRules2.default, _css2.default);
	var styled = (0, _styled3.default)(StyledComponent, constructWithOptions);
	
	/* Export everything */
	exports.default = styled;
	exports.css = _css2.default;
	exports.keyframes = keyframes;
	exports.injectGlobal = injectGlobal;
	exports.ThemeProvider = _ThemeProvider2.default;
	exports.withTheme = _withTheme2.default;
	exports.ServerStyleSheet = _ServerStyleSheet2.default;
	exports.StyleSheetManager = _StyleSheetManager2.default;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _StyleSheet = __webpack_require__(27);
	
	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
	
	var _StyleSheetManager = __webpack_require__(183);
	
	var _StyleSheetManager2 = _interopRequireDefault(_StyleSheetManager);
	
	var _nonce = __webpack_require__(187);
	
	var _nonce2 = _interopRequireDefault(_nonce);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	/* eslint-disable no-underscore-dangle */
	
	
	var babelPluginFlowReactPropTypes_proptype_Tag = __webpack_require__(27).babelPluginFlowReactPropTypes_proptype_Tag || __webpack_require__(3).any;
	
	var ServerTag = function () {
	  function ServerTag(isLocal) {
	    _classCallCheck(this, ServerTag);
	
	    this.isLocal = isLocal;
	    this.components = {};
	    this.size = 0;
	    this.names = [];
	  }
	
	  ServerTag.prototype.isFull = function isFull() {
	    return false;
	  };
	
	  ServerTag.prototype.addComponent = function addComponent(componentId) {
	    if (false) {
	      throw new Error('Trying to add Component \'' + componentId + '\' twice!');
	    }
	    this.components[componentId] = { componentId: componentId, css: '' };
	    this.size += 1;
	  };
	
	  ServerTag.prototype.concatenateCSS = function concatenateCSS() {
	    var _this = this;
	
	    return Object.keys(this.components).reduce(function (styles, k) {
	      return styles + _this.components[k].css;
	    }, '');
	  };
	
	  ServerTag.prototype.inject = function inject(componentId, css, name) {
	    var comp = this.components[componentId];
	
	    if (false) {
	      throw new Error('Must add a new component before you can inject css into it');
	    }
	    if (comp.css === '') comp.css = '/* sc-component-id: ' + componentId + ' */\n';
	
	    comp.css += css.replace(/\n*$/, '\n');
	
	    if (name) this.names.push(name);
	  };
	
	  ServerTag.prototype.toHTML = function toHTML() {
	    var attrs = ['type="text/css"', _StyleSheet.SC_ATTR + '="' + this.names.join(' ') + '"', _StyleSheet.LOCAL_ATTR + '="' + (this.isLocal ? 'true' : 'false') + '"'];
	
	    var nonce = (0, _nonce2.default)();
	
	    if (nonce) {
	      attrs.push('nonce="' + nonce + '"');
	    }
	
	    return '<style ' + attrs.join(' ') + '>' + this.concatenateCSS() + '</style>';
	  };
	
	  ServerTag.prototype.toReactElement = function toReactElement(key) {
	    var _attrs;
	
	    var attrs = (_attrs = {}, _attrs[_StyleSheet.SC_ATTR] = this.names.join(' '), _attrs[_StyleSheet.LOCAL_ATTR] = this.isLocal.toString(), _attrs);
	
	    var nonce = (0, _nonce2.default)();
	
	    if (nonce) {
	      attrs.nonce = nonce;
	    }
	
	    return _react2.default.createElement('style', _extends({
	      key: key,
	      type: 'text/css'
	    }, attrs, {
	      dangerouslySetInnerHTML: { __html: this.concatenateCSS() }
	    }));
	  };
	
	  ServerTag.prototype.clone = function clone() {
	    var _this2 = this;
	
	    var copy = new ServerTag(this.isLocal);
	    copy.names = [].concat(this.names);
	    copy.size = this.size;
	    copy.components = Object.keys(this.components).reduce(function (acc, key) {
	      acc[key] = _extends({}, _this2.components[key]); // eslint-disable-line no-param-reassign
	      return acc;
	    }, {});
	
	    return copy;
	  };
	
	  return ServerTag;
	}();
	
	var ServerStyleSheet = function () {
	  function ServerStyleSheet() {
	    _classCallCheck(this, ServerStyleSheet);
	
	    this.instance = _StyleSheet2.default.clone(_StyleSheet2.default.instance);
	  }
	
	  ServerStyleSheet.prototype.collectStyles = function collectStyles(children) {
	    if (this.closed) {
	      throw new Error("Can't collect styles once you've called getStyleTags!");
	    }
	    return _react2.default.createElement(
	      _StyleSheetManager2.default,
	      { sheet: this.instance },
	      children
	    );
	  };
	
	  ServerStyleSheet.prototype.getStyleTags = function getStyleTags() {
	    if (!this.closed) {
	      _StyleSheet.clones.splice(_StyleSheet.clones.indexOf(this.instance), 1);
	      this.closed = true;
	    }
	
	    return this.instance.toHTML();
	  };
	
	  ServerStyleSheet.prototype.getStyleElement = function getStyleElement() {
	    if (!this.closed) {
	      _StyleSheet.clones.splice(_StyleSheet.clones.indexOf(this.instance), 1);
	      this.closed = true;
	    }
	
	    return this.instance.toReactElements();
	  };
	
	  ServerStyleSheet.create = function create() {
	    return new _StyleSheet2.default(function (isLocal) {
	      return new ServerTag(isLocal);
	    });
	  };
	
	  return ServerStyleSheet;
	}();
	
	exports.default = ServerStyleSheet;
	module.exports = exports['default'];

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.CONTEXT_CHANNEL_SHAPE = exports.CHANNEL_NEXT = exports.CHANNEL = undefined;
	
	var _ThemeProvider$childC, _ThemeProvider$contex;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _isPlainObject = __webpack_require__(138);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _createBroadcast = __webpack_require__(184);
	
	var _createBroadcast2 = _interopRequireDefault(_createBroadcast);
	
	var _once = __webpack_require__(446);
	
	var _once2 = _interopRequireDefault(_once);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	/* globals React$Element */
	
	
	var babelPluginFlowReactPropTypes_proptype_Broadcast = __webpack_require__(184).babelPluginFlowReactPropTypes_proptype_Broadcast || __webpack_require__(3).any;
	
	// NOTE: DO NOT CHANGE, changing this is a semver major change!
	var CHANNEL = exports.CHANNEL = '__styled-components__';
	var CHANNEL_NEXT = exports.CHANNEL_NEXT = CHANNEL + 'next__';
	
	var CONTEXT_CHANNEL_SHAPE = exports.CONTEXT_CHANNEL_SHAPE = _propTypes2.default.shape({
	  getTheme: _propTypes2.default.func,
	  subscribe: _propTypes2.default.func,
	  unsubscribe: _propTypes2.default.func
	});
	
	if (true) Object.defineProperty(exports, 'babelPluginFlowReactPropTypes_proptype_Theme', {
	  value: __webpack_require__(3).shape({})
	});
	
	
	var warnChannelDeprecated = void 0;
	if (false) {
	  warnChannelDeprecated = (0, _once2.default)(function () {
	    // eslint-disable-next-line no-console
	    console.error('Warning: Usage of `context.' + CHANNEL + '` as a function is deprecated. It will be replaced with the object on `.context.' + CHANNEL_NEXT + '` in a future version.');
	  });
	}
	
	var isFunction = function isFunction(test) {
	  return typeof test === 'function';
	};
	
	/**
	 * Provide a theme to an entire react component tree via context and event listeners (have to do
	 * both context and event emitter as pure components block context updates)
	 */
	
	var ThemeProvider = function (_Component) {
	  _inherits(ThemeProvider, _Component);
	
	  function ThemeProvider() {
	    _classCallCheck(this, ThemeProvider);
	
	    var _this = _possibleConstructorReturn(this, _Component.call(this));
	
	    _this.unsubscribeToOuterId = -1;
	
	    _this.getTheme = _this.getTheme.bind(_this);
	    return _this;
	  }
	
	  ThemeProvider.prototype.componentWillMount = function componentWillMount() {
	    var _this2 = this;
	
	    // If there is a ThemeProvider wrapper anywhere around this theme provider, merge this theme
	    // with the outer theme
	    var outerContext = this.context[CHANNEL_NEXT];
	    if (outerContext !== undefined) {
	      this.unsubscribeToOuterId = outerContext.subscribe(function (theme) {
	        _this2.outerTheme = theme;
	      });
	    }
	    this.broadcast = (0, _createBroadcast2.default)(this.getTheme());
	  };
	
	  ThemeProvider.prototype.getChildContext = function getChildContext() {
	    var _this3 = this,
	        _extends2;
	
	    return _extends({}, this.context, (_extends2 = {}, _extends2[CHANNEL_NEXT] = {
	      getTheme: this.getTheme,
	      subscribe: this.broadcast.subscribe,
	      unsubscribe: this.broadcast.unsubscribe
	    }, _extends2[CHANNEL] = function (subscriber) {
	      if (false) {
	        warnChannelDeprecated();
	      }
	
	      // Patch the old `subscribe` provide via `CHANNEL` for older clients.
	      var unsubscribeId = _this3.broadcast.subscribe(subscriber);
	      return function () {
	        return _this3.broadcast.unsubscribe(unsubscribeId);
	      };
	    }, _extends2));
	  };
	
	  ThemeProvider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (this.props.theme !== nextProps.theme) {
	      this.broadcast.publish(this.getTheme(nextProps.theme));
	    }
	  };
	
	  ThemeProvider.prototype.componentWillUnmount = function componentWillUnmount() {
	    if (this.unsubscribeToOuterId !== -1) {
	      this.context[CHANNEL_NEXT].unsubscribe(this.unsubscribeToOuterId);
	    }
	  };
	
	  // Get the theme from the props, supporting both (outerTheme) => {} as well as object notation
	
	
	  ThemeProvider.prototype.getTheme = function getTheme(passedTheme) {
	    var theme = passedTheme || this.props.theme;
	    if (isFunction(theme)) {
	      var mergedTheme = theme(this.outerTheme);
	      if (false) {
	        throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');
	      }
	      return mergedTheme;
	    }
	    if (!(0, _isPlainObject2.default)(theme)) {
	      throw new Error('[ThemeProvider] Please make your theme prop a plain object');
	    }
	    return _extends({}, this.outerTheme, theme);
	  };
	
	  ThemeProvider.prototype.render = function render() {
	    if (!this.props.children) {
	      return null;
	    }
	    return _react2.default.Children.only(this.props.children);
	  };
	
	  return ThemeProvider;
	}(_react.Component);
	
	ThemeProvider.propTypes = {
	  children: __webpack_require__(3).any,
	  theme: __webpack_require__(3).oneOfType([__webpack_require__(3).shape({}), __webpack_require__(3).func]).isRequired
	};
	
	
	ThemeProvider.childContextTypes = (_ThemeProvider$childC = {}, _ThemeProvider$childC[CHANNEL] = _propTypes2.default.func, _ThemeProvider$childC[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _ThemeProvider$childC);
	ThemeProvider.contextTypes = (_ThemeProvider$contex = {}, _ThemeProvider$contex[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _ThemeProvider$contex);
	
	exports.default = ThemeProvider;

/***/ }),
/* 82 */,
/* 83 */,
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(45),
	    isLength = __webpack_require__(122);
	
	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}
	
	module.exports = isArrayLike;


/***/ }),
/* 85 */
/***/ (function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ }),
/* 86 */
/***/ (function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ }),
/* 87 */,
/* 88 */,
/* 89 */
/***/ (function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ }),
/* 90 */,
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = undefined;
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp2;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Initialize = __webpack_require__(202);
	
	var _Initialize2 = _interopRequireDefault(_Initialize);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Parser = (_temp2 = _class = function (_Component) {
	  (0, _inherits3.default)(Parser, _Component);
	
	  function Parser() {
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Parser);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {}, _this.handleReady = function (api) {
	      _this.setState({
	        api: api
	      }, _this.handleParse);
	    }, _this.handleContainer = function (container) {
	      _this.setState({
	        container: container
	      }, _this.handleParse);
	    }, _this.handleParse = function () {
	      var _this$state = _this.state,
	          api = _this$state.api,
	          container = _this$state.container;
	
	      if (!api || !container) {
	        return;
	      }
	
	      api.parse(container);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Parser.prototype.render = function render() {
	    var _props = this.props,
	        className = _props.className,
	        children = _props.children;
	
	
	    return _react2.default.createElement(
	      'div',
	      { className: className, ref: this.handleContainer },
	      _react2.default.createElement(
	        _Initialize2.default,
	        { onReady: this.handleReady },
	        children({
	          handleParse: this.handleParse
	        })
	      )
	    );
	  };
	
	  return Parser;
	}(_react.Component), _class.defaultProps = {
	  className: undefined
	}, _temp2);
	exports.default = Parser;
	//# sourceMappingURL=Parser.js.map

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var keys = __webpack_require__(55);
	var intersection = __webpack_require__(328);
	var forOwn = __webpack_require__(325);
	var forEach = __webpack_require__(43);
	var filter = __webpack_require__(104);
	var map = __webpack_require__(31);
	var reduce = __webpack_require__(56);
	var omit = __webpack_require__(37);
	var indexOf = __webpack_require__(72);
	var isNaN = __webpack_require__(330);
	var isEmpty = __webpack_require__(24);
	var isEqual = __webpack_require__(168);
	var isUndefined = __webpack_require__(170);
	var isString = __webpack_require__(74);
	var isFunction = __webpack_require__(45);
	var find = __webpack_require__(26);
	var trim = __webpack_require__(173);
	
	var defaults = __webpack_require__(103);
	var merge = __webpack_require__(109);
	
	var valToNumber = __webpack_require__(220);
	
	var filterState = __webpack_require__(216);
	
	var RefinementList = __webpack_require__(215);
	
	/**
	 * like _.find but using _.isEqual to be able to use it
	 * to find arrays.
	 * @private
	 * @param {any[]} array array to search into
	 * @param {any} searchedValue the value we're looking for
	 * @return {any} the searched value or undefined
	 */
	function findArray(array, searchedValue) {
	  return find(array, function(currentValue) {
	    return isEqual(currentValue, searchedValue);
	  });
	}
	
	/**
	 * The facet list is the structure used to store the list of values used to
	 * filter a single attribute.
	 * @typedef {string[]} SearchParameters.FacetList
	 */
	
	/**
	 * Structure to store numeric filters with the operator as the key. The supported operators
	 * are `=`, `>`, `<`, `>=`, `<=` and `!=`.
	 * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList
	 */
	
	/**
	 * SearchParameters is the data structure that contains all the information
	 * usable for making a search to Algolia API. It doesn't do the search itself,
	 * nor does it contains logic about the parameters.
	 * It is an immutable object, therefore it has been created in a way that each
	 * changes does not change the object itself but returns a copy with the
	 * modification.
	 * This object should probably not be instantiated outside of the helper. It will
	 * be provided when needed. This object is documented for reference as you'll
	 * get it from events generated by the {@link AlgoliaSearchHelper}.
	 * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}
	 * @constructor
	 * @classdesc contains all the parameters of a search
	 * @param {object|SearchParameters} newParameters existing parameters or partial object
	 * for the properties of a new SearchParameters
	 * @see SearchParameters.make
	 * @example <caption>SearchParameters of the first query in
	 *   <a href="http://demos.algolia.com/instant-search-demo/">the instant search demo</a></caption>
	{
	   "query": "",
	   "disjunctiveFacets": [
	      "customerReviewCount",
	      "category",
	      "salePrice_range",
	      "manufacturer"
	  ],
	   "maxValuesPerFacet": 30,
	   "page": 0,
	   "hitsPerPage": 10,
	   "facets": [
	      "type",
	      "shipping"
	  ]
	}
	 */
	function SearchParameters(newParameters) {
	  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};
	
	  /**
	   * Targeted index. This parameter is mandatory.
	   * @member {string}
	   */
	  this.index = params.index || '';
	
	  // Query
	  /**
	   * Query string of the instant search. The empty string is a valid query.
	   * @member {string}
	   * @see https://www.algolia.com/doc/rest#param-query
	   */
	  this.query = params.query || '';
	
	  // Facets
	  /**
	   * This attribute contains the list of all the conjunctive facets
	   * used. This list will be added to requested facets in the
	   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.
	   * @member {string[]}
	   */
	  this.facets = params.facets || [];
	  /**
	   * This attribute contains the list of all the disjunctive facets
	   * used. This list will be added to requested facets in the
	   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.
	   * @member {string[]}
	   */
	  this.disjunctiveFacets = params.disjunctiveFacets || [];
	  /**
	   * This attribute contains the list of all the hierarchical facets
	   * used. This list will be added to requested facets in the
	   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.
	   * Hierarchical facets are a sub type of disjunctive facets that
	   * let you filter faceted attributes hierarchically.
	   * @member {string[]|object[]}
	   */
	  this.hierarchicalFacets = params.hierarchicalFacets || [];
	
	  // Refinements
	  /**
	   * This attribute contains all the filters that need to be
	   * applied on the conjunctive facets. Each facet must be properly
	   * defined in the `facets` attribute.
	   *
	   * The key is the name of the facet, and the `FacetList` contains all
	   * filters selected for the associated facet name.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `facetFilters` attribute.
	   * @member {Object.<string, SearchParameters.FacetList>}
	   */
	  this.facetsRefinements = params.facetsRefinements || {};
	  /**
	   * This attribute contains all the filters that need to be
	   * excluded from the conjunctive facets. Each facet must be properly
	   * defined in the `facets` attribute.
	   *
	   * The key is the name of the facet, and the `FacetList` contains all
	   * filters excluded for the associated facet name.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `facetFilters` attribute.
	   * @member {Object.<string, SearchParameters.FacetList>}
	   */
	  this.facetsExcludes = params.facetsExcludes || {};
	  /**
	   * This attribute contains all the filters that need to be
	   * applied on the disjunctive facets. Each facet must be properly
	   * defined in the `disjunctiveFacets` attribute.
	   *
	   * The key is the name of the facet, and the `FacetList` contains all
	   * filters selected for the associated facet name.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `facetFilters` attribute.
	   * @member {Object.<string, SearchParameters.FacetList>}
	   */
	  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};
	  /**
	   * This attribute contains all the filters that need to be
	   * applied on the numeric attributes.
	   *
	   * The key is the name of the attribute, and the value is the
	   * filters to apply to this attribute.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `numericFilters` attribute.
	   * @member {Object.<string, SearchParameters.OperatorList>}
	   */
	  this.numericRefinements = params.numericRefinements || {};
	  /**
	   * This attribute contains all the tags used to refine the query.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `tagFilters` attribute.
	   * @member {string[]}
	   */
	  this.tagRefinements = params.tagRefinements || [];
	  /**
	   * This attribute contains all the filters that need to be
	   * applied on the hierarchical facets. Each facet must be properly
	   * defined in the `hierarchicalFacets` attribute.
	   *
	   * The key is the name of the facet, and the `FacetList` contains all
	   * filters selected for the associated facet name. The FacetList values
	   * are structured as a string that contain the values for each level
	   * separated by the configured separator.
	   *
	   * When querying algolia, the values stored in this attribute will
	   * be translated into the `facetFilters` attribute.
	   * @member {Object.<string, SearchParameters.FacetList>}
	   */
	  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};
	
	  /**
	   * Contains the numeric filters in the raw format of the Algolia API. Setting
	   * this parameter is not compatible with the usage of numeric filters methods.
	   * @see https://www.algolia.com/doc/javascript#numericFilters
	   * @member {string}
	   */
	  this.numericFilters = params.numericFilters;
	
	  /**
	   * Contains the tag filters in the raw format of the Algolia API. Setting this
	   * parameter is not compatible with the of the add/remove/toggle methods of the
	   * tag api.
	   * @see https://www.algolia.com/doc/rest#param-tagFilters
	   * @member {string}
	   */
	  this.tagFilters = params.tagFilters;
	
	  /**
	   * Contains the optional tag filters in the raw format of the Algolia API.
	   * @see https://www.algolia.com/doc/rest#param-tagFilters
	   * @member {string}
	   */
	  this.optionalTagFilters = params.optionalTagFilters;
	
	  /**
	   * Contains the optional facet filters in the raw format of the Algolia API.
	   * @see https://www.algolia.com/doc/rest#param-tagFilters
	   * @member {string}
	   */
	  this.optionalFacetFilters = params.optionalFacetFilters;
	
	
	  // Misc. parameters
	  /**
	   * Number of hits to be returned by the search API
	   * @member {number}
	   * @see https://www.algolia.com/doc/rest#param-hitsPerPage
	   */
	  this.hitsPerPage = params.hitsPerPage;
	  /**
	   * Number of values for each faceted attribute
	   * @member {number}
	   * @see https://www.algolia.com/doc/rest#param-maxValuesPerFacet
	   */
	  this.maxValuesPerFacet = params.maxValuesPerFacet;
	  /**
	   * The current page number
	   * @member {number}
	   * @see https://www.algolia.com/doc/rest#param-page
	   */
	  this.page = params.page || 0;
	  /**
	   * How the query should be treated by the search engine.
	   * Possible values: prefixAll, prefixLast, prefixNone
	   * @see https://www.algolia.com/doc/rest#param-queryType
	   * @member {string}
	   */
	  this.queryType = params.queryType;
	  /**
	   * How the typo tolerance behave in the search engine.
	   * Possible values: true, false, min, strict
	   * @see https://www.algolia.com/doc/rest#param-typoTolerance
	   * @member {string}
	   */
	  this.typoTolerance = params.typoTolerance;
	
	  /**
	   * Number of characters to wait before doing one character replacement.
	   * @see https://www.algolia.com/doc/rest#param-minWordSizefor1Typo
	   * @member {number}
	   */
	  this.minWordSizefor1Typo = params.minWordSizefor1Typo;
	  /**
	   * Number of characters to wait before doing a second character replacement.
	   * @see https://www.algolia.com/doc/rest#param-minWordSizefor2Typos
	   * @member {number}
	   */
	  this.minWordSizefor2Typos = params.minWordSizefor2Typos;
	  /**
	   * Configure the precision of the proximity ranking criterion
	   * @see https://www.algolia.com/doc/rest#param-minProximity
	   */
	  this.minProximity = params.minProximity;
	  /**
	   * Should the engine allow typos on numerics.
	   * @see https://www.algolia.com/doc/rest#param-allowTyposOnNumericTokens
	   * @member {boolean}
	   */
	  this.allowTyposOnNumericTokens = params.allowTyposOnNumericTokens;
	  /**
	   * Should the plurals be ignored
	   * @see https://www.algolia.com/doc/rest#param-ignorePlurals
	   * @member {boolean}
	   */
	  this.ignorePlurals = params.ignorePlurals;
	  /**
	   * Restrict which attribute is searched.
	   * @see https://www.algolia.com/doc/rest#param-restrictSearchableAttributes
	   * @member {string}
	   */
	  this.restrictSearchableAttributes = params.restrictSearchableAttributes;
	  /**
	   * Enable the advanced syntax.
	   * @see https://www.algolia.com/doc/rest#param-advancedSyntax
	   * @member {boolean}
	   */
	  this.advancedSyntax = params.advancedSyntax;
	  /**
	   * Enable the analytics
	   * @see https://www.algolia.com/doc/rest#param-analytics
	   * @member {boolean}
	   */
	  this.analytics = params.analytics;
	  /**
	   * Tag of the query in the analytics.
	   * @see https://www.algolia.com/doc/rest#param-analyticsTags
	   * @member {string}
	   */
	  this.analyticsTags = params.analyticsTags;
	  /**
	   * Enable the synonyms
	   * @see https://www.algolia.com/doc/rest#param-synonyms
	   * @member {boolean}
	   */
	  this.synonyms = params.synonyms;
	  /**
	   * Should the engine replace the synonyms in the highlighted results.
	   * @see https://www.algolia.com/doc/rest#param-replaceSynonymsInHighlight
	   * @member {boolean}
	   */
	  this.replaceSynonymsInHighlight = params.replaceSynonymsInHighlight;
	  /**
	   * Add some optional words to those defined in the dashboard
	   * @see https://www.algolia.com/doc/rest#param-optionalWords
	   * @member {string}
	   */
	  this.optionalWords = params.optionalWords;
	  /**
	   * Possible values are "lastWords" "firstWords" "allOptional" "none" (default)
	   * @see https://www.algolia.com/doc/rest#param-removeWordsIfNoResults
	   * @member {string}
	   */
	  this.removeWordsIfNoResults = params.removeWordsIfNoResults;
	  /**
	   * List of attributes to retrieve
	   * @see https://www.algolia.com/doc/rest#param-attributesToRetrieve
	   * @member {string}
	   */
	  this.attributesToRetrieve = params.attributesToRetrieve;
	  /**
	   * List of attributes to highlight
	   * @see https://www.algolia.com/doc/rest#param-attributesToHighlight
	   * @member {string}
	   */
	  this.attributesToHighlight = params.attributesToHighlight;
	  /**
	   * Code to be embedded on the left part of the highlighted results
	   * @see https://www.algolia.com/doc/rest#param-highlightPreTag
	   * @member {string}
	   */
	  this.highlightPreTag = params.highlightPreTag;
	  /**
	   * Code to be embedded on the right part of the highlighted results
	   * @see https://www.algolia.com/doc/rest#param-highlightPostTag
	   * @member {string}
	   */
	  this.highlightPostTag = params.highlightPostTag;
	  /**
	   * List of attributes to snippet
	   * @see https://www.algolia.com/doc/rest#param-attributesToSnippet
	   * @member {string}
	   */
	  this.attributesToSnippet = params.attributesToSnippet;
	  /**
	   * Enable the ranking informations in the response, set to 1 to activate
	   * @see https://www.algolia.com/doc/rest#param-getRankingInfo
	   * @member {number}
	   */
	  this.getRankingInfo = params.getRankingInfo;
	  /**
	   * Remove duplicates based on the index setting attributeForDistinct
	   * @see https://www.algolia.com/doc/rest#param-distinct
	   * @member {boolean|number}
	   */
	  this.distinct = params.distinct;
	  /**
	   * Center of the geo search.
	   * @see https://www.algolia.com/doc/rest#param-aroundLatLng
	   * @member {string}
	   */
	  this.aroundLatLng = params.aroundLatLng;
	  /**
	   * Center of the search, retrieve from the user IP.
	   * @see https://www.algolia.com/doc/rest#param-aroundLatLngViaIP
	   * @member {boolean}
	   */
	  this.aroundLatLngViaIP = params.aroundLatLngViaIP;
	  /**
	   * Radius of the geo search.
	   * @see https://www.algolia.com/doc/rest#param-aroundRadius
	   * @member {number}
	   */
	  this.aroundRadius = params.aroundRadius;
	  /**
	   * Precision of the geo search.
	   * @see https://www.algolia.com/doc/rest#param-aroundPrecision
	   * @member {number}
	   */
	  this.minimumAroundRadius = params.minimumAroundRadius;
	  /**
	   * Precision of the geo search.
	   * @see https://www.algolia.com/doc/rest#param-minimumAroundRadius
	   * @member {number}
	   */
	  this.aroundPrecision = params.aroundPrecision;
	  /**
	   * Geo search inside a box.
	   * @see https://www.algolia.com/doc/rest#param-insideBoundingBox
	   * @member {string}
	   */
	  this.insideBoundingBox = params.insideBoundingBox;
	  /**
	   * Geo search inside a polygon.
	   * @see https://www.algolia.com/doc/rest#param-insidePolygon
	   * @member {string}
	   */
	  this.insidePolygon = params.insidePolygon;
	  /**
	   * Allows to specify an ellipsis character for the snippet when we truncate the text
	   * (added before and after if truncated).
	   * The default value is an empty string and we recommend to set it to "…"
	   * @see https://www.algolia.com/doc/rest#param-insidePolygon
	   * @member {string}
	   */
	  this.snippetEllipsisText = params.snippetEllipsisText;
	  /**
	   * Allows to specify some attributes name on which exact won't be applied.
	   * Attributes are separated with a comma (for example "name,address" ), you can also use a
	   * JSON string array encoding (for example encodeURIComponent('["name","address"]') ).
	   * By default the list is empty.
	   * @see https://www.algolia.com/doc/rest#param-disableExactOnAttributes
	   * @member {string|string[]}
	   */
	  this.disableExactOnAttributes = params.disableExactOnAttributes;
	  /**
	   * Applies 'exact' on single word queries if the word contains at least 3 characters
	   * and is not a stop word.
	   * Can take two values: true or false.
	   * By default, its set to false.
	   * @see https://www.algolia.com/doc/rest#param-enableExactOnSingleWordQuery
	   * @member {boolean}
	   */
	  this.enableExactOnSingleWordQuery = params.enableExactOnSingleWordQuery;
	
	  // Undocumented parameters, still needed otherwise we fail
	  this.offset = params.offset;
	  this.length = params.length;
	
	  var self = this;
	  forOwn(params, function checkForUnknownParameter(paramValue, paramName) {
	    if (SearchParameters.PARAMETERS.indexOf(paramName) === -1) {
	      self[paramName] = paramValue;
	    }
	  });
	}
	
	/**
	 * List all the properties in SearchParameters and therefore all the known Algolia properties
	 * This doesn't contain any beta/hidden features.
	 * @private
	 */
	SearchParameters.PARAMETERS = keys(new SearchParameters());
	
	/**
	 * @private
	 * @param {object} partialState full or part of a state
	 * @return {object} a new object with the number keys as number
	 */
	SearchParameters._parseNumbers = function(partialState) {
	  // Do not reparse numbers in SearchParameters, they ought to be parsed already
	  if (partialState instanceof SearchParameters) return partialState;
	
	  var numbers = {};
	
	  var numberKeys = [
	    'aroundPrecision',
	    'aroundRadius',
	    'getRankingInfo',
	    'minWordSizefor2Typos',
	    'minWordSizefor1Typo',
	    'page',
	    'maxValuesPerFacet',
	    'distinct',
	    'minimumAroundRadius',
	    'hitsPerPage',
	    'minProximity'
	  ];
	
	  forEach(numberKeys, function(k) {
	    var value = partialState[k];
	    if (isString(value)) {
	      var parsedValue = parseFloat(value);
	      numbers[k] = isNaN(parsedValue) ? value : parsedValue;
	    }
	  });
	
	  // there's two formats of insideBoundingBox, we need to parse
	  // the one which is an array of float geo rectangles
	  if (Array.isArray(partialState.insideBoundingBox)) {
	    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function(geoRect) {
	      return geoRect.map(function(value) {
	        return parseFloat(value);
	      });
	    });
	  }
	
	  if (partialState.numericRefinements) {
	    var numericRefinements = {};
	    forEach(partialState.numericRefinements, function(operators, attribute) {
	      numericRefinements[attribute] = {};
	      forEach(operators, function(values, operator) {
	        var parsedValues = map(values, function(v) {
	          if (Array.isArray(v)) {
	            return map(v, function(vPrime) {
	              if (isString(vPrime)) {
	                return parseFloat(vPrime);
	              }
	              return vPrime;
	            });
	          } else if (isString(v)) {
	            return parseFloat(v);
	          }
	          return v;
	        });
	        numericRefinements[attribute][operator] = parsedValues;
	      });
	    });
	    numbers.numericRefinements = numericRefinements;
	  }
	
	  return merge({}, partialState, numbers);
	};
	
	/**
	 * Factory for SearchParameters
	 * @param {object|SearchParameters} newParameters existing parameters or partial
	 * object for the properties of a new SearchParameters
	 * @return {SearchParameters} frozen instance of SearchParameters
	 */
	SearchParameters.make = function makeSearchParameters(newParameters) {
	  var instance = new SearchParameters(newParameters);
	
	  forEach(newParameters.hierarchicalFacets, function(facet) {
	    if (facet.rootPath) {
	      var currentRefinement = instance.getHierarchicalRefinement(facet.name);
	
	      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {
	        instance = instance.clearRefinements(facet.name);
	      }
	
	      // get it again in case it has been cleared
	      currentRefinement = instance.getHierarchicalRefinement(facet.name);
	      if (currentRefinement.length === 0) {
	        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);
	      }
	    }
	  });
	
	  return instance;
	};
	
	/**
	 * Validates the new parameters based on the previous state
	 * @param {SearchParameters} currentState the current state
	 * @param {object|SearchParameters} parameters the new parameters to set
	 * @return {Error|null} Error if the modification is invalid, null otherwise
	 */
	SearchParameters.validate = function(currentState, parameters) {
	  var params = parameters || {};
	
	  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {
	    return new Error(
	      '[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' +
	      'an error, if it is really what you want, you should first clear the tags with clearTags method.');
	  }
	
	  if (currentState.tagRefinements.length > 0 && params.tagFilters) {
	    return new Error(
	      '[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' +
	      'an error, if it is not, you should first clear the tags with clearTags method.');
	  }
	
	  if (currentState.numericFilters && params.numericRefinements && !isEmpty(params.numericRefinements)) {
	    return new Error(
	      "[Numeric filters] Can't switch from the advanced to the managed API. It" +
	      ' is probably an error, if this is really what you want, you have to first' +
	      ' clear the numeric filters.');
	  }
	
	  if (!isEmpty(currentState.numericRefinements) && params.numericFilters) {
	    return new Error(
	      "[Numeric filters] Can't switch from the managed API to the advanced. It" +
	      ' is probably an error, if this is really what you want, you have to first' +
	      ' clear the numeric filters.');
	  }
	
	  return null;
	};
	
	SearchParameters.prototype = {
	  constructor: SearchParameters,
	
	  /**
	   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)
	   * @method
	   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function
	   * - If not given, means to clear all the filters.
	   * - If `string`, means to clear all refinements for the `attribute` named filter.
	   * - If `function`, means to clear all the refinements that return truthy values.
	   * @return {SearchParameters}
	   */
	  clearRefinements: function clearRefinements(attribute) {
	    var clear = RefinementList.clearRefinement;
	    var patch = {
	      numericRefinements: this._clearNumericRefinements(attribute),
	      facetsRefinements: clear(this.facetsRefinements, attribute, 'conjunctiveFacet'),
	      facetsExcludes: clear(this.facetsExcludes, attribute, 'exclude'),
	      disjunctiveFacetsRefinements: clear(this.disjunctiveFacetsRefinements, attribute, 'disjunctiveFacet'),
	      hierarchicalFacetsRefinements: clear(this.hierarchicalFacetsRefinements, attribute, 'hierarchicalFacet')
	    };
	    if (patch.numericRefinements === this.numericRefinements &&
	        patch.facetsRefinements === this.facetsRefinements &&
	        patch.facetsExcludes === this.facetsExcludes &&
	        patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements &&
	        patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements) {
	      return this;
	    }
	    return this.setQueryParameters(patch);
	  },
	  /**
	   * Remove all the refined tags from the SearchParameters
	   * @method
	   * @return {SearchParameters}
	   */
	  clearTags: function clearTags() {
	    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;
	
	    return this.setQueryParameters({
	      tagFilters: undefined,
	      tagRefinements: []
	    });
	  },
	  /**
	   * Set the index.
	   * @method
	   * @param {string} index the index name
	   * @return {SearchParameters}
	   */
	  setIndex: function setIndex(index) {
	    if (index === this.index) return this;
	
	    return this.setQueryParameters({
	      index: index
	    });
	  },
	  /**
	   * Query setter
	   * @method
	   * @param {string} newQuery value for the new query
	   * @return {SearchParameters}
	   */
	  setQuery: function setQuery(newQuery) {
	    if (newQuery === this.query) return this;
	
	    return this.setQueryParameters({
	      query: newQuery
	    });
	  },
	  /**
	   * Page setter
	   * @method
	   * @param {number} newPage new page number
	   * @return {SearchParameters}
	   */
	  setPage: function setPage(newPage) {
	    if (newPage === this.page) return this;
	
	    return this.setQueryParameters({
	      page: newPage
	    });
	  },
	  /**
	   * Facets setter
	   * The facets are the simple facets, used for conjunctive (and) faceting.
	   * @method
	   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting
	   * @return {SearchParameters}
	   */
	  setFacets: function setFacets(facets) {
	    return this.setQueryParameters({
	      facets: facets
	    });
	  },
	  /**
	   * Disjunctive facets setter
	   * Change the list of disjunctive (or) facets the helper chan handle.
	   * @method
	   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting
	   * @return {SearchParameters}
	   */
	  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {
	    return this.setQueryParameters({
	      disjunctiveFacets: facets
	    });
	  },
	  /**
	   * HitsPerPage setter
	   * Hits per page represents the number of hits retrieved for this query
	   * @method
	   * @param {number} n number of hits retrieved per page of results
	   * @return {SearchParameters}
	   */
	  setHitsPerPage: function setHitsPerPage(n) {
	    if (this.hitsPerPage === n) return this;
	
	    return this.setQueryParameters({
	      hitsPerPage: n
	    });
	  },
	  /**
	   * typoTolerance setter
	   * Set the value of typoTolerance
	   * @method
	   * @param {string} typoTolerance new value of typoTolerance ("true", "false", "min" or "strict")
	   * @return {SearchParameters}
	   */
	  setTypoTolerance: function setTypoTolerance(typoTolerance) {
	    if (this.typoTolerance === typoTolerance) return this;
	
	    return this.setQueryParameters({
	      typoTolerance: typoTolerance
	    });
	  },
	  /**
	   * Add a numeric filter for a given attribute
	   * When value is an array, they are combined with OR
	   * When value is a single value, it will combined with AND
	   * @method
	   * @param {string} attribute attribute to set the filter on
	   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)
	   * @param {number | number[]} value value of the filter
	   * @return {SearchParameters}
	   * @example
	   * // for price = 50 or 40
	   * searchparameter.addNumericRefinement('price', '=', [50, 40]);
	   * @example
	   * // for size = 38 and 40
	   * searchparameter.addNumericRefinement('size', '=', 38);
	   * searchparameter.addNumericRefinement('size', '=', 40);
	   */
	  addNumericRefinement: function(attribute, operator, v) {
	    var value = valToNumber(v);
	
	    if (this.isNumericRefined(attribute, operator, value)) return this;
	
	    var mod = merge({}, this.numericRefinements);
	
	    mod[attribute] = merge({}, mod[attribute]);
	
	    if (mod[attribute][operator]) {
	      // Array copy
	      mod[attribute][operator] = mod[attribute][operator].slice();
	      // Add the element. Concat can't be used here because value can be an array.
	      mod[attribute][operator].push(value);
	    } else {
	      mod[attribute][operator] = [value];
	    }
	
	    return this.setQueryParameters({
	      numericRefinements: mod
	    });
	  },
	  /**
	   * Get the list of conjunctive refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {string[]} list of refinements
	   */
	  getConjunctiveRefinements: function(facetName) {
	    if (!this.isConjunctiveFacet(facetName)) {
	      throw new Error(facetName + ' is not defined in the facets attribute of the helper configuration');
	    }
	    return this.facetsRefinements[facetName] || [];
	  },
	  /**
	   * Get the list of disjunctive refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {string[]} list of refinements
	   */
	  getDisjunctiveRefinements: function(facetName) {
	    if (!this.isDisjunctiveFacet(facetName)) {
	      throw new Error(
	        facetName + ' is not defined in the disjunctiveFacets attribute of the helper configuration'
	      );
	    }
	    return this.disjunctiveFacetsRefinements[facetName] || [];
	  },
	  /**
	   * Get the list of hierarchical refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {string[]} list of refinements
	   */
	  getHierarchicalRefinement: function(facetName) {
	    // we send an array but we currently do not support multiple
	    // hierarchicalRefinements for a hierarchicalFacet
	    return this.hierarchicalFacetsRefinements[facetName] || [];
	  },
	  /**
	   * Get the list of exclude refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {string[]} list of refinements
	   */
	  getExcludeRefinements: function(facetName) {
	    if (!this.isConjunctiveFacet(facetName)) {
	      throw new Error(facetName + ' is not defined in the facets attribute of the helper configuration');
	    }
	    return this.facetsExcludes[facetName] || [];
	  },
	
	  /**
	   * Remove all the numeric filter for a given (attribute, operator)
	   * @method
	   * @param {string} attribute attribute to set the filter on
	   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)
	   * @param {number} [number] the value to be removed
	   * @return {SearchParameters}
	   */
	  removeNumericRefinement: function(attribute, operator, paramValue) {
	    if (paramValue !== undefined) {
	      var paramValueAsNumber = valToNumber(paramValue);
	      if (!this.isNumericRefined(attribute, operator, paramValueAsNumber)) return this;
	      return this.setQueryParameters({
	        numericRefinements: this._clearNumericRefinements(function(value, key) {
	          return key === attribute && value.op === operator && isEqual(value.val, paramValueAsNumber);
	        })
	      });
	    } else if (operator !== undefined) {
	      if (!this.isNumericRefined(attribute, operator)) return this;
	      return this.setQueryParameters({
	        numericRefinements: this._clearNumericRefinements(function(value, key) {
	          return key === attribute && value.op === operator;
	        })
	      });
	    }
	
	    if (!this.isNumericRefined(attribute)) return this;
	    return this.setQueryParameters({
	      numericRefinements: this._clearNumericRefinements(function(value, key) {
	        return key === attribute;
	      })
	    });
	  },
	  /**
	   * Get the list of numeric refinements for a single facet
	   * @param {string} facetName name of the attribute used for faceting
	   * @return {SearchParameters.OperatorList[]} list of refinements
	   */
	  getNumericRefinements: function(facetName) {
	    return this.numericRefinements[facetName] || {};
	  },
	  /**
	   * Return the current refinement for the (attribute, operator)
	   * @param {string} attribute attribute in the record
	   * @param {string} operator operator applied on the refined values
	   * @return {Array.<number|number[]>} refined values
	   */
	  getNumericRefinement: function(attribute, operator) {
	    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];
	  },
	  /**
	   * Clear numeric filters.
	   * @method
	   * @private
	   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function
	   * - If not given, means to clear all the filters.
	   * - If `string`, means to clear all refinements for the `attribute` named filter.
	   * - If `function`, means to clear all the refinements that return truthy values.
	   * @return {Object.<string, OperatorList>}
	   */
	  _clearNumericRefinements: function _clearNumericRefinements(attribute) {
	    if (isUndefined(attribute)) {
	      if (isEmpty(this.numericRefinements)) return this.numericRefinements;
	      return {};
	    } else if (isString(attribute)) {
	      if (isEmpty(this.numericRefinements[attribute])) return this.numericRefinements;
	      return omit(this.numericRefinements, attribute);
	    } else if (isFunction(attribute)) {
	      var hasChanged = false;
	      var newNumericRefinements = reduce(this.numericRefinements, function(memo, operators, key) {
	        var operatorList = {};
	
	        forEach(operators, function(values, operator) {
	          var outValues = [];
	          forEach(values, function(value) {
	            var predicateResult = attribute({val: value, op: operator}, key, 'numeric');
	            if (!predicateResult) outValues.push(value);
	          });
	          if (!isEmpty(outValues)) {
	            if (outValues.length !== values.length) hasChanged = true;
	            operatorList[operator] = outValues;
	          }
	          else hasChanged = true;
	        });
	
	        if (!isEmpty(operatorList)) memo[key] = operatorList;
	
	        return memo;
	      }, {});
	
	      if (hasChanged) return newNumericRefinements;
	      return this.numericRefinements;
	    }
	  },
	  /**
	   * Add a facet to the facets attribute of the helper configuration, if it
	   * isn't already present.
	   * @method
	   * @param {string} facet facet name to add
	   * @return {SearchParameters}
	   */
	  addFacet: function addFacet(facet) {
	    if (this.isConjunctiveFacet(facet)) {
	      return this;
	    }
	
	    return this.setQueryParameters({
	      facets: this.facets.concat([facet])
	    });
	  },
	  /**
	   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper
	   * configuration, if it isn't already present.
	   * @method
	   * @param {string} facet disjunctive facet name to add
	   * @return {SearchParameters}
	   */
	  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {
	    if (this.isDisjunctiveFacet(facet)) {
	      return this;
	    }
	
	    return this.setQueryParameters({
	      disjunctiveFacets: this.disjunctiveFacets.concat([facet])
	    });
	  },
	  /**
	   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper
	   * configuration.
	   * @method
	   * @param {object} hierarchicalFacet hierarchical facet to add
	   * @return {SearchParameters}
	   * @throws will throw an error if a hierarchical facet with the same name was already declared
	   */
	  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {
	    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {
	      throw new Error(
	        'Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');
	    }
	
	    return this.setQueryParameters({
	      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])
	    });
	  },
	  /**
	   * Add a refinement on a "normal" facet
	   * @method
	   * @param {string} facet attribute to apply the faceting on
	   * @param {string} value value of the attribute (will be converted to string)
	   * @return {SearchParameters}
	   */
	  addFacetRefinement: function addFacetRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;
	
	    return this.setQueryParameters({
	      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Exclude a value from a "normal" facet
	   * @method
	   * @param {string} facet attribute to apply the exclusion on
	   * @param {string} value value of the attribute (will be converted to string)
	   * @return {SearchParameters}
	   */
	  addExcludeRefinement: function addExcludeRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;
	
	    return this.setQueryParameters({
	      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)
	    });
	  },
	  /**
	   * Adds a refinement on a disjunctive facet.
	   * @method
	   * @param {string} facet attribute to apply the faceting on
	   * @param {string} value value of the attribute (will be converted to string)
	   * @return {SearchParameters}
	   */
	  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');
	    }
	
	    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;
	
	    return this.setQueryParameters({
	      disjunctiveFacetsRefinements: RefinementList.addRefinement(
	        this.disjunctiveFacetsRefinements, facet, value)
	    });
	  },
	  /**
	   * addTagRefinement adds a tag to the list used to filter the results
	   * @param {string} tag tag to be added
	   * @return {SearchParameters}
	   */
	  addTagRefinement: function addTagRefinement(tag) {
	    if (this.isTagRefined(tag)) return this;
	
	    var modification = {
	      tagRefinements: this.tagRefinements.concat(tag)
	    };
	
	    return this.setQueryParameters(modification);
	  },
	  /**
	   * Remove a facet from the facets attribute of the helper configuration, if it
	   * is present.
	   * @method
	   * @param {string} facet facet name to remove
	   * @return {SearchParameters}
	   */
	  removeFacet: function removeFacet(facet) {
	    if (!this.isConjunctiveFacet(facet)) {
	      return this;
	    }
	
	    return this.clearRefinements(facet).setQueryParameters({
	      facets: filter(this.facets, function(f) {
	        return f !== facet;
	      })
	    });
	  },
	  /**
	   * Remove a disjunctive facet from the disjunctiveFacets attribute of the
	   * helper configuration, if it is present.
	   * @method
	   * @param {string} facet disjunctive facet name to remove
	   * @return {SearchParameters}
	   */
	  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      return this;
	    }
	
	    return this.clearRefinements(facet).setQueryParameters({
	      disjunctiveFacets: filter(this.disjunctiveFacets, function(f) {
	        return f !== facet;
	      })
	    });
	  },
	  /**
	   * Remove a hierarchical facet from the hierarchicalFacets attribute of the
	   * helper configuration, if it is present.
	   * @method
	   * @param {string} facet hierarchical facet name to remove
	   * @return {SearchParameters}
	   */
	  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {
	    if (!this.isHierarchicalFacet(facet)) {
	      return this;
	    }
	
	    return this.clearRefinements(facet).setQueryParameters({
	      hierarchicalFacets: filter(this.hierarchicalFacets, function(f) {
	        return f.name !== facet;
	      })
	    });
	  },
	  /**
	   * Remove a refinement set on facet. If a value is provided, it will clear the
	   * refinement for the given value, otherwise it will clear all the refinement
	   * values for the faceted attribute.
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {string} [value] value used to filter
	   * @return {SearchParameters}
	   */
	  removeFacetRefinement: function removeFacetRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;
	
	    return this.setQueryParameters({
	      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Remove a negative refinement on a facet
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {string} value value used to filter
	   * @return {SearchParameters}
	   */
	  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;
	
	    return this.setQueryParameters({
	      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)
	    });
	  },
	  /**
	   * Remove a refinement on a disjunctive facet
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {string} value value used to filter
	   * @return {SearchParameters}
	   */
	  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');
	    }
	    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;
	
	    return this.setQueryParameters({
	      disjunctiveFacetsRefinements: RefinementList.removeRefinement(
	        this.disjunctiveFacetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Remove a tag from the list of tag refinements
	   * @method
	   * @param {string} tag the tag to remove
	   * @return {SearchParameters}
	   */
	  removeTagRefinement: function removeTagRefinement(tag) {
	    if (!this.isTagRefined(tag)) return this;
	
	    var modification = {
	      tagRefinements: filter(this.tagRefinements, function(t) { return t !== tag; })
	    };
	
	    return this.setQueryParameters(modification);
	  },
	  /**
	   * Generic toggle refinement method to use with facet, disjunctive facets
	   * and hierarchical facets
	   * @param  {string} facet the facet to refine
	   * @param  {string} value the associated value
	   * @return {SearchParameters}
	   * @throws will throw an error if the facet is not declared in the settings of the helper
	   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}
	   */
	  toggleRefinement: function toggleRefinement(facet, value) {
	    return this.toggleFacetRefinement(facet, value);
	  },
	  /**
	   * Generic toggle refinement method to use with facet, disjunctive facets
	   * and hierarchical facets
	   * @param  {string} facet the facet to refine
	   * @param  {string} value the associated value
	   * @return {SearchParameters}
	   * @throws will throw an error if the facet is not declared in the settings of the helper
	   */
	  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {
	    if (this.isHierarchicalFacet(facet)) {
	      return this.toggleHierarchicalFacetRefinement(facet, value);
	    } else if (this.isConjunctiveFacet(facet)) {
	      return this.toggleConjunctiveFacetRefinement(facet, value);
	    } else if (this.isDisjunctiveFacet(facet)) {
	      return this.toggleDisjunctiveFacetRefinement(facet, value);
	    }
	
	    throw new Error('Cannot refine the undeclared facet ' + facet +
	      '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');
	  },
	  /**
	   * Switch the refinement applied over a facet/value
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {SearchParameters}
	   */
	  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	
	    return this.setQueryParameters({
	      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Switch the refinement applied over a facet/value
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {SearchParameters}
	   */
	  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	
	    return this.setQueryParameters({
	      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)
	    });
	  },
	  /**
	   * Switch the refinement applied over a facet/value
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {SearchParameters}
	   */
	  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');
	    }
	
	    return this.setQueryParameters({
	      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(
	        this.disjunctiveFacetsRefinements, facet, value)
	    });
	  },
	  /**
	   * Switch the refinement applied over a facet/value
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {SearchParameters}
	   */
	  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {
	    if (!this.isHierarchicalFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');
	    }
	
	    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));
	
	    var mod = {};
	
	    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined &&
	      this.hierarchicalFacetsRefinements[facet].length > 0 && (
	      // remove current refinement:
	      // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`
	      this.hierarchicalFacetsRefinements[facet][0] === value ||
	      // remove a parent refinement of the current refinement:
	      //  - refinement was 'beer > IPA > Flying dog'
	      //  - call is toggleRefine('beer > IPA')
	      //  - refinement should be `beer`
	      this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0
	    );
	
	    if (upOneOrMultipleLevel) {
	      if (value.indexOf(separator) === -1) {
	        // go back to root level
	        mod[facet] = [];
	      } else {
	        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];
	      }
	    } else {
	      mod[facet] = [value];
	    }
	
	    return this.setQueryParameters({
	      hierarchicalFacetsRefinements: defaults({}, mod, this.hierarchicalFacetsRefinements)
	    });
	  },
	
	  /**
	   * Adds a refinement on a hierarchical facet.
	   * @param {string} facet the facet name
	   * @param {string} path the hierarchical facet path
	   * @return {SearchParameter} the new state
	   * @throws Error if the facet is not defined or if the facet is refined
	   */
	  addHierarchicalFacetRefinement: function(facet, path) {
	    if (this.isHierarchicalFacetRefined(facet)) {
	      throw new Error(facet + ' is already refined.');
	    }
	    var mod = {};
	    mod[facet] = [path];
	    return this.setQueryParameters({
	      hierarchicalFacetsRefinements: defaults({}, mod, this.hierarchicalFacetsRefinements)
	    });
	  },
	
	  /**
	   * Removes the refinement set on a hierarchical facet.
	   * @param {string} facet the facet name
	   * @return {SearchParameter} the new state
	   * @throws Error if the facet is not defined or if the facet is not refined
	   */
	  removeHierarchicalFacetRefinement: function(facet) {
	    if (!this.isHierarchicalFacetRefined(facet)) {
	      throw new Error(facet + ' is not refined.');
	    }
	    var mod = {};
	    mod[facet] = [];
	    return this.setQueryParameters({
	      hierarchicalFacetsRefinements: defaults({}, mod, this.hierarchicalFacetsRefinements)
	    });
	  },
	  /**
	   * Switch the tag refinement
	   * @method
	   * @param {string} tag the tag to remove or add
	   * @return {SearchParameters}
	   */
	  toggleTagRefinement: function toggleTagRefinement(tag) {
	    if (this.isTagRefined(tag)) {
	      return this.removeTagRefinement(tag);
	    }
	
	    return this.addTagRefinement(tag);
	  },
	  /**
	   * Test if the facet name is from one of the disjunctive facets
	   * @method
	   * @param {string} facet facet name to test
	   * @return {boolean}
	   */
	  isDisjunctiveFacet: function(facet) {
	    return indexOf(this.disjunctiveFacets, facet) > -1;
	  },
	  /**
	   * Test if the facet name is from one of the hierarchical facets
	   * @method
	   * @param {string} facetName facet name to test
	   * @return {boolean}
	   */
	  isHierarchicalFacet: function(facetName) {
	    return this.getHierarchicalFacetByName(facetName) !== undefined;
	  },
	  /**
	   * Test if the facet name is from one of the conjunctive/normal facets
	   * @method
	   * @param {string} facet facet name to test
	   * @return {boolean}
	   */
	  isConjunctiveFacet: function(facet) {
	    return indexOf(this.facets, facet) > -1;
	  },
	  /**
	   * Returns true if the facet is refined, either for a specific value or in
	   * general.
	   * @method
	   * @param {string} facet name of the attribute for used for faceting
	   * @param {string} value, optional value. If passed will test that this value
	   * is filtering the given facet.
	   * @return {boolean} returns true if refined
	   */
	  isFacetRefined: function isFacetRefined(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    return RefinementList.isRefined(this.facetsRefinements, facet, value);
	  },
	  /**
	   * Returns true if the facet contains exclusions or if a specific value is
	   * excluded.
	   *
	   * @method
	   * @param {string} facet name of the attribute for used for faceting
	   * @param {string} [value] optional value. If passed will test that this value
	   * is filtering the given facet.
	   * @return {boolean} returns true if refined
	   */
	  isExcludeRefined: function isExcludeRefined(facet, value) {
	    if (!this.isConjunctiveFacet(facet)) {
	      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');
	    }
	    return RefinementList.isRefined(this.facetsExcludes, facet, value);
	  },
	  /**
	   * Returns true if the facet contains a refinement, or if a value passed is a
	   * refinement for the facet.
	   * @method
	   * @param {string} facet name of the attribute for used for faceting
	   * @param {string} value optional, will test if the value is used for refinement
	   * if there is one, otherwise will test if the facet contains any refinement
	   * @return {boolean}
	   */
	  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {
	    if (!this.isDisjunctiveFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');
	    }
	    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);
	  },
	  /**
	   * Returns true if the facet contains a refinement, or if a value passed is a
	   * refinement for the facet.
	   * @method
	   * @param {string} facet name of the attribute for used for faceting
	   * @param {string} value optional, will test if the value is used for refinement
	   * if there is one, otherwise will test if the facet contains any refinement
	   * @return {boolean}
	   */
	  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {
	    if (!this.isHierarchicalFacet(facet)) {
	      throw new Error(
	        facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');
	    }
	
	    var refinements = this.getHierarchicalRefinement(facet);
	
	    if (!value) {
	      return refinements.length > 0;
	    }
	
	    return indexOf(refinements, value) !== -1;
	  },
	  /**
	   * Test if the triple (attribute, operator, value) is already refined.
	   * If only the attribute and the operator are provided, it tests if the
	   * contains any refinement value.
	   * @method
	   * @param {string} attribute attribute for which the refinement is applied
	   * @param {string} [operator] operator of the refinement
	   * @param {string} [value] value of the refinement
	   * @return {boolean} true if it is refined
	   */
	  isNumericRefined: function isNumericRefined(attribute, operator, value) {
	    if (isUndefined(value) && isUndefined(operator)) {
	      return !!this.numericRefinements[attribute];
	    }
	
	    var isOperatorDefined = this.numericRefinements[attribute] &&
	      !isUndefined(this.numericRefinements[attribute][operator]);
	
	    if (isUndefined(value) || !isOperatorDefined) {
	      return isOperatorDefined;
	    }
	
	    var parsedValue = valToNumber(value);
	    var isAttributeValueDefined = !isUndefined(
	      findArray(this.numericRefinements[attribute][operator], parsedValue)
	    );
	
	    return isOperatorDefined && isAttributeValueDefined;
	  },
	  /**
	   * Returns true if the tag refined, false otherwise
	   * @method
	   * @param {string} tag the tag to check
	   * @return {boolean}
	   */
	  isTagRefined: function isTagRefined(tag) {
	    return indexOf(this.tagRefinements, tag) !== -1;
	  },
	  /**
	   * Returns the list of all disjunctive facets refined
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {string[]}
	   */
	  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {
	    // attributes used for numeric filter can also be disjunctive
	    var disjunctiveNumericRefinedFacets = intersection(
	      keys(this.numericRefinements),
	      this.disjunctiveFacets
	    );
	
	    return keys(this.disjunctiveFacetsRefinements)
	      .concat(disjunctiveNumericRefinedFacets)
	      .concat(this.getRefinedHierarchicalFacets());
	  },
	  /**
	   * Returns the list of all disjunctive facets refined
	   * @method
	   * @param {string} facet name of the attribute used for faceting
	   * @param {value} value value used for filtering
	   * @return {string[]}
	   */
	  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {
	    return intersection(
	      // enforce the order between the two arrays,
	      // so that refinement name index === hierarchical facet index
	      map(this.hierarchicalFacets, 'name'),
	      keys(this.hierarchicalFacetsRefinements)
	    );
	  },
	  /**
	   * Returned the list of all disjunctive facets not refined
	   * @method
	   * @return {string[]}
	   */
	  getUnrefinedDisjunctiveFacets: function() {
	    var refinedFacets = this.getRefinedDisjunctiveFacets();
	
	    return filter(this.disjunctiveFacets, function(f) {
	      return indexOf(refinedFacets, f) === -1;
	    });
	  },
	
	  managedParameters: [
	    'index',
	    'facets', 'disjunctiveFacets', 'facetsRefinements',
	    'facetsExcludes', 'disjunctiveFacetsRefinements',
	    'numericRefinements', 'tagRefinements', 'hierarchicalFacets', 'hierarchicalFacetsRefinements'
	  ],
	  getQueryParams: function getQueryParams() {
	    var managedParameters = this.managedParameters;
	
	    var queryParams = {};
	
	    forOwn(this, function(paramValue, paramName) {
	      if (indexOf(managedParameters, paramName) === -1 && paramValue !== undefined) {
	        queryParams[paramName] = paramValue;
	      }
	    });
	
	    return queryParams;
	  },
	  /**
	   * Let the user retrieve any parameter value from the SearchParameters
	   * @param {string} paramName name of the parameter
	   * @return {any} the value of the parameter
	   */
	  getQueryParameter: function getQueryParameter(paramName) {
	    if (!this.hasOwnProperty(paramName)) {
	      throw new Error(
	        "Parameter '" + paramName + "' is not an attribute of SearchParameters " +
	        '(http://algolia.github.io/algoliasearch-helper-js/docs/SearchParameters.html)');
	    }
	
	    return this[paramName];
	  },
	  /**
	   * Let the user set a specific value for a given parameter. Will return the
	   * same instance if the parameter is invalid or if the value is the same as the
	   * previous one.
	   * @method
	   * @param {string} parameter the parameter name
	   * @param {any} value the value to be set, must be compliant with the definition
	   * of the attribute on the object
	   * @return {SearchParameters} the updated state
	   */
	  setQueryParameter: function setParameter(parameter, value) {
	    if (this[parameter] === value) return this;
	
	    var modification = {};
	
	    modification[parameter] = value;
	
	    return this.setQueryParameters(modification);
	  },
	  /**
	   * Let the user set any of the parameters with a plain object.
	   * @method
	   * @param {object} params all the keys and the values to be updated
	   * @return {SearchParameters} a new updated instance
	   */
	  setQueryParameters: function setQueryParameters(params) {
	    if (!params) return this;
	
	    var error = SearchParameters.validate(this, params);
	
	    if (error) {
	      throw error;
	    }
	
	    var parsedParams = SearchParameters._parseNumbers(params);
	
	    return this.mutateMe(function mergeWith(newInstance) {
	      var ks = keys(params);
	
	      forEach(ks, function(k) {
	        newInstance[k] = parsedParams[k];
	      });
	
	      return newInstance;
	    });
	  },
	
	  /**
	   * Returns an object with only the selected attributes.
	   * @param {string[]} filters filters to retrieve only a subset of the state. It
	   * accepts strings that can be either attributes of the SearchParameters (e.g. hitsPerPage)
	   * or attributes of the index with the notation 'attribute:nameOfMyAttribute'
	   * @return {object}
	   */
	  filter: function(filters) {
	    return filterState(this, filters);
	  },
	  /**
	   * Helper function to make it easier to build new instances from a mutating
	   * function
	   * @private
	   * @param {function} fn newMutableState -> previousState -> () function that will
	   * change the value of the newMutable to the desired state
	   * @return {SearchParameters} a new instance with the specified modifications applied
	   */
	  mutateMe: function mutateMe(fn) {
	    var newState = new this.constructor(this);
	
	    fn(newState, this);
	    return newState;
	  },
	
	  /**
	   * Helper function to get the hierarchicalFacet separator or the default one (`>`)
	   * @param  {object} hierarchicalFacet
	   * @return {string} returns the hierarchicalFacet.separator or `>` as default
	   */
	  _getHierarchicalFacetSortBy: function(hierarchicalFacet) {
	    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];
	  },
	
	  /**
	   * Helper function to get the hierarchicalFacet separator or the default one (`>`)
	   * @private
	   * @param  {object} hierarchicalFacet
	   * @return {string} returns the hierarchicalFacet.separator or `>` as default
	   */
	  _getHierarchicalFacetSeparator: function(hierarchicalFacet) {
	    return hierarchicalFacet.separator || ' > ';
	  },
	
	  /**
	   * Helper function to get the hierarchicalFacet prefix path or null
	   * @private
	   * @param  {object} hierarchicalFacet
	   * @return {string} returns the hierarchicalFacet.rootPath or null as default
	   */
	  _getHierarchicalRootPath: function(hierarchicalFacet) {
	    return hierarchicalFacet.rootPath || null;
	  },
	
	  /**
	   * Helper function to check if we show the parent level of the hierarchicalFacet
	   * @private
	   * @param  {object} hierarchicalFacet
	   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default
	   */
	  _getHierarchicalShowParentLevel: function(hierarchicalFacet) {
	    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {
	      return hierarchicalFacet.showParentLevel;
	    }
	    return true;
	  },
	
	  /**
	   * Helper function to get the hierarchicalFacet by it's name
	   * @param  {string} hierarchicalFacetName
	   * @return {object} a hierarchicalFacet
	   */
	  getHierarchicalFacetByName: function(hierarchicalFacetName) {
	    return find(
	      this.hierarchicalFacets,
	      {name: hierarchicalFacetName}
	    );
	  },
	
	  /**
	   * Get the current breadcrumb for a hierarchical facet, as an array
	   * @param  {string} facetName Hierarchical facet name
	   * @return {array.<string>} the path as an array of string
	   */
	  getHierarchicalFacetBreadcrumb: function(facetName) {
	    if (!this.isHierarchicalFacet(facetName)) {
	      throw new Error(
	        'Cannot get the breadcrumb of an unknown hierarchical facet: `' + facetName + '`');
	    }
	
	    var refinement = this.getHierarchicalRefinement(facetName)[0];
	    if (!refinement) return [];
	
	    var separator = this._getHierarchicalFacetSeparator(
	      this.getHierarchicalFacetByName(facetName)
	    );
	    var path = refinement.split(separator);
	    return map(path, trim);
	  },
	
	  toString: function() {
	    return JSON.stringify(this, null, 2);
	  }
	};
	
	/**
	 * Callback used for clearRefinement method
	 * @callback SearchParameters.clearCallback
	 * @param {OperatorList|FacetList} value the value of the filter
	 * @param {string} key the current attribute name
	 * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`
	 * depending on the type of facet
	 * @return {boolean} `true` if the element should be removed. `false` otherwise.
	 */
	module.exports = SearchParameters;


/***/ }),
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(21);
	
	/**
	 * Casts `value` as an array if it's not one.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.4.0
	 * @category Lang
	 * @param {*} value The value to inspect.
	 * @returns {Array} Returns the cast array.
	 * @example
	 *
	 * _.castArray(1);
	 * // => [1]
	 *
	 * _.castArray({ 'a': 1 });
	 * // => [{ 'a': 1 }]
	 *
	 * _.castArray('abc');
	 * // => ['abc']
	 *
	 * _.castArray(null);
	 * // => [null]
	 *
	 * _.castArray(undefined);
	 * // => [undefined]
	 *
	 * _.castArray();
	 * // => []
	 *
	 * var array = [1, 2, 3];
	 * console.log(_.castArray(array) === array);
	 * // => true
	 */
	function castArray() {
	  if (!arguments.length) {
	    return [];
	  }
	  var value = arguments[0];
	  return isArray(value) ? value : [value];
	}
	
	module.exports = castArray;


/***/ }),
/* 97 */
/***/ (function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}
	
	module.exports = apply;


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(42),
	    toKey = __webpack_require__(70);
	
	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = castPath(path, object);
	
	  var index = 0,
	      length = path.length;
	
	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}
	
	module.exports = baseGet;


/***/ }),
/* 99 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}
	
	module.exports = baseUnary;


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(41);
	
	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  var length = array == null ? 0 : array.length;
	  return !!length && baseIndexOf(array, value, 0) > -1;
	}
	
	module.exports = arrayIncludes;


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetData = __webpack_require__(273),
	    createBind = __webpack_require__(291),
	    createCurry = __webpack_require__(292),
	    createHybrid = __webpack_require__(153),
	    createPartial = __webpack_require__(295),
	    getData = __webpack_require__(304),
	    mergeData = __webpack_require__(316),
	    setData = __webpack_require__(162),
	    setWrapToString = __webpack_require__(164),
	    toInteger = __webpack_require__(44);
	
	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates a function that either curries or invokes `func` with optional
	 * `this` binding and partially applied arguments.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask flags.
	 *    1 - `_.bind`
	 *    2 - `_.bindKey`
	 *    4 - `_.curry` or `_.curryRight` of a bound function
	 *    8 - `_.curry`
	 *   16 - `_.curryRight`
	 *   32 - `_.partial`
	 *   64 - `_.partialRight`
	 *  128 - `_.rearg`
	 *  256 - `_.ary`
	 *  512 - `_.flip`
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to be partially applied.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
	  if (!isBindKey && typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var length = partials ? partials.length : 0;
	  if (!length) {
	    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
	    partials = holders = undefined;
	  }
	  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	  arity = arity === undefined ? arity : toInteger(arity);
	  length -= holders ? holders.length : 0;
	
	  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
	    var partialsRight = partials,
	        holdersRight = holders;
	
	    partials = holders = undefined;
	  }
	  var data = isBindKey ? undefined : getData(func);
	
	  var newData = [
	    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	    argPos, ary, arity
	  ];
	
	  if (data) {
	    mergeData(newData, data);
	  }
	  func = newData[0];
	  bitmask = newData[1];
	  thisArg = newData[2];
	  partials = newData[3];
	  holders = newData[4];
	  arity = newData[9] = newData[9] === undefined
	    ? (isBindKey ? 0 : func.length)
	    : nativeMax(newData[9] - length, 0);
	
	  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
	    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
	  }
	  if (!bitmask || bitmask == WRAP_BIND_FLAG) {
	    var result = createBind(func, bitmask, thisArg);
	  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
	    result = createCurry(func, bitmask, arity);
	  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
	    result = createPartial(func, bitmask, thisArg, partials);
	  } else {
	    result = createHybrid.apply(undefined, newData);
	  }
	  var setter = data ? baseSetData : setData;
	  return setWrapToString(setter(result, newData), func, bitmask);
	}
	
	module.exports = createWrap;


/***/ }),
/* 102 */
/***/ (function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;
	
	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  var type = typeof value;
	  length = length == null ? MAX_SAFE_INTEGER : length;
	
	  return !!length &&
	    (type == 'number' ||
	      (type != 'symbol' && reIsUint.test(value))) &&
	        (value > -1 && value % 1 == 0 && value < length);
	}
	
	module.exports = isIndex;


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(36),
	    eq = __webpack_require__(71),
	    isIterateeCall = __webpack_require__(69),
	    keysIn = __webpack_require__(108);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns own and inherited enumerable string keyed properties of source
	 * objects to the destination object for all destination properties that
	 * resolve to `undefined`. Source objects are applied from left to right.
	 * Once a property is set, additional values of the same property are ignored.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.defaultsDeep
	 * @example
	 *
	 * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	 * // => { 'a': 1, 'b': 2 }
	 */
	var defaults = baseRest(function(object, sources) {
	  object = Object(object);
	
	  var index = -1;
	  var length = sources.length;
	  var guard = length > 2 ? sources[2] : undefined;
	
	  if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	    length = 1;
	  }
	
	  while (++index < length) {
	    var source = sources[index];
	    var props = keysIn(source);
	    var propsIndex = -1;
	    var propsLength = props.length;
	
	    while (++propsIndex < propsLength) {
	      var key = props[propsIndex];
	      var value = object[key];
	
	      if (value === undefined ||
	          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	        object[key] = source[key];
	      }
	    }
	  }
	
	  return object;
	});
	
	module.exports = defaults;


/***/ }),
/* 104 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.filter` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function arrayFilter(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = arrayFilter;


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(98);
	
	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is returned in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}
	
	module.exports = get;


/***/ }),
/* 106 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(84),
	    isObjectLike = __webpack_require__(53);
	
	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}
	
	module.exports = isArrayLikeObject;


/***/ }),
/* 108 */
/***/ (function(module, exports) {

	/**
	 * This function is like
	 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * except that it includes inherited enumerable properties.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function nativeKeysIn(object) {
	  var result = [];
	  if (object != null) {
	    for (var key in Object(object)) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = nativeKeysIn;


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

	var baseMerge = __webpack_require__(267),
	    createAssigner = __webpack_require__(289);
	
	/**
	 * This method is like `_.assign` except that it recursively merges own and
	 * inherited enumerable string keyed properties of source objects into the
	 * destination object. Source properties that resolve to `undefined` are
	 * skipped if a destination value exists. Array and plain object properties
	 * are merged recursively. Other objects and value types are overridden by
	 * assignment. Source objects are applied from left to right. Subsequent
	 * sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.5.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = {
	 *   'a': [{ 'b': 2 }, { 'd': 4 }]
	 * };
	 *
	 * var other = {
	 *   'a': [{ 'c': 3 }, { 'e': 5 }]
	 * };
	 *
	 * _.merge(object, other);
	 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	 */
	var merge = createAssigner(function(object, source, srcIndex) {
	  baseMerge(object, source, srcIndex);
	});
	
	module.exports = merge;


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

	var baseOrderBy = __webpack_require__(269),
	    isArray = __webpack_require__(21);
	
	/**
	 * This method is like `_.sortBy` except that it allows specifying the sort
	 * orders of the iteratees to sort by. If `orders` is unspecified, all values
	 * are sorted in ascending order. Otherwise, specify an order of "desc" for
	 * descending or "asc" for ascending sort order of corresponding values.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	 *  The iteratees to sort by.
	 * @param {string[]} [orders] The sort orders of `iteratees`.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	 * @returns {Array} Returns the new sorted array.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'fred',   'age': 48 },
	 *   { 'user': 'barney', 'age': 34 },
	 *   { 'user': 'fred',   'age': 40 },
	 *   { 'user': 'barney', 'age': 36 }
	 * ];
	 *
	 * // Sort by `user` in ascending order and by `age` in descending order.
	 * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	 */
	function orderBy(collection, iteratees, orders, guard) {
	  if (collection == null) {
	    return [];
	  }
	  if (!isArray(iteratees)) {
	    iteratees = iteratees == null ? [] : [iteratees];
	  }
	  orders = guard ? undefined : orders;
	  if (!isArray(orders)) {
	    orders = orders == null ? [] : [orders];
	  }
	  return baseOrderBy(collection, iteratees, orders);
	}
	
	module.exports = orderBy;


/***/ }),
/* 111 */
/***/ (function(module, exports) {

	'use strict';
	
	var has = Object.prototype.hasOwnProperty;
	
	var hexTable = (function () {
	    var array = [];
	    for (var i = 0; i < 256; ++i) {
	        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
	    }
	
	    return array;
	}());
	
	var compactQueue = function compactQueue(queue) {
	    var obj;
	
	    while (queue.length) {
	        var item = queue.pop();
	        obj = item.obj[item.prop];
	
	        if (Array.isArray(obj)) {
	            var compacted = [];
	
	            for (var j = 0; j < obj.length; ++j) {
	                if (typeof obj[j] !== 'undefined') {
	                    compacted.push(obj[j]);
	                }
	            }
	
	            item.obj[item.prop] = compacted;
	        }
	    }
	
	    return obj;
	};
	
	var arrayToObject = function arrayToObject(source, options) {
	    var obj = options && options.plainObjects ? Object.create(null) : {};
	    for (var i = 0; i < source.length; ++i) {
	        if (typeof source[i] !== 'undefined') {
	            obj[i] = source[i];
	        }
	    }
	
	    return obj;
	};
	
	var merge = function merge(target, source, options) {
	    if (!source) {
	        return target;
	    }
	
	    if (typeof source !== 'object') {
	        if (Array.isArray(target)) {
	            target.push(source);
	        } else if (typeof target === 'object') {
	            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {
	                target[source] = true;
	            }
	        } else {
	            return [target, source];
	        }
	
	        return target;
	    }
	
	    if (typeof target !== 'object') {
	        return [target].concat(source);
	    }
	
	    var mergeTarget = target;
	    if (Array.isArray(target) && !Array.isArray(source)) {
	        mergeTarget = arrayToObject(target, options);
	    }
	
	    if (Array.isArray(target) && Array.isArray(source)) {
	        source.forEach(function (item, i) {
	            if (has.call(target, i)) {
	                if (target[i] && typeof target[i] === 'object') {
	                    target[i] = merge(target[i], item, options);
	                } else {
	                    target.push(item);
	                }
	            } else {
	                target[i] = item;
	            }
	        });
	        return target;
	    }
	
	    return Object.keys(source).reduce(function (acc, key) {
	        var value = source[key];
	
	        if (has.call(acc, key)) {
	            acc[key] = merge(acc[key], value, options);
	        } else {
	            acc[key] = value;
	        }
	        return acc;
	    }, mergeTarget);
	};
	
	var assign = function assignSingleSource(target, source) {
	    return Object.keys(source).reduce(function (acc, key) {
	        acc[key] = source[key];
	        return acc;
	    }, target);
	};
	
	var decode = function (str) {
	    try {
	        return decodeURIComponent(str.replace(/\+/g, ' '));
	    } catch (e) {
	        return str;
	    }
	};
	
	var encode = function encode(str) {
	    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
	    // It has been adapted here for stricter adherence to RFC 3986
	    if (str.length === 0) {
	        return str;
	    }
	
	    var string = typeof str === 'string' ? str : String(str);
	
	    var out = '';
	    for (var i = 0; i < string.length; ++i) {
	        var c = string.charCodeAt(i);
	
	        if (
	            c === 0x2D // -
	            || c === 0x2E // .
	            || c === 0x5F // _
	            || c === 0x7E // ~
	            || (c >= 0x30 && c <= 0x39) // 0-9
	            || (c >= 0x41 && c <= 0x5A) // a-z
	            || (c >= 0x61 && c <= 0x7A) // A-Z
	        ) {
	            out += string.charAt(i);
	            continue;
	        }
	
	        if (c < 0x80) {
	            out = out + hexTable[c];
	            continue;
	        }
	
	        if (c < 0x800) {
	            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);
	            continue;
	        }
	
	        if (c < 0xD800 || c >= 0xE000) {
	            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);
	            continue;
	        }
	
	        i += 1;
	        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));
	        out += hexTable[0xF0 | (c >> 18)]
	            + hexTable[0x80 | ((c >> 12) & 0x3F)]
	            + hexTable[0x80 | ((c >> 6) & 0x3F)]
	            + hexTable[0x80 | (c & 0x3F)];
	    }
	
	    return out;
	};
	
	var compact = function compact(value) {
	    var queue = [{ obj: { o: value }, prop: 'o' }];
	    var refs = [];
	
	    for (var i = 0; i < queue.length; ++i) {
	        var item = queue[i];
	        var obj = item.obj[item.prop];
	
	        var keys = Object.keys(obj);
	        for (var j = 0; j < keys.length; ++j) {
	            var key = keys[j];
	            var val = obj[key];
	            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
	                queue.push({ obj: obj, prop: key });
	                refs.push(val);
	            }
	        }
	    }
	
	    return compactQueue(queue);
	};
	
	var isRegExp = function isRegExp(obj) {
	    return Object.prototype.toString.call(obj) === '[object RegExp]';
	};
	
	var isBuffer = function isBuffer(obj) {
	    if (obj === null || typeof obj === 'undefined') {
	        return false;
	    }
	
	    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
	};
	
	module.exports = {
	    arrayToObject: arrayToObject,
	    assign: assign,
	    compact: compact,
	    decode: decode,
	    encode: encode,
	    isBuffer: isBuffer,
	    isRegExp: isRegExp,
	    merge: merge
	};


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.parseAlgoliaHit = parseAlgoliaHit;
	exports.HIGHLIGHT_TAGS = void 0;
	
	var _get2 = _interopRequireDefault(__webpack_require__(105));
	
	var HIGHLIGHT_TAGS = {
	  highlightPreTag: "<ais-highlight-0000000000>",
	  highlightPostTag: "</ais-highlight-0000000000>"
	};
	/**
	 * Parses an highlighted attribute into an array of objects with the string value, and
	 * a boolean that indicated if this part is highlighted.
	 *
	 * @param {string} preTag - string used to identify the start of an highlighted value
	 * @param {string} postTag - string used to identify the end of an highlighted value
	 * @param {string} highlightedValue - highlighted attribute as returned by Algolia highlight feature
	 * @return {object[]} - An array of {value: string, isHighlighted: boolean}.
	 */
	
	exports.HIGHLIGHT_TAGS = HIGHLIGHT_TAGS;
	
	function parseHighlightedAttribute(_ref) {
	  var preTag = _ref.preTag,
	      postTag = _ref.postTag,
	      _ref$highlightedValue = _ref.highlightedValue,
	      highlightedValue = _ref$highlightedValue === void 0 ? '' : _ref$highlightedValue;
	  var splitByPreTag = highlightedValue.split(preTag);
	  var firstValue = splitByPreTag.shift();
	  var elements = firstValue === '' ? [] : [{
	    value: firstValue,
	    isHighlighted: false
	  }];
	
	  if (postTag === preTag) {
	    var isHighlighted = true;
	    splitByPreTag.forEach(function (split) {
	      elements.push({
	        value: split,
	        isHighlighted: isHighlighted
	      });
	      isHighlighted = !isHighlighted;
	    });
	  } else {
	    splitByPreTag.forEach(function (split) {
	      var splitByPostTag = split.split(postTag);
	      elements.push({
	        value: splitByPostTag[0],
	        isHighlighted: true
	      });
	
	      if (splitByPostTag[1] !== '') {
	        elements.push({
	          value: splitByPostTag[1],
	          isHighlighted: false
	        });
	      }
	    });
	  }
	
	  return elements;
	}
	/**
	 * Find an highlighted attribute given an `attribute` and an `highlightProperty`, parses it,
	 * and provided an array of objects with the string value and a boolean if this
	 * value is highlighted.
	 *
	 * In order to use this feature, highlight must be activated in the configuration of
	 * the index. The `preTag` and `postTag` attributes are respectively highlightPreTag and
	 * highlightPostTag in Algolia configuration.
	 *
	 * @param {string} preTag - string used to identify the start of an highlighted value
	 * @param {string} postTag - string used to identify the end of an highlighted value
	 * @param {string} highlightProperty - the property that contains the highlight structure in the results
	 * @param {string} attribute - the highlighted attribute to look for
	 * @param {object} hit - the actual hit returned by Algolia.
	 * @return {object[]} - An array of {value: string, isHighlighted: boolean}.
	 */
	
	
	function parseAlgoliaHit(_ref2) {
	  var _ref2$preTag = _ref2.preTag,
	      preTag = _ref2$preTag === void 0 ? '<em>' : _ref2$preTag,
	      _ref2$postTag = _ref2.postTag,
	      postTag = _ref2$postTag === void 0 ? '</em>' : _ref2$postTag,
	      highlightProperty = _ref2.highlightProperty,
	      attribute = _ref2.attribute,
	      hit = _ref2.hit;
	  if (!hit) throw new Error('`hit`, the matching record, must be provided');
	  var highlightObject = (0, _get2.default)(hit[highlightProperty], attribute, {});
	
	  if (Array.isArray(highlightObject)) {
	    return highlightObject.map(function (item) {
	      return parseHighlightedAttribute({
	        preTag: preTag,
	        postTag: postTag,
	        highlightedValue: item.value
	      });
	    });
	  }
	
	  return parseHighlightedAttribute({
	    preTag: preTag,
	    postTag: postTag,
	    highlightedValue: highlightObject.value
	  });
	}

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.removeEmptyKey = exports.defer = exports.getDisplayName = exports.shallowEqual = void 0;
	
	var _isPlainObject2 = _interopRequireDefault(__webpack_require__(73));
	
	var _isEmpty2 = _interopRequireDefault(__webpack_require__(24));
	
	// From https://github.com/reactjs/react-redux/blob/master/src/utils/shallowEqual.js
	var shallowEqual = function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  } // Test for A's keys different from B.
	
	
	  var hasOwn = Object.prototype.hasOwnProperty;
	
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }
	
	  return true;
	};
	
	exports.shallowEqual = shallowEqual;
	
	var getDisplayName = function getDisplayName(Component) {
	  return Component.displayName || Component.name || 'UnknownComponent';
	};
	
	exports.getDisplayName = getDisplayName;
	var resolved = Promise.resolve();
	
	var defer = function defer(f) {
	  resolved.then(f);
	};
	
	exports.defer = defer;
	
	var removeEmptyKey = function removeEmptyKey(obj) {
	  Object.keys(obj).forEach(function (key) {
	    var value = obj[key];
	
	    if ((0, _isEmpty2.default)(value) && (0, _isPlainObject2.default)(value)) {
	      delete obj[key];
	    } else if ((0, _isPlainObject2.default)(value)) {
	      removeEmptyKey(value);
	    }
	  });
	  return obj;
	};
	
	exports.removeEmptyKey = removeEmptyKey;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _Highlight = _interopRequireDefault(__webpack_require__(385));
	
	/**
	 * Renders any attribute from a hit into its highlighted form when relevant.
	 *
	 * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.
	 * @name Highlight
	 * @kind widget
	 * @propType {string} attribute - location of the highlighted attribute in the hit (the corresponding element can be either a string or an array of strings)
	 * @propType {object} hit - hit object containing the highlighted attribute
	 * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the hit
	 * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted
	 * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.
	 * @themeKey ais-Highlight - root of the component
	 * @themeKey ais-Highlight-highlighted - part of the text which is highlighted
	 * @themeKey ais-Highlight-nonHighlighted - part of the text that is not highlighted
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits, Highlight } from 'react-instantsearch-dom';
	 *
	 * const Hit = ({ hit }) => (
	 *   <div>
	 *     <Highlight attribute="name" hit={hit} />
	 *   </div>
	 * );
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <SearchBox defaultRefinement="Pho" />
	 *     <Hits hitComponent={Hit} />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectHighlight)(_Highlight.default);
	
	exports.default = _default;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = isStyledComponent;
	
	var babelPluginFlowReactPropTypes_proptype_Target = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Target || __webpack_require__(3).any;
	
	function isStyledComponent(target) /* : %checks */{
	  return typeof target === 'function' && typeof target.styledComponentId === 'string';
	}
	module.exports = exports['default'];

/***/ }),
/* 116 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = doHash;
	// murmurhash2 via https://gist.github.com/raycmorgan/588423
	
	function doHash(str, seed) {
	  var m = 0x5bd1e995;
	  var r = 24;
	  var h = seed ^ str.length;
	  var length = str.length;
	  var currentIndex = 0;
	
	  while (length >= 4) {
	    var k = UInt32(str, currentIndex);
	
	    k = Umul32(k, m);
	    k ^= k >>> r;
	    k = Umul32(k, m);
	
	    h = Umul32(h, m);
	    h ^= k;
	
	    currentIndex += 4;
	    length -= 4;
	  }
	
	  switch (length) {
	    case 3:
	      h ^= UInt16(str, currentIndex);
	      h ^= str.charCodeAt(currentIndex + 2) << 16;
	      h = Umul32(h, m);
	      break;
	
	    case 2:
	      h ^= UInt16(str, currentIndex);
	      h = Umul32(h, m);
	      break;
	
	    case 1:
	      h ^= str.charCodeAt(currentIndex);
	      h = Umul32(h, m);
	      break;
	  }
	
	  h ^= h >>> 13;
	  h = Umul32(h, m);
	  h ^= h >>> 15;
	
	  return h >>> 0;
	}
	
	function UInt32(str, pos) {
	  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8) + (str.charCodeAt(pos++) << 16) + (str.charCodeAt(pos) << 24);
	}
	
	function UInt16(str, pos) {
	  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8);
	}
	
	function Umul32(n, m) {
	  n = n | 0;
	  m = m | 0;
	  var nlo = n & 0xffff;
	  var nhi = n >>> 16;
	  var res = nlo * m + ((nhi * m & 0xffff) << 16) | 0;
	  return res;
	}
	module.exports = exports["default"];

/***/ }),
/* 117 */
/***/ (function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }),
/* 118 */,
/* 119 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.slice` without an iteratee call guard.
	 *
	 * @private
	 * @param {Array} array The array to slice.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the slice of `array`.
	 */
	function baseSlice(array, start, end) {
	  var index = -1,
	      length = array.length;
	
	  if (start < 0) {
	    start = -start > length ? 0 : (length + start);
	  }
	  end = end > length ? length : end;
	  if (end < 0) {
	    end += length;
	  }
	  length = start > end ? 0 : ((end - start) >>> 0);
	  start >>>= 0;
	
	  var result = Array(length);
	  while (++index < length) {
	    result[index] = array[index + start];
	  }
	  return result;
	}
	
	module.exports = baseSlice;


/***/ }),
/* 120 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}
	
	module.exports = objectToString;


/***/ }),
/* 121 */
/***/ (function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ }),
/* 122 */
/***/ (function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;
	
	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}
	
	module.exports = isLength;


/***/ }),
/* 123 */,
/* 124 */,
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

	var objectWithoutPropertiesLoose = __webpack_require__(210);
	
	function _objectWithoutProperties(source, excluded) {
	  if (source == null) return {};
	  var target = objectWithoutPropertiesLoose(source, excluded);
	  var key, i;
	
	  if (Object.getOwnPropertySymbols) {
	    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
	
	    for (i = 0; i < sourceSymbolKeys.length; i++) {
	      key = sourceSymbolKeys[i];
	      if (excluded.indexOf(key) >= 0) continue;
	      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
	      target[key] = source[key];
	    }
	  }
	
	  return target;
	}
	
	module.exports = _objectWithoutProperties;

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayWithoutHoles = __webpack_require__(205);
	
	var iterableToArray = __webpack_require__(206);
	
	var nonIterableSpread = __webpack_require__(209);
	
	function _toConsumableArray(arr) {
	  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
	}
	
	module.exports = _toConsumableArray;

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var AlgoliaSearchHelper = __webpack_require__(219);
	
	var SearchParameters = __webpack_require__(92);
	var SearchResults = __webpack_require__(128);
	
	/**
	 * The algoliasearchHelper module is the function that will let its
	 * contains everything needed to use the Algoliasearch
	 * Helper. It is a also a function that instanciate the helper.
	 * To use the helper, you also need the Algolia JS client v3.
	 * @example
	 * //using the UMD build
	 * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');
	 * var helper = algoliasearchHelper(client, 'bestbuy', {
	 *   facets: ['shipping'],
	 *   disjunctiveFacets: ['category']
	 * });
	 * helper.on('result', function(result) {
	 *   console.log(result);
	 * });
	 * helper.toggleRefine('Movies & TV Shows')
	 *       .toggleRefine('Free shipping')
	 *       .search();
	 * @example
	 * // The helper is an event emitter using the node API
	 * helper.on('result', updateTheResults);
	 * helper.once('result', updateTheResults);
	 * helper.removeListener('result', updateTheResults);
	 * helper.removeAllListeners('result');
	 * @module algoliasearchHelper
	 * @param  {AlgoliaSearch} client an AlgoliaSearch client
	 * @param  {string} index the name of the index to query
	 * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.
	 * @return {AlgoliaSearchHelper}
	 */
	function algoliasearchHelper(client, index, opts) {
	  return new AlgoliaSearchHelper(client, index, opts);
	}
	
	/**
	 * The version currently used
	 * @member module:algoliasearchHelper.version
	 * @type {number}
	 */
	algoliasearchHelper.version = __webpack_require__(131);
	
	/**
	 * Constructor for the Helper.
	 * @member module:algoliasearchHelper.AlgoliaSearchHelper
	 * @type {AlgoliaSearchHelper}
	 */
	algoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;
	
	/**
	 * Constructor for the object containing all the parameters of the search.
	 * @member module:algoliasearchHelper.SearchParameters
	 * @type {SearchParameters}
	 */
	algoliasearchHelper.SearchParameters = SearchParameters;
	
	/**
	 * Constructor for the object containing the results of the search.
	 * @member module:algoliasearchHelper.SearchResults
	 * @type {SearchResults}
	 */
	algoliasearchHelper.SearchResults = SearchResults;
	
	/**
	 * URL tools to generate query string and parse them from/into
	 * SearchParameters
	 * @member module:algoliasearchHelper.url
	 * @type {object} {@link url}
	 *
	 */
	algoliasearchHelper.url = __webpack_require__(130);
	
	module.exports = algoliasearchHelper;


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var forEach = __webpack_require__(43);
	var compact = __webpack_require__(321);
	var indexOf = __webpack_require__(72);
	var findIndex = __webpack_require__(165);
	var get = __webpack_require__(105);
	
	var sumBy = __webpack_require__(338);
	var find = __webpack_require__(26);
	var includes = __webpack_require__(327);
	var map = __webpack_require__(31);
	var orderBy = __webpack_require__(110);
	
	var defaults = __webpack_require__(103);
	var merge = __webpack_require__(109);
	
	var isFunction = __webpack_require__(45);
	
	var partial = __webpack_require__(333);
	var partialRight = __webpack_require__(334);
	
	var formatSort = __webpack_require__(129);
	
	var generateHierarchicalTree = __webpack_require__(218);
	
	/**
	 * @typedef SearchResults.Facet
	 * @type {object}
	 * @property {string} name name of the attribute in the record
	 * @property {object} data the faceting data: value, number of entries
	 * @property {object} stats undefined unless facet_stats is retrieved from algolia
	 */
	
	/**
	 * @typedef SearchResults.HierarchicalFacet
	 * @type {object}
	 * @property {string} name name of the current value given the hierarchical level, trimmed.
	 * If root node, you get the facet name
	 * @property {number} count number of objects matching this hierarchical value
	 * @property {string} path the current hierarchical value full path
	 * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise
	 * @property {HierarchicalFacet[]} data sub values for the current level
	 */
	
	/**
	 * @typedef SearchResults.FacetValue
	 * @type {object}
	 * @property {string} name the facet value itself
	 * @property {number} count times this facet appears in the results
	 * @property {boolean} isRefined is the facet currently selected
	 * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)
	 */
	
	/**
	 * @typedef Refinement
	 * @type {object}
	 * @property {string} type the type of filter used:
	 * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`
	 * @property {string} attributeName name of the attribute used for filtering
	 * @property {string} name the value of the filter
	 * @property {number} numericValue the value as a number. Only for numeric filters.
	 * @property {string} operator the operator used. Only for numeric filters.
	 * @property {number} count the number of computed hits for this filter. Only on facets.
	 * @property {boolean} exhaustive if the count is exhaustive
	 */
	
	function getIndices(obj) {
	  var indices = {};
	
	  forEach(obj, function(val, idx) { indices[val] = idx; });
	
	  return indices;
	}
	
	function assignFacetStats(dest, facetStats, key) {
	  if (facetStats && facetStats[key]) {
	    dest.stats = facetStats[key];
	  }
	}
	
	function findMatchingHierarchicalFacetFromAttributeName(hierarchicalFacets, hierarchicalAttributeName) {
	  return find(
	    hierarchicalFacets,
	    function facetKeyMatchesAttribute(hierarchicalFacet) {
	      return includes(hierarchicalFacet.attributes, hierarchicalAttributeName);
	    }
	  );
	}
	
	/*eslint-disable */
	/**
	 * Constructor for SearchResults
	 * @class
	 * @classdesc SearchResults contains the results of a query to Algolia using the
	 * {@link AlgoliaSearchHelper}.
	 * @param {SearchParameters} state state that led to the response
	 * @param {array.<object>} results the results from algolia client
	 * @example <caption>SearchResults of the first query in
	 * <a href="http://demos.algolia.com/instant-search-demo">the instant search demo</a></caption>
	{
	   "hitsPerPage": 10,
	   "processingTimeMS": 2,
	   "facets": [
	      {
	         "name": "type",
	         "data": {
	            "HardGood": 6627,
	            "BlackTie": 550,
	            "Music": 665,
	            "Software": 131,
	            "Game": 456,
	            "Movie": 1571
	         },
	         "exhaustive": false
	      },
	      {
	         "exhaustive": false,
	         "data": {
	            "Free shipping": 5507
	         },
	         "name": "shipping"
	      }
	  ],
	   "hits": [
	      {
	         "thumbnailImage": "http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif",
	         "_highlightResult": {
	            "shortDescription": {
	               "matchLevel": "none",
	               "value": "Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection",
	               "matchedWords": []
	            },
	            "category": {
	               "matchLevel": "none",
	               "value": "Computer Security Software",
	               "matchedWords": []
	            },
	            "manufacturer": {
	               "matchedWords": [],
	               "value": "Webroot",
	               "matchLevel": "none"
	            },
	            "name": {
	               "value": "Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows",
	               "matchedWords": [],
	               "matchLevel": "none"
	            }
	         },
	         "image": "http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg",
	         "shipping": "Free shipping",
	         "bestSellingRank": 4,
	         "shortDescription": "Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection",
	         "url": "http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ",
	         "name": "Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows",
	         "category": "Computer Security Software",
	         "salePrice_range": "1 - 50",
	         "objectID": "1688832",
	         "type": "Software",
	         "customerReviewCount": 5980,
	         "salePrice": 49.99,
	         "manufacturer": "Webroot"
	      },
	      ....
	  ],
	   "nbHits": 10000,
	   "disjunctiveFacets": [
	      {
	         "exhaustive": false,
	         "data": {
	            "5": 183,
	            "12": 112,
	            "7": 149,
	            ...
	         },
	         "name": "customerReviewCount",
	         "stats": {
	            "max": 7461,
	            "avg": 157.939,
	            "min": 1
	         }
	      },
	      {
	         "data": {
	            "Printer Ink": 142,
	            "Wireless Speakers": 60,
	            "Point & Shoot Cameras": 48,
	            ...
	         },
	         "name": "category",
	         "exhaustive": false
	      },
	      {
	         "exhaustive": false,
	         "data": {
	            "> 5000": 2,
	            "1 - 50": 6524,
	            "501 - 2000": 566,
	            "201 - 500": 1501,
	            "101 - 200": 1360,
	            "2001 - 5000": 47
	         },
	         "name": "salePrice_range"
	      },
	      {
	         "data": {
	            "Dynex™": 202,
	            "Insignia™": 230,
	            "PNY": 72,
	            ...
	         },
	         "name": "manufacturer",
	         "exhaustive": false
	      }
	  ],
	   "query": "",
	   "nbPages": 100,
	   "page": 0,
	   "index": "bestbuy"
	}
	 **/
	/*eslint-enable */
	function SearchResults(state, results) {
	  var mainSubResponse = results[0];
	
	  this._rawResults = results;
	
	  /**
	   * query used to generate the results
	   * @member {string}
	   */
	  this.query = mainSubResponse.query;
	  /**
	   * The query as parsed by the engine given all the rules.
	   * @member {string}
	   */
	  this.parsedQuery = mainSubResponse.parsedQuery;
	  /**
	   * all the records that match the search parameters. Each record is
	   * augmented with a new attribute `_highlightResult`
	   * which is an object keyed by attribute and with the following properties:
	   *  - `value` : the value of the facet highlighted (html)
	   *  - `matchLevel`: full, partial or none depending on how the query terms match
	   * @member {object[]}
	   */
	  this.hits = mainSubResponse.hits;
	  /**
	   * index where the results come from
	   * @member {string}
	   */
	  this.index = mainSubResponse.index;
	  /**
	   * number of hits per page requested
	   * @member {number}
	   */
	  this.hitsPerPage = mainSubResponse.hitsPerPage;
	  /**
	   * total number of hits of this query on the index
	   * @member {number}
	   */
	  this.nbHits = mainSubResponse.nbHits;
	  /**
	   * total number of pages with respect to the number of hits per page and the total number of hits
	   * @member {number}
	   */
	  this.nbPages = mainSubResponse.nbPages;
	  /**
	   * current page
	   * @member {number}
	   */
	  this.page = mainSubResponse.page;
	  /**
	   * sum of the processing time of all the queries
	   * @member {number}
	   */
	  this.processingTimeMS = sumBy(results, 'processingTimeMS');
	  /**
	   * The position if the position was guessed by IP.
	   * @member {string}
	   * @example "48.8637,2.3615",
	   */
	  this.aroundLatLng = mainSubResponse.aroundLatLng;
	  /**
	   * The radius computed by Algolia.
	   * @member {string}
	   * @example "126792922",
	   */
	  this.automaticRadius = mainSubResponse.automaticRadius;
	  /**
	   * String identifying the server used to serve this request.
	   * @member {string}
	   * @example "c7-use-2.algolia.net",
	   */
	  this.serverUsed = mainSubResponse.serverUsed;
	  /**
	   * Boolean that indicates if the computation of the counts did time out.
	   * @deprecated
	   * @member {boolean}
	   */
	  this.timeoutCounts = mainSubResponse.timeoutCounts;
	  /**
	   * Boolean that indicates if the computation of the hits did time out.
	   * @deprecated
	   * @member {boolean}
	   */
	  this.timeoutHits = mainSubResponse.timeoutHits;
	
	  /**
	   * True if the counts of the facets is exhaustive
	   * @member {boolean}
	   */
	  this.exhaustiveFacetsCount = mainSubResponse.exhaustiveFacetsCount;
	
	  /**
	   * True if the number of hits is exhaustive
	   * @member {boolean}
	   */
	  this.exhaustiveNbHits = mainSubResponse.exhaustiveNbHits;
	
	
	  /**
	   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).
	   * @member {object[]}
	   */
	  this.userData = mainSubResponse.userData;
	
	  /**
	   * queryID is the unique identifier of the query used to generate the current search results.
	   * This value is only available if the `clickAnalytics` search parameter is set to `true`.
	   * @member {string}
	   */
	  this.queryID = mainSubResponse.queryID;
	
	  /**
	   * disjunctive facets results
	   * @member {SearchResults.Facet[]}
	   */
	  this.disjunctiveFacets = [];
	  /**
	   * disjunctive facets results
	   * @member {SearchResults.HierarchicalFacet[]}
	   */
	  this.hierarchicalFacets = map(state.hierarchicalFacets, function initFutureTree() {
	    return [];
	  });
	  /**
	   * other facets results
	   * @member {SearchResults.Facet[]}
	   */
	  this.facets = [];
	
	  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();
	
	  var facetsIndices = getIndices(state.facets);
	  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);
	  var nextDisjunctiveResult = 1;
	
	  var self = this;
	  // Since we send request only for disjunctive facets that have been refined,
	  // we get the facets informations from the first, general, response.
	  forEach(mainSubResponse.facets, function(facetValueObject, facetKey) {
	    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(
	      state.hierarchicalFacets,
	      facetKey
	    );
	
	    if (hierarchicalFacet) {
	      // Place the hierarchicalFacet data at the correct index depending on
	      // the attributes order that was defined at the helper initialization
	      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);
	      var idxAttributeName = findIndex(state.hierarchicalFacets, {name: hierarchicalFacet.name});
	      self.hierarchicalFacets[idxAttributeName][facetIndex] = {
	        attribute: facetKey,
	        data: facetValueObject,
	        exhaustive: mainSubResponse.exhaustiveFacetsCount
	      };
	    } else {
	      var isFacetDisjunctive = indexOf(state.disjunctiveFacets, facetKey) !== -1;
	      var isFacetConjunctive = indexOf(state.facets, facetKey) !== -1;
	      var position;
	
	      if (isFacetDisjunctive) {
	        position = disjunctiveFacetsIndices[facetKey];
	        self.disjunctiveFacets[position] = {
	          name: facetKey,
	          data: facetValueObject,
	          exhaustive: mainSubResponse.exhaustiveFacetsCount
	        };
	        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);
	      }
	      if (isFacetConjunctive) {
	        position = facetsIndices[facetKey];
	        self.facets[position] = {
	          name: facetKey,
	          data: facetValueObject,
	          exhaustive: mainSubResponse.exhaustiveFacetsCount
	        };
	        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);
	      }
	    }
	  });
	
	  // Make sure we do not keep holes within the hierarchical facets
	  this.hierarchicalFacets = compact(this.hierarchicalFacets);
	
	  // aggregate the refined disjunctive facets
	  forEach(disjunctiveFacets, function(disjunctiveFacet) {
	    var result = results[nextDisjunctiveResult];
	    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet);
	
	    // There should be only item in facets.
	    forEach(result.facets, function(facetResults, dfacet) {
	      var position;
	
	      if (hierarchicalFacet) {
	        position = findIndex(state.hierarchicalFacets, {name: hierarchicalFacet.name});
	        var attributeIndex = findIndex(self.hierarchicalFacets[position], {attribute: dfacet});
	
	        // previous refinements and no results so not able to find it
	        if (attributeIndex === -1) {
	          return;
	        }
	
	        self.hierarchicalFacets[position][attributeIndex].data = merge(
	          {},
	          self.hierarchicalFacets[position][attributeIndex].data,
	          facetResults
	        );
	      } else {
	        position = disjunctiveFacetsIndices[dfacet];
	
	        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};
	
	        self.disjunctiveFacets[position] = {
	          name: dfacet,
	          data: defaults({}, facetResults, dataFromMainRequest),
	          exhaustive: result.exhaustiveFacetsCount
	        };
	        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);
	
	        if (state.disjunctiveFacetsRefinements[dfacet]) {
	          forEach(state.disjunctiveFacetsRefinements[dfacet], function(refinementValue) {
	            // add the disjunctive refinements if it is no more retrieved
	            if (!self.disjunctiveFacets[position].data[refinementValue] &&
	              indexOf(state.disjunctiveFacetsRefinements[dfacet], refinementValue) > -1) {
	              self.disjunctiveFacets[position].data[refinementValue] = 0;
	            }
	          });
	        }
	      }
	    });
	    nextDisjunctiveResult++;
	  });
	
	  // if we have some root level values for hierarchical facets, merge them
	  forEach(state.getRefinedHierarchicalFacets(), function(refinedFacet) {
	    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);
	    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	
	    var currentRefinement = state.getHierarchicalRefinement(refinedFacet);
	    // if we are already at a root refinement (or no refinement at all), there is no
	    // root level values request
	    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {
	      return;
	    }
	
	    var result = results[nextDisjunctiveResult];
	
	    forEach(result.facets, function(facetResults, dfacet) {
	      var position = findIndex(state.hierarchicalFacets, {name: hierarchicalFacet.name});
	      var attributeIndex = findIndex(self.hierarchicalFacets[position], {attribute: dfacet});
	
	      // previous refinements and no results so not able to find it
	      if (attributeIndex === -1) {
	        return;
	      }
	
	      // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),
	      // then the disjunctive values will be `beers` (count: 100),
	      // but we do not want to display
	      //   | beers (100)
	      //     > IPA (5)
	      // We want
	      //   | beers (5)
	      //     > IPA (5)
	      var defaultData = {};
	
	      if (currentRefinement.length > 0) {
	        var root = currentRefinement[0].split(separator)[0];
	        defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];
	      }
	
	      self.hierarchicalFacets[position][attributeIndex].data = defaults(
	        defaultData,
	        facetResults,
	        self.hierarchicalFacets[position][attributeIndex].data
	      );
	    });
	
	    nextDisjunctiveResult++;
	  });
	
	  // add the excludes
	  forEach(state.facetsExcludes, function(excludes, facetName) {
	    var position = facetsIndices[facetName];
	
	    self.facets[position] = {
	      name: facetName,
	      data: mainSubResponse.facets[facetName],
	      exhaustive: mainSubResponse.exhaustiveFacetsCount
	    };
	    forEach(excludes, function(facetValue) {
	      self.facets[position] = self.facets[position] || {name: facetName};
	      self.facets[position].data = self.facets[position].data || {};
	      self.facets[position].data[facetValue] = 0;
	    });
	  });
	
	  this.hierarchicalFacets = map(this.hierarchicalFacets, generateHierarchicalTree(state));
	
	  this.facets = compact(this.facets);
	  this.disjunctiveFacets = compact(this.disjunctiveFacets);
	
	  this._state = state;
	}
	
	/**
	 * Get a facet object with its name
	 * @deprecated
	 * @param {string} name name of the faceted attribute
	 * @return {SearchResults.Facet} the facet object
	 */
	SearchResults.prototype.getFacetByName = function(name) {
	  var predicate = {name: name};
	
	  return find(this.facets, predicate) ||
	    find(this.disjunctiveFacets, predicate) ||
	    find(this.hierarchicalFacets, predicate);
	};
	
	/**
	 * Get the facet values of a specified attribute from a SearchResults object.
	 * @private
	 * @param {SearchResults} results the search results to search in
	 * @param {string} attribute name of the faceted attribute to search for
	 * @return {array|object} facet values. For the hierarchical facets it is an object.
	 */
	function extractNormalizedFacetValues(results, attribute) {
	  var predicate = {name: attribute};
	  if (results._state.isConjunctiveFacet(attribute)) {
	    var facet = find(results.facets, predicate);
	    if (!facet) return [];
	
	    return map(facet.data, function(v, k) {
	      return {
	        name: k,
	        count: v,
	        isRefined: results._state.isFacetRefined(attribute, k),
	        isExcluded: results._state.isExcludeRefined(attribute, k)
	      };
	    });
	  } else if (results._state.isDisjunctiveFacet(attribute)) {
	    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);
	    if (!disjunctiveFacet) return [];
	
	    return map(disjunctiveFacet.data, function(v, k) {
	      return {
	        name: k,
	        count: v,
	        isRefined: results._state.isDisjunctiveFacetRefined(attribute, k)
	      };
	    });
	  } else if (results._state.isHierarchicalFacet(attribute)) {
	    return find(results.hierarchicalFacets, predicate);
	  }
	}
	
	/**
	 * Sort nodes of a hierarchical facet results
	 * @private
	 * @param {HierarchicalFacet} node node to upon which we want to apply the sort
	 */
	function recSort(sortFn, node) {
	  if (!node.data || node.data.length === 0) {
	    return node;
	  }
	  var children = map(node.data, partial(recSort, sortFn));
	  var sortedChildren = sortFn(children);
	  var newNode = merge({}, node, {data: sortedChildren});
	  return newNode;
	}
	
	SearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];
	
	function vanillaSortFn(order, data) {
	  return data.sort(order);
	}
	
	/**
	 * Get a the list of values for a given facet attribute. Those values are sorted
	 * refinement first, descending count (bigger value on top), and name ascending
	 * (alphabetical order). The sort formula can overridden using either string based
	 * predicates or a function.
	 *
	 * This method will return all the values returned by the Algolia engine plus all
	 * the values already refined. This means that it can happen that the
	 * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)
	 * might not be respected if you have facet values that are already refined.
	 * @param {string} attribute attribute name
	 * @param {object} opts configuration options.
	 * @param {Array.<string> | function} opts.sortBy
	 * When using strings, it consists of
	 * the name of the [FacetValue](#SearchResults.FacetValue) or the
	 * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the
	 * order (`asc` or `desc`). For example to order the value by count, the
	 * argument would be `['count:asc']`.
	 *
	 * If only the attribute name is specified, the ordering defaults to the one
	 * specified in the default value for this attribute.
	 *
	 * When not specified, the order is
	 * ascending.  This parameter can also be a function which takes two facet
	 * values and should return a number, 0 if equal, 1 if the first argument is
	 * bigger or -1 otherwise.
	 *
	 * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`
	 * @return {FacetValue[]|HierarchicalFacet} depending on the type of facet of
	 * the attribute requested (hierarchical, disjunctive or conjunctive)
	 * @example
	 * helper.on('results', function(content){
	 *   //get values ordered only by name ascending using the string predicate
	 *   content.getFacetValues('city', {sortBy: ['name:asc']});
	 *   //get values  ordered only by count ascending using a function
	 *   content.getFacetValues('city', {
	 *     // this is equivalent to ['count:asc']
	 *     sortBy: function(a, b) {
	 *       if (a.count === b.count) return 0;
	 *       if (a.count > b.count)   return 1;
	 *       if (b.count > a.count)   return -1;
	 *     }
	 *   });
	 * });
	 */
	SearchResults.prototype.getFacetValues = function(attribute, opts) {
	  var facetValues = extractNormalizedFacetValues(this, attribute);
	  if (!facetValues) throw new Error(attribute + ' is not a retrieved facet.');
	
	  var options = defaults({}, opts, {sortBy: SearchResults.DEFAULT_SORT});
	
	  if (Array.isArray(options.sortBy)) {
	    var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);
	    if (Array.isArray(facetValues)) {
	      return orderBy(facetValues, order[0], order[1]);
	    }
	    // If facetValues is not an array, it's an object thus a hierarchical facet object
	    return recSort(partialRight(orderBy, order[0], order[1]), facetValues);
	  } else if (isFunction(options.sortBy)) {
	    if (Array.isArray(facetValues)) {
	      return facetValues.sort(options.sortBy);
	    }
	    // If facetValues is not an array, it's an object thus a hierarchical facet object
	    return recSort(partial(vanillaSortFn, options.sortBy), facetValues);
	  }
	  throw new Error(
	    'options.sortBy is optional but if defined it must be ' +
	    'either an array of string (predicates) or a sorting function'
	  );
	};
	
	/**
	 * Returns the facet stats if attribute is defined and the facet contains some.
	 * Otherwise returns undefined.
	 * @param {string} attribute name of the faceted attribute
	 * @return {object} The stats of the facet
	 */
	SearchResults.prototype.getFacetStats = function(attribute) {
	  if (this._state.isConjunctiveFacet(attribute)) {
	    return getFacetStatsIfAvailable(this.facets, attribute);
	  } else if (this._state.isDisjunctiveFacet(attribute)) {
	    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);
	  }
	
	  throw new Error(attribute + ' is not present in `facets` or `disjunctiveFacets`');
	};
	
	function getFacetStatsIfAvailable(facetList, facetName) {
	  var data = find(facetList, {name: facetName});
	  return data && data.stats;
	}
	
	/**
	 * Returns all refinements for all filters + tags. It also provides
	 * additional information: count and exhausistivity for each filter.
	 *
	 * See the [refinement type](#Refinement) for an exhaustive view of the available
	 * data.
	 *
	 * @return {Array.<Refinement>} all the refinements
	 */
	SearchResults.prototype.getRefinements = function() {
	  var state = this._state;
	  var results = this;
	  var res = [];
	
	  forEach(state.facetsRefinements, function(refinements, attributeName) {
	    forEach(refinements, function(name) {
	      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));
	    });
	  });
	
	  forEach(state.facetsExcludes, function(refinements, attributeName) {
	    forEach(refinements, function(name) {
	      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));
	    });
	  });
	
	  forEach(state.disjunctiveFacetsRefinements, function(refinements, attributeName) {
	    forEach(refinements, function(name) {
	      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));
	    });
	  });
	
	  forEach(state.hierarchicalFacetsRefinements, function(refinements, attributeName) {
	    forEach(refinements, function(name) {
	      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));
	    });
	  });
	
	  forEach(state.numericRefinements, function(operators, attributeName) {
	    forEach(operators, function(values, operator) {
	      forEach(values, function(value) {
	        res.push({
	          type: 'numeric',
	          attributeName: attributeName,
	          name: value,
	          numericValue: value,
	          operator: operator
	        });
	      });
	    });
	  });
	
	  forEach(state.tagRefinements, function(name) {
	    res.push({type: 'tag', attributeName: '_tags', name: name});
	  });
	
	  return res;
	};
	
	function getRefinement(state, type, attributeName, name, resultsFacets) {
	  var facet = find(resultsFacets, {name: attributeName});
	  var count = get(facet, 'data[' + name + ']');
	  var exhaustive = get(facet, 'exhaustive');
	  return {
	    type: type,
	    attributeName: attributeName,
	    name: name,
	    count: count || 0,
	    exhaustive: exhaustive || false
	  };
	}
	
	function getHierarchicalRefinement(state, attributeName, name, resultsFacets) {
	  var facet = find(resultsFacets, {name: attributeName});
	  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);
	  var splitted = name.split(facetDeclaration.separator);
	  var configuredName = splitted[splitted.length - 1];
	  for (var i = 0; facet !== undefined && i < splitted.length; ++i) {
	    facet = find(facet.data, {name: splitted[i]});
	  }
	  var count = get(facet, 'count');
	  var exhaustive = get(facet, 'exhaustive');
	  return {
	    type: 'hierarchical',
	    attributeName: attributeName,
	    name: configuredName,
	    count: count || 0,
	    exhaustive: exhaustive || false
	  };
	}
	
	module.exports = SearchResults;


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var reduce = __webpack_require__(56);
	var find = __webpack_require__(26);
	var startsWith = __webpack_require__(337);
	
	/**
	 * Transform sort format from user friendly notation to lodash format
	 * @param {string[]} sortBy array of predicate of the form "attribute:order"
	 * @return {array.<string[]>} array containing 2 elements : attributes, orders
	 */
	module.exports = function formatSort(sortBy, defaults) {
	  return reduce(sortBy, function preparePredicate(out, sortInstruction) {
	    var sortInstructions = sortInstruction.split(':');
	    if (defaults && sortInstructions.length === 1) {
	      var similarDefault = find(defaults, function(predicate) {
	        return startsWith(predicate, sortInstruction[0]);
	      });
	      if (similarDefault) {
	        sortInstructions = similarDefault.split(':');
	      }
	    }
	    out[0].push(sortInstructions[0]);
	    out[1].push(sortInstructions[1]);
	    return out;
	  }, [[], []]);
	};


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Module containing the functions to serialize and deserialize
	 * {SearchParameters} in the query string format
	 * @module algoliasearchHelper.url
	 */
	
	var shortener = __webpack_require__(217);
	var SearchParameters = __webpack_require__(92);
	
	var qs = __webpack_require__(345);
	
	var bind = __webpack_require__(320);
	var forEach = __webpack_require__(43);
	var pick = __webpack_require__(75);
	var map = __webpack_require__(31);
	var mapKeys = __webpack_require__(331);
	var mapValues = __webpack_require__(332);
	var isString = __webpack_require__(74);
	var isPlainObject = __webpack_require__(73);
	var isEmpty = __webpack_require__(24);
	var invert = __webpack_require__(167);
	
	var encode = __webpack_require__(111).encode;
	
	function recursiveEncode(input) {
	  if (isPlainObject(input)) {
	    return mapValues(input, recursiveEncode);
	  }
	  if (Array.isArray(input)) {
	    return map(input, recursiveEncode);
	  }
	  if (isString(input)) {
	    return encode(input);
	  }
	  return input;
	}
	
	var refinementsParameters = ['dFR', 'fR', 'nR', 'hFR', 'tR'];
	var stateKeys = shortener.ENCODED_PARAMETERS;
	function sortQueryStringValues(prefixRegexp, invertedMapping, a, b) {
	  if (prefixRegexp !== null) {
	    a = a.replace(prefixRegexp, '');
	    b = b.replace(prefixRegexp, '');
	  }
	
	  a = invertedMapping[a] || a;
	  b = invertedMapping[b] || b;
	
	  if (stateKeys.indexOf(a) !== -1 || stateKeys.indexOf(b) !== -1) {
	    if (a === 'q') return -1;
	    if (b === 'q') return 1;
	
	    var isARefinements = refinementsParameters.indexOf(a) !== -1;
	    var isBRefinements = refinementsParameters.indexOf(b) !== -1;
	    if (isARefinements && !isBRefinements) {
	      return 1;
	    } else if (isBRefinements && !isARefinements) {
	      return -1;
	    }
	  }
	
	  return a.localeCompare(b);
	}
	
	/**
	 * Read a query string and return an object containing the state
	 * @param {string} queryString the query string that will be decoded
	 * @param {object} [options] accepted options :
	 *   - prefix : the prefix used for the saved attributes, you have to provide the
	 *     same that was used for serialization
	 *   - mapping : map short attributes to another value e.g. {q: 'query'}
	 * @return {object} partial search parameters object (same properties than in the
	 * SearchParameters but not exhaustive)
	 */
	exports.getStateFromQueryString = function(queryString, options) {
	  var prefixForParameters = options && options.prefix || '';
	  var mapping = options && options.mapping || {};
	  var invertedMapping = invert(mapping);
	
	  var partialStateWithPrefix = qs.parse(queryString);
	  var prefixRegexp = new RegExp('^' + prefixForParameters);
	  var partialState = mapKeys(
	    partialStateWithPrefix,
	    function(v, k) {
	      var hasPrefix = prefixForParameters && prefixRegexp.test(k);
	      var unprefixedKey = hasPrefix ? k.replace(prefixRegexp, '') : k;
	      var decodedKey = shortener.decode(invertedMapping[unprefixedKey] || unprefixedKey);
	      return decodedKey || unprefixedKey;
	    }
	  );
	
	  var partialStateWithParsedNumbers = SearchParameters._parseNumbers(partialState);
	
	  return pick(partialStateWithParsedNumbers, SearchParameters.PARAMETERS);
	};
	
	/**
	 * Retrieve an object of all the properties that are not understandable as helper
	 * parameters.
	 * @param {string} queryString the query string to read
	 * @param {object} [options] the options
	 *   - prefixForParameters : prefix used for the helper configuration keys
	 *   - mapping : map short attributes to another value e.g. {q: 'query'}
	 * @return {object} the object containing the parsed configuration that doesn't
	 * to the helper
	 */
	exports.getUnrecognizedParametersInQueryString = function(queryString, options) {
	  var prefixForParameters = options && options.prefix;
	  var mapping = options && options.mapping || {};
	  var invertedMapping = invert(mapping);
	
	  var foreignConfig = {};
	  var config = qs.parse(queryString);
	  if (prefixForParameters) {
	    var prefixRegexp = new RegExp('^' + prefixForParameters);
	    forEach(config, function(v, key) {
	      if (!prefixRegexp.test(key)) foreignConfig[key] = v;
	    });
	  } else {
	    forEach(config, function(v, key) {
	      if (!shortener.decode(invertedMapping[key] || key)) foreignConfig[key] = v;
	    });
	  }
	
	  return foreignConfig;
	};
	
	/**
	 * Generate a query string for the state passed according to the options
	 * @param {SearchParameters} state state to serialize
	 * @param {object} [options] May contain the following parameters :
	 *  - prefix : prefix in front of the keys
	 *  - mapping : map short attributes to another value e.g. {q: 'query'}
	 *  - moreAttributes : more values to be added in the query string. Those values
	 *    won't be prefixed.
	 *  - safe : get safe urls for use in emails, chat apps or any application auto linking urls.
	 *  All parameters and values will be encoded in a way that it's safe to share them.
	 *  Default to false for legacy reasons ()
	 * @return {string} the query string
	 */
	exports.getQueryStringFromState = function(state, options) {
	  var moreAttributes = options && options.moreAttributes;
	  var prefixForParameters = options && options.prefix || '';
	  var mapping = options && options.mapping || {};
	  var safe = options && options.safe || false;
	  var invertedMapping = invert(mapping);
	
	  var stateForUrl = safe ? state : recursiveEncode(state);
	
	  var encodedState = mapKeys(
	    stateForUrl,
	    function(v, k) {
	      var shortK = shortener.encode(k);
	      return prefixForParameters + (mapping[shortK] || shortK);
	    }
	  );
	
	  var prefixRegexp = prefixForParameters === '' ? null : new RegExp('^' + prefixForParameters);
	  var sort = bind(sortQueryStringValues, null, prefixRegexp, invertedMapping);
	  if (!isEmpty(moreAttributes)) {
	    var stateQs = qs.stringify(encodedState, {encode: safe, sort: sort});
	    var moreQs = qs.stringify(moreAttributes, {encode: safe});
	    if (!stateQs) return moreQs;
	    return stateQs + '&' + moreQs;
	  }
	
	  return qs.stringify(encodedState, {encode: safe, sort: sort});
	};


/***/ }),
/* 131 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = '2.26.1';


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var AlgoliaSearchCore = __webpack_require__(222);
	var createAlgoliasearch = __webpack_require__(224);
	
	module.exports = createAlgoliasearch(AlgoliaSearchCore, '(lite) ');


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = buildSearchMethod;
	
	var errors = __webpack_require__(62);
	
	/**
	 * Creates a search method to be used in clients
	 * @param {string} queryParam the name of the attribute used for the query
	 * @param {string} url the url
	 * @return {function} the search method
	 */
	function buildSearchMethod(queryParam, url) {
	  /**
	   * The search method. Prepares the data and send the query to Algolia.
	   * @param {string} query the string used for query search
	   * @param {object} args additional parameters to send with the search
	   * @param {function} [callback] the callback to be called with the client gets the answer
	   * @return {undefined|Promise} If the callback is not provided then this methods returns a Promise
	   */
	  return function search(query, args, callback) {
	    // warn V2 users on how to search
	    if (typeof query === 'function' && typeof args === 'object' ||
	      typeof callback === 'object') {
	      // .search(query, params, cb)
	      // .search(cb, params)
	      throw new errors.AlgoliaSearchError('index.search usage is index.search(query, params, cb)');
	    }
	
	    // Normalizing the function signature
	    if (arguments.length === 0 || typeof query === 'function') {
	      // Usage : .search(), .search(cb)
	      callback = query;
	      query = '';
	    } else if (arguments.length === 1 || typeof args === 'function') {
	      // Usage : .search(query/args), .search(query, cb)
	      callback = args;
	      args = undefined;
	    }
	    // At this point we have 3 arguments with values
	
	    // Usage : .search(args) // careful: typeof null === 'object'
	    if (typeof query === 'object' && query !== null) {
	      args = query;
	      query = undefined;
	    } else if (query === undefined || query === null) { // .search(undefined/null)
	      query = '';
	    }
	
	    var params = '';
	
	    if (query !== undefined) {
	      params += queryParam + '=' + encodeURIComponent(query);
	    }
	
	    var additionalUA;
	    if (args !== undefined) {
	      if (args.additionalUA) {
	        additionalUA = args.additionalUA;
	        delete args.additionalUA;
	      }
	      // `_getSearchParams` will augment params, do not be fooled by the = versus += from previous if
	      params = this.as._getSearchParams(args, params);
	    }
	
	
	    return this._search(params, url, callback, additionalUA);
	  };
	}


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = function omit(obj, test) {
	  var keys = __webpack_require__(343);
	  var foreach = __webpack_require__(40);
	
	  var filtered = {};
	
	  foreach(keys(obj), function doFilter(keyName) {
	    if (test(keyName) !== true) {
	      filtered[keyName] = obj[keyName];
	    }
	  });
	
	  return filtered;
	};


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.By = exports.HitsWrapper = exports.Form = exports.Input = exports.SearchIcon = exports.Root = undefined;
	
	var _templateObject = _taggedTemplateLiteralLoose(["\n  position: relative;\n  display: grid;\n  grid-gap: 1em;\n"], ["\n  position: relative;\n  display: grid;\n  grid-gap: 1em;\n"]),
	    _templateObject2 = _taggedTemplateLiteralLoose(["\n  width: 20px;\n  position: absolute;\n  left: 12px;\n  top: 9px;\n  pointer-events: none;\n  svg {\n    font-size: 20px;\n  }\n"], ["\n  width: 20px;\n  position: absolute;\n  left: 12px;\n  top: 9px;\n  pointer-events: none;\n  svg {\n    font-size: 20px;\n  }\n"]),
	    _templateObject3 = _taggedTemplateLiteralLoose(["\n  background: ", ";\n  color: ", ";\n  cursor: text;\n  width: 5em;\n  + ", " {\n    color: ", ";\n    margin: 0.3em;\n  }\n"], ["\n  background: ", ";\n  color: ", ";\n  cursor: text;\n  width: 5em;\n  + ", " {\n    color: ", ";\n    margin: 0.3em;\n  }\n"]),
	    _templateObject4 = _taggedTemplateLiteralLoose(["\n  font-size: 1em;\n  padding: 12px 20px;\n  padding-left: 40px;\n  font-size: 1.3em;\n  display: block;\n  width: 100%;\n  box-sizing: border-box;\n  border: 1px solid #eee;\n  opacity: .8;\n  border-radius: 3px;\n  &:focus {\n    opacity: 1;\n    outline: none;\n    -webkit-box-shadow: 0 0 0 2px #27c5c3;\n    box-shadow: 0 0 0 2px #27c5c3;\n    border-color: #27c5c3;\n  }\n"], ["\n  font-size: 1em;\n  padding: 12px 20px;\n  padding-left: 40px;\n  font-size: 1.3em;\n  display: block;\n  width: 100%;\n  box-sizing: border-box;\n  border: 1px solid #eee;\n  opacity: .8;\n  border-radius: 3px;\n  &:focus {\n    opacity: 1;\n    outline: none;\n    -webkit-box-shadow: 0 0 0 2px #27c5c3;\n    box-shadow: 0 0 0 2px #27c5c3;\n    border-color: #27c5c3;\n  }\n"]),
	    _templateObject5 = _taggedTemplateLiteralLoose(["\n  position: relative;\n"], ["\n  position: relative;\n"]),
	    _templateObject6 = _taggedTemplateLiteralLoose(["\n  position: absolute;\n  right: 0;\n  top: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  box-shadow: 0 0 5px rgba(0,0,0,.2);\n  padding: 20px 20px 0;\n  ul {\n    display: inline-flex;\n  }\n"], ["\n  position: absolute;\n  right: 0;\n  top: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  box-shadow: 0 0 5px rgba(0,0,0,.2);\n  padding: 20px 20px 0;\n  ul {\n    display: inline-flex;\n  }\n"]),
	    _templateObject7 = _taggedTemplateLiteralLoose(["\n  ul {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(15em, 1fr));\n    grid-gap: 1em;\n    li {\n      padding: 0.3em 0.5em;\n      background: ", ";\n      border-radius: ", ";\n    }\n  }\n"], ["\n  ul {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(15em, 1fr));\n    grid-gap: 1em;\n    li {\n      padding: 0.3em 0.5em;\n      background: ", ";\n      border-radius: ", ";\n    }\n  }\n"]),
	    _templateObject8 = _taggedTemplateLiteralLoose(["\n  display: ", ";\n  max-height: 80vh;\n  overflow-y: auto;\n  z-index: 9999;\n  position: relative;\n  background: #fff;\n  left: 0;\n  &::-webkit-scrollbar {\n    width: 20px;\n    height: 20px;\n  }\n  &::-webkit-scrollbar-track {\n    background: #f0f0f0;\n  }\n  &::-webkit-scrollbar-corner {\n    background: #000; \n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 20px;\n    background: #13c4c1;\n    background: -moz-linear-gradient(top, #13c4c1 0%, #3cc4c2 40%, #27c5c3 100%);\n    background: -webkit-linear-gradient(top, #13c4c1 0%,#3cc4c2 40%,#27c5c3 100%);\n    background: linear-gradient(to bottom, #13c4c1 0%,#3cc4c2 40%,#27c5c3 100%);\n    -webkit-box-shadow:inset 0 0 2px 2px rgba(0,0,0,.1);\n    box-shadow:inset 0 0 2px 2px rgba(0,0,0,.1);\n  }\n  ", ";\n  ul {\n    list-style: none;\n  }\n  mark {\n    color: ", ";\n    background: ", ";\n  }\n  header {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 0.3em;\n    h3 {\n      color: ", ";\n      background: ", ";\n      padding: 0.1em 0.4em;\n      border-radius: ", ";\n    }\n  }\n  h3 {\n    margin: 0 0 0.5em;\n  }\n  h4 {\n    margin-bottom: 0.3em;\n  }\n"], ["\n  display: ", ";\n  max-height: 80vh;\n  overflow-y: auto;\n  z-index: 9999;\n  position: relative;\n  background: #fff;\n  left: 0;\n  &::-webkit-scrollbar {\n    width: 20px;\n    height: 20px;\n  }\n  &::-webkit-scrollbar-track {\n    background: #f0f0f0;\n  }\n  &::-webkit-scrollbar-corner {\n    background: #000; \n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 20px;\n    background: #13c4c1;\n    background: -moz-linear-gradient(top, #13c4c1 0%, #3cc4c2 40%, #27c5c3 100%);\n    background: -webkit-linear-gradient(top, #13c4c1 0%,#3cc4c2 40%,#27c5c3 100%);\n    background: linear-gradient(to bottom, #13c4c1 0%,#3cc4c2 40%,#27c5c3 100%);\n    -webkit-box-shadow:inset 0 0 2px 2px rgba(0,0,0,.1);\n    box-shadow:inset 0 0 2px 2px rgba(0,0,0,.1);\n  }\n  ", ";\n  ul {\n    list-style: none;\n  }\n  mark {\n    color: ", ";\n    background: ", ";\n  }\n  header {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 0.3em;\n    h3 {\n      color: ", ";\n      background: ", ";\n      padding: 0.1em 0.4em;\n      border-radius: ", ";\n    }\n  }\n  h3 {\n    margin: 0 0 0.5em;\n  }\n  h4 {\n    margin-bottom: 0.3em;\n  }\n"]),
	    _templateObject9 = _taggedTemplateLiteralLoose(["\n  font-size: 0.7em;\n  text-align: right;\n  padding: 0;\n  background: #fafafa;\n  padding: 9px 15px;\n  margin-top: 30px;\n  margin-left: -20px;\n  margin-right: -20px;\n"], ["\n  font-size: 0.7em;\n  text-align: right;\n  padding: 0;\n  background: #fafafa;\n  padding: 9px 15px;\n  margin-top: 30px;\n  margin-left: -20px;\n  margin-right: -20px;\n"]);
	
	var _styledComponents = __webpack_require__(79);
	
	var _styledComponents2 = _interopRequireDefault(_styledComponents);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }
	
	var Root = exports.Root = _styledComponents2.default.div(_templateObject);
	
	var SearchIcon = exports.SearchIcon = _styledComponents2.default.div(_templateObject2);
	
	var focussed = (0, _styledComponents.css)(_templateObject3, function (props) {
	  return props.theme.white;
	}, function (props) {
	  return props.theme.darkBlue;
	}, SearchIcon, function (props) {
	  return props.theme.darkBlue;
	});
	
	var Input = exports.Input = _styledComponents2.default.input(_templateObject4);
	
	var Form = exports.Form = _styledComponents2.default.div(_templateObject5);
	
	var list = (0, _styledComponents.css)(_templateObject6);
	
	var grid = (0, _styledComponents.css)(_templateObject7, function (props) {
	  return props.theme.veryLightGray;
	}, function (props) {
	  return props.theme.smallBorderRadius;
	});
	
	var HitsWrapper = exports.HitsWrapper = _styledComponents2.default.div(_templateObject8, function (props) {
	  return props.show ? "block" : "none";
	}, function (props) {
	  return props.hitsAsGrid ? grid : list;
	}, function (props) {
	  return props.theme.lightBlue;
	}, function (props) {
	  return props.theme.darkBlue;
	}, function (props) {
	  return props.theme.white;
	}, function (props) {
	  return props.theme.gray;
	}, function (props) {
	  return props.theme.smallBorderRadius;
	});
	
	var By = exports.By = _styledComponents2.default.div(_templateObject9);

/***/ }),
/* 136 */
/***/ (function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	function EventEmitter() {
	  this._events = this._events || {};
	  this._maxListeners = this._maxListeners || undefined;
	}
	module.exports = EventEmitter;
	
	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;
	
	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined;
	
	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	EventEmitter.defaultMaxListeners = 10;
	
	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function(n) {
	  if (!isNumber(n) || n < 0 || isNaN(n))
	    throw TypeError('n must be a positive number');
	  this._maxListeners = n;
	  return this;
	};
	
	EventEmitter.prototype.emit = function(type) {
	  var er, handler, len, args, i, listeners;
	
	  if (!this._events)
	    this._events = {};
	
	  // If there is no 'error' event listener then throw.
	  if (type === 'error') {
	    if (!this._events.error ||
	        (isObject(this._events.error) && !this._events.error.length)) {
	      er = arguments[1];
	      if (er instanceof Error) {
	        throw er; // Unhandled 'error' event
	      } else {
	        // At least give some kind of context to the user
	        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
	        err.context = er;
	        throw err;
	      }
	    }
	  }
	
	  handler = this._events[type];
	
	  if (isUndefined(handler))
	    return false;
	
	  if (isFunction(handler)) {
	    switch (arguments.length) {
	      // fast cases
	      case 1:
	        handler.call(this);
	        break;
	      case 2:
	        handler.call(this, arguments[1]);
	        break;
	      case 3:
	        handler.call(this, arguments[1], arguments[2]);
	        break;
	      // slower
	      default:
	        args = Array.prototype.slice.call(arguments, 1);
	        handler.apply(this, args);
	    }
	  } else if (isObject(handler)) {
	    args = Array.prototype.slice.call(arguments, 1);
	    listeners = handler.slice();
	    len = listeners.length;
	    for (i = 0; i < len; i++)
	      listeners[i].apply(this, args);
	  }
	
	  return true;
	};
	
	EventEmitter.prototype.addListener = function(type, listener) {
	  var m;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events)
	    this._events = {};
	
	  // To avoid recursion in the case that type === "newListener"! Before
	  // adding it to the listeners, first emit "newListener".
	  if (this._events.newListener)
	    this.emit('newListener', type,
	              isFunction(listener.listener) ?
	              listener.listener : listener);
	
	  if (!this._events[type])
	    // Optimize the case of one listener. Don't need the extra array object.
	    this._events[type] = listener;
	  else if (isObject(this._events[type]))
	    // If we've already got an array, just append.
	    this._events[type].push(listener);
	  else
	    // Adding the second element, need to change to array.
	    this._events[type] = [this._events[type], listener];
	
	  // Check for listener leak
	  if (isObject(this._events[type]) && !this._events[type].warned) {
	    if (!isUndefined(this._maxListeners)) {
	      m = this._maxListeners;
	    } else {
	      m = EventEmitter.defaultMaxListeners;
	    }
	
	    if (m && m > 0 && this._events[type].length > m) {
	      this._events[type].warned = true;
	      console.error('(node) warning: possible EventEmitter memory ' +
	                    'leak detected. %d listeners added. ' +
	                    'Use emitter.setMaxListeners() to increase limit.',
	                    this._events[type].length);
	      if (typeof console.trace === 'function') {
	        // not supported in IE 10
	        console.trace();
	      }
	    }
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.on = EventEmitter.prototype.addListener;
	
	EventEmitter.prototype.once = function(type, listener) {
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  var fired = false;
	
	  function g() {
	    this.removeListener(type, g);
	
	    if (!fired) {
	      fired = true;
	      listener.apply(this, arguments);
	    }
	  }
	
	  g.listener = listener;
	  this.on(type, g);
	
	  return this;
	};
	
	// emits a 'removeListener' event iff the listener was removed
	EventEmitter.prototype.removeListener = function(type, listener) {
	  var list, position, length, i;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events || !this._events[type])
	    return this;
	
	  list = this._events[type];
	  length = list.length;
	  position = -1;
	
	  if (list === listener ||
	      (isFunction(list.listener) && list.listener === listener)) {
	    delete this._events[type];
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	
	  } else if (isObject(list)) {
	    for (i = length; i-- > 0;) {
	      if (list[i] === listener ||
	          (list[i].listener && list[i].listener === listener)) {
	        position = i;
	        break;
	      }
	    }
	
	    if (position < 0)
	      return this;
	
	    if (list.length === 1) {
	      list.length = 0;
	      delete this._events[type];
	    } else {
	      list.splice(position, 1);
	    }
	
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.removeAllListeners = function(type) {
	  var key, listeners;
	
	  if (!this._events)
	    return this;
	
	  // not listening for removeListener, no need to emit
	  if (!this._events.removeListener) {
	    if (arguments.length === 0)
	      this._events = {};
	    else if (this._events[type])
	      delete this._events[type];
	    return this;
	  }
	
	  // emit removeListener for all listeners on all events
	  if (arguments.length === 0) {
	    for (key in this._events) {
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }
	    this.removeAllListeners('removeListener');
	    this._events = {};
	    return this;
	  }
	
	  listeners = this._events[type];
	
	  if (isFunction(listeners)) {
	    this.removeListener(type, listeners);
	  } else if (listeners) {
	    // LIFO order
	    while (listeners.length)
	      this.removeListener(type, listeners[listeners.length - 1]);
	  }
	  delete this._events[type];
	
	  return this;
	};
	
	EventEmitter.prototype.listeners = function(type) {
	  var ret;
	  if (!this._events || !this._events[type])
	    ret = [];
	  else if (isFunction(this._events[type]))
	    ret = [this._events[type]];
	  else
	    ret = this._events[type].slice();
	  return ret;
	};
	
	EventEmitter.prototype.listenerCount = function(type) {
	  if (this._events) {
	    var evlistener = this._events[type];
	
	    if (isFunction(evlistener))
	      return 1;
	    else if (evlistener)
	      return evlistener.length;
	  }
	  return 0;
	};
	
	EventEmitter.listenerCount = function(emitter, type) {
	  return emitter.listenerCount(type);
	};
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	
	function isUndefined(arg) {
	  return arg === void 0;
	}


/***/ }),
/* 137 */,
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

	/*!
	 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
	 *
	 * Copyright (c) 2014-2017, Jon Schlinkert.
	 * Released under the MIT License.
	 */
	
	'use strict';
	
	var isObject = __webpack_require__(252);
	
	function isObjectObject(o) {
	  return isObject(o) === true
	    && Object.prototype.toString.call(o) === '[object Object]';
	}
	
	module.exports = function isPlainObject(o) {
	  var ctor,prot;
	
	  if (isObjectObject(o) === false) return false;
	
	  // If has modified constructor
	  ctor = o.constructor;
	  if (typeof ctor !== 'function') return false;
	
	  // If has modified prototype
	  prot = ctor.prototype;
	  if (isObjectObject(prot) === false) return false;
	
	  // If constructor does not have an Object-specific method
	  if (prot.hasOwnProperty('isPrototypeOf') === false) {
	    return false;
	  }
	
	  // Most likely a plain Object
	  return true;
	};


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(310),
	    listCacheDelete = __webpack_require__(311),
	    listCacheGet = __webpack_require__(312),
	    listCacheHas = __webpack_require__(313),
	    listCacheSet = __webpack_require__(314);
	
	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;
	
	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}
	
	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;
	
	module.exports = ListCache;


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(30);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(41);
	
	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  var length = array == null ? 0 : array.length;
	  return !!length && baseIndexOf(array, value, 0) > -1;
	}
	
	module.exports = arrayIncludes;


/***/ }),
/* 142 */
/***/ (function(module, exports) {

	/**
	 * This function is like `arrayIncludes` except that it accepts a comparator.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @param {Function} comparator The comparator invoked per element.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludesWith(array, value, comparator) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (comparator(value, array[index])) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arrayIncludesWith;


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(49),
	    eq = __webpack_require__(71);
	
	/**
	 * This function is like `assignValue` except that it doesn't assign
	 * `undefined` values.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignMergeValue(object, key, value) {
	  if ((value !== undefined && !eq(object[key], value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}
	
	module.exports = assignMergeValue;


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(49),
	    eq = __webpack_require__(71);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}
	
	module.exports = assignValue;


/***/ }),
/* 145 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.clamp` which doesn't coerce arguments.
	 *
	 * @private
	 * @param {number} number The number to clamp.
	 * @param {number} [lower] The lower bound.
	 * @param {number} upper The upper bound.
	 * @returns {number} Returns the clamped number.
	 */
	function baseClamp(number, lower, upper) {
	  if (number === number) {
	    if (upper !== undefined) {
	      number = number <= upper ? number : upper;
	    }
	    if (lower !== undefined) {
	      number = number >= lower ? number : lower;
	    }
	  }
	  return number;
	}
	
	module.exports = baseClamp;


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(32);
	
	/** Built-in value references. */
	var objectCreate = Object.create;
	
	/**
	 * The base implementation of `_.create` without support for assigning
	 * properties to the created object.
	 *
	 * @private
	 * @param {Object} proto The object to inherit from.
	 * @returns {Object} Returns the new object.
	 */
	var baseCreate = (function() {
	  function object() {}
	  return function(proto) {
	    if (!isObject(proto)) {
	      return {};
	    }
	    if (objectCreate) {
	      return objectCreate(proto);
	    }
	    object.prototype = proto;
	    var result = new object;
	    object.prototype = undefined;
	    return result;
	  };
	}());
	
	module.exports = baseCreate;


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(254),
	    isFlattenable = __webpack_require__(307);
	
	/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, depth, predicate, isStrict, result) {
	  var index = -1,
	      length = array.length;
	
	  predicate || (predicate = isFlattenable);
	  result || (result = []);
	
	  while (++index < length) {
	    var value = array[index];
	    if (depth > 0 && predicate(value)) {
	      if (depth > 1) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, depth - 1, predicate, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = baseFlatten;


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(290);
	
	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();
	
	module.exports = baseFor;


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(98),
	    baseSet = __webpack_require__(272),
	    castPath = __webpack_require__(42);
	
	/**
	 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} paths The property paths to pick.
	 * @param {Function} predicate The function invoked per property.
	 * @returns {Object} Returns the new object.
	 */
	function basePickBy(object, paths, predicate) {
	  var index = -1,
	      length = paths.length,
	      result = {};
	
	  while (++index < length) {
	    var path = paths[index],
	        value = baseGet(object, path);
	
	    if (predicate(value, path)) {
	      baseSet(result, castPath(path, object), value);
	    }
	  }
	  return result;
	}
	
	module.exports = basePickBy;


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(140),
	    arrayMap = __webpack_require__(34),
	    isArray = __webpack_require__(21),
	    isSymbol = __webpack_require__(54);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;
	
	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;
	
	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isArray(value)) {
	    // Recursively convert values (susceptible to call stack limits).
	    return arrayMap(value, baseToString) + '';
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}
	
	module.exports = baseToString;


/***/ }),
/* 151 */
/***/ (function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;
	
	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}
	
	module.exports = copyArray;


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(144),
	    baseAssignValue = __webpack_require__(49);
	
	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  var isNew = !object;
	  object || (object = {});
	
	  var index = -1,
	      length = props.length;
	
	  while (++index < length) {
	    var key = props[index];
	
	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;
	
	    if (newValue === undefined) {
	      newValue = source[key];
	    }
	    if (isNew) {
	      baseAssignValue(object, key, newValue);
	    } else {
	      assignValue(object, key, newValue);
	    }
	  }
	  return object;
	}
	
	module.exports = copyObject;


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

	var composeArgs = __webpack_require__(286),
	    composeArgsRight = __webpack_require__(287),
	    countHolders = __webpack_require__(288),
	    createCtor = __webpack_require__(68),
	    createRecurry = __webpack_require__(154),
	    getHolder = __webpack_require__(50),
	    reorder = __webpack_require__(318),
	    replaceHolders = __webpack_require__(51),
	    root = __webpack_require__(30);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_ARY_FLAG = 128,
	    WRAP_FLIP_FLAG = 512;
	
	/**
	 * Creates a function that wraps `func` to invoke it with optional `this`
	 * binding of `thisArg`, partial application, and currying.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to
	 *  the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [partialsRight] The arguments to append to those provided
	 *  to the new function.
	 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	  var isAry = bitmask & WRAP_ARY_FLAG,
	      isBind = bitmask & WRAP_BIND_FLAG,
	      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
	      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
	      isFlip = bitmask & WRAP_FLIP_FLAG,
	      Ctor = isBindKey ? undefined : createCtor(func);
	
	  function wrapper() {
	    var length = arguments.length,
	        args = Array(length),
	        index = length;
	
	    while (index--) {
	      args[index] = arguments[index];
	    }
	    if (isCurried) {
	      var placeholder = getHolder(wrapper),
	          holdersCount = countHolders(args, placeholder);
	    }
	    if (partials) {
	      args = composeArgs(args, partials, holders, isCurried);
	    }
	    if (partialsRight) {
	      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	    }
	    length -= holdersCount;
	    if (isCurried && length < arity) {
	      var newHolders = replaceHolders(args, placeholder);
	      return createRecurry(
	        func, bitmask, createHybrid, wrapper.placeholder, thisArg,
	        args, newHolders, argPos, ary, arity - length
	      );
	    }
	    var thisBinding = isBind ? thisArg : this,
	        fn = isBindKey ? thisBinding[func] : func;
	
	    length = args.length;
	    if (argPos) {
	      args = reorder(args, argPos);
	    } else if (isFlip && length > 1) {
	      args.reverse();
	    }
	    if (isAry && ary < length) {
	      args.length = ary;
	    }
	    if (this && this !== root && this instanceof wrapper) {
	      fn = Ctor || createCtor(fn);
	    }
	    return fn.apply(thisBinding, args);
	  }
	  return wrapper;
	}
	
	module.exports = createHybrid;


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

	var isLaziable = __webpack_require__(309),
	    setData = __webpack_require__(162),
	    setWrapToString = __webpack_require__(164);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_BOUND_FLAG = 4,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/**
	 * Creates a function that wraps `func` to continue currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {Function} wrapFunc The function to create the `func` wrapper.
	 * @param {*} placeholder The placeholder value.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to
	 *  the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	  var isCurry = bitmask & WRAP_CURRY_FLAG,
	      newHolders = isCurry ? holders : undefined,
	      newHoldersRight = isCurry ? undefined : holders,
	      newPartials = isCurry ? partials : undefined,
	      newPartialsRight = isCurry ? undefined : partials;
	
	  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
	  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
	
	  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
	    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
	  }
	  var newData = [
	    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	    newHoldersRight, argPos, ary, arity
	  ];
	
	  var result = wrapFunc.apply(undefined, newData);
	  if (isLaziable(func)) {
	    setData(result, newData);
	  }
	  result.placeholder = placeholder;
	  return setWrapToString(result, func, bitmask);
	}
	
	module.exports = createRecurry;


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

	var flatten = __webpack_require__(166),
	    overRest = __webpack_require__(160),
	    setToString = __webpack_require__(163);
	
	/**
	 * A specialized version of `baseRest` which flattens the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @returns {Function} Returns the new function.
	 */
	function flatRest(func) {
	  return setToString(overRest(func, undefined, flatten), func + '');
	}
	
	module.exports = flatRest;


/***/ }),
/* 156 */
/***/ (function(module, exports) {

	/**
	 * This function is like
	 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * except that it includes inherited enumerable properties.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function nativeKeysIn(object) {
	  var result = [];
	  if (object != null) {
	    for (var key in Object(object)) {
	      result.push(key);
	    }
	  }
	  return result;
	}
	
	module.exports = nativeKeysIn;


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(59);
	
	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);
	
	module.exports = getPrototype;


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(42),
	    isArguments = __webpack_require__(60),
	    isArray = __webpack_require__(21),
	    isIndex = __webpack_require__(102),
	    isLength = __webpack_require__(122),
	    toKey = __webpack_require__(70);
	
	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = castPath(path, object);
	
	  var index = -1,
	      length = path.length,
	      result = false;
	
	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result || ++index != length) {
	    return result;
	  }
	  length = object == null ? 0 : object.length;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isArguments(object));
	}
	
	module.exports = hasPath;


/***/ }),
/* 159 */
/***/ (function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsZWJ = '\\u200d';
	
	/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');
	
	/**
	 * Checks if `string` contains Unicode symbols.
	 *
	 * @private
	 * @param {string} string The string to inspect.
	 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	 */
	function hasUnicode(string) {
	  return reHasUnicode.test(string);
	}
	
	module.exports = hasUnicode;


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(97);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * A specialized version of `baseRest` which transforms the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @param {Function} transform The rest array transform.
	 * @returns {Function} Returns the new function.
	 */
	function overRest(func, start, transform) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);
	
	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = transform(array);
	    return apply(func, this, otherArgs);
	  };
	}
	
	module.exports = overRest;


/***/ }),
/* 161 */
/***/ (function(module, exports) {

	/**
	 * Gets the value at `key`, unless `key` is "__proto__".
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function safeGet(object, key) {
	  if (key == '__proto__') {
	    return;
	  }
	
	  return object[key];
	}
	
	module.exports = safeGet;


/***/ }),
/* 162 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 163 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 164 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(259),
	    baseIteratee = __webpack_require__(35),
	    toInteger = __webpack_require__(44);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * This method is like `_.find` except that it returns the index of the first
	 * element `predicate` returns truthy for instead of the element itself.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {number} Returns the index of the found element, else `-1`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'active': false },
	 *   { 'user': 'fred',    'active': false },
	 *   { 'user': 'pebbles', 'active': true }
	 * ];
	 *
	 * _.findIndex(users, function(o) { return o.user == 'barney'; });
	 * // => 0
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.findIndex(users, { 'user': 'fred', 'active': false });
	 * // => 1
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.findIndex(users, ['active', false]);
	 * // => 0
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.findIndex(users, 'active');
	 * // => 2
	 */
	function findIndex(array, predicate, fromIndex) {
	  var length = array == null ? 0 : array.length;
	  if (!length) {
	    return -1;
	  }
	  var index = fromIndex == null ? 0 : toInteger(fromIndex);
	  if (index < 0) {
	    index = nativeMax(length + index, 0);
	  }
	  return baseFindIndex(array, baseIteratee(predicate, 3), index);
	}
	
	module.exports = findIndex;


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(147);
	
	/**
	 * Flattens `array` a single level deep.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to flatten.
	 * @returns {Array} Returns the new flattened array.
	 * @example
	 *
	 * _.flatten([1, [2, [3, [4]], 5]]);
	 * // => [1, 2, [3, [4]], 5]
	 */
	function flatten(array) {
	  var length = array == null ? 0 : array.length;
	  return length ? baseFlatten(array, 1) : [];
	}
	
	module.exports = flatten;


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

	var constant = __webpack_require__(322),
	    createInverter = __webpack_require__(294),
	    identity = __webpack_require__(106);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Creates an object composed of the inverted keys and values of `object`.
	 * If `object` contains duplicate values, subsequent values overwrite
	 * property assignments of previous values.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.7.0
	 * @category Object
	 * @param {Object} object The object to invert.
	 * @returns {Object} Returns the new inverted object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2, 'c': 1 };
	 *
	 * _.invert(object);
	 * // => { '1': 'c', '2': 'b' }
	 */
	var invert = createInverter(function(result, value, key) {
	  if (value != null &&
	      typeof value.toString != 'function') {
	    value = nativeObjectToString.call(value);
	  }
	
	  result[value] = key;
	}, constant(identity));
	
	module.exports = invert;


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(264);
	
	/**
	 * Performs a deep comparison between two values to determine if they are
	 * equivalent.
	 *
	 * **Note:** This method supports comparing arrays, array buffers, booleans,
	 * date objects, error objects, maps, numbers, `Object` objects, regexes,
	 * sets, strings, symbols, and typed arrays. `Object` objects are compared
	 * by their own, not inherited, enumerable properties. Functions and DOM
	 * nodes are compared by strict equality, i.e. `===`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.isEqual(object, other);
	 * // => true
	 *
	 * object === other;
	 * // => false
	 */
	function isEqual(value, other) {
	  return baseIsEqual(value, other);
	}
	
	module.exports = isEqual;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(58),
	    isObjectLike = __webpack_require__(53);
	
	/** `Object#toString` result references. */
	var numberTag = '[object Number]';
	
	/**
	 * Checks if `value` is classified as a `Number` primitive or object.
	 *
	 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	 * classified as numbers, use the `_.isFinite` method.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	 * @example
	 *
	 * _.isNumber(3);
	 * // => true
	 *
	 * _.isNumber(Number.MIN_VALUE);
	 * // => true
	 *
	 * _.isNumber(Infinity);
	 * // => true
	 *
	 * _.isNumber('3');
	 * // => false
	 */
	function isNumber(value) {
	  return typeof value == 'number' ||
	    (isObjectLike(value) && baseGetTag(value) == numberTag);
	}
	
	module.exports = isNumber;


/***/ }),
/* 170 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is `undefined`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	 * @example
	 *
	 * _.isUndefined(void 0);
	 * // => true
	 *
	 * _.isUndefined(null);
	 * // => false
	 */
	function isUndefined(value) {
	  return value === undefined;
	}
	
	module.exports = isUndefined;


/***/ }),
/* 171 */
/***/ (function(module, exports) {

	/**
	 * Gets the last element of `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to query.
	 * @returns {*} Returns the last element of `array`.
	 * @example
	 *
	 * _.last([1, 2, 3]);
	 * // => 3
	 */
	function last(array) {
	  var length = array == null ? 0 : array.length;
	  return length ? array[length - 1] : undefined;
	}
	
	module.exports = last;


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

	var toNumber = __webpack_require__(340);
	
	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;
	
	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}
	
	module.exports = toFinite;


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(150),
	    castSlice = __webpack_require__(193),
	    charsEndIndex = __webpack_require__(279),
	    charsStartIndex = __webpack_require__(280),
	    stringToArray = __webpack_require__(194),
	    toString = __webpack_require__(61);
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/**
	 * Removes leading and trailing whitespace or specified characters from `string`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to trim.
	 * @param {string} [chars=whitespace] The characters to trim.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {string} Returns the trimmed string.
	 * @example
	 *
	 * _.trim('  abc  ');
	 * // => 'abc'
	 *
	 * _.trim('-_-abc-_-', '_-');
	 * // => 'abc'
	 *
	 * _.map(['  foo  ', '  bar  '], _.trim);
	 * // => ['foo', 'bar']
	 */
	function trim(string, chars, guard) {
	  string = toString(string);
	  if (string && (guard || chars === undefined)) {
	    return string.replace(reTrim, '');
	  }
	  if (!string || !(chars = baseToString(chars))) {
	    return string;
	  }
	  var strSymbols = stringToArray(string),
	      chrSymbols = stringToArray(chars),
	      start = charsStartIndex(strSymbols, chrSymbols),
	      end = charsEndIndex(strSymbols, chrSymbols) + 1;
	
	  return castSlice(strSymbols, start, end).join('');
	}
	
	module.exports = trim;


/***/ }),
/* 174 */
/***/ (function(module, exports) {

	'use strict';
	
	var replace = String.prototype.replace;
	var percentTwenties = /%20/g;
	
	module.exports = {
	    'default': 'RFC3986',
	    formatters: {
	        RFC1738: function (value) {
	            return replace.call(value, percentTwenties, '+');
	        },
	        RFC3986: function (value) {
	            return value;
	        }
	    },
	    RFC1738: 'RFC1738',
	    RFC3986: 'RFC3986'
	};


/***/ }),
/* 175 */
/***/ (function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	'use strict';
	
	var stringifyPrimitive = function(v) {
	  switch (typeof v) {
	    case 'string':
	      return v;
	
	    case 'boolean':
	      return v ? 'true' : 'false';
	
	    case 'number':
	      return isFinite(v) ? v : '';
	
	    default:
	      return '';
	  }
	};
	
	module.exports = function(obj, sep, eq, name) {
	  sep = sep || '&';
	  eq = eq || '=';
	  if (obj === null) {
	    obj = undefined;
	  }
	
	  if (typeof obj === 'object') {
	    return map(objectKeys(obj), function(k) {
	      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
	      if (isArray(obj[k])) {
	        return map(obj[k], function(v) {
	          return ks + encodeURIComponent(stringifyPrimitive(v));
	        }).join(sep);
	      } else {
	        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
	      }
	    }).join(sep);
	
	  }
	
	  if (!name) return '';
	  return encodeURIComponent(stringifyPrimitive(name)) + eq +
	         encodeURIComponent(stringifyPrimitive(obj));
	};
	
	var isArray = Array.isArray || function (xs) {
	  return Object.prototype.toString.call(xs) === '[object Array]';
	};
	
	function map (xs, f) {
	  if (xs.map) return xs.map(f);
	  var res = [];
	  for (var i = 0; i < xs.length; i++) {
	    res.push(f(xs[i], i));
	  }
	  return res;
	}
	
	var objectKeys = Object.keys || function (obj) {
	  var res = [];
	  for (var key in obj) {
	    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
	  }
	  return res;
	};


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = getCurrentHref;
	
	var _canUseDom = __webpack_require__(505);
	
	var _canUseDom2 = _interopRequireDefault(_canUseDom);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getCurrentHref() {
	  if (!_canUseDom2.default) {
	    return 'https://www.facebook.com';
	  }
	
	  return window.location.href;
	}
	//# sourceMappingURL=getCurrentHref.js.map

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(20));
	
	var _keys2 = _interopRequireDefault(__webpack_require__(55));
	
	var _difference2 = _interopRequireDefault(__webpack_require__(323));
	
	var _omit2 = _interopRequireDefault(__webpack_require__(37));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	function getId() {
	  return 'configure';
	}
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaConfigure',
	  getProvidedProps: function getProvidedProps() {
	    return {};
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props) {
	    var items = (0, _omit2.default)(props, 'children');
	    return searchParameters.setQueryParameters(items);
	  },
	  transitionState: function transitionState(props, prevSearchState, nextSearchState) {
	    var id = getId();
	    var items = (0, _omit2.default)(props, 'children');
	    var nonPresentKeys = this._props ? (0, _difference2.default)((0, _keys2.default)(this._props), (0, _keys2.default)(props)) : [];
	    this._props = props;
	    var nextValue = (0, _defineProperty2.default)({}, id, (0, _objectSpread2.default)({}, (0, _omit2.default)(nextSearchState[id], nonPresentKeys), items));
	    return (0, _indexUtils.refineValue)(nextSearchState, nextValue, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    var id = getId();
	    var indexId = (0, _indexUtils.getIndexId)(this.context);
	    var subState = (0, _indexUtils.hasMultipleIndices)(this.context) && searchState.indices ? searchState.indices[indexId] : searchState;
	    var configureKeys = subState && subState[id] ? Object.keys(subState[id]) : [];
	    var configureState = configureKeys.reduce(function (acc, item) {
	      if (!props[item]) {
	        acc[item] = subState[id][item];
	      }
	
	      return acc;
	    }, {});
	    var nextValue = (0, _defineProperty2.default)({}, id, configureState);
	    return (0, _indexUtils.refineValue)(searchState, nextValue, this.context);
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 178 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	var _default = '5.4.0';
	exports.default = _default;

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.Highlight = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	function generateKey(i, value) {
	  return "split-".concat(i, "-").concat(value);
	}
	
	var Highlight = function Highlight(_ref) {
	  var cx = _ref.cx,
	      value = _ref.value,
	      highlightedTagName = _ref.highlightedTagName,
	      isHighlighted = _ref.isHighlighted,
	      nonHighlightedTagName = _ref.nonHighlightedTagName;
	  var TagName = isHighlighted ? highlightedTagName : nonHighlightedTagName;
	  var className = isHighlighted ? 'highlighted' : 'nonHighlighted';
	  return _react.default.createElement(TagName, {
	    className: cx(className)
	  }, value);
	};
	
	exports.Highlight = Highlight;
	Highlight.propTypes = {
	  cx: _propTypes.default.func.isRequired,
	  value: _propTypes.default.string.isRequired,
	  isHighlighted: _propTypes.default.bool.isRequired,
	  highlightedTagName: _propTypes.default.string.isRequired,
	  nonHighlightedTagName: _propTypes.default.string.isRequired
	};
	
	var Highlighter = function Highlighter(_ref2) {
	  var cx = _ref2.cx,
	      hit = _ref2.hit,
	      attribute = _ref2.attribute,
	      highlight = _ref2.highlight,
	      highlightProperty = _ref2.highlightProperty,
	      tagName = _ref2.tagName,
	      nonHighlightedTagName = _ref2.nonHighlightedTagName,
	      separator = _ref2.separator,
	      className = _ref2.className;
	  var parsedHighlightedValue = highlight({
	    hit: hit,
	    attribute: attribute,
	    highlightProperty: highlightProperty
	  });
	  return _react.default.createElement("span", {
	    className: (0, _classnames.default)(cx(''), className)
	  }, parsedHighlightedValue.map(function (item, i) {
	    if (Array.isArray(item)) {
	      var isLast = i === parsedHighlightedValue.length - 1;
	      return _react.default.createElement("span", {
	        key: generateKey(i, hit[attribute][i])
	      }, item.map(function (element, index) {
	        return _react.default.createElement(Highlight, {
	          cx: cx,
	          key: generateKey(index, element.value),
	          value: element.value,
	          highlightedTagName: tagName,
	          nonHighlightedTagName: nonHighlightedTagName,
	          isHighlighted: element.isHighlighted
	        });
	      }), !isLast && _react.default.createElement("span", {
	        className: cx('separator')
	      }, separator));
	    }
	
	    return _react.default.createElement(Highlight, {
	      cx: cx,
	      key: generateKey(i, item.value),
	      value: item.value,
	      highlightedTagName: tagName,
	      nonHighlightedTagName: nonHighlightedTagName,
	      isHighlighted: item.isHighlighted
	    });
	  }));
	};
	
	Highlighter.propTypes = {
	  cx: _propTypes.default.func.isRequired,
	  hit: _propTypes.default.object.isRequired,
	  attribute: _propTypes.default.string.isRequired,
	  highlight: _propTypes.default.func.isRequired,
	  highlightProperty: _propTypes.default.string.isRequired,
	  tagName: _propTypes.default.string,
	  nonHighlightedTagName: _propTypes.default.string,
	  className: _propTypes.default.string,
	  separator: _propTypes.default.node
	};
	Highlighter.defaultProps = {
	  tagName: 'em',
	  nonHighlightedTagName: 'span',
	  className: '',
	  separator: ', '
	};
	var _default = Highlighter;
	exports.default = _default;

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(22));
	
	var _objectSpread3 = _interopRequireDefault(__webpack_require__(20));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var cx = (0, _utils.createClassNames)('SearchBox');
	
	var defaultLoadingIndicator = _react.default.createElement("svg", {
	  width: "18",
	  height: "18",
	  viewBox: "0 0 38 38",
	  xmlns: "http://www.w3.org/2000/svg",
	  stroke: "#444",
	  className: cx('loadingIcon')
	}, _react.default.createElement("g", {
	  fill: "none",
	  fillRule: "evenodd"
	}, _react.default.createElement("g", {
	  transform: "translate(1 1)",
	  strokeWidth: "2"
	}, _react.default.createElement("circle", {
	  strokeOpacity: ".5",
	  cx: "18",
	  cy: "18",
	  r: "18"
	}), _react.default.createElement("path", {
	  d: "M36 18c0-9.94-8.06-18-18-18"
	}, _react.default.createElement("animateTransform", {
	  attributeName: "transform",
	  type: "rotate",
	  from: "0 18 18",
	  to: "360 18 18",
	  dur: "1s",
	  repeatCount: "indefinite"
	})))));
	
	var defaultReset = _react.default.createElement("svg", {
	  className: cx('resetIcon'),
	  xmlns: "http://www.w3.org/2000/svg",
	  viewBox: "0 0 20 20",
	  width: "10",
	  height: "10"
	}, _react.default.createElement("path", {
	  d: "M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z"
	}));
	
	var defaultSubmit = _react.default.createElement("svg", {
	  className: cx('submitIcon'),
	  xmlns: "http://www.w3.org/2000/svg",
	  width: "10",
	  height: "10",
	  viewBox: "0 0 40 40"
	}, _react.default.createElement("path", {
	  d: "M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z"
	}));
	
	var SearchBox =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(SearchBox, _Component);
	
	  function SearchBox(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, SearchBox);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SearchBox).call(this));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getQuery", function () {
	      return _this.props.searchAsYouType ? _this.props.currentRefinement : _this.state.query;
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "onInputMount", function (input) {
	      _this.input = input;
	
	      if (_this.props.__inputRef) {
	        _this.props.__inputRef(input);
	      }
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "onKeyDown", function (e) {
	      if (!_this.props.focusShortcuts) {
	        return;
	      }
	
	      var shortcuts = _this.props.focusShortcuts.map(function (key) {
	        return typeof key === 'string' ? key.toUpperCase().charCodeAt(0) : key;
	      });
	
	      var elt = e.target || e.srcElement;
	      var tagName = elt.tagName;
	
	      if (elt.isContentEditable || tagName === 'INPUT' || tagName === 'SELECT' || tagName === 'TEXTAREA') {
	        // already in an input
	        return;
	      }
	
	      var which = e.which || e.keyCode;
	
	      if (shortcuts.indexOf(which) === -1) {
	        // not the right shortcut
	        return;
	      }
	
	      _this.input.focus();
	
	      e.stopPropagation();
	      e.preventDefault();
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "onSubmit", function (e) {
	      e.preventDefault();
	      e.stopPropagation();
	
	      _this.input.blur();
	
	      var _this$props = _this.props,
	          refine = _this$props.refine,
	          searchAsYouType = _this$props.searchAsYouType;
	
	      if (!searchAsYouType) {
	        refine(_this.getQuery());
	      }
	
	      return false;
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "onChange", function (event) {
	      var _this$props2 = _this.props,
	          searchAsYouType = _this$props2.searchAsYouType,
	          refine = _this$props2.refine,
	          onChange = _this$props2.onChange;
	      var value = event.target.value;
	
	      if (searchAsYouType) {
	        refine(value);
	      } else {
	        _this.setState({
	          query: value
	        });
	      }
	
	      if (onChange) {
	        onChange(event);
	      }
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "onReset", function (event) {
	      var _this$props3 = _this.props,
	          searchAsYouType = _this$props3.searchAsYouType,
	          refine = _this$props3.refine,
	          onReset = _this$props3.onReset;
	      refine('');
	
	      _this.input.focus();
	
	      if (!searchAsYouType) {
	        _this.setState({
	          query: ''
	        });
	      }
	
	      if (onReset) {
	        onReset(event);
	      }
	    });
	    _this.state = {
	      query: props.searchAsYouType ? null : props.currentRefinement
	    };
	    return _this;
	  }
	
	  (0, _createClass2.default)(SearchBox, [{
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      document.addEventListener('keydown', this.onKeyDown);
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      document.removeEventListener('keydown', this.onKeyDown);
	    }
	  }, {
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      // Reset query when the searchParameters query has changed.
	      // This is kind of an anti-pattern (props in state), but it works here
	      // since we know for sure that searchParameters having changed means a
	      // new search has been triggered.
	      if (!nextProps.searchAsYouType && nextProps.currentRefinement !== this.props.currentRefinement) {
	        this.setState({
	          query: nextProps.currentRefinement
	        });
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this;
	
	      var _this$props4 = this.props,
	          className = _this$props4.className,
	          translate = _this$props4.translate,
	          autoFocus = _this$props4.autoFocus,
	          loadingIndicator = _this$props4.loadingIndicator,
	          submit = _this$props4.submit,
	          reset = _this$props4.reset;
	      var query = this.getQuery();
	      var searchInputEvents = Object.keys(this.props).reduce(function (props, prop) {
	        if (['onsubmit', 'onreset', 'onchange'].indexOf(prop.toLowerCase()) === -1 && prop.indexOf('on') === 0) {
	          return (0, _objectSpread3.default)({}, props, (0, _defineProperty2.default)({}, prop, _this2.props[prop]));
	        }
	
	        return props;
	      }, {});
	      var isSearchStalled = this.props.showLoadingIndicator && this.props.isSearchStalled;
	      /* eslint-disable max-len */
	
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, _react.default.createElement("form", {
	        noValidate: true,
	        onSubmit: this.props.onSubmit ? this.props.onSubmit : this.onSubmit,
	        onReset: this.onReset,
	        className: cx('form', isSearchStalled && 'form--stalledSearch'),
	        action: "",
	        role: "search"
	      }, _react.default.createElement("input", (0, _extends2.default)({
	        ref: this.onInputMount,
	        type: "search",
	        placeholder: translate('placeholder'),
	        autoFocus: autoFocus,
	        autoComplete: "off",
	        autoCorrect: "off",
	        autoCapitalize: "off",
	        spellCheck: "false",
	        required: true,
	        maxLength: "512",
	        value: query,
	        onChange: this.onChange
	      }, searchInputEvents, {
	        className: cx('input')
	      })), _react.default.createElement("button", {
	        type: "submit",
	        title: translate('submitTitle'),
	        className: cx('submit')
	      }, submit), _react.default.createElement("button", {
	        type: "reset",
	        title: translate('resetTitle'),
	        className: cx('reset'),
	        hidden: !query || isSearchStalled
	      }, reset), this.props.showLoadingIndicator && _react.default.createElement("span", {
	        hidden: !isSearchStalled,
	        className: cx('loadingIndicator')
	      }, loadingIndicator)));
	      /* eslint-enable */
	    }
	  }]);
	  return SearchBox;
	}(_react.Component);
	
	(0, _defineProperty2.default)(SearchBox, "propTypes", {
	  currentRefinement: _propTypes.default.string,
	  className: _propTypes.default.string,
	  refine: _propTypes.default.func.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  loadingIndicator: _propTypes.default.node,
	  reset: _propTypes.default.node,
	  submit: _propTypes.default.node,
	  focusShortcuts: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])),
	  autoFocus: _propTypes.default.bool,
	  searchAsYouType: _propTypes.default.bool,
	  onSubmit: _propTypes.default.func,
	  onReset: _propTypes.default.func,
	  onChange: _propTypes.default.func,
	  isSearchStalled: _propTypes.default.bool,
	  showLoadingIndicator: _propTypes.default.bool,
	  // For testing purposes
	  __inputRef: _propTypes.default.func
	});
	(0, _defineProperty2.default)(SearchBox, "defaultProps", {
	  currentRefinement: '',
	  className: '',
	  focusShortcuts: ['s', '/'],
	  autoFocus: false,
	  searchAsYouType: true,
	  showLoadingIndicator: false,
	  isSearchStalled: false,
	  loadingIndicator: defaultLoadingIndicator,
	  reset: defaultReset,
	  submit: defaultSubmit
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  resetTitle: 'Clear the search query.',
	  submitTitle: 'Submit your search query.',
	  placeholder: 'Search here…'
	})(SearchBox);
	
	exports.default = _default;

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _has2 = _interopRequireDefault(__webpack_require__(52));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var Select =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Select, _Component);
	
	  function Select() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Select);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Select)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "onChange", function (e) {
	      _this.props.onSelect(e.target.value);
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(Select, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          cx = _this$props.cx,
	          items = _this$props.items,
	          selectedItem = _this$props.selectedItem;
	      return _react.default.createElement("select", {
	        className: cx('select'),
	        value: selectedItem,
	        onChange: this.onChange
	      }, items.map(function (item) {
	        return _react.default.createElement("option", {
	          className: cx('option'),
	          key: (0, _has2.default)(item, 'key') ? item.key : item.value,
	          disabled: item.disabled,
	          value: item.value
	        }, (0, _has2.default)(item, 'label') ? item.label : item.value);
	      }));
	    }
	  }]);
	  return Select;
	}(_react.Component);
	
	exports.default = Select;
	(0, _defineProperty2.default)(Select, "propTypes", {
	  cx: _propTypes.default.func.isRequired,
	  onSelect: _propTypes.default.func.isRequired,
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired,
	    key: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	    label: _propTypes.default.string,
	    disabled: _propTypes.default.bool
	  })).isRequired,
	  selectedItem: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired
	});

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _getPrototypeOf = __webpack_require__(503);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(504);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	exports.default = shareCountFactory;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(18);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var SocialMediaShareCount = function (_Component) {
	  (0, _inherits3.default)(SocialMediaShareCount, _Component);
	
	  function SocialMediaShareCount(props) {
	    (0, _classCallCheck3.default)(this, SocialMediaShareCount);
	
	    var _this = (0, _possibleConstructorReturn3.default)(this, (SocialMediaShareCount.__proto__ || (0, _getPrototypeOf2.default)(SocialMediaShareCount)).call(this, props));
	
	    _this._isMounted = false;
	    _this.state = { count: 0 };
	    return _this;
	  }
	
	  (0, _createClass3.default)(SocialMediaShareCount, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this._isMounted = true;
	      this.updateCount(this.props.url);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.url !== this.props.url) {
	        this.updateCount(nextProps.url);
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this._isMounted = false;
	    }
	  }, {
	    key: 'updateCount',
	    value: function updateCount(url) {
	      var _this2 = this;
	
	      if (this.props.getCount) {
	        this.setState({
	          isLoading: true
	        });
	
	        this.props.getCount(url, function (count) {
	          if (_this2._isMounted) {
	            _this2.setState({
	              count: count,
	              isLoading: false
	            });
	          }
	        });
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _state = this.state,
	          count = _state.count,
	          isLoading = _state.isLoading;
	      var _props = this.props,
	          children = _props.children,
	          className = _props.className;
	
	
	      return _react2.default.createElement(
	        'div',
	        { className: (0, _classnames2.default)('SocialMediaShareCount', className) },
	        !isLoading && children(count || 0)
	      );
	    }
	  }]);
	  return SocialMediaShareCount;
	}(_react.Component);
	
	SocialMediaShareCount.propTypes = {
	  children: _propTypes2.default.func,
	  className: _propTypes2.default.string,
	  getCount: _propTypes2.default.func,
	  url: _propTypes2.default.string.isRequired
	};
	
	SocialMediaShareCount.defaultProps = {
	  children: function children(shareCount) {
	    return shareCount;
	  }
	};
	
	function shareCountFactory(getCount) {
	  return function (props) {
	    return _react2.default.createElement(SocialMediaShareCount, (0, _extends3.default)({ getCount: getCount }, props));
	  };
	}

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _StyleSheetManager$ch;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _StyleSheet = __webpack_require__(27);
	
	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
	
	var _ServerStyleSheet = __webpack_require__(80);
	
	var _ServerStyleSheet2 = _interopRequireDefault(_ServerStyleSheet);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var StyleSheetManager = function (_Component) {
	  _inherits(StyleSheetManager, _Component);
	
	  function StyleSheetManager() {
	    _classCallCheck(this, StyleSheetManager);
	
	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }
	
	  StyleSheetManager.prototype.getChildContext = function getChildContext() {
	    var _ref;
	
	    return _ref = {}, _ref[_StyleSheet.CONTEXT_KEY] = this.props.sheet, _ref;
	  };
	
	  StyleSheetManager.prototype.render = function render() {
	    /* eslint-disable react/prop-types */
	    // Flow v0.43.1 will report an error accessing the `children` property,
	    // but v0.47.0 will not. It is necessary to use a type cast instead of
	    // a "fixme" comment to satisfy both Flow versions.
	    return _react2.default.Children.only(this.props.children);
	  };
	
	  return StyleSheetManager;
	}(_react.Component);
	
	StyleSheetManager.childContextTypes = (_StyleSheetManager$ch = {}, _StyleSheetManager$ch[_StyleSheet.CONTEXT_KEY] = _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_StyleSheet2.default), _propTypes2.default.instanceOf(_ServerStyleSheet2.default)]).isRequired, _StyleSheetManager$ch);
	
	StyleSheetManager.propTypes = {
	  sheet: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_StyleSheet2.default), _propTypes2.default.instanceOf(_ServerStyleSheet2.default)]).isRequired
	};
	
	exports.default = StyleSheetManager;
	module.exports = exports['default'];

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	if (true) Object.defineProperty(exports, "babelPluginFlowReactPropTypes_proptype_Broadcast", {
	  value: __webpack_require__(3).shape({
	    publish: __webpack_require__(3).func.isRequired,
	    subscribe: __webpack_require__(3).func.isRequired,
	    unsubscribe: __webpack_require__(3).func.isRequired
	  })
	});
	/**
	 * Creates a broadcast that can be listened to, i.e. simple event emitter
	 *
	 * @see https://github.com/ReactTraining/react-broadcast
	 */
	
	var createBroadcast = function createBroadcast(initialState) {
	  var listeners = {};
	  var id = 0;
	  var state = initialState;
	
	  function publish(nextState) {
	    state = nextState;
	
	    // eslint-disable-next-line guard-for-in, no-restricted-syntax
	    for (var key in listeners) {
	      var _listener = listeners[key];
	      if (_listener === undefined) {
	        // eslint-disable-next-line no-continue
	        continue;
	      }
	
	      _listener(state);
	    }
	  }
	
	  function subscribe(listener) {
	    var currentId = id;
	    listeners[currentId] = listener;
	    id += 1;
	    listener(state);
	    return currentId;
	  }
	
	  function unsubscribe(unsubID) {
	    listeners[unsubID] = undefined;
	  }
	
	  return { publish: publish, subscribe: subscribe, unsubscribe: unsubscribe };
	};
	
	exports.default = createBroadcast;
	module.exports = exports["default"];

/***/ }),
/* 185 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (props, fallbackTheme, defaultProps) {
	  // Props should take precedence over ThemeProvider, which should take precedence over
	  // defaultProps, but React automatically puts defaultProps on props.
	
	  /* eslint-disable react/prop-types */
	  var isDefaultTheme = defaultProps && props.theme === defaultProps.theme;
	  var theme = props.theme && !isDefaultTheme ? props.theme : fallbackTheme;
	  /* eslint-enable */
	
	  return theme;
	};
	
	module.exports = exports["default"];

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.objToCss = undefined;
	
	var _hyphenateStyleName = __webpack_require__(487);
	
	var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);
	
	var _isPlainObject = __webpack_require__(138);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(3).any;
	
	var objToCss = exports.objToCss = function objToCss(obj, prevKey) {
	  var css = Object.keys(obj).filter(function (key) {
	    var chunk = obj[key];
	    return chunk !== undefined && chunk !== null && chunk !== false && chunk !== '';
	  }).map(function (key) {
	    if ((0, _isPlainObject2.default)(obj[key])) return objToCss(obj[key], key);
	    return (0, _hyphenateStyleName2.default)(key) + ': ' + obj[key] + ';';
	  }).join(' ');
	  return prevKey ? prevKey + ' {\n  ' + css + '\n}' : css;
	};
	
	var flatten = function flatten(chunks, executionContext) {
	  return chunks.reduce(function (ruleSet, chunk) {
	    /* Remove falsey values */
	    if (chunk === undefined || chunk === null || chunk === false || chunk === '') {
	      return ruleSet;
	    }
	    /* Flatten ruleSet */
	    if (Array.isArray(chunk)) {
	      return [].concat(ruleSet, flatten(chunk, executionContext));
	    }
	
	    /* Handle other components */
	    if (chunk.hasOwnProperty('styledComponentId')) {
	      // $FlowFixMe not sure how to make this pass
	      return [].concat(ruleSet, ['.' + chunk.styledComponentId]);
	    }
	
	    /* Either execute or defer the function */
	    if (typeof chunk === 'function') {
	      return executionContext ? ruleSet.concat.apply(ruleSet, flatten([chunk(executionContext)], executionContext)) : ruleSet.concat(chunk);
	    }
	
	    /* Handle objects */
	    return ruleSet.concat(
	    // $FlowFixMe have to add %checks somehow to isPlainObject
	    (0, _isPlainObject2.default)(chunk) ? objToCss(chunk) : chunk.toString());
	  }, []);
	};
	
	exports.default = flatten;

/***/ }),
/* 187 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	
	exports.default = function () {
	  return typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;
	};
	/* eslint-disable camelcase, no-undef */
	
	module.exports = exports['default'];

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	var formatRegExp = /%[sdj%]/g;
	exports.format = function(f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }
	
	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function(x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s': return String(args[i++]);
	      case '%d': return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};
	
	
	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function(fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function() {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }
	
	  if (process.noDeprecation === true) {
	    return fn;
	  }
	
	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	};
	
	
	var debugs = {};
	var debugEnviron;
	exports.debuglog = function(set) {
	  if (isUndefined(debugEnviron))
	    debugEnviron = ({"NODE_ENV":"production","PUBLIC_DIR":"/home/luubinhan/Documents/projects/blog/public","GATSBY_ALGOLIA_APP_ID":"68PEVEWLR7","GATSBY_ALGOLIA_SEARCH_KEY":"c3e0db897950a5f687e9d690d5fc9342"}).NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function() {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function() {};
	    }
	  }
	  return debugs[set];
	};
	
	
	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;
	
	
	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold' : [1, 22],
	  'italic' : [3, 23],
	  'underline' : [4, 24],
	  'inverse' : [7, 27],
	  'white' : [37, 39],
	  'grey' : [90, 39],
	  'black' : [30, 39],
	  'blue' : [34, 39],
	  'cyan' : [36, 39],
	  'green' : [32, 39],
	  'magenta' : [35, 39],
	  'red' : [31, 39],
	  'yellow' : [33, 39]
	};
	
	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};
	
	
	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];
	
	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
	           '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}
	
	
	function stylizeNoColor(str, styleType) {
	  return str;
	}
	
	
	function arrayToHash(array) {
	  var hash = {};
	
	  array.forEach(function(val, idx) {
	    hash[val] = true;
	  });
	
	  return hash;
	}
	
	
	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect &&
	      value &&
	      isFunction(value.inspect) &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }
	
	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }
	
	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);
	
	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }
	
	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value)
	      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }
	
	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }
	
	  var base = '', array = false, braces = ['{', '}'];
	
	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }
	
	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }
	
	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }
	
	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }
	
	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }
	
	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }
	
	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }
	
	  ctx.seen.push(value);
	
	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }
	
	  ctx.seen.pop();
	
	  return reduceToSingleString(output, base, braces);
	}
	
	
	function formatPrimitive(ctx, value) {
	  if (isUndefined(value))
	    return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                             .replace(/'/g, "\\'")
	                                             .replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value))
	    return ctx.stylize('' + value, 'number');
	  if (isBoolean(value))
	    return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value))
	    return ctx.stylize('null', 'null');
	}
	
	
	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}
	
	
	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}
	
	
	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }
	
	  return name + ': ' + str;
	}
	
	
	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);
	
	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }
	
	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}
	
	
	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;
	
	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;
	
	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;
	
	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;
	
	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;
	
	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;
	
	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;
	
	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;
	
	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;
	
	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;
	
	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;
	
	exports.isBuffer = __webpack_require__(450);
	
	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}
	
	
	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}
	
	
	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
	              'Oct', 'Nov', 'Dec'];
	
	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()),
	              pad(d.getMinutes()),
	              pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}
	
	
	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function() {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};
	
	
	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(89);
	
	exports._extend = function(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;
	
	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};
	
	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(90)))

/***/ }),
/* 189 */,
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Module dependencies
	 */
	
	var debug = __webpack_require__(1089)('jsonp');
	
	/**
	 * Module exports.
	 */
	
	module.exports = jsonp;
	
	/**
	 * Callback index.
	 */
	
	var count = 0;
	
	/**
	 * Noop function.
	 */
	
	function noop(){}
	
	/**
	 * JSONP handler
	 *
	 * Options:
	 *  - param {String} qs parameter (`callback`)
	 *  - prefix {String} qs parameter (`__jp`)
	 *  - name {String} qs parameter (`prefix` + incr)
	 *  - timeout {Number} how long after a timeout error is emitted (`60000`)
	 *
	 * @param {String} url
	 * @param {Object|Function} optional options / callback
	 * @param {Function} optional callback
	 */
	
	function jsonp(url, opts, fn){
	  if ('function' == typeof opts) {
	    fn = opts;
	    opts = {};
	  }
	  if (!opts) opts = {};
	
	  var prefix = opts.prefix || '__jp';
	
	  // use the callback name that was passed if one was provided.
	  // otherwise generate a unique name by incrementing our counter.
	  var id = opts.name || (prefix + (count++));
	
	  var param = opts.param || 'callback';
	  var timeout = null != opts.timeout ? opts.timeout : 60000;
	  var enc = encodeURIComponent;
	  var target = document.getElementsByTagName('script')[0] || document.head;
	  var script;
	  var timer;
	
	
	  if (timeout) {
	    timer = setTimeout(function(){
	      cleanup();
	      if (fn) fn(new Error('Timeout'));
	    }, timeout);
	  }
	
	  function cleanup(){
	    if (script.parentNode) script.parentNode.removeChild(script);
	    window[id] = noop;
	    if (timer) clearTimeout(timer);
	  }
	
	  function cancel(){
	    if (window[id]) {
	      cleanup();
	    }
	  }
	
	  window[id] = function(data){
	    debug('jsonp got', data);
	    cleanup();
	    if (fn) fn(null, data);
	  };
	
	  // add qs component
	  url += (~url.indexOf('?') ? '&' : '?') + param + '=' + enc(id);
	  url = url.replace('?&', '?');
	
	  debug('jsonp req "%s"', url);
	
	  // create script
	  script = document.createElement('script');
	  script.src = url;
	  target.parentNode.insertBefore(script, target);
	
	  return cancel;
	}


/***/ }),
/* 191 */
/***/ (function(module, exports) {

	/**
	 * Converts an ASCII `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function asciiToArray(string) {
	  return string.split('');
	}
	
	module.exports = asciiToArray;


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(59);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);
	
	module.exports = nativeKeys;


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSlice = __webpack_require__(119);
	
	/**
	 * Casts `array` to a slice if it's needed.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {number} start The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the cast slice.
	 */
	function castSlice(array, start, end) {
	  var length = array.length;
	  end = end === undefined ? length : end;
	  return (!start && end >= length) ? array : baseSlice(array, start, end);
	}
	
	module.exports = castSlice;


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

	var asciiToArray = __webpack_require__(191),
	    hasUnicode = __webpack_require__(159),
	    unicodeToArray = __webpack_require__(195);
	
	/**
	 * Converts `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function stringToArray(string) {
	  return hasUnicode(string)
	    ? unicodeToArray(string)
	    : asciiToArray(string);
	}
	
	module.exports = stringToArray;


/***/ }),
/* 195 */
/***/ (function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsVarRange = '\\ufe0e\\ufe0f';
	
	/** Used to compose unicode capture groups. */
	var rsAstral = '[' + rsAstralRange + ']',
	    rsCombo = '[' + rsComboRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsZWJ = '\\u200d';
	
	/** Used to compose unicode regexes. */
	var reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
	
	/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
	
	/**
	 * Converts a Unicode `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function unicodeToArray(string) {
	  return string.match(reUnicode) || [];
	}
	
	module.exports = unicodeToArray;


/***/ }),
/* 196 */,
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = PostTags;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _gatsbyLink = __webpack_require__(48);
	
	var _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);
	
	__webpack_require__(342);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function PostTags(_ref) {
	  var _ref$list = _ref.list,
	      list = _ref$list === undefined ? [] : _ref$list;
	
	  return _react2.default.createElement(
	    "ul",
	    { className: "tag-list" },
	    list.map(function (tag) {
	      return _react2.default.createElement(
	        "li",
	        { key: tag },
	        _react2.default.createElement(
	          _gatsbyLink2.default,
	          { to: "/tags/" + tag },
	          tag
	        )
	      );
	    })
	  );
	}
	module.exports = exports["default"];

/***/ }),
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */
/***/ (function(module, exports) {

	/**
	 * Helpers.
	 */
	
	var s = 1000;
	var m = s * 60;
	var h = m * 60;
	var d = h * 24;
	var w = d * 7;
	var y = d * 365.25;
	
	/**
	 * Parse or format the given `val`.
	 *
	 * Options:
	 *
	 *  - `long` verbose formatting [false]
	 *
	 * @param {String|Number} val
	 * @param {Object} [options]
	 * @throws {Error} throw an error if val is not a non-empty string or a number
	 * @return {String|Number}
	 * @api public
	 */
	
	module.exports = function(val, options) {
	  options = options || {};
	  var type = typeof val;
	  if (type === 'string' && val.length > 0) {
	    return parse(val);
	  } else if (type === 'number' && isNaN(val) === false) {
	    return options.long ? fmtLong(val) : fmtShort(val);
	  }
	  throw new Error(
	    'val is not a non-empty string or a valid number. val=' +
	      JSON.stringify(val)
	  );
	};
	
	/**
	 * Parse the given `str` and return milliseconds.
	 *
	 * @param {String} str
	 * @return {Number}
	 * @api private
	 */
	
	function parse(str) {
	  str = String(str);
	  if (str.length > 100) {
	    return;
	  }
	  var match = /^((?:\d+)?\-?\d?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
	    str
	  );
	  if (!match) {
	    return;
	  }
	  var n = parseFloat(match[1]);
	  var type = (match[2] || 'ms').toLowerCase();
	  switch (type) {
	    case 'years':
	    case 'year':
	    case 'yrs':
	    case 'yr':
	    case 'y':
	      return n * y;
	    case 'weeks':
	    case 'week':
	    case 'w':
	      return n * w;
	    case 'days':
	    case 'day':
	    case 'd':
	      return n * d;
	    case 'hours':
	    case 'hour':
	    case 'hrs':
	    case 'hr':
	    case 'h':
	      return n * h;
	    case 'minutes':
	    case 'minute':
	    case 'mins':
	    case 'min':
	    case 'm':
	      return n * m;
	    case 'seconds':
	    case 'second':
	    case 'secs':
	    case 'sec':
	    case 's':
	      return n * s;
	    case 'milliseconds':
	    case 'millisecond':
	    case 'msecs':
	    case 'msec':
	    case 'ms':
	      return n;
	    default:
	      return undefined;
	  }
	}
	
	/**
	 * Short format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */
	
	function fmtShort(ms) {
	  var msAbs = Math.abs(ms);
	  if (msAbs >= d) {
	    return Math.round(ms / d) + 'd';
	  }
	  if (msAbs >= h) {
	    return Math.round(ms / h) + 'h';
	  }
	  if (msAbs >= m) {
	    return Math.round(ms / m) + 'm';
	  }
	  if (msAbs >= s) {
	    return Math.round(ms / s) + 's';
	  }
	  return ms + 'ms';
	}
	
	/**
	 * Long format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */
	
	function fmtLong(ms) {
	  var msAbs = Math.abs(ms);
	  if (msAbs >= d) {
	    return plural(ms, msAbs, d, 'day');
	  }
	  if (msAbs >= h) {
	    return plural(ms, msAbs, h, 'hour');
	  }
	  if (msAbs >= m) {
	    return plural(ms, msAbs, m, 'minute');
	  }
	  if (msAbs >= s) {
	    return plural(ms, msAbs, s, 'second');
	  }
	  return ms + ' ms';
	}
	
	/**
	 * Pluralization helper.
	 */
	
	function plural(ms, msAbs, n, name) {
	  var isPlural = msAbs >= n * 1.5;
	  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
	}


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _regenerator = __webpack_require__(94);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(93);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _FacebookProvider = __webpack_require__(530);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Initialize = (_temp = _class = function (_Component) {
	  (0, _inherits3.default)(Initialize, _Component);
	
	  function Initialize() {
	    (0, _classCallCheck3.default)(this, Initialize);
	    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));
	  }
	
	  Initialize.prototype.componentDidMount = function componentDidMount() {
	    this.prepare();
	  };
	
	  Initialize.prototype.prepare = function () {
	    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
	      var _props, onReady, handleInit, api;
	
	      return _regenerator2.default.wrap(function _callee$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              _props = this.props, onReady = _props.onReady, handleInit = _props.handleInit;
	              _context.next = 3;
	              return handleInit();
	
	            case 3:
	              api = _context.sent;
	
	              if (onReady) {
	                onReady(api);
	              }
	
	            case 5:
	            case 'end':
	              return _context.stop();
	          }
	        }
	      }, _callee, this);
	    }));
	
	    function prepare() {
	      return _ref.apply(this, arguments);
	    }
	
	    return prepare;
	  }();
	
	  Initialize.prototype.render = function render() {
	    var _props2 = this.props,
	        children = _props2.children,
	        isReady = _props2.isReady,
	        api = _props2.api;
	
	
	    var childrenProps = {
	      isReady: isReady,
	      api: api
	    };
	
	    if (typeof children === 'function') {
	      return children(childrenProps);
	    }
	
	    return children;
	  };
	
	  return Initialize;
	}(_react.Component), _class.defaultProps = {
	  onReady: undefined,
	  api: undefined
	}, _temp);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _FacebookProvider.FacebookContext.Consumer,
	    null,
	    function (_ref2) {
	      var handleInit = _ref2.handleInit,
	          isReady = _ref2.isReady,
	          api = _ref2.api;
	      return _react2.default.createElement(Initialize, (0, _extends3.default)({}, props, {
	        handleInit: handleInit,
	        isReady: isReady,
	        api: api,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=Initialize.js.map

/***/ }),
/* 203 */,
/* 204 */
/***/ (function(module, exports) {

	function _arrayWithHoles(arr) {
	  if (Array.isArray(arr)) return arr;
	}
	
	module.exports = _arrayWithHoles;

/***/ }),
/* 205 */
/***/ (function(module, exports) {

	function _arrayWithoutHoles(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }
	
	    return arr2;
	  }
	}
	
	module.exports = _arrayWithoutHoles;

/***/ }),
/* 206 */
/***/ (function(module, exports) {

	function _iterableToArray(iter) {
	  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
	}
	
	module.exports = _iterableToArray;

/***/ }),
/* 207 */
/***/ (function(module, exports) {

	function _iterableToArrayLimit(arr, i) {
	  var _arr = [];
	  var _n = true;
	  var _d = false;
	  var _e = undefined;
	
	  try {
	    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
	      _arr.push(_s.value);
	
	      if (i && _arr.length === i) break;
	    }
	  } catch (err) {
	    _d = true;
	    _e = err;
	  } finally {
	    try {
	      if (!_n && _i["return"] != null) _i["return"]();
	    } finally {
	      if (_d) throw _e;
	    }
	  }
	
	  return _arr;
	}
	
	module.exports = _iterableToArrayLimit;

/***/ }),
/* 208 */
/***/ (function(module, exports) {

	function _nonIterableRest() {
	  throw new TypeError("Invalid attempt to destructure non-iterable instance");
	}
	
	module.exports = _nonIterableRest;

/***/ }),
/* 209 */
/***/ (function(module, exports) {

	function _nonIterableSpread() {
	  throw new TypeError("Invalid attempt to spread non-iterable instance");
	}
	
	module.exports = _nonIterableSpread;

/***/ }),
/* 210 */
/***/ (function(module, exports) {

	function _objectWithoutPropertiesLoose(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;
	
	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }
	
	  return target;
	}
	
	module.exports = _objectWithoutPropertiesLoose;

/***/ }),
/* 211 */
/***/ (function(module, exports) {

	function _setPrototypeOf(o, p) {
	  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
	    o.__proto__ = p;
	    return o;
	  };
	
	  return _setPrototypeOf(o, p);
	}
	
	module.exports = _setPrototypeOf;

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayWithHoles = __webpack_require__(204);
	
	var iterableToArrayLimit = __webpack_require__(207);
	
	var nonIterableRest = __webpack_require__(208);
	
	function _slicedToArray(arr, i) {
	  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
	}
	
	module.exports = _slicedToArray;

/***/ }),
/* 213 */
/***/ (function(module, exports) {

	function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }
	
	function _typeof(obj) {
	  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
	    module.exports = _typeof = function _typeof(obj) {
	      return _typeof2(obj);
	    };
	  } else {
	    module.exports = _typeof = function _typeof(obj) {
	      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
	    };
	  }
	
	  return _typeof(obj);
	}
	
	module.exports = _typeof;

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var util = __webpack_require__(188);
	var events = __webpack_require__(136);
	
	/**
	 * A DerivedHelper is a way to create sub requests to
	 * Algolia from a main helper.
	 * @class
	 * @classdesc The DerivedHelper provides an event based interface for search callbacks:
	 *  - search: when a search is triggered using the `search()` method.
	 *  - result: when the response is retrieved from Algolia and is processed.
	 *    This event contains a {@link SearchResults} object and the
	 *    {@link SearchParameters} corresponding to this answer.
	 */
	function DerivedHelper(mainHelper, fn) {
	  this.main = mainHelper;
	  this.fn = fn;
	  this.lastResults = null;
	}
	
	util.inherits(DerivedHelper, events.EventEmitter);
	
	/**
	 * Detach this helper from the main helper
	 * @return {undefined}
	 * @throws Error if the derived helper is already detached
	 */
	DerivedHelper.prototype.detach = function() {
	  this.removeAllListeners();
	  this.main.detachDerivedHelper(this);
	};
	
	DerivedHelper.prototype.getModifiedState = function(parameters) {
	  return this.fn(parameters);
	};
	
	module.exports = DerivedHelper;


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Functions to manipulate refinement lists
	 *
	 * The RefinementList is not formally defined through a prototype but is based
	 * on a specific structure.
	 *
	 * @module SearchParameters.refinementList
	 *
	 * @typedef {string[]} SearchParameters.refinementList.Refinements
	 * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList
	 */
	
	var isUndefined = __webpack_require__(170);
	var isString = __webpack_require__(74);
	var isFunction = __webpack_require__(45);
	var isEmpty = __webpack_require__(24);
	var defaults = __webpack_require__(103);
	
	var reduce = __webpack_require__(56);
	var filter = __webpack_require__(104);
	var omit = __webpack_require__(37);
	
	var lib = {
	  /**
	   * Adds a refinement to a RefinementList
	   * @param {RefinementList} refinementList the initial list
	   * @param {string} attribute the attribute to refine
	   * @param {string} value the value of the refinement, if the value is not a string it will be converted
	   * @return {RefinementList} a new and updated refinement list
	   */
	  addRefinement: function addRefinement(refinementList, attribute, value) {
	    if (lib.isRefined(refinementList, attribute, value)) {
	      return refinementList;
	    }
	
	    var valueAsString = '' + value;
	
	    var facetRefinement = !refinementList[attribute] ?
	      [valueAsString] :
	      refinementList[attribute].concat(valueAsString);
	
	    var mod = {};
	
	    mod[attribute] = facetRefinement;
	
	    return defaults({}, mod, refinementList);
	  },
	  /**
	   * Removes refinement(s) for an attribute:
	   *  - if the value is specified removes the refinement for the value on the attribute
	   *  - if no value is specified removes all the refinements for this attribute
	   * @param {RefinementList} refinementList the initial list
	   * @param {string} attribute the attribute to refine
	   * @param {string} [value] the value of the refinement
	   * @return {RefinementList} a new and updated refinement lst
	   */
	  removeRefinement: function removeRefinement(refinementList, attribute, value) {
	    if (isUndefined(value)) {
	      return lib.clearRefinement(refinementList, attribute);
	    }
	
	    var valueAsString = '' + value;
	
	    return lib.clearRefinement(refinementList, function(v, f) {
	      return attribute === f && valueAsString === v;
	    });
	  },
	  /**
	   * Toggles the refinement value for an attribute.
	   * @param {RefinementList} refinementList the initial list
	   * @param {string} attribute the attribute to refine
	   * @param {string} value the value of the refinement
	   * @return {RefinementList} a new and updated list
	   */
	  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {
	    if (isUndefined(value)) throw new Error('toggleRefinement should be used with a value');
	
	    if (lib.isRefined(refinementList, attribute, value)) {
	      return lib.removeRefinement(refinementList, attribute, value);
	    }
	
	    return lib.addRefinement(refinementList, attribute, value);
	  },
	  /**
	   * Clear all or parts of a RefinementList. Depending on the arguments, three
	   * kinds of behavior can happen:
	   *  - if no attribute is provided: clears the whole list
	   *  - if an attribute is provided as a string: clears the list for the specific attribute
	   *  - if an attribute is provided as a function: discards the elements for which the function returns true
	   * @param {RefinementList} refinementList the initial list
	   * @param {string} [attribute] the attribute or function to discard
	   * @param {string} [refinementType] optional parameter to give more context to the attribute function
	   * @return {RefinementList} a new and updated refinement list
	   */
	  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {
	    if (isUndefined(attribute)) {
	      if (isEmpty(refinementList)) return refinementList;
	      return {};
	    } else if (isString(attribute)) {
	      if (isEmpty(refinementList[attribute])) return refinementList;
	      return omit(refinementList, attribute);
	    } else if (isFunction(attribute)) {
	      var hasChanged = false;
	
	      var newRefinementList = reduce(refinementList, function(memo, values, key) {
	        var facetList = filter(values, function(value) {
	          return !attribute(value, key, refinementType);
	        });
	
	        if (!isEmpty(facetList)) {
	          if (facetList.length !== values.length) hasChanged = true;
	          memo[key] = facetList;
	        }
	        else hasChanged = true;
	
	        return memo;
	      }, {});
	
	      if (hasChanged) return newRefinementList;
	      return refinementList;
	    }
	  },
	  /**
	   * Test if the refinement value is used for the attribute. If no refinement value
	   * is provided, test if the refinementList contains any refinement for the
	   * given attribute.
	   * @param {RefinementList} refinementList the list of refinement
	   * @param {string} attribute name of the attribute
	   * @param {string} [refinementValue] value of the filter/refinement
	   * @return {boolean}
	   */
	  isRefined: function isRefined(refinementList, attribute, refinementValue) {
	    var indexOf = __webpack_require__(72);
	
	    var containsRefinements = !!refinementList[attribute] &&
	      refinementList[attribute].length > 0;
	
	    if (isUndefined(refinementValue) || !containsRefinements) {
	      return containsRefinements;
	    }
	
	    var refinementValueAsString = '' + refinementValue;
	
	    return indexOf(refinementList[attribute], refinementValueAsString) !== -1;
	  }
	};
	
	module.exports = lib;


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var forEach = __webpack_require__(43);
	var filter = __webpack_require__(104);
	var map = __webpack_require__(31);
	var isEmpty = __webpack_require__(24);
	var indexOf = __webpack_require__(72);
	
	function filterState(state, filters) {
	  var partialState = {};
	  var attributeFilters = filter(filters, function(f) { return f.indexOf('attribute:') !== -1; });
	  var attributes = map(attributeFilters, function(aF) { return aF.split(':')[1]; });
	
	  if (indexOf(attributes, '*') === -1) {
	    forEach(attributes, function(attr) {
	      if (state.isConjunctiveFacet(attr) && state.isFacetRefined(attr)) {
	        if (!partialState.facetsRefinements) partialState.facetsRefinements = {};
	        partialState.facetsRefinements[attr] = state.facetsRefinements[attr];
	      }
	
	      if (state.isDisjunctiveFacet(attr) && state.isDisjunctiveFacetRefined(attr)) {
	        if (!partialState.disjunctiveFacetsRefinements) partialState.disjunctiveFacetsRefinements = {};
	        partialState.disjunctiveFacetsRefinements[attr] = state.disjunctiveFacetsRefinements[attr];
	      }
	
	      if (state.isHierarchicalFacet(attr) && state.isHierarchicalFacetRefined(attr)) {
	        if (!partialState.hierarchicalFacetsRefinements) partialState.hierarchicalFacetsRefinements = {};
	        partialState.hierarchicalFacetsRefinements[attr] = state.hierarchicalFacetsRefinements[attr];
	      }
	
	      var numericRefinements = state.getNumericRefinements(attr);
	      if (!isEmpty(numericRefinements)) {
	        if (!partialState.numericRefinements) partialState.numericRefinements = {};
	        partialState.numericRefinements[attr] = state.numericRefinements[attr];
	      }
	    });
	  } else {
	    if (!isEmpty(state.numericRefinements)) {
	      partialState.numericRefinements = state.numericRefinements;
	    }
	    if (!isEmpty(state.facetsRefinements)) partialState.facetsRefinements = state.facetsRefinements;
	    if (!isEmpty(state.disjunctiveFacetsRefinements)) {
	      partialState.disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements;
	    }
	    if (!isEmpty(state.hierarchicalFacetsRefinements)) {
	      partialState.hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements;
	    }
	  }
	
	  var searchParameters = filter(
	    filters,
	    function(f) {
	      return f.indexOf('attribute:') === -1;
	    }
	  );
	
	  forEach(
	    searchParameters,
	    function(parameterKey) {
	      partialState[parameterKey] = state[parameterKey];
	    }
	  );
	
	  return partialState;
	}
	
	module.exports = filterState;


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var invert = __webpack_require__(167);
	var keys = __webpack_require__(55);
	
	var keys2Short = {
	  advancedSyntax: 'aS',
	  allowTyposOnNumericTokens: 'aTONT',
	  analyticsTags: 'aT',
	  analytics: 'a',
	  aroundLatLngViaIP: 'aLLVIP',
	  aroundLatLng: 'aLL',
	  aroundPrecision: 'aP',
	  aroundRadius: 'aR',
	  attributesToHighlight: 'aTH',
	  attributesToRetrieve: 'aTR',
	  attributesToSnippet: 'aTS',
	  disjunctiveFacetsRefinements: 'dFR',
	  disjunctiveFacets: 'dF',
	  distinct: 'd',
	  facetsExcludes: 'fE',
	  facetsRefinements: 'fR',
	  facets: 'f',
	  getRankingInfo: 'gRI',
	  hierarchicalFacetsRefinements: 'hFR',
	  hierarchicalFacets: 'hF',
	  highlightPostTag: 'hPoT',
	  highlightPreTag: 'hPrT',
	  hitsPerPage: 'hPP',
	  ignorePlurals: 'iP',
	  index: 'idx',
	  insideBoundingBox: 'iBB',
	  insidePolygon: 'iPg',
	  length: 'l',
	  maxValuesPerFacet: 'mVPF',
	  minimumAroundRadius: 'mAR',
	  minProximity: 'mP',
	  minWordSizefor1Typo: 'mWS1T',
	  minWordSizefor2Typos: 'mWS2T',
	  numericFilters: 'nF',
	  numericRefinements: 'nR',
	  offset: 'o',
	  optionalWords: 'oW',
	  page: 'p',
	  queryType: 'qT',
	  query: 'q',
	  removeWordsIfNoResults: 'rWINR',
	  replaceSynonymsInHighlight: 'rSIH',
	  restrictSearchableAttributes: 'rSA',
	  synonyms: 's',
	  tagFilters: 'tF',
	  tagRefinements: 'tR',
	  typoTolerance: 'tT',
	  optionalTagFilters: 'oTF',
	  optionalFacetFilters: 'oFF',
	  snippetEllipsisText: 'sET',
	  disableExactOnAttributes: 'dEOA',
	  enableExactOnSingleWordQuery: 'eEOSWQ'
	};
	
	var short2Keys = invert(keys2Short);
	
	module.exports = {
	  /**
	   * All the keys of the state, encoded.
	   * @const
	   */
	  ENCODED_PARAMETERS: keys(short2Keys),
	  /**
	   * Decode a shorten attribute
	   * @param {string} shortKey the shorten attribute
	   * @return {string} the decoded attribute, undefined otherwise
	   */
	  decode: function(shortKey) {
	    return short2Keys[shortKey];
	  },
	  /**
	   * Encode an attribute into a short version
	   * @param {string} key the attribute
	   * @return {string} the shorten attribute
	   */
	  encode: function(key) {
	    return keys2Short[key];
	  }
	};


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = generateTrees;
	
	var last = __webpack_require__(171);
	var map = __webpack_require__(31);
	var reduce = __webpack_require__(56);
	var orderBy = __webpack_require__(110);
	var trim = __webpack_require__(173);
	var find = __webpack_require__(26);
	var pickBy = __webpack_require__(335);
	
	var prepareHierarchicalFacetSortBy = __webpack_require__(129);
	
	function generateTrees(state) {
	  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {
	    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];
	    var hierarchicalFacetRefinement = state.hierarchicalFacetsRefinements[hierarchicalFacet.name] &&
	      state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0] || '';
	    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	    var hierarchicalRootPath = state._getHierarchicalRootPath(hierarchicalFacet);
	    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(hierarchicalFacet);
	    var sortBy = prepareHierarchicalFacetSortBy(state._getHierarchicalFacetSortBy(hierarchicalFacet));
	
	    var generateTreeFn = generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath,
	      hierarchicalShowParentLevel, hierarchicalFacetRefinement);
	
	    var results = hierarchicalFacetResult;
	
	    if (hierarchicalRootPath) {
	      results = hierarchicalFacetResult.slice(hierarchicalRootPath.split(hierarchicalSeparator).length);
	    }
	
	    return reduce(results, generateTreeFn, {
	      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,
	      count: null, // root level, no count
	      isRefined: true, // root level, always refined
	      path: null, // root level, no path
	      data: null
	    });
	  };
	}
	
	function generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath,
	                                  hierarchicalShowParentLevel, currentRefinement) {
	  return function generateTree(hierarchicalTree, hierarchicalFacetResult, currentHierarchicalLevel) {
	    var parent = hierarchicalTree;
	
	    if (currentHierarchicalLevel > 0) {
	      var level = 0;
	
	      parent = hierarchicalTree;
	
	      while (level < currentHierarchicalLevel) {
	        parent = parent && find(parent.data, {isRefined: true});
	        level++;
	      }
	    }
	
	    // we found a refined parent, let's add current level data under it
	    if (parent) {
	      // filter values in case an object has multiple categories:
	      //   {
	      //     categories: {
	      //       level0: ['beers', 'bières'],
	      //       level1: ['beers > IPA', 'bières > Belges']
	      //     }
	      //   }
	      //
	      // If parent refinement is `beers`, then we do not want to have `bières > Belges`
	      // showing up
	
	      var onlyMatchingValuesFn = filterFacetValues(parent.path || hierarchicalRootPath,
	        currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel);
	
	      parent.data = orderBy(
	        map(
	          pickBy(hierarchicalFacetResult.data, onlyMatchingValuesFn),
	          formatHierarchicalFacetValue(hierarchicalSeparator, currentRefinement)
	        ),
	        sortBy[0], sortBy[1]
	      );
	    }
	
	    return hierarchicalTree;
	  };
	}
	
	function filterFacetValues(parentPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath,
	                           hierarchicalShowParentLevel) {
	  return function(facetCount, facetValue) {
	    // we want the facetValue is a child of hierarchicalRootPath
	    if (hierarchicalRootPath &&
	      (facetValue.indexOf(hierarchicalRootPath) !== 0 || hierarchicalRootPath === facetValue)) {
	      return false;
	    }
	
	    // we always want root levels (only when there is no prefix path)
	    return !hierarchicalRootPath && facetValue.indexOf(hierarchicalSeparator) === -1 ||
	      // if there is a rootPath, being root level mean 1 level under rootPath
	      hierarchicalRootPath &&
	      facetValue.split(hierarchicalSeparator).length - hierarchicalRootPath.split(hierarchicalSeparator).length === 1 ||
	      // if current refinement is a root level and current facetValue is a root level,
	      // keep the facetValue
	      facetValue.indexOf(hierarchicalSeparator) === -1 &&
	      currentRefinement.indexOf(hierarchicalSeparator) === -1 ||
	      // currentRefinement is a child of the facet value
	      currentRefinement.indexOf(facetValue) === 0 ||
	      // facetValue is a child of the current parent, add it
	      facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 &&
	      (hierarchicalShowParentLevel || facetValue.indexOf(currentRefinement) === 0);
	  };
	}
	
	function formatHierarchicalFacetValue(hierarchicalSeparator, currentRefinement) {
	  return function format(facetCount, facetValue) {
	    return {
	      name: trim(last(facetValue.split(hierarchicalSeparator))),
	      path: facetValue,
	      count: facetCount,
	      isRefined: currentRefinement === facetValue || currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,
	      data: null
	    };
	  };
	}


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var SearchParameters = __webpack_require__(92);
	var SearchResults = __webpack_require__(128);
	var DerivedHelper = __webpack_require__(214);
	var requestBuilder = __webpack_require__(221);
	
	var util = __webpack_require__(188);
	var events = __webpack_require__(136);
	
	var flatten = __webpack_require__(166);
	var forEach = __webpack_require__(43);
	var isEmpty = __webpack_require__(24);
	var map = __webpack_require__(31);
	
	var url = __webpack_require__(130);
	var version = __webpack_require__(131);
	
	/**
	 * Event triggered when a parameter is set or updated
	 * @event AlgoliaSearchHelper#event:change
	 * @property {SearchParameters} state the current parameters with the latest changes applied
	 * @property {SearchResults} lastResults the previous results received from Algolia. `null` before
	 * the first request
	 * @example
	 * helper.on('change', function(state, lastResults) {
	 *   console.log('The parameters have changed');
	 * });
	 */
	
	/**
	 * Event triggered when a main search is sent to Algolia
	 * @event AlgoliaSearchHelper#event:search
	 * @property {SearchParameters} state the parameters used for this search
	 * @property {SearchResults} lastResults the results from the previous search. `null` if
	 * it is the first search.
	 * @example
	 * helper.on('search', function(state, lastResults) {
	 *   console.log('Search sent');
	 * });
	 */
	
	/**
	 * Event triggered when a search using `searchForFacetValues` is sent to Algolia
	 * @event AlgoliaSearchHelper#event:searchForFacetValues
	 * @property {SearchParameters} state the parameters used for this search
	 * it is the first search.
	 * @property {string} facet the facet searched into
	 * @property {string} query the query used to search in the facets
	 * @example
	 * helper.on('searchForFacetValues', function(state, facet, query) {
	 *   console.log('searchForFacetValues sent');
	 * });
	 */
	
	/**
	 * Event triggered when a search using `searchOnce` is sent to Algolia
	 * @event AlgoliaSearchHelper#event:searchOnce
	 * @property {SearchParameters} state the parameters used for this search
	 * it is the first search.
	 * @example
	 * helper.on('searchOnce', function(state) {
	 *   console.log('searchOnce sent');
	 * });
	 */
	
	/**
	 * Event triggered when the results are retrieved from Algolia
	 * @event AlgoliaSearchHelper#event:result
	 * @property {SearchResults} results the results received from Algolia
	 * @property {SearchParameters} state the parameters used to query Algolia. Those might
	 * be different from the one in the helper instance (for example if the network is unreliable).
	 * @example
	 * helper.on('result', function(results, state) {
	 *   console.log('Search results received');
	 * });
	 */
	
	/**
	 * Event triggered when Algolia sends back an error. For example, if an unknown parameter is
	 * used, the error can be caught using this event.
	 * @event AlgoliaSearchHelper#event:error
	 * @property {Error} error the error returned by the Algolia.
	 * @example
	 * helper.on('error', function(error) {
	 *   console.log('Houston we got a problem.');
	 * });
	 */
	
	/**
	 * Event triggered when the queue of queries have been depleted (with any result or outdated queries)
	 * @event AlgoliaSearchHelper#event:searchQueueEmpty
	 * @example
	 * helper.on('searchQueueEmpty', function() {
	 *   console.log('No more search pending');
	 *   // This is received before the result event if we're not expecting new results
	 * });
	 *
	 * helper.search();
	 */
	
	/**
	 * Initialize a new AlgoliaSearchHelper
	 * @class
	 * @classdesc The AlgoliaSearchHelper is a class that ease the management of the
	 * search. It provides an event based interface for search callbacks:
	 *  - change: when the internal search state is changed.
	 *    This event contains a {@link SearchParameters} object and the
	 *    {@link SearchResults} of the last result if any.
	 *  - search: when a search is triggered using the `search()` method.
	 *  - result: when the response is retrieved from Algolia and is processed.
	 *    This event contains a {@link SearchResults} object and the
	 *    {@link SearchParameters} corresponding to this answer.
	 *  - error: when the response is an error. This event contains the error returned by the server.
	 * @param  {AlgoliaSearch} client an AlgoliaSearch client
	 * @param  {string} index the index name to query
	 * @param  {SearchParameters | object} options an object defining the initial
	 * config of the search. It doesn't have to be a {SearchParameters},
	 * just an object containing the properties you need from it.
	 */
	function AlgoliaSearchHelper(client, index, options) {
	  if (client.addAlgoliaAgent && !doesClientAgentContainsHelper(client)) {
	    client.addAlgoliaAgent('JS Helper ' + version);
	  }
	
	  this.setClient(client);
	  var opts = options || {};
	  opts.index = index;
	  this.state = SearchParameters.make(opts);
	  this.lastResults = null;
	  this._queryId = 0;
	  this._lastQueryIdReceived = -1;
	  this.derivedHelpers = [];
	  this._currentNbQueries = 0;
	}
	
	util.inherits(AlgoliaSearchHelper, events.EventEmitter);
	
	/**
	 * Start the search with the parameters set in the state. When the
	 * method is called, it triggers a `search` event. The results will
	 * be available through the `result` event. If an error occurs, an
	 * `error` will be fired instead.
	 * @return {AlgoliaSearchHelper}
	 * @fires search
	 * @fires result
	 * @fires error
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.search = function() {
	  this._search();
	  return this;
	};
	
	/**
	 * Gets the search query parameters that would be sent to the Algolia Client
	 * for the hits
	 * @return {object} Query Parameters
	 */
	AlgoliaSearchHelper.prototype.getQuery = function() {
	  var state = this.state;
	  return requestBuilder._getHitsSearchParams(state);
	};
	
	/**
	 * Start a search using a modified version of the current state. This method does
	 * not trigger the helper lifecycle and does not modify the state kept internally
	 * by the helper. This second aspect means that the next search call will be the
	 * same as a search call before calling searchOnce.
	 * @param {object} options can contain all the parameters that can be set to SearchParameters
	 * plus the index
	 * @param {function} [callback] optional callback executed when the response from the
	 * server is back.
	 * @return {promise|undefined} if a callback is passed the method returns undefined
	 * otherwise it returns a promise containing an object with two keys :
	 *  - content with a SearchResults
	 *  - state with the state used for the query as a SearchParameters
	 * @example
	 * // Changing the number of records returned per page to 1
	 * // This example uses the callback API
	 * var state = helper.searchOnce({hitsPerPage: 1},
	 *   function(error, content, state) {
	 *     // if an error occurred it will be passed in error, otherwise its value is null
	 *     // content contains the results formatted as a SearchResults
	 *     // state is the instance of SearchParameters used for this search
	 *   });
	 * @example
	 * // Changing the number of records returned per page to 1
	 * // This example uses the promise API
	 * var state1 = helper.searchOnce({hitsPerPage: 1})
	 *                 .then(promiseHandler);
	 *
	 * function promiseHandler(res) {
	 *   // res contains
	 *   // {
	 *   //   content : SearchResults
	 *   //   state   : SearchParameters (the one used for this specific search)
	 *   // }
	 * }
	 */
	AlgoliaSearchHelper.prototype.searchOnce = function(options, cb) {
	  var tempState = !options ? this.state : this.state.setQueryParameters(options);
	  var queries = requestBuilder._getQueries(tempState.index, tempState);
	  var self = this;
	
	  this._currentNbQueries++;
	
	  this.emit('searchOnce', tempState);
	
	  if (cb) {
	    this.client
	      .search(queries)
	      .then(function(content) {
	        self._currentNbQueries--;
	        if (self._currentNbQueries === 0) {
	          self.emit('searchQueueEmpty');
	        }
	
	        cb(null, new SearchResults(tempState, content.results), tempState);
	      })
	      .catch(function(err) {
	        self._currentNbQueries--;
	        if (self._currentNbQueries === 0) {
	          self.emit('searchQueueEmpty');
	        }
	
	        cb(err, null, tempState);
	      });
	
	    return undefined;
	  }
	
	  return this.client.search(queries).then(function(content) {
	    self._currentNbQueries--;
	    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');
	    return {
	      content: new SearchResults(tempState, content.results),
	      state: tempState,
	      _originalResponse: content
	    };
	  }, function(e) {
	    self._currentNbQueries--;
	    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');
	    throw e;
	  });
	};
	
	/**
	 * Structure of each result when using
	 * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)
	 * @typedef FacetSearchHit
	 * @type {object}
	 * @property {string} value the facet value
	 * @property {string} highlighted the facet value highlighted with the query string
	 * @property {number} count number of occurrence of this facet value
	 * @property {boolean} isRefined true if the value is already refined
	 */
	
	/**
	 * Structure of the data resolved by the
	 * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)
	 * promise.
	 * @typedef FacetSearchResult
	 * @type {object}
	 * @property {FacetSearchHit} facetHits the results for this search for facet values
	 * @property {number} processingTimeMS time taken by the query inside the engine
	 */
	
	/**
	 * Search for facet values based on an query and the name of a faceted attribute. This
	 * triggers a search and will return a promise. On top of using the query, it also sends
	 * the parameters from the state so that the search is narrowed down to only the possible values.
	 *
	 * See the description of [FacetSearchResult](reference.html#FacetSearchResult)
	 * @param {string} facet the name of the faceted attribute
	 * @param {string} query the string query for the search
	 * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100
	 * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes
	 * it in the generated query.
	 * @return {promise.<FacetSearchResult>} the results of the search
	 */
	AlgoliaSearchHelper.prototype.searchForFacetValues = function(facet, query, maxFacetHits, userState) {
	  var state = this.state.setQueryParameters(userState || {});
	  var isDisjunctive = state.isDisjunctiveFacet(facet);
	  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);
	
	  this._currentNbQueries++;
	  var self = this;
	
	  this.emit('searchForFacetValues', state, facet, query);
	  var searchForFacetValuesPromise = typeof this.client.searchForFacetValues === 'function'
	    ? this.client.searchForFacetValues([{indexName: state.index, params: algoliaQuery}])
	    : this.client.initIndex(state.index).searchForFacetValues(algoliaQuery);
	
	  return searchForFacetValuesPromise.then(function addIsRefined(content) {
	    self._currentNbQueries--;
	    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');
	
	    content = Array.isArray(content) ? content[0] : content;
	
	    content.facetHits = forEach(content.facetHits, function(f) {
	      f.isRefined = isDisjunctive ?
	        state.isDisjunctiveFacetRefined(facet, f.value) :
	        state.isFacetRefined(facet, f.value);
	    });
	
	    return content;
	  }, function(e) {
	    self._currentNbQueries--;
	    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');
	    throw e;
	  });
	};
	
	/**
	 * Sets the text query used for the search.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} q the user query
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setQuery = function(q) {
	  this._change(this.state.setPage(0).setQuery(q));
	  return this;
	};
	
	/**
	 * Remove all the types of refinements except tags. A string can be provided to remove
	 * only the refinements of a specific attribute. For more advanced use case, you can
	 * provide a function instead. This function should follow the
	 * [clearCallback definition](#SearchParameters.clearCallback).
	 *
	 * This method resets the current page to 0.
	 * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 * @example
	 * // Removing all the refinements
	 * helper.clearRefinements().search();
	 * @example
	 * // Removing all the filters on a the category attribute.
	 * helper.clearRefinements('category').search();
	 * @example
	 * // Removing only the exclude filters on the category facet.
	 * helper.clearRefinements(function(value, attribute, type) {
	 *   return type === 'exclude' && attribute === 'category';
	 * }).search();
	 */
	AlgoliaSearchHelper.prototype.clearRefinements = function(name) {
	  this._change(this.state.setPage(0).clearRefinements(name));
	  return this;
	};
	
	/**
	 * Remove all the tag filters.
	 *
	 * This method resets the current page to 0.
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.clearTags = function() {
	  this._change(this.state.setPage(0).clearTags());
	  return this;
	};
	
	/**
	 * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value (will be converted to string)
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).addDisjunctiveFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.addDisjunctiveRefine = function() {
	  return this.addDisjunctiveFacetRefinement.apply(this, arguments);
	};
	
	/**
	 * Adds a refinement on a hierarchical facet. It will throw
	 * an exception if the facet is not defined or if the facet
	 * is already refined.
	 *
	 * This method resets the current page to 0.
	 * @param {string} facet the facet name
	 * @param {string} path the hierarchical facet path
	 * @return {AlgoliaSearchHelper}
	 * @throws Error if the facet is not defined or if the facet is refined
	 * @chainable
	 * @fires change
	 */
	AlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).addHierarchicalFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} attribute the attribute on which the numeric filter applies
	 * @param  {string} operator the operator of the filter
	 * @param  {number} value the value of the filter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addNumericRefinement = function(attribute, operator, value) {
	  this._change(this.state.setPage(0).addNumericRefinement(attribute, operator, value));
	  return this;
	};
	
	/**
	 * Adds a filter to a faceted attribute with the `value` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value (will be converted to string)
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).addFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.addRefine = function() {
	  return this.addFacetRefinement.apply(this, arguments);
	};
	
	
	/**
	 * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value (will be converted to string)
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addFacetExclusion = function(facet, value) {
	  this._change(this.state.setPage(0).addExcludeRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}
	 */
	AlgoliaSearchHelper.prototype.addExclude = function() {
	  return this.addFacetExclusion.apply(this, arguments);
	};
	
	/**
	 * Adds a tag filter with the `tag` provided. If the
	 * filter is already set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param {string} tag the tag to add to the filter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.addTag = function(tag) {
	  this._change(this.state.setPage(0).addTagRefinement(tag));
	  return this;
	};
	
	/**
	 * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * Some parameters are optional, triggering different behavior:
	 *  - if the value is not provided, then all the numeric value will be removed for the
	 *  specified attribute/operator couple.
	 *  - if the operator is not provided either, then all the numeric filter on this attribute
	 *  will be removed.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} attribute the attribute on which the numeric filter applies
	 * @param  {string} [operator] the operator of the filter
	 * @param  {number} [value] the value of the filter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeNumericRefinement = function(attribute, operator, value) {
	  this._change(this.state.setPage(0).removeNumericRefinement(attribute, operator, value));
	  return this;
	};
	
	/**
	 * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * If the value is omitted, then this method will remove all the filters for the
	 * attribute.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} [value] the associated value
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).removeDisjunctiveFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function() {
	  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);
	};
	
	/**
	 * Removes the refinement set on a hierarchical facet.
	 * @param {string} facet the facet name
	 * @return {AlgoliaSearchHelper}
	 * @throws Error if the facet is not defined or if the facet is not refined
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function(facet) {
	  this._change(this.state.setPage(0).removeHierarchicalFacetRefinement(facet));
	
	  return this;
	};
	
	/**
	 * Removes a filter to a faceted attribute with the `value` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * If the value is omitted, then this method will remove all the filters for the
	 * attribute.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} [value] the associated value
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).removeFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.removeRefine = function() {
	  return this.removeFacetRefinement.apply(this, arguments);
	};
	
	/**
	 * Removes an exclusion filter to a faceted attribute with the `value` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * If the value is omitted, then this method will remove all the filters for the
	 * attribute.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} [value] the associated value
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeFacetExclusion = function(facet, value) {
	  this._change(this.state.setPage(0).removeExcludeRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}
	 */
	AlgoliaSearchHelper.prototype.removeExclude = function() {
	  return this.removeFacetExclusion.apply(this, arguments);
	};
	
	/**
	 * Removes a tag filter with the `tag` provided. If the
	 * filter is not set, it doesn't change the filters.
	 *
	 * This method resets the current page to 0.
	 * @param {string} tag tag to remove from the filter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.removeTag = function(tag) {
	  this._change(this.state.setPage(0).removeTagRefinement(tag));
	  return this;
	};
	
	/**
	 * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If
	 * the value is set then it removes it, otherwise it adds the filter.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.toggleFacetExclusion = function(facet, value) {
	  this._change(this.state.setPage(0).toggleExcludeFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}
	 */
	AlgoliaSearchHelper.prototype.toggleExclude = function() {
	  return this.toggleFacetExclusion.apply(this, arguments);
	};
	
	/**
	 * Adds or removes a filter to a faceted attribute with the `value` provided. If
	 * the value is set then it removes it, otherwise it adds the filter.
	 *
	 * This method can be used for conjunctive, disjunctive and hierarchical filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value
	 * @return {AlgoliaSearchHelper}
	 * @throws Error will throw an error if the facet is not declared in the settings of the helper
	 * @fires change
	 * @chainable
	 * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.toggleRefinement = function(facet, value) {
	  return this.toggleFacetRefinement(facet, value);
	};
	
	/**
	 * Adds or removes a filter to a faceted attribute with the `value` provided. If
	 * the value is set then it removes it, otherwise it adds the filter.
	 *
	 * This method can be used for conjunctive, disjunctive and hierarchical filters.
	 *
	 * This method resets the current page to 0.
	 * @param  {string} facet the facet to refine
	 * @param  {string} value the associated value
	 * @return {AlgoliaSearchHelper}
	 * @throws Error will throw an error if the facet is not declared in the settings of the helper
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.toggleFacetRefinement = function(facet, value) {
	  this._change(this.state.setPage(0).toggleFacetRefinement(facet, value));
	  return this;
	};
	
	/**
	 * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}
	 */
	AlgoliaSearchHelper.prototype.toggleRefine = function() {
	  return this.toggleFacetRefinement.apply(this, arguments);
	};
	
	/**
	 * Adds or removes a tag filter with the `value` provided. If
	 * the value is set then it removes it, otherwise it adds the filter.
	 *
	 * This method resets the current page to 0.
	 * @param {string} tag tag to remove or add
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.toggleTag = function(tag) {
	  this._change(this.state.setPage(0).toggleTagRefinement(tag));
	  return this;
	};
	
	/**
	 * Increments the page number by one.
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 * @example
	 * helper.setPage(0).nextPage().getPage();
	 * // returns 1
	 */
	AlgoliaSearchHelper.prototype.nextPage = function() {
	  return this.setPage(this.state.page + 1);
	};
	
	/**
	 * Decrements the page number by one.
	 * @fires change
	 * @return {AlgoliaSearchHelper}
	 * @chainable
	 * @example
	 * helper.setPage(1).previousPage().getPage();
	 * // returns 0
	 */
	AlgoliaSearchHelper.prototype.previousPage = function() {
	  return this.setPage(this.state.page - 1);
	};
	
	/**
	 * @private
	 */
	function setCurrentPage(page) {
	  if (page < 0) throw new Error('Page requested below 0.');
	
	  this._change(this.state.setPage(page));
	  return this;
	}
	
	/**
	 * Change the current page
	 * @deprecated
	 * @param  {number} page The page number
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;
	
	/**
	 * Updates the current page.
	 * @function
	 * @param  {number} page The page number
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setPage = setCurrentPage;
	
	/**
	 * Updates the name of the index that will be targeted by the query.
	 *
	 * This method resets the current page to 0.
	 * @param {string} name the index name
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setIndex = function(name) {
	  this._change(this.state.setPage(0).setIndex(name));
	  return this;
	};
	
	/**
	 * Update a parameter of the search. This method reset the page
	 *
	 * The complete list of parameters is available on the
	 * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).
	 * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)
	 * or benefit from higher-level APIs (all the kind of filters and facets have their own API)
	 *
	 * This method resets the current page to 0.
	 * @param {string} parameter name of the parameter to update
	 * @param {any} value new value of the parameter
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 * @example
	 * helper.setQueryParameter('hitsPerPage', 20).search();
	 */
	AlgoliaSearchHelper.prototype.setQueryParameter = function(parameter, value) {
	  this._change(this.state.setPage(0).setQueryParameter(parameter, value));
	  return this;
	};
	
	/**
	 * Set the whole state (warning: will erase previous state)
	 * @param {SearchParameters} newState the whole new state
	 * @return {AlgoliaSearchHelper}
	 * @fires change
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.setState = function(newState) {
	  this._change(SearchParameters.make(newState));
	  return this;
	};
	
	/**
	 * Get the current search state stored in the helper. This object is immutable.
	 * @param {string[]} [filters] optional filters to retrieve only a subset of the state
	 * @return {SearchParameters|object} if filters is specified a plain object is
	 * returned containing only the requested fields, otherwise return the unfiltered
	 * state
	 * @example
	 * // Get the complete state as stored in the helper
	 * helper.getState();
	 * @example
	 * // Get a part of the state with all the refinements on attributes and the query
	 * helper.getState(['query', 'attribute:category']);
	 */
	AlgoliaSearchHelper.prototype.getState = function(filters) {
	  if (filters === undefined) return this.state;
	  return this.state.filter(filters);
	};
	
	/**
	 * DEPRECATED Get part of the state as a query string. By default, the output keys will not
	 * be prefixed and will only take the applied refinements and the query.
	 * @deprecated
	 * @param {object} [options] May contain the following parameters :
	 *
	 * **filters** : possible values are all the keys of the [SearchParameters](#searchparameters), `index` for
	 * the index, all the refinements with `attribute:*` or for some specific attributes with
	 * `attribute:theAttribute`
	 *
	 * **prefix** : prefix in front of the keys
	 *
	 * **moreAttributes** : more values to be added in the query string. Those values
	 *    won't be prefixed.
	 * @return {string} the query string
	 */
	AlgoliaSearchHelper.prototype.getStateAsQueryString = function getStateAsQueryString(options) {
	  var filters = options && options.filters || ['query', 'attribute:*'];
	  var partialState = this.getState(filters);
	
	  return url.getQueryStringFromState(partialState, options);
	};
	
	/**
	 * DEPRECATED Read a query string and return an object containing the state. Use
	 * url module.
	 * @deprecated
	 * @static
	 * @param {string} queryString the query string that will be decoded
	 * @param {object} options accepted options :
	 *   - prefix : the prefix used for the saved attributes, you have to provide the
	 *     same that was used for serialization
	 * @return {object} partial search parameters object (same properties than in the
	 * SearchParameters but not exhaustive)
	 * @see {@link url#getStateFromQueryString}
	 */
	AlgoliaSearchHelper.getConfigurationFromQueryString = url.getStateFromQueryString;
	
	/**
	 * DEPRECATED Retrieve an object of all the properties that are not understandable as helper
	 * parameters. Use url module.
	 * @deprecated
	 * @static
	 * @param {string} queryString the query string to read
	 * @param {object} options the options
	 *   - prefixForParameters : prefix used for the helper configuration keys
	 * @return {object} the object containing the parsed configuration that doesn't
	 * to the helper
	 */
	AlgoliaSearchHelper.getForeignConfigurationInQueryString = url.getUnrecognizedParametersInQueryString;
	
	/**
	 * DEPRECATED Overrides part of the state with the properties stored in the provided query
	 * string.
	 * @deprecated
	 * @param {string} queryString the query string containing the informations to url the state
	 * @param {object} options optional parameters :
	 *  - prefix : prefix used for the algolia parameters
	 *  - triggerChange : if set to true the state update will trigger a change event
	 */
	AlgoliaSearchHelper.prototype.setStateFromQueryString = function(queryString, options) {
	  var triggerChange = options && options.triggerChange || false;
	  var configuration = url.getStateFromQueryString(queryString, options);
	  var updatedState = this.state.setQueryParameters(configuration);
	
	  if (triggerChange) this.setState(updatedState);
	  else this.overrideStateWithoutTriggeringChangeEvent(updatedState);
	};
	
	/**
	 * Override the current state without triggering a change event.
	 * Do not use this method unless you know what you are doing. (see the example
	 * for a legit use case)
	 * @param {SearchParameters} newState the whole new state
	 * @return {AlgoliaSearchHelper}
	 * @example
	 *  helper.on('change', function(state){
	 *    // In this function you might want to find a way to store the state in the url/history
	 *    updateYourURL(state)
	 *  })
	 *  window.onpopstate = function(event){
	 *    // This is naive though as you should check if the state is really defined etc.
	 *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()
	 *  }
	 * @chainable
	 */
	AlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function(newState) {
	  this.state = new SearchParameters(newState);
	  return this;
	};
	
	/**
	 * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}
	 */
	AlgoliaSearchHelper.prototype.isRefined = function(facet, value) {
	  if (this.state.isConjunctiveFacet(facet)) {
	    return this.state.isFacetRefined(facet, value);
	  } else if (this.state.isDisjunctiveFacet(facet)) {
	    return this.state.isDisjunctiveFacetRefined(facet, value);
	  }
	
	  throw new Error(facet +
	    ' is not properly defined in this helper configuration' +
	    '(use the facets or disjunctiveFacets keys to configure it)');
	};
	
	/**
	 * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.
	 * @param {string} attribute the name of the attribute
	 * @return {boolean} true if the attribute is filtered by at least one value
	 * @example
	 * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters
	 * helper.hasRefinements('price'); // false
	 * helper.addNumericRefinement('price', '>', 100);
	 * helper.hasRefinements('price'); // true
	 *
	 * helper.hasRefinements('color'); // false
	 * helper.addFacetRefinement('color', 'blue');
	 * helper.hasRefinements('color'); // true
	 *
	 * helper.hasRefinements('material'); // false
	 * helper.addDisjunctiveFacetRefinement('material', 'plastic');
	 * helper.hasRefinements('material'); // true
	 *
	 * helper.hasRefinements('categories'); // false
	 * helper.toggleFacetRefinement('categories', 'kitchen > knife');
	 * helper.hasRefinements('categories'); // true
	 *
	 */
	AlgoliaSearchHelper.prototype.hasRefinements = function(attribute) {
	  if (!isEmpty(this.state.getNumericRefinements(attribute))) {
	    return true;
	  } else if (this.state.isConjunctiveFacet(attribute)) {
	    return this.state.isFacetRefined(attribute);
	  } else if (this.state.isDisjunctiveFacet(attribute)) {
	    return this.state.isDisjunctiveFacetRefined(attribute);
	  } else if (this.state.isHierarchicalFacet(attribute)) {
	    return this.state.isHierarchicalFacetRefined(attribute);
	  }
	
	  // there's currently no way to know that the user did call `addNumericRefinement` at some point
	  // thus we cannot distinguish if there once was a numeric refinement that was cleared
	  // so we will return false in every other situations to be consistent
	  // while what we should do here is throw because we did not find the attribute in any type
	  // of refinement
	  return false;
	};
	
	/**
	 * Check if a value is excluded for a specific faceted attribute. If the value
	 * is omitted then the function checks if there is any excluding refinements.
	 *
	 * @param  {string}  facet name of the attribute for used for faceting
	 * @param  {string}  [value] optional value. If passed will test that this value
	   * is filtering the given facet.
	 * @return {boolean} true if refined
	 * @example
	 * helper.isExcludeRefined('color'); // false
	 * helper.isExcludeRefined('color', 'blue') // false
	 * helper.isExcludeRefined('color', 'red') // false
	 *
	 * helper.addFacetExclusion('color', 'red');
	 *
	 * helper.isExcludeRefined('color'); // true
	 * helper.isExcludeRefined('color', 'blue') // false
	 * helper.isExcludeRefined('color', 'red') // true
	 */
	AlgoliaSearchHelper.prototype.isExcluded = function(facet, value) {
	  return this.state.isExcludeRefined(facet, value);
	};
	
	/**
	 * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}
	 */
	AlgoliaSearchHelper.prototype.isDisjunctiveRefined = function(facet, value) {
	  return this.state.isDisjunctiveFacetRefined(facet, value);
	};
	
	/**
	 * Check if the string is a currently filtering tag.
	 * @param {string} tag tag to check
	 * @return {boolean}
	 */
	AlgoliaSearchHelper.prototype.hasTag = function(tag) {
	  return this.state.isTagRefined(tag);
	};
	
	/**
	 * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}
	 */
	AlgoliaSearchHelper.prototype.isTagRefined = function() {
	  return this.hasTagRefinements.apply(this, arguments);
	};
	
	
	/**
	 * Get the name of the currently used index.
	 * @return {string}
	 * @example
	 * helper.setIndex('highestPrice_products').getIndex();
	 * // returns 'highestPrice_products'
	 */
	AlgoliaSearchHelper.prototype.getIndex = function() {
	  return this.state.index;
	};
	
	function getCurrentPage() {
	  return this.state.page;
	}
	
	/**
	 * Get the currently selected page
	 * @deprecated
	 * @return {number} the current page
	 */
	AlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;
	/**
	 * Get the currently selected page
	 * @function
	 * @return {number} the current page
	 */
	AlgoliaSearchHelper.prototype.getPage = getCurrentPage;
	
	/**
	 * Get all the tags currently set to filters the results.
	 *
	 * @return {string[]} The list of tags currently set.
	 */
	AlgoliaSearchHelper.prototype.getTags = function() {
	  return this.state.tagRefinements;
	};
	
	/**
	 * Get a parameter of the search by its name. It is possible that a parameter is directly
	 * defined in the index dashboard, but it will be undefined using this method.
	 *
	 * The complete list of parameters is
	 * available on the
	 * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).
	 * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)
	 * or benefit from higher-level APIs (all the kind of filters have their own API)
	 * @param {string} parameterName the parameter name
	 * @return {any} the parameter value
	 * @example
	 * var hitsPerPage = helper.getQueryParameter('hitsPerPage');
	 */
	AlgoliaSearchHelper.prototype.getQueryParameter = function(parameterName) {
	  return this.state.getQueryParameter(parameterName);
	};
	
	/**
	 * Get the list of refinements for a given attribute. This method works with
	 * conjunctive, disjunctive, excluding and numerical filters.
	 *
	 * See also SearchResults#getRefinements
	 *
	 * @param {string} facetName attribute name used for faceting
	 * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and
	 * a type. Numeric also contains an operator.
	 * @example
	 * helper.addNumericRefinement('price', '>', 100);
	 * helper.getRefinements('price');
	 * // [
	 * //   {
	 * //     "value": [
	 * //       100
	 * //     ],
	 * //     "operator": ">",
	 * //     "type": "numeric"
	 * //   }
	 * // ]
	 * @example
	 * helper.addFacetRefinement('color', 'blue');
	 * helper.addFacetExclusion('color', 'red');
	 * helper.getRefinements('color');
	 * // [
	 * //   {
	 * //     "value": "blue",
	 * //     "type": "conjunctive"
	 * //   },
	 * //   {
	 * //     "value": "red",
	 * //     "type": "exclude"
	 * //   }
	 * // ]
	 * @example
	 * helper.addDisjunctiveFacetRefinement('material', 'plastic');
	 * // [
	 * //   {
	 * //     "value": "plastic",
	 * //     "type": "disjunctive"
	 * //   }
	 * // ]
	 */
	AlgoliaSearchHelper.prototype.getRefinements = function(facetName) {
	  var refinements = [];
	
	  if (this.state.isConjunctiveFacet(facetName)) {
	    var conjRefinements = this.state.getConjunctiveRefinements(facetName);
	
	    forEach(conjRefinements, function(r) {
	      refinements.push({
	        value: r,
	        type: 'conjunctive'
	      });
	    });
	
	    var excludeRefinements = this.state.getExcludeRefinements(facetName);
	
	    forEach(excludeRefinements, function(r) {
	      refinements.push({
	        value: r,
	        type: 'exclude'
	      });
	    });
	  } else if (this.state.isDisjunctiveFacet(facetName)) {
	    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);
	
	    forEach(disjRefinements, function(r) {
	      refinements.push({
	        value: r,
	        type: 'disjunctive'
	      });
	    });
	  }
	
	  var numericRefinements = this.state.getNumericRefinements(facetName);
	
	  forEach(numericRefinements, function(value, operator) {
	    refinements.push({
	      value: value,
	      operator: operator,
	      type: 'numeric'
	    });
	  });
	
	  return refinements;
	};
	
	/**
	 * Return the current refinement for the (attribute, operator)
	 * @param {string} attribute attribute in the record
	 * @param {string} operator operator applied on the refined values
	 * @return {Array.<number|number[]>} refined values
	 */
	AlgoliaSearchHelper.prototype.getNumericRefinement = function(attribute, operator) {
	  return this.state.getNumericRefinement(attribute, operator);
	};
	
	/**
	 * Get the current breadcrumb for a hierarchical facet, as an array
	 * @param  {string} facetName Hierarchical facet name
	 * @return {array.<string>} the path as an array of string
	 */
	AlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function(facetName) {
	  return this.state.getHierarchicalFacetBreadcrumb(facetName);
	};
	
	// /////////// PRIVATE
	
	/**
	 * Perform the underlying queries
	 * @private
	 * @return {undefined}
	 * @fires search
	 * @fires result
	 * @fires error
	 */
	AlgoliaSearchHelper.prototype._search = function() {
	  var state = this.state;
	  var mainQueries = requestBuilder._getQueries(state.index, state);
	
	  var states = [{
	    state: state,
	    queriesCount: mainQueries.length,
	    helper: this
	  }];
	
	  this.emit('search', state, this.lastResults);
	
	  var derivedQueries = map(this.derivedHelpers, function(derivedHelper) {
	    var derivedState = derivedHelper.getModifiedState(state);
	    var queries = requestBuilder._getQueries(derivedState.index, derivedState);
	    states.push({
	      state: derivedState,
	      queriesCount: queries.length,
	      helper: derivedHelper
	    });
	    derivedHelper.emit('search', derivedState, derivedHelper.lastResults);
	    return queries;
	  });
	
	  var queries = mainQueries.concat(flatten(derivedQueries));
	  var queryId = this._queryId++;
	
	  this._currentNbQueries++;
	
	  try {
	    this.client.search(queries)
	      .then(this._dispatchAlgoliaResponse.bind(this, states, queryId))
	      .catch(this._dispatchAlgoliaError.bind(this, queryId));
	  } catch (err) {
	    // If we reach this part, we're in an internal error state
	    this.emit('error', err);
	  }
	};
	
	/**
	 * Transform the responses as sent by the server and transform them into a user
	 * usable object that merge the results of all the batch requests. It will dispatch
	 * over the different helper + derived helpers (when there are some).
	 * @private
	 * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}
	 *  state state used for to generate the request
	 * @param {number} queryId id of the current request
	 * @param {object} content content of the response
	 * @return {undefined}
	 */
	AlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function(states, queryId, content) {
	  // FIXME remove the number of outdated queries discarded instead of just one
	
	  if (queryId < this._lastQueryIdReceived) {
	    // Outdated answer
	    return;
	  }
	
	  this._currentNbQueries -= (queryId - this._lastQueryIdReceived);
	  this._lastQueryIdReceived = queryId;
	
	  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');
	
	  var results = content.results.slice();
	  forEach(states, function(s) {
	    var state = s.state;
	    var queriesCount = s.queriesCount;
	    var helper = s.helper;
	    var specificResults = results.splice(0, queriesCount);
	
	    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);
	    helper.emit('result', formattedResponse, state);
	  });
	};
	
	AlgoliaSearchHelper.prototype._dispatchAlgoliaError = function(queryId, err) {
	  if (queryId < this._lastQueryIdReceived) {
	    // Outdated answer
	    return;
	  }
	
	  this._currentNbQueries -= queryId - this._lastQueryIdReceived;
	  this._lastQueryIdReceived = queryId;
	
	  this.emit('error', err);
	
	  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');
	};
	
	AlgoliaSearchHelper.prototype.containsRefinement = function(query, facetFilters, numericFilters, tagFilters) {
	  return query ||
	    facetFilters.length !== 0 ||
	    numericFilters.length !== 0 ||
	    tagFilters.length !== 0;
	};
	
	/**
	 * Test if there are some disjunctive refinements on the facet
	 * @private
	 * @param {string} facet the attribute to test
	 * @return {boolean}
	 */
	AlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function(facet) {
	  return this.state.disjunctiveRefinements[facet] &&
	    this.state.disjunctiveRefinements[facet].length > 0;
	};
	
	AlgoliaSearchHelper.prototype._change = function(newState) {
	  if (newState !== this.state) {
	    this.state = newState;
	    this.emit('change', this.state, this.lastResults);
	  }
	};
	
	/**
	 * Clears the cache of the underlying Algolia client.
	 * @return {AlgoliaSearchHelper}
	 */
	AlgoliaSearchHelper.prototype.clearCache = function() {
	  this.client.clearCache && this.client.clearCache();
	  return this;
	};
	
	/**
	 * Updates the internal client instance. If the reference of the clients
	 * are equal then no update is actually done.
	 * @param  {AlgoliaSearch} newClient an AlgoliaSearch client
	 * @return {AlgoliaSearchHelper}
	 */
	AlgoliaSearchHelper.prototype.setClient = function(newClient) {
	  if (this.client === newClient) return this;
	
	  if (newClient.addAlgoliaAgent && !doesClientAgentContainsHelper(newClient)) newClient.addAlgoliaAgent('JS Helper ' + version);
	  this.client = newClient;
	
	  return this;
	};
	
	/**
	 * Gets the instance of the currently used client.
	 * @return {AlgoliaSearch}
	 */
	AlgoliaSearchHelper.prototype.getClient = function() {
	  return this.client;
	};
	
	/**
	 * Creates an derived instance of the Helper. A derived helper
	 * is a way to request other indices synchronised with the lifecycle
	 * of the main Helper. This mechanism uses the multiqueries feature
	 * of Algolia to aggregate all the requests in a single network call.
	 *
	 * This method takes a function that is used to create a new SearchParameter
	 * that will be used to create requests to Algolia. Those new requests
	 * are created just before the `search` event. The signature of the function
	 * is `SearchParameters -> SearchParameters`.
	 *
	 * This method returns a new DerivedHelper which is an EventEmitter
	 * that fires the same `search`, `result` and `error` events. Those
	 * events, however, will receive data specific to this DerivedHelper
	 * and the SearchParameters that is returned by the call of the
	 * parameter function.
	 * @param {function} fn SearchParameters -> SearchParameters
	 * @return {DerivedHelper}
	 */
	AlgoliaSearchHelper.prototype.derive = function(fn) {
	  var derivedHelper = new DerivedHelper(this, fn);
	  this.derivedHelpers.push(derivedHelper);
	  return derivedHelper;
	};
	
	/**
	 * This method detaches a derived Helper from the main one. Prefer using the one from the
	 * derived helper itself, to remove the event listeners too.
	 * @private
	 * @return {undefined}
	 * @throws Error
	 */
	AlgoliaSearchHelper.prototype.detachDerivedHelper = function(derivedHelper) {
	  var pos = this.derivedHelpers.indexOf(derivedHelper);
	  if (pos === -1) throw new Error('Derived helper already detached');
	  this.derivedHelpers.splice(pos, 1);
	};
	
	/**
	 * This method returns true if there is currently at least one on-going search.
	 * @return {boolean} true if there is a search pending
	 */
	AlgoliaSearchHelper.prototype.hasPendingRequests = function() {
	  return this._currentNbQueries > 0;
	};
	
	/**
	 * @typedef AlgoliaSearchHelper.NumericRefinement
	 * @type {object}
	 * @property {number[]} value the numbers that are used for filtering this attribute with
	 * the operator specified.
	 * @property {string} operator the faceting data: value, number of entries
	 * @property {string} type will be 'numeric'
	 */
	
	/**
	 * @typedef AlgoliaSearchHelper.FacetRefinement
	 * @type {object}
	 * @property {string} value the string use to filter the attribute
	 * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'
	 */
	
	
	/*
	 * This function tests if the _ua parameter of the client
	 * already contains the JS Helper UA
	 */
	function doesClientAgentContainsHelper(client) {
	  // this relies on JS Client internal variable, this might break if implementation changes
	  var currentAgent = client._ua;
	  return !currentAgent ? false :
	    currentAgent.indexOf('JS Helper') !== -1;
	}
	
	module.exports = AlgoliaSearchHelper;


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var map = __webpack_require__(31);
	var isNumber = __webpack_require__(169);
	var isString = __webpack_require__(74);
	function valToNumber(v) {
	  if (isNumber(v)) {
	    return v;
	  } else if (isString(v)) {
	    return parseFloat(v);
	  } else if (Array.isArray(v)) {
	    return map(v, valToNumber);
	  }
	
	  throw new Error('The value should be a number, a parseable string or an array of those.');
	}
	
	module.exports = valToNumber;


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var forEach = __webpack_require__(43);
	var map = __webpack_require__(31);
	var reduce = __webpack_require__(56);
	var merge = __webpack_require__(109);
	
	var requestBuilder = {
	  /**
	   * Get all the queries to send to the client, those queries can used directly
	   * with the Algolia client.
	   * @private
	   * @return {object[]} The queries
	   */
	  _getQueries: function getQueries(index, state) {
	    var queries = [];
	
	    // One query for the hits
	    queries.push({
	      indexName: index,
	      params: requestBuilder._getHitsSearchParams(state)
	    });
	
	    // One for each disjunctive facets
	    forEach(state.getRefinedDisjunctiveFacets(), function(refinedFacet) {
	      queries.push({
	        indexName: index,
	        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)
	      });
	    });
	
	    // maybe more to get the root level of hierarchical facets when activated
	    forEach(state.getRefinedHierarchicalFacets(), function(refinedFacet) {
	      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);
	
	      var currentRefinement = state.getHierarchicalRefinement(refinedFacet);
	      // if we are deeper than level 0 (starting from `beer > IPA`)
	      // we want to get the root values
	      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {
	        queries.push({
	          indexName: index,
	          params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet, true)
	        });
	      }
	    });
	
	    return queries;
	  },
	
	  /**
	   * Build search parameters used to fetch hits
	   * @private
	   * @return {object.<string, any>}
	   */
	  _getHitsSearchParams: function(state) {
	    var facets = state.facets
	      .concat(state.disjunctiveFacets)
	      .concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));
	
	
	    var facetFilters = requestBuilder._getFacetFilters(state);
	    var numericFilters = requestBuilder._getNumericFilters(state);
	    var tagFilters = requestBuilder._getTagFilters(state);
	    var additionalParams = {
	      facets: facets,
	      tagFilters: tagFilters
	    };
	
	    if (facetFilters.length > 0) {
	      additionalParams.facetFilters = facetFilters;
	    }
	
	    if (numericFilters.length > 0) {
	      additionalParams.numericFilters = numericFilters;
	    }
	
	    return merge(state.getQueryParams(), additionalParams);
	  },
	
	  /**
	   * Build search parameters used to fetch a disjunctive facet
	   * @private
	   * @param  {string} facet the associated facet name
	   * @param  {boolean} hierarchicalRootLevel ?? FIXME
	   * @return {object}
	   */
	  _getDisjunctiveFacetSearchParams: function(state, facet, hierarchicalRootLevel) {
	    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);
	    var numericFilters = requestBuilder._getNumericFilters(state, facet);
	    var tagFilters = requestBuilder._getTagFilters(state);
	    var additionalParams = {
	      hitsPerPage: 1,
	      page: 0,
	      attributesToRetrieve: [],
	      attributesToHighlight: [],
	      attributesToSnippet: [],
	      tagFilters: tagFilters,
	      analytics: false,
	      clickAnalytics: false
	    };
	
	    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);
	
	    if (hierarchicalFacet) {
	      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(
	        state,
	        hierarchicalFacet,
	        hierarchicalRootLevel
	      );
	    } else {
	      additionalParams.facets = facet;
	    }
	
	    if (numericFilters.length > 0) {
	      additionalParams.numericFilters = numericFilters;
	    }
	
	    if (facetFilters.length > 0) {
	      additionalParams.facetFilters = facetFilters;
	    }
	
	    return merge(state.getQueryParams(), additionalParams);
	  },
	
	  /**
	   * Return the numeric filters in an algolia request fashion
	   * @private
	   * @param {string} [facetName] the name of the attribute for which the filters should be excluded
	   * @return {string[]} the numeric filters in the algolia format
	   */
	  _getNumericFilters: function(state, facetName) {
	    if (state.numericFilters) {
	      return state.numericFilters;
	    }
	
	    var numericFilters = [];
	
	    forEach(state.numericRefinements, function(operators, attribute) {
	      forEach(operators, function(values, operator) {
	        if (facetName !== attribute) {
	          forEach(values, function(value) {
	            if (Array.isArray(value)) {
	              var vs = map(value, function(v) {
	                return attribute + operator + v;
	              });
	              numericFilters.push(vs);
	            } else {
	              numericFilters.push(attribute + operator + value);
	            }
	          });
	        }
	      });
	    });
	
	    return numericFilters;
	  },
	
	  /**
	   * Return the tags filters depending
	   * @private
	   * @return {string}
	   */
	  _getTagFilters: function(state) {
	    if (state.tagFilters) {
	      return state.tagFilters;
	    }
	
	    return state.tagRefinements.join(',');
	  },
	
	
	  /**
	   * Build facetFilters parameter based on current refinements. The array returned
	   * contains strings representing the facet filters in the algolia format.
	   * @private
	   * @param  {string} [facet] if set, the current disjunctive facet
	   * @return {array.<string>}
	   */
	  _getFacetFilters: function(state, facet, hierarchicalRootLevel) {
	    var facetFilters = [];
	
	    forEach(state.facetsRefinements, function(facetValues, facetName) {
	      forEach(facetValues, function(facetValue) {
	        facetFilters.push(facetName + ':' + facetValue);
	      });
	    });
	
	    forEach(state.facetsExcludes, function(facetValues, facetName) {
	      forEach(facetValues, function(facetValue) {
	        facetFilters.push(facetName + ':-' + facetValue);
	      });
	    });
	
	    forEach(state.disjunctiveFacetsRefinements, function(facetValues, facetName) {
	      if (facetName === facet || !facetValues || facetValues.length === 0) return;
	      var orFilters = [];
	
	      forEach(facetValues, function(facetValue) {
	        orFilters.push(facetName + ':' + facetValue);
	      });
	
	      facetFilters.push(orFilters);
	    });
	
	    forEach(state.hierarchicalFacetsRefinements, function(facetValues, facetName) {
	      var facetValue = facetValues[0];
	
	      if (facetValue === undefined) {
	        return;
	      }
	
	      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);
	      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);
	      var attributeToRefine;
	      var attributesIndex;
	
	      // we ask for parent facet values only when the `facet` is the current hierarchical facet
	      if (facet === facetName) {
	        // if we are at the root level already, no need to ask for facet values, we get them from
	        // the hits query
	        if (facetValue.indexOf(separator) === -1 || (!rootPath && hierarchicalRootLevel === true) ||
	          (rootPath && rootPath.split(separator).length === facetValue.split(separator).length)) {
	          return;
	        }
	
	        if (!rootPath) {
	          attributesIndex = facetValue.split(separator).length - 2;
	          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));
	        } else {
	          attributesIndex = rootPath.split(separator).length - 1;
	          facetValue = rootPath;
	        }
	
	        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];
	      } else {
	        attributesIndex = facetValue.split(separator).length - 1;
	
	        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];
	      }
	
	      if (attributeToRefine) {
	        facetFilters.push([attributeToRefine + ':' + facetValue]);
	      }
	    });
	
	    return facetFilters;
	  },
	
	  _getHitsHierarchicalFacetsAttributes: function(state) {
	    var out = [];
	
	    return reduce(
	      state.hierarchicalFacets,
	      // ask for as much levels as there's hierarchical refinements
	      function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {
	        var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0];
	
	        // if no refinement, ask for root level
	        if (!hierarchicalRefinement) {
	          allAttributes.push(hierarchicalFacet.attributes[0]);
	          return allAttributes;
	        }
	
	        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	        var level = hierarchicalRefinement.split(separator).length;
	        var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);
	
	        return allAttributes.concat(newAttributes);
	      }, out);
	  },
	
	  _getDisjunctiveHierarchicalFacetAttribute: function(state, hierarchicalFacet, rootLevel) {
	    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);
	    if (rootLevel === true) {
	      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);
	      var attributeIndex = 0;
	
	      if (rootPath) {
	        attributeIndex = rootPath.split(separator).length;
	      }
	      return [hierarchicalFacet.attributes[attributeIndex]];
	    }
	
	    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || '';
	    // if refinement is 'beers > IPA > Flying dog',
	    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)
	
	    var parentLevel = hierarchicalRefinement.split(separator).length - 1;
	    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);
	  },
	
	  getSearchForFacetQuery: function(facetName, query, maxFacetHits, state) {
	    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ?
	      state.clearRefinements(facetName) :
	      state;
	    var searchForFacetSearchParameters = {
	      facetQuery: query,
	      facetName: facetName
	    };
	    if (typeof maxFacetHits === 'number') {
	      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;
	    }
	    var queries = merge(requestBuilder._getHitsSearchParams(stateForSearchForFacetValues), searchForFacetSearchParameters);
	    return queries;
	  }
	};
	
	module.exports = requestBuilder;


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = AlgoliaSearchCore;
	
	var errors = __webpack_require__(62);
	var exitPromise = __webpack_require__(229);
	var IndexCore = __webpack_require__(223);
	var store = __webpack_require__(232);
	
	// We will always put the API KEY in the JSON body in case of too long API KEY,
	// to avoid query string being too long and failing in various conditions (our server limit, browser limit,
	// proxies limit)
	var MAX_API_KEY_LENGTH = 500;
	var RESET_APP_DATA_TIMER =
	  ({"NODE_ENV":"production","PUBLIC_DIR":"/home/luubinhan/Documents/projects/blog/public","GATSBY_ALGOLIA_APP_ID":"68PEVEWLR7","GATSBY_ALGOLIA_SEARCH_KEY":"c3e0db897950a5f687e9d690d5fc9342"}).RESET_APP_DATA_TIMER && parseInt(({"NODE_ENV":"production","PUBLIC_DIR":"/home/luubinhan/Documents/projects/blog/public","GATSBY_ALGOLIA_APP_ID":"68PEVEWLR7","GATSBY_ALGOLIA_SEARCH_KEY":"c3e0db897950a5f687e9d690d5fc9342"}).RESET_APP_DATA_TIMER, 10) ||
	  60 * 2 * 1000; // after 2 minutes reset to first host
	
	/*
	 * Algolia Search library initialization
	 * https://www.algolia.com/
	 *
	 * @param {string} applicationID - Your applicationID, found in your dashboard
	 * @param {string} apiKey - Your API key, found in your dashboard
	 * @param {Object} [opts]
	 * @param {number} [opts.timeout=2000] - The request timeout set in milliseconds,
	 * another request will be issued after this timeout
	 * @param {string} [opts.protocol='https:'] - The protocol used to query Algolia Search API.
	 *                                        Set to 'http:' to force using http.
	 * @param {Object|Array} [opts.hosts={
	 *           read: [this.applicationID + '-dsn.algolia.net'].concat([
	 *             this.applicationID + '-1.algolianet.com',
	 *             this.applicationID + '-2.algolianet.com',
	 *             this.applicationID + '-3.algolianet.com']
	 *           ]),
	 *           write: [this.applicationID + '.algolia.net'].concat([
	 *             this.applicationID + '-1.algolianet.com',
	 *             this.applicationID + '-2.algolianet.com',
	 *             this.applicationID + '-3.algolianet.com']
	 *           ]) - The hosts to use for Algolia Search API.
	 *           If you provide them, you will less benefit from our HA implementation
	 */
	function AlgoliaSearchCore(applicationID, apiKey, opts) {
	  var debug = __webpack_require__(65)('algoliasearch');
	
	  var clone = __webpack_require__(39);
	  var isArray = __webpack_require__(83);
	  var map = __webpack_require__(63);
	
	  var usage = 'Usage: algoliasearch(applicationID, apiKey, opts)';
	
	  if (opts._allowEmptyCredentials !== true && !applicationID) {
	    throw new errors.AlgoliaSearchError('Please provide an application ID. ' + usage);
	  }
	
	  if (opts._allowEmptyCredentials !== true && !apiKey) {
	    throw new errors.AlgoliaSearchError('Please provide an API key. ' + usage);
	  }
	
	  this.applicationID = applicationID;
	  this.apiKey = apiKey;
	
	  this.hosts = {
	    read: [],
	    write: []
	  };
	
	  opts = opts || {};
	
	  this._timeouts = opts.timeouts || {
	    connect: 1 * 1000, // 500ms connect is GPRS latency
	    read: 2 * 1000,
	    write: 30 * 1000
	  };
	
	  // backward compat, if opts.timeout is passed, we use it to configure all timeouts like before
	  if (opts.timeout) {
	    this._timeouts.connect = this._timeouts.read = this._timeouts.write = opts.timeout;
	  }
	
	  var protocol = opts.protocol || 'https:';
	  // while we advocate for colon-at-the-end values: 'http:' for `opts.protocol`
	  // we also accept `http` and `https`. It's a common error.
	  if (!/:$/.test(protocol)) {
	    protocol = protocol + ':';
	  }
	
	  if (protocol !== 'http:' && protocol !== 'https:') {
	    throw new errors.AlgoliaSearchError('protocol must be `http:` or `https:` (was `' + opts.protocol + '`)');
	  }
	
	  this._checkAppIdData();
	
	  if (!opts.hosts) {
	    var defaultHosts = map(this._shuffleResult, function(hostNumber) {
	      return applicationID + '-' + hostNumber + '.algolianet.com';
	    });
	
	    // no hosts given, compute defaults
	    var mainSuffix = (opts.dsn === false ? '' : '-dsn') + '.algolia.net';
	    this.hosts.read = [this.applicationID + mainSuffix].concat(defaultHosts);
	    this.hosts.write = [this.applicationID + '.algolia.net'].concat(defaultHosts);
	  } else if (isArray(opts.hosts)) {
	    // when passing custom hosts, we need to have a different host index if the number
	    // of write/read hosts are different.
	    this.hosts.read = clone(opts.hosts);
	    this.hosts.write = clone(opts.hosts);
	  } else {
	    this.hosts.read = clone(opts.hosts.read);
	    this.hosts.write = clone(opts.hosts.write);
	  }
	
	  // add protocol and lowercase hosts
	  this.hosts.read = map(this.hosts.read, prepareHost(protocol));
	  this.hosts.write = map(this.hosts.write, prepareHost(protocol));
	
	  this.extraHeaders = {};
	
	  // In some situations you might want to warm the cache
	  this.cache = opts._cache || {};
	
	  this._ua = opts._ua;
	  this._useCache = opts._useCache === undefined || opts._cache ? true : opts._useCache;
	  this._useRequestCache = this._useCache && opts._useRequestCache;
	  this._useFallback = opts.useFallback === undefined ? true : opts.useFallback;
	
	  this._setTimeout = opts._setTimeout;
	
	  debug('init done, %j', this);
	}
	
	/*
	 * Get the index object initialized
	 *
	 * @param indexName the name of index
	 * @param callback the result callback with one argument (the Index instance)
	 */
	AlgoliaSearchCore.prototype.initIndex = function(indexName) {
	  return new IndexCore(this, indexName);
	};
	
	/**
	* Add an extra field to the HTTP request
	*
	* @param name the header field name
	* @param value the header field value
	*/
	AlgoliaSearchCore.prototype.setExtraHeader = function(name, value) {
	  this.extraHeaders[name.toLowerCase()] = value;
	};
	
	/**
	* Get the value of an extra HTTP header
	*
	* @param name the header field name
	*/
	AlgoliaSearchCore.prototype.getExtraHeader = function(name) {
	  return this.extraHeaders[name.toLowerCase()];
	};
	
	/**
	* Remove an extra field from the HTTP request
	*
	* @param name the header field name
	*/
	AlgoliaSearchCore.prototype.unsetExtraHeader = function(name) {
	  delete this.extraHeaders[name.toLowerCase()];
	};
	
	/**
	* Augment sent x-algolia-agent with more data, each agent part
	* is automatically separated from the others by a semicolon;
	*
	* @param algoliaAgent the agent to add
	*/
	AlgoliaSearchCore.prototype.addAlgoliaAgent = function(algoliaAgent) {
	  if (this._ua.indexOf(';' + algoliaAgent) === -1) {
	    this._ua += ';' + algoliaAgent;
	  }
	};
	
	/*
	 * Wrapper that try all hosts to maximize the quality of service
	 */
	AlgoliaSearchCore.prototype._jsonRequest = function(initialOpts) {
	  this._checkAppIdData();
	
	  var requestDebug = __webpack_require__(65)('algoliasearch:' + initialOpts.url);
	
	
	  var body;
	  var cacheID;
	  var additionalUA = initialOpts.additionalUA || '';
	  var cache = initialOpts.cache;
	  var client = this;
	  var tries = 0;
	  var usingFallback = false;
	  var hasFallback = client._useFallback && client._request.fallback && initialOpts.fallback;
	  var headers;
	
	  if (
	    this.apiKey.length > MAX_API_KEY_LENGTH &&
	    initialOpts.body !== undefined &&
	    (initialOpts.body.params !== undefined || // index.search()
	    initialOpts.body.requests !== undefined) // client.search()
	  ) {
	    initialOpts.body.apiKey = this.apiKey;
	    headers = this._computeRequestHeaders({
	      additionalUA: additionalUA,
	      withApiKey: false,
	      headers: initialOpts.headers
	    });
	  } else {
	    headers = this._computeRequestHeaders({
	      additionalUA: additionalUA,
	      headers: initialOpts.headers
	    });
	  }
	
	  if (initialOpts.body !== undefined) {
	    body = safeJSONStringify(initialOpts.body);
	  }
	
	  requestDebug('request start');
	  var debugData = [];
	
	
	  function doRequest(requester, reqOpts) {
	    client._checkAppIdData();
	
	    var startTime = new Date();
	
	    if (client._useCache && !client._useRequestCache) {
	      cacheID = initialOpts.url;
	    }
	
	    // as we sometime use POST requests to pass parameters (like query='aa'),
	    // the cacheID must also include the body to be different between calls
	    if (client._useCache && !client._useRequestCache && body) {
	      cacheID += '_body_' + reqOpts.body;
	    }
	
	    // handle cache existence
	    if (isCacheValidWithCurrentID(!client._useRequestCache, cache, cacheID)) {
	      requestDebug('serving response from cache');
	
	      var responseText = cache[cacheID];
	
	      // Cache response must match the type of the original one
	      return client._promise.resolve({
	        body: JSON.parse(responseText),
	        responseText: responseText
	      });
	    }
	
	    // if we reached max tries
	    if (tries >= client.hosts[initialOpts.hostType].length) {
	      if (!hasFallback || usingFallback) {
	        requestDebug('could not get any response');
	        // then stop
	        return client._promise.reject(new errors.AlgoliaSearchError(
	          'Cannot connect to the AlgoliaSearch API.' +
	          ' Send an email to support@algolia.com to report and resolve the issue.' +
	          ' Application id was: ' + client.applicationID, {debugData: debugData}
	        ));
	      }
	
	      requestDebug('switching to fallback');
	
	      // let's try the fallback starting from here
	      tries = 0;
	
	      // method, url and body are fallback dependent
	      reqOpts.method = initialOpts.fallback.method;
	      reqOpts.url = initialOpts.fallback.url;
	      reqOpts.jsonBody = initialOpts.fallback.body;
	      if (reqOpts.jsonBody) {
	        reqOpts.body = safeJSONStringify(reqOpts.jsonBody);
	      }
	      // re-compute headers, they could be omitting the API KEY
	      headers = client._computeRequestHeaders({
	        additionalUA: additionalUA,
	        headers: initialOpts.headers
	      });
	
	      reqOpts.timeouts = client._getTimeoutsForRequest(initialOpts.hostType);
	      client._setHostIndexByType(0, initialOpts.hostType);
	      usingFallback = true; // the current request is now using fallback
	      return doRequest(client._request.fallback, reqOpts);
	    }
	
	    var currentHost = client._getHostByType(initialOpts.hostType);
	
	    var url = currentHost + reqOpts.url;
	    var options = {
	      body: reqOpts.body,
	      jsonBody: reqOpts.jsonBody,
	      method: reqOpts.method,
	      headers: headers,
	      timeouts: reqOpts.timeouts,
	      debug: requestDebug,
	      forceAuthHeaders: reqOpts.forceAuthHeaders
	    };
	
	    requestDebug('method: %s, url: %s, headers: %j, timeouts: %d',
	      options.method, url, options.headers, options.timeouts);
	
	    if (requester === client._request.fallback) {
	      requestDebug('using fallback');
	    }
	
	    // `requester` is any of this._request or this._request.fallback
	    // thus it needs to be called using the client as context
	    return requester.call(client, url, options).then(success, tryFallback);
	
	    function success(httpResponse) {
	      // compute the status of the response,
	      //
	      // When in browser mode, using XDR or JSONP, we have no statusCode available
	      // So we rely on our API response `status` property.
	      // But `waitTask` can set a `status` property which is not the statusCode (it's the task status)
	      // So we check if there's a `message` along `status` and it means it's an error
	      //
	      // That's the only case where we have a response.status that's not the http statusCode
	      var status = httpResponse && httpResponse.body && httpResponse.body.message && httpResponse.body.status ||
	
	        // this is important to check the request statusCode AFTER the body eventual
	        // statusCode because some implementations (jQuery XDomainRequest transport) may
	        // send statusCode 200 while we had an error
	        httpResponse.statusCode ||
	
	        // When in browser mode, using XDR or JSONP
	        // we default to success when no error (no response.status && response.message)
	        // If there was a JSON.parse() error then body is null and it fails
	        httpResponse && httpResponse.body && 200;
	
	      requestDebug('received response: statusCode: %s, computed statusCode: %d, headers: %j',
	        httpResponse.statusCode, status, httpResponse.headers);
	
	      var httpResponseOk = Math.floor(status / 100) === 2;
	
	      var endTime = new Date();
	      debugData.push({
	        currentHost: currentHost,
	        headers: removeCredentials(headers),
	        content: body || null,
	        contentLength: body !== undefined ? body.length : null,
	        method: reqOpts.method,
	        timeouts: reqOpts.timeouts,
	        url: reqOpts.url,
	        startTime: startTime,
	        endTime: endTime,
	        duration: endTime - startTime,
	        statusCode: status
	      });
	
	      if (httpResponseOk) {
	        if (client._useCache && !client._useRequestCache && cache) {
	          cache[cacheID] = httpResponse.responseText;
	        }
	
	        return {
	          responseText: httpResponse.responseText,
	          body: httpResponse.body
	        };
	      }
	
	      var shouldRetry = Math.floor(status / 100) !== 4;
	
	      if (shouldRetry) {
	        tries += 1;
	        return retryRequest();
	      }
	
	      requestDebug('unrecoverable error');
	
	      // no success and no retry => fail
	      var unrecoverableError = new errors.AlgoliaSearchError(
	        httpResponse.body && httpResponse.body.message, {debugData: debugData, statusCode: status}
	      );
	
	      return client._promise.reject(unrecoverableError);
	    }
	
	    function tryFallback(err) {
	      // error cases:
	      //  While not in fallback mode:
	      //    - CORS not supported
	      //    - network error
	      //  While in fallback mode:
	      //    - timeout
	      //    - network error
	      //    - badly formatted JSONP (script loaded, did not call our callback)
	      //  In both cases:
	      //    - uncaught exception occurs (TypeError)
	      requestDebug('error: %s, stack: %s', err.message, err.stack);
	
	      var endTime = new Date();
	      debugData.push({
	        currentHost: currentHost,
	        headers: removeCredentials(headers),
	        content: body || null,
	        contentLength: body !== undefined ? body.length : null,
	        method: reqOpts.method,
	        timeouts: reqOpts.timeouts,
	        url: reqOpts.url,
	        startTime: startTime,
	        endTime: endTime,
	        duration: endTime - startTime
	      });
	
	      if (!(err instanceof errors.AlgoliaSearchError)) {
	        err = new errors.Unknown(err && err.message, err);
	      }
	
	      tries += 1;
	
	      // stop the request implementation when:
	      if (
	        // we did not generate this error,
	        // it comes from a throw in some other piece of code
	        err instanceof errors.Unknown ||
	
	        // server sent unparsable JSON
	        err instanceof errors.UnparsableJSON ||
	
	        // max tries and already using fallback or no fallback
	        tries >= client.hosts[initialOpts.hostType].length &&
	        (usingFallback || !hasFallback)) {
	        // stop request implementation for this command
	        err.debugData = debugData;
	        return client._promise.reject(err);
	      }
	
	      // When a timeout occurred, retry by raising timeout
	      if (err instanceof errors.RequestTimeout) {
	        return retryRequestWithHigherTimeout();
	      }
	
	      return retryRequest();
	    }
	
	    function retryRequest() {
	      requestDebug('retrying request');
	      client._incrementHostIndex(initialOpts.hostType);
	      return doRequest(requester, reqOpts);
	    }
	
	    function retryRequestWithHigherTimeout() {
	      requestDebug('retrying request with higher timeout');
	      client._incrementHostIndex(initialOpts.hostType);
	      client._incrementTimeoutMultipler();
	      reqOpts.timeouts = client._getTimeoutsForRequest(initialOpts.hostType);
	      return doRequest(requester, reqOpts);
	    }
	  }
	
	  function isCacheValidWithCurrentID(
	    useRequestCache,
	    currentCache,
	    currentCacheID
	  ) {
	    return (
	      client._useCache &&
	      useRequestCache &&
	      currentCache &&
	      currentCache[currentCacheID] !== undefined
	    );
	  }
	
	
	  function interopCallbackReturn(request, callback) {
	    if (isCacheValidWithCurrentID(client._useRequestCache, cache, cacheID)) {
	      request.catch(function() {
	        // Release the cache on error
	        delete cache[cacheID];
	      });
	    }
	
	    if (typeof initialOpts.callback === 'function') {
	      // either we have a callback
	      request.then(function okCb(content) {
	        exitPromise(function() {
	          initialOpts.callback(null, callback(content));
	        }, client._setTimeout || setTimeout);
	      }, function nookCb(err) {
	        exitPromise(function() {
	          initialOpts.callback(err);
	        }, client._setTimeout || setTimeout);
	      });
	    } else {
	      // either we are using promises
	      return request.then(callback);
	    }
	  }
	
	  if (client._useCache && client._useRequestCache) {
	    cacheID = initialOpts.url;
	  }
	
	  // as we sometime use POST requests to pass parameters (like query='aa'),
	  // the cacheID must also include the body to be different between calls
	  if (client._useCache && client._useRequestCache && body) {
	    cacheID += '_body_' + body;
	  }
	
	  if (isCacheValidWithCurrentID(client._useRequestCache, cache, cacheID)) {
	    requestDebug('serving request from cache');
	
	    var maybePromiseForCache = cache[cacheID];
	
	    // In case the cache is warmup with value that is not a promise
	    var promiseForCache = typeof maybePromiseForCache.then !== 'function'
	      ? client._promise.resolve({responseText: maybePromiseForCache})
	      : maybePromiseForCache;
	
	    return interopCallbackReturn(promiseForCache, function(content) {
	      // In case of the cache request, return the original value
	      return JSON.parse(content.responseText);
	    });
	  }
	
	  var request = doRequest(
	    client._request, {
	      url: initialOpts.url,
	      method: initialOpts.method,
	      body: body,
	      jsonBody: initialOpts.body,
	      timeouts: client._getTimeoutsForRequest(initialOpts.hostType),
	      forceAuthHeaders: initialOpts.forceAuthHeaders
	    }
	  );
	
	  if (client._useCache && client._useRequestCache && cache) {
	    cache[cacheID] = request;
	  }
	
	  return interopCallbackReturn(request, function(content) {
	    // In case of the first request, return the JSON value
	    return content.body;
	  });
	};
	
	/*
	* Transform search param object in query string
	* @param {object} args arguments to add to the current query string
	* @param {string} params current query string
	* @return {string} the final query string
	*/
	AlgoliaSearchCore.prototype._getSearchParams = function(args, params) {
	  if (args === undefined || args === null) {
	    return params;
	  }
	  for (var key in args) {
	    if (key !== null && args[key] !== undefined && args.hasOwnProperty(key)) {
	      params += params === '' ? '' : '&';
	      params += key + '=' + encodeURIComponent(Object.prototype.toString.call(args[key]) === '[object Array]' ? safeJSONStringify(args[key]) : args[key]);
	    }
	  }
	  return params;
	};
	
	/**
	 * Compute the headers for a request
	 *
	 * @param [string] options.additionalUA semi-colon separated string with other user agents to add
	 * @param [boolean=true] options.withApiKey Send the api key as a header
	 * @param [Object] options.headers Extra headers to send
	 */
	AlgoliaSearchCore.prototype._computeRequestHeaders = function(options) {
	  var forEach = __webpack_require__(40);
	
	  var ua = options.additionalUA ?
	    this._ua + ';' + options.additionalUA :
	    this._ua;
	
	  var requestHeaders = {
	    'x-algolia-agent': ua,
	    'x-algolia-application-id': this.applicationID
	  };
	
	  // browser will inline headers in the url, node.js will use http headers
	  // but in some situations, the API KEY will be too long (big secured API keys)
	  // so if the request is a POST and the KEY is very long, we will be asked to not put
	  // it into headers but in the JSON body
	  if (options.withApiKey !== false) {
	    requestHeaders['x-algolia-api-key'] = this.apiKey;
	  }
	
	  if (this.userToken) {
	    requestHeaders['x-algolia-usertoken'] = this.userToken;
	  }
	
	  if (this.securityTags) {
	    requestHeaders['x-algolia-tagfilters'] = this.securityTags;
	  }
	
	  forEach(this.extraHeaders, function addToRequestHeaders(value, key) {
	    requestHeaders[key] = value;
	  });
	
	  if (options.headers) {
	    forEach(options.headers, function addToRequestHeaders(value, key) {
	      requestHeaders[key] = value;
	    });
	  }
	
	  return requestHeaders;
	};
	
	/**
	 * Search through multiple indices at the same time
	 * @param  {Object[]}   queries  An array of queries you want to run.
	 * @param {string} queries[].indexName The index name you want to target
	 * @param {string} [queries[].query] The query to issue on this index. Can also be passed into `params`
	 * @param {Object} queries[].params Any search param like hitsPerPage, ..
	 * @param  {Function} callback Callback to be called
	 * @return {Promise|undefined} Returns a promise if no callback given
	 */
	AlgoliaSearchCore.prototype.search = function(queries, opts, callback) {
	  var isArray = __webpack_require__(83);
	  var map = __webpack_require__(63);
	
	  var usage = 'Usage: client.search(arrayOfQueries[, callback])';
	
	  if (!isArray(queries)) {
	    throw new Error(usage);
	  }
	
	  if (typeof opts === 'function') {
	    callback = opts;
	    opts = {};
	  } else if (opts === undefined) {
	    opts = {};
	  }
	
	  var client = this;
	
	  var postObj = {
	    requests: map(queries, function prepareRequest(query) {
	      var params = '';
	
	      // allow query.query
	      // so we are mimicing the index.search(query, params) method
	      // {indexName:, query:, params:}
	      if (query.query !== undefined) {
	        params += 'query=' + encodeURIComponent(query.query);
	      }
	
	      return {
	        indexName: query.indexName,
	        params: client._getSearchParams(query.params, params)
	      };
	    })
	  };
	
	  var JSONPParams = map(postObj.requests, function prepareJSONPParams(request, requestId) {
	    return requestId + '=' +
	      encodeURIComponent(
	        '/1/indexes/' + encodeURIComponent(request.indexName) + '?' +
	        request.params
	      );
	  }).join('&');
	
	  var url = '/1/indexes/*/queries';
	
	  if (opts.strategy !== undefined) {
	    postObj.strategy = opts.strategy;
	  }
	
	  return this._jsonRequest({
	    cache: this.cache,
	    method: 'POST',
	    url: url,
	    body: postObj,
	    hostType: 'read',
	    fallback: {
	      method: 'GET',
	      url: '/1/indexes/*',
	      body: {
	        params: JSONPParams
	      }
	    },
	    callback: callback
	  });
	};
	
	/**
	* Search for facet values
	* https://www.algolia.com/doc/rest-api/search#search-for-facet-values
	* This is the top-level API for SFFV.
	*
	* @param {object[]} queries An array of queries to run.
	* @param {string} queries[].indexName Index name, name of the index to search.
	* @param {object} queries[].params Query parameters.
	* @param {string} queries[].params.facetName Facet name, name of the attribute to search for values in.
	* Must be declared as a facet
	* @param {string} queries[].params.facetQuery Query for the facet search
	* @param {string} [queries[].params.*] Any search parameter of Algolia,
	* see https://www.algolia.com/doc/api-client/javascript/search#search-parameters
	* Pagination is not supported. The page and hitsPerPage parameters will be ignored.
	*/
	AlgoliaSearchCore.prototype.searchForFacetValues = function(queries) {
	  var isArray = __webpack_require__(83);
	  var map = __webpack_require__(63);
	
	  var usage = 'Usage: client.searchForFacetValues([{indexName, params: {facetName, facetQuery, ...params}}, ...queries])'; // eslint-disable-line max-len
	
	  if (!isArray(queries)) {
	    throw new Error(usage);
	  }
	
	  var client = this;
	
	  return client._promise.all(map(queries, function performQuery(query) {
	    if (
	      !query ||
	      query.indexName === undefined ||
	      query.params.facetName === undefined ||
	      query.params.facetQuery === undefined
	    ) {
	      throw new Error(usage);
	    }
	
	    var clone = __webpack_require__(39);
	    var omit = __webpack_require__(134);
	
	    var indexName = query.indexName;
	    var params = query.params;
	
	    var facetName = params.facetName;
	    var filteredParams = omit(clone(params), function(keyName) {
	      return keyName === 'facetName';
	    });
	    var searchParameters = client._getSearchParams(filteredParams, '');
	
	    return client._jsonRequest({
	      cache: client.cache,
	      method: 'POST',
	      url:
	        '/1/indexes/' +
	        encodeURIComponent(indexName) +
	        '/facets/' +
	        encodeURIComponent(facetName) +
	        '/query',
	      hostType: 'read',
	      body: {params: searchParameters}
	    });
	  }));
	};
	
	/**
	 * Set the extra security tagFilters header
	 * @param {string|array} tags The list of tags defining the current security filters
	 */
	AlgoliaSearchCore.prototype.setSecurityTags = function(tags) {
	  if (Object.prototype.toString.call(tags) === '[object Array]') {
	    var strTags = [];
	    for (var i = 0; i < tags.length; ++i) {
	      if (Object.prototype.toString.call(tags[i]) === '[object Array]') {
	        var oredTags = [];
	        for (var j = 0; j < tags[i].length; ++j) {
	          oredTags.push(tags[i][j]);
	        }
	        strTags.push('(' + oredTags.join(',') + ')');
	      } else {
	        strTags.push(tags[i]);
	      }
	    }
	    tags = strTags.join(',');
	  }
	
	  this.securityTags = tags;
	};
	
	/**
	 * Set the extra user token header
	 * @param {string} userToken The token identifying a uniq user (used to apply rate limits)
	 */
	AlgoliaSearchCore.prototype.setUserToken = function(userToken) {
	  this.userToken = userToken;
	};
	
	/**
	 * Clear all queries in client's cache
	 * @return undefined
	 */
	AlgoliaSearchCore.prototype.clearCache = function() {
	  this.cache = {};
	};
	
	/**
	* Set the number of milliseconds a request can take before automatically being terminated.
	* @deprecated
	* @param {Number} milliseconds
	*/
	AlgoliaSearchCore.prototype.setRequestTimeout = function(milliseconds) {
	  if (milliseconds) {
	    this._timeouts.connect = this._timeouts.read = this._timeouts.write = milliseconds;
	  }
	};
	
	/**
	* Set the three different (connect, read, write) timeouts to be used when requesting
	* @param {Object} timeouts
	*/
	AlgoliaSearchCore.prototype.setTimeouts = function(timeouts) {
	  this._timeouts = timeouts;
	};
	
	/**
	* Get the three different (connect, read, write) timeouts to be used when requesting
	* @param {Object} timeouts
	*/
	AlgoliaSearchCore.prototype.getTimeouts = function() {
	  return this._timeouts;
	};
	
	AlgoliaSearchCore.prototype._getAppIdData = function() {
	  var data = store.get(this.applicationID);
	  if (data !== null) this._cacheAppIdData(data);
	  return data;
	};
	
	AlgoliaSearchCore.prototype._setAppIdData = function(data) {
	  data.lastChange = (new Date()).getTime();
	  this._cacheAppIdData(data);
	  return store.set(this.applicationID, data);
	};
	
	AlgoliaSearchCore.prototype._checkAppIdData = function() {
	  var data = this._getAppIdData();
	  var now = (new Date()).getTime();
	  if (data === null || now - data.lastChange > RESET_APP_DATA_TIMER) {
	    return this._resetInitialAppIdData(data);
	  }
	
	  return data;
	};
	
	AlgoliaSearchCore.prototype._resetInitialAppIdData = function(data) {
	  var newData = data || {};
	  newData.hostIndexes = {read: 0, write: 0};
	  newData.timeoutMultiplier = 1;
	  newData.shuffleResult = newData.shuffleResult || shuffle([1, 2, 3]);
	  return this._setAppIdData(newData);
	};
	
	AlgoliaSearchCore.prototype._cacheAppIdData = function(data) {
	  this._hostIndexes = data.hostIndexes;
	  this._timeoutMultiplier = data.timeoutMultiplier;
	  this._shuffleResult = data.shuffleResult;
	};
	
	AlgoliaSearchCore.prototype._partialAppIdDataUpdate = function(newData) {
	  var foreach = __webpack_require__(40);
	  var currentData = this._getAppIdData();
	  foreach(newData, function(value, key) {
	    currentData[key] = value;
	  });
	
	  return this._setAppIdData(currentData);
	};
	
	AlgoliaSearchCore.prototype._getHostByType = function(hostType) {
	  return this.hosts[hostType][this._getHostIndexByType(hostType)];
	};
	
	AlgoliaSearchCore.prototype._getTimeoutMultiplier = function() {
	  return this._timeoutMultiplier;
	};
	
	AlgoliaSearchCore.prototype._getHostIndexByType = function(hostType) {
	  return this._hostIndexes[hostType];
	};
	
	AlgoliaSearchCore.prototype._setHostIndexByType = function(hostIndex, hostType) {
	  var clone = __webpack_require__(39);
	  var newHostIndexes = clone(this._hostIndexes);
	  newHostIndexes[hostType] = hostIndex;
	  this._partialAppIdDataUpdate({hostIndexes: newHostIndexes});
	  return hostIndex;
	};
	
	AlgoliaSearchCore.prototype._incrementHostIndex = function(hostType) {
	  return this._setHostIndexByType(
	    (this._getHostIndexByType(hostType) + 1) % this.hosts[hostType].length, hostType
	  );
	};
	
	AlgoliaSearchCore.prototype._incrementTimeoutMultipler = function() {
	  var timeoutMultiplier = Math.max(this._timeoutMultiplier + 1, 4);
	  return this._partialAppIdDataUpdate({timeoutMultiplier: timeoutMultiplier});
	};
	
	AlgoliaSearchCore.prototype._getTimeoutsForRequest = function(hostType) {
	  return {
	    connect: this._timeouts.connect * this._timeoutMultiplier,
	    complete: this._timeouts[hostType] * this._timeoutMultiplier
	  };
	};
	
	function prepareHost(protocol) {
	  return function prepare(host) {
	    return protocol + '//' + host.toLowerCase();
	  };
	}
	
	// Prototype.js < 1.7, a widely used library, defines a weird
	// Array.prototype.toJSON function that will fail to stringify our content
	// appropriately
	// refs:
	//   - https://groups.google.com/forum/#!topic/prototype-core/E-SAVvV_V9Q
	//   - https://github.com/sstephenson/prototype/commit/038a2985a70593c1a86c230fadbdfe2e4898a48c
	//   - http://stackoverflow.com/a/3148441/147079
	function safeJSONStringify(obj) {
	  /* eslint no-extend-native:0 */
	
	  if (Array.prototype.toJSON === undefined) {
	    return JSON.stringify(obj);
	  }
	
	  var toJSON = Array.prototype.toJSON;
	  delete Array.prototype.toJSON;
	  var out = JSON.stringify(obj);
	  Array.prototype.toJSON = toJSON;
	
	  return out;
	}
	
	function shuffle(array) {
	  var currentIndex = array.length;
	  var temporaryValue;
	  var randomIndex;
	
	  // While there remain elements to shuffle...
	  while (currentIndex !== 0) {
	    // Pick a remaining element...
	    randomIndex = Math.floor(Math.random() * currentIndex);
	    currentIndex -= 1;
	
	    // And swap it with the current element.
	    temporaryValue = array[currentIndex];
	    array[currentIndex] = array[randomIndex];
	    array[randomIndex] = temporaryValue;
	  }
	
	  return array;
	}
	
	function removeCredentials(headers) {
	  var newHeaders = {};
	
	  for (var headerName in headers) {
	    if (Object.prototype.hasOwnProperty.call(headers, headerName)) {
	      var value;
	
	      if (headerName === 'x-algolia-api-key' || headerName === 'x-algolia-application-id') {
	        value = '**hidden for security purposes**';
	      } else {
	        value = headers[headerName];
	      }
	
	      newHeaders[headerName] = value;
	    }
	  }
	
	  return newHeaders;
	}


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

	var buildSearchMethod = __webpack_require__(133);
	var deprecate = __webpack_require__(227);
	var deprecatedMessage = __webpack_require__(228);
	
	module.exports = IndexCore;
	
	/*
	* Index class constructor.
	* You should not use this method directly but use initIndex() function
	*/
	function IndexCore(algoliasearch, indexName) {
	  this.indexName = indexName;
	  this.as = algoliasearch;
	  this.typeAheadArgs = null;
	  this.typeAheadValueOption = null;
	
	  // make sure every index instance has it's own cache
	  this.cache = {};
	}
	
	/*
	* Clear all queries in cache
	*/
	IndexCore.prototype.clearCache = function() {
	  this.cache = {};
	};
	
	/*
	* Search inside the index using XMLHttpRequest request (Using a POST query to
	* minimize number of OPTIONS queries: Cross-Origin Resource Sharing).
	*
	* @param {string} [query] the full text query
	* @param {object} [args] (optional) if set, contains an object with query parameters:
	* - page: (integer) Pagination parameter used to select the page to retrieve.
	*                   Page is zero-based and defaults to 0. Thus,
	*                   to retrieve the 10th page you need to set page=9
	* - hitsPerPage: (integer) Pagination parameter used to select the number of hits per page. Defaults to 20.
	* - attributesToRetrieve: a string that contains the list of object attributes
	* you want to retrieve (let you minimize the answer size).
	*   Attributes are separated with a comma (for example "name,address").
	*   You can also use an array (for example ["name","address"]).
	*   By default, all attributes are retrieved. You can also use '*' to retrieve all
	*   values when an attributesToRetrieve setting is specified for your index.
	* - attributesToHighlight: a string that contains the list of attributes you
	*   want to highlight according to the query.
	*   Attributes are separated by a comma. You can also use an array (for example ["name","address"]).
	*   If an attribute has no match for the query, the raw value is returned.
	*   By default all indexed text attributes are highlighted.
	*   You can use `*` if you want to highlight all textual attributes.
	*   Numerical attributes are not highlighted.
	*   A matchLevel is returned for each highlighted attribute and can contain:
	*      - full: if all the query terms were found in the attribute,
	*      - partial: if only some of the query terms were found,
	*      - none: if none of the query terms were found.
	* - attributesToSnippet: a string that contains the list of attributes to snippet alongside
	* the number of words to return (syntax is `attributeName:nbWords`).
	*    Attributes are separated by a comma (Example: attributesToSnippet=name:10,content:10).
	*    You can also use an array (Example: attributesToSnippet: ['name:10','content:10']).
	*    By default no snippet is computed.
	* - minWordSizefor1Typo: the minimum number of characters in a query word to accept one typo in this word.
	* Defaults to 3.
	* - minWordSizefor2Typos: the minimum number of characters in a query word
	* to accept two typos in this word. Defaults to 7.
	* - getRankingInfo: if set to 1, the result hits will contain ranking
	* information in _rankingInfo attribute.
	* - aroundLatLng: search for entries around a given
	* latitude/longitude (specified as two floats separated by a comma).
	*   For example aroundLatLng=47.316669,5.016670).
	*   You can specify the maximum distance in meters with the aroundRadius parameter (in meters)
	*   and the precision for ranking with aroundPrecision
	*   (for example if you set aroundPrecision=100, two objects that are distant of
	*   less than 100m will be considered as identical for "geo" ranking parameter).
	*   At indexing, you should specify geoloc of an object with the _geoloc attribute
	*   (in the form {"_geoloc":{"lat":48.853409, "lng":2.348800}})
	* - insideBoundingBox: search entries inside a given area defined by the two extreme points
	* of a rectangle (defined by 4 floats: p1Lat,p1Lng,p2Lat,p2Lng).
	*   For example insideBoundingBox=47.3165,4.9665,47.3424,5.0201).
	*   At indexing, you should specify geoloc of an object with the _geoloc attribute
	*   (in the form {"_geoloc":{"lat":48.853409, "lng":2.348800}})
	* - numericFilters: a string that contains the list of numeric filters you want to
	* apply separated by a comma.
	*   The syntax of one filter is `attributeName` followed by `operand` followed by `value`.
	*   Supported operands are `<`, `<=`, `=`, `>` and `>=`.
	*   You can have multiple conditions on one attribute like for example numericFilters=price>100,price<1000.
	*   You can also use an array (for example numericFilters: ["price>100","price<1000"]).
	* - tagFilters: filter the query by a set of tags. You can AND tags by separating them by commas.
	*   To OR tags, you must add parentheses. For example, tags=tag1,(tag2,tag3) means tag1 AND (tag2 OR tag3).
	*   You can also use an array, for example tagFilters: ["tag1",["tag2","tag3"]]
	*   means tag1 AND (tag2 OR tag3).
	*   At indexing, tags should be added in the _tags** attribute
	*   of objects (for example {"_tags":["tag1","tag2"]}).
	* - facetFilters: filter the query by a list of facets.
	*   Facets are separated by commas and each facet is encoded as `attributeName:value`.
	*   For example: `facetFilters=category:Book,author:John%20Doe`.
	*   You can also use an array (for example `["category:Book","author:John%20Doe"]`).
	* - facets: List of object attributes that you want to use for faceting.
	*   Comma separated list: `"category,author"` or array `['category','author']`
	*   Only attributes that have been added in **attributesForFaceting** index setting
	*   can be used in this parameter.
	*   You can also use `*` to perform faceting on all attributes specified in **attributesForFaceting**.
	* - queryType: select how the query words are interpreted, it can be one of the following value:
	*    - prefixAll: all query words are interpreted as prefixes,
	*    - prefixLast: only the last word is interpreted as a prefix (default behavior),
	*    - prefixNone: no query word is interpreted as a prefix. This option is not recommended.
	* - optionalWords: a string that contains the list of words that should
	* be considered as optional when found in the query.
	*   Comma separated and array are accepted.
	* - distinct: If set to 1, enable the distinct feature (disabled by default)
	* if the attributeForDistinct index setting is set.
	*   This feature is similar to the SQL "distinct" keyword: when enabled
	*   in a query with the distinct=1 parameter,
	*   all hits containing a duplicate value for the attributeForDistinct attribute are removed from results.
	*   For example, if the chosen attribute is show_name and several hits have
	*   the same value for show_name, then only the best
	*   one is kept and others are removed.
	* - restrictSearchableAttributes: List of attributes you want to use for
	* textual search (must be a subset of the attributesToIndex index setting)
	* either comma separated or as an array
	* @param {function} [callback] the result callback called with two arguments:
	*  error: null or Error('message'). If false, the content contains the error.
	*  content: the server answer that contains the list of results.
	*/
	IndexCore.prototype.search = buildSearchMethod('query');
	
	/*
	* -- BETA --
	* Search a record similar to the query inside the index using XMLHttpRequest request (Using a POST query to
	* minimize number of OPTIONS queries: Cross-Origin Resource Sharing).
	*
	* @param {string} [query] the similar query
	* @param {object} [args] (optional) if set, contains an object with query parameters.
	*   All search parameters are supported (see search function), restrictSearchableAttributes and facetFilters
	*   are the two most useful to restrict the similar results and get more relevant content
	*/
	IndexCore.prototype.similarSearch = deprecate(
	  buildSearchMethod('similarQuery'),
	  deprecatedMessage(
	    'index.similarSearch(query[, callback])',
	    'index.search({ similarQuery: query }[, callback])'
	  )
	);
	
	/*
	* Browse index content. The response content will have a `cursor` property that you can use
	* to browse subsequent pages for this query. Use `index.browseFrom(cursor)` when you want.
	*
	* @param {string} query - The full text query
	* @param {Object} [queryParameters] - Any search query parameter
	* @param {Function} [callback] - The result callback called with two arguments
	*   error: null or Error('message')
	*   content: the server answer with the browse result
	* @return {Promise|undefined} Returns a promise if no callback given
	* @example
	* index.browse('cool songs', {
	*   tagFilters: 'public,comments',
	*   hitsPerPage: 500
	* }, callback);
	* @see {@link https://www.algolia.com/doc/rest_api#Browse|Algolia REST API Documentation}
	*/
	IndexCore.prototype.browse = function(query, queryParameters, callback) {
	  var merge = __webpack_require__(230);
	
	  var indexObj = this;
	
	  var page;
	  var hitsPerPage;
	
	  // we check variadic calls that are not the one defined
	  // .browse()/.browse(fn)
	  // => page = 0
	  if (arguments.length === 0 || arguments.length === 1 && typeof arguments[0] === 'function') {
	    page = 0;
	    callback = arguments[0];
	    query = undefined;
	  } else if (typeof arguments[0] === 'number') {
	    // .browse(2)/.browse(2, 10)/.browse(2, fn)/.browse(2, 10, fn)
	    page = arguments[0];
	    if (typeof arguments[1] === 'number') {
	      hitsPerPage = arguments[1];
	    } else if (typeof arguments[1] === 'function') {
	      callback = arguments[1];
	      hitsPerPage = undefined;
	    }
	    query = undefined;
	    queryParameters = undefined;
	  } else if (typeof arguments[0] === 'object') {
	    // .browse(queryParameters)/.browse(queryParameters, cb)
	    if (typeof arguments[1] === 'function') {
	      callback = arguments[1];
	    }
	    queryParameters = arguments[0];
	    query = undefined;
	  } else if (typeof arguments[0] === 'string' && typeof arguments[1] === 'function') {
	    // .browse(query, cb)
	    callback = arguments[1];
	    queryParameters = undefined;
	  }
	
	  // otherwise it's a .browse(query)/.browse(query, queryParameters)/.browse(query, queryParameters, cb)
	
	  // get search query parameters combining various possible calls
	  // to .browse();
	  queryParameters = merge({}, queryParameters || {}, {
	    page: page,
	    hitsPerPage: hitsPerPage,
	    query: query
	  });
	
	  var params = this.as._getSearchParams(queryParameters, '');
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/browse',
	    body: {params: params},
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/*
	* Continue browsing from a previous position (cursor), obtained via a call to `.browse()`.
	*
	* @param {string} query - The full text query
	* @param {Object} [queryParameters] - Any search query parameter
	* @param {Function} [callback] - The result callback called with two arguments
	*   error: null or Error('message')
	*   content: the server answer with the browse result
	* @return {Promise|undefined} Returns a promise if no callback given
	* @example
	* index.browseFrom('14lkfsakl32', callback);
	* @see {@link https://www.algolia.com/doc/rest_api#Browse|Algolia REST API Documentation}
	*/
	IndexCore.prototype.browseFrom = function(cursor, callback) {
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' + encodeURIComponent(this.indexName) + '/browse',
	    body: {cursor: cursor},
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/*
	* Search for facet values
	* https://www.algolia.com/doc/rest-api/search#search-for-facet-values
	*
	* @param {string} params.facetName Facet name, name of the attribute to search for values in.
	* Must be declared as a facet
	* @param {string} params.facetQuery Query for the facet search
	* @param {string} [params.*] Any search parameter of Algolia,
	* see https://www.algolia.com/doc/api-client/javascript/search#search-parameters
	* Pagination is not supported. The page and hitsPerPage parameters will be ignored.
	* @param callback (optional)
	*/
	IndexCore.prototype.searchForFacetValues = function(params, callback) {
	  var clone = __webpack_require__(39);
	  var omit = __webpack_require__(134);
	  var usage = 'Usage: index.searchForFacetValues({facetName, facetQuery, ...params}[, callback])';
	
	  if (params.facetName === undefined || params.facetQuery === undefined) {
	    throw new Error(usage);
	  }
	
	  var facetName = params.facetName;
	  var filteredParams = omit(clone(params), function(keyName) {
	    return keyName === 'facetName';
	  });
	  var searchParameters = this.as._getSearchParams(filteredParams, '');
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/' +
	      encodeURIComponent(this.indexName) + '/facets/' + encodeURIComponent(facetName) + '/query',
	    hostType: 'read',
	    body: {params: searchParameters},
	    callback: callback
	  });
	};
	
	IndexCore.prototype.searchFacet = deprecate(function(params, callback) {
	  return this.searchForFacetValues(params, callback);
	}, deprecatedMessage(
	  'index.searchFacet(params[, callback])',
	  'index.searchForFacetValues(params[, callback])'
	));
	
	IndexCore.prototype._search = function(params, url, callback, additionalUA) {
	  return this.as._jsonRequest({
	    cache: this.cache,
	    method: 'POST',
	    url: url || '/1/indexes/' + encodeURIComponent(this.indexName) + '/query',
	    body: {params: params},
	    hostType: 'read',
	    fallback: {
	      method: 'GET',
	      url: '/1/indexes/' + encodeURIComponent(this.indexName),
	      body: {params: params}
	    },
	    callback: callback,
	    additionalUA: additionalUA
	  });
	};
	
	/*
	* Get an object from this index
	*
	* @param objectID the unique identifier of the object to retrieve
	* @param attrs (optional) if set, contains the array of attribute names to retrieve
	* @param callback (optional) the result callback called with two arguments
	*  error: null or Error('message')
	*  content: the object to retrieve or the error message if a failure occurred
	*/
	IndexCore.prototype.getObject = function(objectID, attrs, callback) {
	  var indexObj = this;
	
	  if (arguments.length === 1 || typeof attrs === 'function') {
	    callback = attrs;
	    attrs = undefined;
	  }
	
	  var params = '';
	  if (attrs !== undefined) {
	    params = '?attributes=';
	    for (var i = 0; i < attrs.length; ++i) {
	      if (i !== 0) {
	        params += ',';
	      }
	      params += attrs[i];
	    }
	  }
	
	  return this.as._jsonRequest({
	    method: 'GET',
	    url: '/1/indexes/' + encodeURIComponent(indexObj.indexName) + '/' + encodeURIComponent(objectID) + params,
	    hostType: 'read',
	    callback: callback
	  });
	};
	
	/*
	* Get several objects from this index
	*
	* @param objectIDs the array of unique identifier of objects to retrieve
	*/
	IndexCore.prototype.getObjects = function(objectIDs, attributesToRetrieve, callback) {
	  var isArray = __webpack_require__(83);
	  var map = __webpack_require__(63);
	
	  var usage = 'Usage: index.getObjects(arrayOfObjectIDs[, callback])';
	
	  if (!isArray(objectIDs)) {
	    throw new Error(usage);
	  }
	
	  var indexObj = this;
	
	  if (arguments.length === 1 || typeof attributesToRetrieve === 'function') {
	    callback = attributesToRetrieve;
	    attributesToRetrieve = undefined;
	  }
	
	  var body = {
	    requests: map(objectIDs, function prepareRequest(objectID) {
	      var request = {
	        indexName: indexObj.indexName,
	        objectID: objectID
	      };
	
	      if (attributesToRetrieve) {
	        request.attributesToRetrieve = attributesToRetrieve.join(',');
	      }
	
	      return request;
	    })
	  };
	
	  return this.as._jsonRequest({
	    method: 'POST',
	    url: '/1/indexes/*/objects',
	    hostType: 'read',
	    body: body,
	    callback: callback
	  });
	};
	
	IndexCore.prototype.as = null;
	IndexCore.prototype.indexName = null;
	IndexCore.prototype.typeAheadArgs = null;
	IndexCore.prototype.typeAheadValueOption = null;


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var global = __webpack_require__(250);
	var Promise = global.Promise || __webpack_require__(249).Promise;
	
	// This is the standalone browser build entry point
	// Browser implementation of the Algolia Search JavaScript client,
	// using XMLHttpRequest, XDomainRequest and JSONP as fallback
	module.exports = function createAlgoliasearch(AlgoliaSearch, uaSuffix) {
	  var inherits = __webpack_require__(89);
	  var errors = __webpack_require__(62);
	  var inlineHeaders = __webpack_require__(225);
	  var jsonpRequest = __webpack_require__(226);
	  var places = __webpack_require__(231);
	  uaSuffix = uaSuffix || '';
	
	  if (false) {
	    require('debug').enable('algoliasearch*');
	  }
	
	  function algoliasearch(applicationID, apiKey, opts) {
	    var cloneDeep = __webpack_require__(39);
	
	    opts = cloneDeep(opts || {});
	
	    opts._ua = opts._ua || algoliasearch.ua;
	
	    return new AlgoliaSearchBrowser(applicationID, apiKey, opts);
	  }
	
	  algoliasearch.version = __webpack_require__(233);
	  algoliasearch.ua = 'Algolia for vanilla JavaScript ' + uaSuffix + algoliasearch.version;
	  algoliasearch.initPlaces = places(algoliasearch);
	
	  // we expose into window no matter how we are used, this will allow
	  // us to easily debug any website running algolia
	  global.__algolia = {
	    debug: __webpack_require__(65),
	    algoliasearch: algoliasearch
	  };
	
	  var support = {
	    hasXMLHttpRequest: 'XMLHttpRequest' in global,
	    hasXDomainRequest: 'XDomainRequest' in global
	  };
	
	  if (support.hasXMLHttpRequest) {
	    support.cors = 'withCredentials' in new XMLHttpRequest();
	  }
	
	  function AlgoliaSearchBrowser() {
	    // call AlgoliaSearch constructor
	    AlgoliaSearch.apply(this, arguments);
	  }
	
	  inherits(AlgoliaSearchBrowser, AlgoliaSearch);
	
	  AlgoliaSearchBrowser.prototype._request = function request(url, opts) {
	    return new Promise(function wrapRequest(resolve, reject) {
	      // no cors or XDomainRequest, no request
	      if (!support.cors && !support.hasXDomainRequest) {
	        // very old browser, not supported
	        reject(new errors.Network('CORS not supported'));
	        return;
	      }
	
	      url = inlineHeaders(url, opts.headers);
	
	      var body = opts.body;
	      var req = support.cors ? new XMLHttpRequest() : new XDomainRequest();
	      var reqTimeout;
	      var timedOut;
	      var connected = false;
	
	      reqTimeout = setTimeout(onTimeout, opts.timeouts.connect);
	      // we set an empty onprogress listener
	      // so that XDomainRequest on IE9 is not aborted
	      // refs:
	      //  - https://github.com/algolia/algoliasearch-client-js/issues/76
	      //  - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment
	      req.onprogress = onProgress;
	      if ('onreadystatechange' in req) req.onreadystatechange = onReadyStateChange;
	      req.onload = onLoad;
	      req.onerror = onError;
	
	      // do not rely on default XHR async flag, as some analytics code like hotjar
	      // breaks it and set it to false by default
	      if (req instanceof XMLHttpRequest) {
	        req.open(opts.method, url, true);
	
	        // The Analytics API never accepts Auth headers as query string
	        // this option exists specifically for them.
	        if (opts.forceAuthHeaders) {
	          req.setRequestHeader(
	            'x-algolia-application-id',
	            opts.headers['x-algolia-application-id']
	          );
	          req.setRequestHeader(
	            'x-algolia-api-key',
	            opts.headers['x-algolia-api-key']
	          );
	        }
	      } else {
	        req.open(opts.method, url);
	      }
	
	      // headers are meant to be sent after open
	      if (support.cors) {
	        if (body) {
	          if (opts.method === 'POST') {
	            // https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Simple_requests
	            req.setRequestHeader('content-type', 'application/x-www-form-urlencoded');
	          } else {
	            req.setRequestHeader('content-type', 'application/json');
	          }
	        }
	        req.setRequestHeader('accept', 'application/json');
	      }
	
	      if (body) {
	        req.send(body);
	      } else {
	        req.send();
	      }
	
	      // event object not received in IE8, at least
	      // but we do not use it, still important to note
	      function onLoad(/* event */) {
	        // When browser does not supports req.timeout, we can
	        // have both a load and timeout event, since handled by a dumb setTimeout
	        if (timedOut) {
	          return;
	        }
	
	        clearTimeout(reqTimeout);
	
	        var out;
	
	        try {
	          out = {
	            body: JSON.parse(req.responseText),
	            responseText: req.responseText,
	            statusCode: req.status,
	            // XDomainRequest does not have any response headers
	            headers: req.getAllResponseHeaders && req.getAllResponseHeaders() || {}
	          };
	        } catch (e) {
	          out = new errors.UnparsableJSON({
	            more: req.responseText
	          });
	        }
	
	        if (out instanceof errors.UnparsableJSON) {
	          reject(out);
	        } else {
	          resolve(out);
	        }
	      }
	
	      function onError(event) {
	        if (timedOut) {
	          return;
	        }
	
	        clearTimeout(reqTimeout);
	
	        // error event is trigerred both with XDR/XHR on:
	        //   - DNS error
	        //   - unallowed cross domain request
	        reject(
	          new errors.Network({
	            more: event
	          })
	        );
	      }
	
	      function onTimeout() {
	        timedOut = true;
	        req.abort();
	
	        reject(new errors.RequestTimeout());
	      }
	
	      function onConnect() {
	        connected = true;
	        clearTimeout(reqTimeout);
	        reqTimeout = setTimeout(onTimeout, opts.timeouts.complete);
	      }
	
	      function onProgress() {
	        if (!connected) onConnect();
	      }
	
	      function onReadyStateChange() {
	        if (!connected && req.readyState > 1) onConnect();
	      }
	    });
	  };
	
	  AlgoliaSearchBrowser.prototype._request.fallback = function requestFallback(url, opts) {
	    url = inlineHeaders(url, opts.headers);
	
	    return new Promise(function wrapJsonpRequest(resolve, reject) {
	      jsonpRequest(url, opts, function jsonpRequestDone(err, content) {
	        if (err) {
	          reject(err);
	          return;
	        }
	
	        resolve(content);
	      });
	    });
	  };
	
	  AlgoliaSearchBrowser.prototype._promise = {
	    reject: function rejectPromise(val) {
	      return Promise.reject(val);
	    },
	    resolve: function resolvePromise(val) {
	      return Promise.resolve(val);
	    },
	    delay: function delayPromise(ms) {
	      return new Promise(function resolveOnTimeout(resolve/* , reject*/) {
	        setTimeout(resolve, ms);
	      });
	    },
	    all: function all(promises) {
	      return Promise.all(promises);
	    }
	  };
	
	  return algoliasearch;
	};


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = inlineHeaders;
	
	var encode = __webpack_require__(175);
	
	function inlineHeaders(url, headers) {
	  if (/\?/.test(url)) {
	    url += '&';
	  } else {
	    url += '?';
	  }
	
	  return url + encode(headers);
	}


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = jsonpRequest;
	
	var errors = __webpack_require__(62);
	
	var JSONPCounter = 0;
	
	function jsonpRequest(url, opts, cb) {
	  if (opts.method !== 'GET') {
	    cb(new Error('Method ' + opts.method + ' ' + url + ' is not supported by JSONP.'));
	    return;
	  }
	
	  opts.debug('JSONP: start');
	
	  var cbCalled = false;
	  var timedOut = false;
	
	  JSONPCounter += 1;
	  var head = document.getElementsByTagName('head')[0];
	  var script = document.createElement('script');
	  var cbName = 'algoliaJSONP_' + JSONPCounter;
	  var done = false;
	
	  window[cbName] = function(data) {
	    removeGlobals();
	
	    if (timedOut) {
	      opts.debug('JSONP: Late answer, ignoring');
	      return;
	    }
	
	    cbCalled = true;
	
	    clean();
	
	    cb(null, {
	      body: data,
	      responseText: JSON.stringify(data)/* ,
	      // We do not send the statusCode, there's no statusCode in JSONP, it will be
	      // computed using data.status && data.message like with XDR
	      statusCode*/
	    });
	  };
	
	  // add callback by hand
	  url += '&callback=' + cbName;
	
	  // add body params manually
	  if (opts.jsonBody && opts.jsonBody.params) {
	    url += '&' + opts.jsonBody.params;
	  }
	
	  var ontimeout = setTimeout(timeout, opts.timeouts.complete);
	
	  // script onreadystatechange needed only for
	  // <= IE8
	  // https://github.com/angular/angular.js/issues/4523
	  script.onreadystatechange = readystatechange;
	  script.onload = success;
	  script.onerror = error;
	
	  script.async = true;
	  script.defer = true;
	  script.src = url;
	  head.appendChild(script);
	
	  function success() {
	    opts.debug('JSONP: success');
	
	    if (done || timedOut) {
	      return;
	    }
	
	    done = true;
	
	    // script loaded but did not call the fn => script loading error
	    if (!cbCalled) {
	      opts.debug('JSONP: Fail. Script loaded but did not call the callback');
	      clean();
	      cb(new errors.JSONPScriptFail());
	    }
	  }
	
	  function readystatechange() {
	    if (this.readyState === 'loaded' || this.readyState === 'complete') {
	      success();
	    }
	  }
	
	  function clean() {
	    clearTimeout(ontimeout);
	    script.onload = null;
	    script.onreadystatechange = null;
	    script.onerror = null;
	    head.removeChild(script);
	  }
	
	  function removeGlobals() {
	    try {
	      delete window[cbName];
	      delete window[cbName + '_loaded'];
	    } catch (e) {
	      window[cbName] = window[cbName + '_loaded'] = undefined;
	    }
	  }
	
	  function timeout() {
	    opts.debug('JSONP: Script timeout');
	    timedOut = true;
	    clean();
	    cb(new errors.RequestTimeout());
	  }
	
	  function error() {
	    opts.debug('JSONP: Script error');
	
	    if (done || timedOut) {
	      return;
	    }
	
	    clean();
	    cb(new errors.JSONPScriptError());
	  }
	}


/***/ }),
/* 227 */
/***/ (function(module, exports) {

	module.exports = function deprecate(fn, message) {
	  var warned = false;
	
	  function deprecated() {
	    if (!warned) {
	      /* eslint no-console:0 */
	      console.warn(message);
	      warned = true;
	    }
	
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	};


/***/ }),
/* 228 */
/***/ (function(module, exports) {

	module.exports = function deprecatedMessage(previousUsage, newUsage) {
	  var githubAnchorLink = previousUsage.toLowerCase()
	    .replace(/[\.\(\)]/g, '');
	
	  return 'algoliasearch: `' + previousUsage + '` was replaced by `' + newUsage +
	    '`. Please see https://github.com/algolia/algoliasearch-client-javascript/wiki/Deprecated#' + githubAnchorLink;
	};


/***/ }),
/* 229 */
/***/ (function(module, exports) {

	// Parse cloud does not supports setTimeout
	// We do not store a setTimeout reference in the client everytime
	// We only fallback to a fake setTimeout when not available
	// setTimeout cannot be override globally sadly
	module.exports = function exitPromise(fn, _setTimeout) {
	  _setTimeout(fn, 0);
	};


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

	var foreach = __webpack_require__(40);
	
	module.exports = function merge(destination/* , sources */) {
	  var sources = Array.prototype.slice.call(arguments);
	
	  foreach(sources, function(source) {
	    for (var keyName in source) {
	      if (source.hasOwnProperty(keyName)) {
	        if (typeof destination[keyName] === 'object' && typeof source[keyName] === 'object') {
	          destination[keyName] = merge({}, destination[keyName], source[keyName]);
	        } else if (source[keyName] !== undefined) {
	          destination[keyName] = source[keyName];
	        }
	      }
	    }
	  });
	
	  return destination;
	};


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = createPlacesClient;
	
	var qs3 = __webpack_require__(349);
	var buildSearchMethod = __webpack_require__(133);
	
	function createPlacesClient(algoliasearch) {
	  return function places(appID, apiKey, opts) {
	    var cloneDeep = __webpack_require__(39);
	
	    opts = opts && cloneDeep(opts) || {};
	    opts.hosts = opts.hosts || [
	      'places-dsn.algolia.net',
	      'places-1.algolianet.com',
	      'places-2.algolianet.com',
	      'places-3.algolianet.com'
	    ];
	
	    // allow initPlaces() no arguments => community rate limited
	    if (arguments.length === 0 || typeof appID === 'object' || appID === undefined) {
	      appID = '';
	      apiKey = '';
	      opts._allowEmptyCredentials = true;
	    }
	
	    var client = algoliasearch(appID, apiKey, opts);
	    var index = client.initIndex('places');
	    index.search = buildSearchMethod('query', '/1/places/query');
	    index.reverse = function(options, callback) {
	      var encoded = qs3.encode(options);
	
	      return this.as._jsonRequest({
	        method: 'GET',
	        url: '/1/places/reverse?' + encoded,
	        hostType: 'read',
	        callback: callback
	      });
	    };
	
	    index.getObject = function(objectID, callback) {
	      return this.as._jsonRequest({
	        method: 'GET',
	        url: '/1/places/' + encodeURIComponent(objectID),
	        hostType: 'read',
	        callback: callback
	      });
	    };
	    return index;
	  };
	}


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var debug = __webpack_require__(65)('algoliasearch:src/hostIndexState.js');
	var localStorageNamespace = 'algoliasearch-client-js';
	
	var store;
	var moduleStore = {
	  state: {},
	  set: function(key, data) {
	    this.state[key] = data;
	    return this.state[key];
	  },
	  get: function(key) {
	    return this.state[key] || null;
	  }
	};
	
	var localStorageStore = {
	  set: function(key, data) {
	    moduleStore.set(key, data); // always replicate localStorageStore to moduleStore in case of failure
	
	    try {
	      var namespace = JSON.parse(global.localStorage[localStorageNamespace]);
	      namespace[key] = data;
	      global.localStorage[localStorageNamespace] = JSON.stringify(namespace);
	      return namespace[key];
	    } catch (e) {
	      return localStorageFailure(key, e);
	    }
	  },
	  get: function(key) {
	    try {
	      return JSON.parse(global.localStorage[localStorageNamespace])[key] || null;
	    } catch (e) {
	      return localStorageFailure(key, e);
	    }
	  }
	};
	
	function localStorageFailure(key, e) {
	  debug('localStorage failed with', e);
	  cleanup();
	  store = moduleStore;
	  return store.get(key);
	}
	
	store = supportsLocalStorage() ? localStorageStore : moduleStore;
	
	module.exports = {
	  get: getOrSet,
	  set: getOrSet,
	  supportsLocalStorage: supportsLocalStorage
	};
	
	function getOrSet(key, data) {
	  if (arguments.length === 1) {
	    return store.get(key);
	  }
	
	  return store.set(key, data);
	}
	
	function supportsLocalStorage() {
	  try {
	    if ('localStorage' in global &&
	      global.localStorage !== null) {
	      if (!global.localStorage[localStorageNamespace]) {
	        // actual creation of the namespace
	        global.localStorage.setItem(localStorageNamespace, JSON.stringify({}));
	      }
	      return true;
	    }
	
	    return false;
	  } catch (_) {
	    return false;
	  }
	}
	
	// In case of any error on localStorage, we clean our own namespace, this should handle
	// quota errors when a lot of keys + data are used
	function cleanup() {
	  try {
	    global.localStorage.removeItem(localStorageNamespace);
	  } catch (_) {
	    // nothing to do
	  }
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 233 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = '3.32.1';


/***/ }),
/* 234 */,
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _PostTags = __webpack_require__(197);
	
	var _PostTags2 = _interopRequireDefault(_PostTags);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _PostTags2.default;
	module.exports = exports["default"];

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.SearchClear = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _templateObject = _taggedTemplateLiteralLoose(["\n  position: absolute;\n  right: 12px;\n  top: 12px;\n  cursor: pointer;\n  background: #33c4c2;\n  color: #fff;\n  font-weight: bold;\n  border-radius: 2px;\n  border: none;\n  padding: 4px 10px;\n  z-index: 9;\n  svg {\n    font-size: 20px;\n  }\n"], ["\n  position: absolute;\n  right: 12px;\n  top: 12px;\n  cursor: pointer;\n  background: #33c4c2;\n  color: #fff;\n  font-weight: bold;\n  border-radius: 2px;\n  border: none;\n  padding: 4px 10px;\n  z-index: 9;\n  svg {\n    font-size: 20px;\n  }\n"]);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchDom = __webpack_require__(78);
	
	var _io = __webpack_require__(350);
	
	var _styledComponents = __webpack_require__(79);
	
	var _styledComponents2 = _interopRequireDefault(_styledComponents);
	
	var _styles = __webpack_require__(135);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }
	
	var SearchClear = exports.SearchClear = _styledComponents2.default.button(_templateObject);
	
	exports.default = (0, _reactInstantsearchDom.connectSearchBox)(function (_ref) {
	  var refine = _ref.refine,
	      rest = _objectWithoutProperties(_ref, ["refine"]);
	
	  return _react2.default.createElement(
	    _styles.Form,
	    null,
	    _react2.default.createElement(_styles.Input, _extends({
	      type: "text",
	      placeholder: "T\xECm b\xE0i vi\u1EBFt",
	      "aria-label": "Search",
	      onChange: function onChange(e) {
	        return refine(e.target.value);
	      }
	    }, rest)),
	    _react2.default.createElement(
	      _styles.SearchIcon,
	      null,
	      _react2.default.createElement(_io.IoIosSearchStrong, null)
	    ),
	    rest.currentRefinement && _react2.default.createElement(
	      SearchClear,
	      { onClick: function onClick(e) {
	          return refine('');
	        } },
	      "X\xD3A"
	    )
	  );
	});

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _templateObject = _taggedTemplateLiteralLoose(["\n  position: relative;\n  z-index: 9999;\n  background: #fff;\n"], ["\n  position: relative;\n  z-index: 9999;\n  background: #fff;\n"]);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _styledComponents = __webpack_require__(79);
	
	var _styledComponents2 = _interopRequireDefault(_styledComponents);
	
	var _lite = __webpack_require__(132);
	
	var _lite2 = _interopRequireDefault(_lite);
	
	var _reactInstantsearchDom = __webpack_require__(78);
	
	var _styles = __webpack_require__(135);
	
	var _Input = __webpack_require__(236);
	
	var _Input2 = _interopRequireDefault(_Input);
	
	var _Results = __webpack_require__(239);
	
	var _Results2 = _interopRequireDefault(_Results);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }
	
	var Stats = (0, _reactInstantsearchDom.connectStateResults)(function (_ref) {
	  var res = _ref.searchResults;
	  return res && res.nbHits > 0 && res.nbHits + " k\u1EBFt qu\u1EA3";
	});
	
	var StyledSearch = _styledComponents2.default.div(_templateObject);
	
	var Search = function (_Component) {
	  _inherits(Search, _Component);
	
	  function Search() {
	    var _temp, _this, _ret;
	
	    _classCallCheck(this, Search);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
	      query: '',
	      focussed: false,
	      page: 0,
	      ref: (0, _react.createRef)()
	    }, _this.searchClient = (0, _lite2.default)(("68PEVEWLR7"), ("c3e0db897950a5f687e9d690d5fc9342")), _this.updateState = function (state) {
	      _this.setState(state);
	    }, _this.focus = function () {
	      _this.setState({ focussed: true });
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }
	
	  Search.prototype.render = function render() {
	    var _state = this.state,
	        query = _state.query,
	        focussed = _state.focussed,
	        ref = _state.ref;
	    var _props = this.props,
	        hitsAsGrid = _props.hitsAsGrid,
	        indices = _props.indices;
	
	    return _react2.default.createElement(
	      StyledSearch,
	      null,
	      _react2.default.createElement(
	        _reactInstantsearchDom.InstantSearch,
	        {
	          indexName: indices[0].name,
	          searchClient: this.searchClient,
	          onSearchStateChange: this.updateState,
	          root: { Root: _styles.Root, props: { ref: ref } }
	        },
	        _react2.default.createElement(_Input2.default, _extends({ onFocus: this.focus }, { focussed: focussed })),
	        _react2.default.createElement(
	          _styles.HitsWrapper,
	          {
	            show: query.length > 0 && focussed,
	            hitsAsGrid: hitsAsGrid
	          },
	          indices.map(function (_ref2) {
	            var name = _ref2.name,
	                title = _ref2.title;
	
	            return _react2.default.createElement(
	              _reactInstantsearchDom.Index,
	              { key: name, indexName: name },
	              _react2.default.createElement(
	                "header",
	                null,
	                title && _react2.default.createElement(
	                  "strong",
	                  null,
	                  title
	                ),
	                _react2.default.createElement(Stats, null)
	              ),
	              _react2.default.createElement(_Results2.default, null)
	            );
	          }),
	          _react2.default.createElement(
	            _styles.By,
	            null,
	            "D\u1ECBch v\u1EE5 t\xECm ki\u1EBFm c\u1EE7a",
	            " ",
	            _react2.default.createElement(
	              "a",
	              { href: "https://www.algolia.com" },
	              "Algolia"
	            )
	          )
	        )
	      )
	    );
	  };
	
	  return Search;
	}(_react.Component);
	
	exports.default = Search;
	module.exports = exports["default"];

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _templateObject = _taggedTemplateLiteralLoose(["\n  margin-top: 15px;\n  padding-top: 15px;\n  border-top: 1px dashed rgba(0,0,0,.1);\n"], ["\n  margin-top: 15px;\n  padding-top: 15px;\n  border-top: 1px dashed rgba(0,0,0,.1);\n"]);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchDom = __webpack_require__(78);
	
	var _gatsbyLink = __webpack_require__(48);
	
	var _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);
	
	var _styledComponents = __webpack_require__(79);
	
	var _styledComponents2 = _interopRequireDefault(_styledComponents);
	
	var _PostTags = __webpack_require__(235);
	
	var _PostTags2 = _interopRequireDefault(_PostTags);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }
	
	var StyledHit = _styledComponents2.default.div(_templateObject);
	
	var Hit = function Hit(_ref) {
	  var hit = _ref.hit;
	
	  return _react2.default.createElement(
	    StyledHit,
	    null,
	    _react2.default.createElement(
	      _gatsbyLink2.default,
	      { to: hit.fields.slug },
	      _react2.default.createElement(
	        "h3",
	        null,
	        _react2.default.createElement(_reactInstantsearchDom.Highlight, { attribute: "title", hit: hit, tagName: "mark" })
	      )
	    ),
	    _react2.default.createElement(
	      "div",
	      { style: { display: 'flex' } },
	      _react2.default.createElement(_reactInstantsearchDom.Highlight, { attribute: "date", hit: hit, tagName: "mark" }),
	      _react2.default.createElement(
	        "div",
	        { style: { paddingLeft: 10 } },
	        _react2.default.createElement(_PostTags2.default, { list: hit.tags })
	      )
	    ),
	    _react2.default.createElement(_reactInstantsearchDom.Snippet, { attribute: "excerpt", hit: hit, tagName: "mark" })
	  );
	};
	
	exports.default = Hit;
	module.exports = exports["default"];

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInstantsearchDom = __webpack_require__(78);
	
	var _Hit = __webpack_require__(238);
	
	var _Hit2 = _interopRequireDefault(_Hit);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Results = (0, _reactInstantsearchDom.connectStateResults)(function (_ref) {
	  var searchState = _ref.searchState,
	      searchResults = _ref.searchResults;
	
	  if (!searchResults || !searchResults.nbHits) {
	    return _react2.default.createElement(
	      'div',
	      null,
	      'Kh\xF4ng t\xECm th\u1EA5y k\u1EBFt qu\u1EA3 cho $',
	      searchState.query
	    );
	  }
	  var listResult = searchResults && searchResults.hits && searchResults.hits.map(function (item, index) {
	    return _react2.default.createElement(_Hit2.default, { key: index, hit: item });
	  });
	  return _react2.default.createElement(
	    'div',
	    null,
	    listResult
	  );
	});
	
	exports.default = Results;
	module.exports = exports['default'];

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _Search = __webpack_require__(237);
	
	var _Search2 = _interopRequireDefault(_Search);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Search2.default;
	module.exports = exports['default'];

/***/ }),
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

	
	/**
	 * This is the common logic for both the Node.js and web browser
	 * implementations of `debug()`.
	 */
	
	function setup(env) {
		createDebug.debug = createDebug;
		createDebug.default = createDebug;
		createDebug.coerce = coerce;
		createDebug.disable = disable;
		createDebug.enable = enable;
		createDebug.enabled = enabled;
		createDebug.humanize = __webpack_require__(201);
	
		Object.keys(env).forEach(key => {
			createDebug[key] = env[key];
		});
	
		/**
		* Active `debug` instances.
		*/
		createDebug.instances = [];
	
		/**
		* The currently active debug mode names, and names to skip.
		*/
	
		createDebug.names = [];
		createDebug.skips = [];
	
		/**
		* Map of special "%n" handling functions, for the debug "format" argument.
		*
		* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
		*/
		createDebug.formatters = {};
	
		/**
		* Selects a color for a debug namespace
		* @param {String} namespace The namespace string for the for the debug instance to be colored
		* @return {Number|String} An ANSI color code for the given namespace
		* @api private
		*/
		function selectColor(namespace) {
			let hash = 0;
	
			for (let i = 0; i < namespace.length; i++) {
				hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
				hash |= 0; // Convert to 32bit integer
			}
	
			return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
		}
		createDebug.selectColor = selectColor;
	
		/**
		* Create a debugger with the given `namespace`.
		*
		* @param {String} namespace
		* @return {Function}
		* @api public
		*/
		function createDebug(namespace) {
			let prevTime;
	
			function debug(...args) {
				// Disabled?
				if (!debug.enabled) {
					return;
				}
	
				const self = debug;
	
				// Set `diff` timestamp
				const curr = Number(new Date());
				const ms = curr - (prevTime || curr);
				self.diff = ms;
				self.prev = prevTime;
				self.curr = curr;
				prevTime = curr;
	
				args[0] = createDebug.coerce(args[0]);
	
				if (typeof args[0] !== 'string') {
					// Anything else let's inspect with %O
					args.unshift('%O');
				}
	
				// Apply any `formatters` transformations
				let index = 0;
				args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
					// If we encounter an escaped % then don't increase the array index
					if (match === '%%') {
						return match;
					}
					index++;
					const formatter = createDebug.formatters[format];
					if (typeof formatter === 'function') {
						const val = args[index];
						match = formatter.call(self, val);
	
						// Now we need to remove `args[index]` since it's inlined in the `format`
						args.splice(index, 1);
						index--;
					}
					return match;
				});
	
				// Apply env-specific formatting (colors, etc.)
				createDebug.formatArgs.call(self, args);
	
				const logFn = self.log || createDebug.log;
				logFn.apply(self, args);
			}
	
			debug.namespace = namespace;
			debug.enabled = createDebug.enabled(namespace);
			debug.useColors = createDebug.useColors();
			debug.color = selectColor(namespace);
			debug.destroy = destroy;
			debug.extend = extend;
			// Debug.formatArgs = formatArgs;
			// debug.rawLog = rawLog;
	
			// env-specific initialization logic for debug instances
			if (typeof createDebug.init === 'function') {
				createDebug.init(debug);
			}
	
			createDebug.instances.push(debug);
	
			return debug;
		}
	
		function destroy() {
			const index = createDebug.instances.indexOf(this);
			if (index !== -1) {
				createDebug.instances.splice(index, 1);
				return true;
			}
			return false;
		}
	
		function extend(namespace, delimiter) {
			return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		}
	
		/**
		* Enables a debug mode by namespaces. This can include modes
		* separated by a colon and wildcards.
		*
		* @param {String} namespaces
		* @api public
		*/
		function enable(namespaces) {
			createDebug.save(namespaces);
	
			createDebug.names = [];
			createDebug.skips = [];
	
			let i;
			const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
			const len = split.length;
	
			for (i = 0; i < len; i++) {
				if (!split[i]) {
					// ignore empty strings
					continue;
				}
	
				namespaces = split[i].replace(/\*/g, '.*?');
	
				if (namespaces[0] === '-') {
					createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
				} else {
					createDebug.names.push(new RegExp('^' + namespaces + '$'));
				}
			}
	
			for (i = 0; i < createDebug.instances.length; i++) {
				const instance = createDebug.instances[i];
				instance.enabled = createDebug.enabled(instance.namespace);
			}
		}
	
		/**
		* Disable debug output.
		*
		* @return {String} namespaces
		* @api public
		*/
		function disable() {
			const namespaces = [
				...createDebug.names.map(toNamespace),
				...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)
			].join(',');
			createDebug.enable('');
			return namespaces;
		}
	
		/**
		* Returns true if the given mode name is enabled, false otherwise.
		*
		* @param {String} name
		* @return {Boolean}
		* @api public
		*/
		function enabled(name) {
			if (name[name.length - 1] === '*') {
				return true;
			}
	
			let i;
			let len;
	
			for (i = 0, len = createDebug.skips.length; i < len; i++) {
				if (createDebug.skips[i].test(name)) {
					return false;
				}
			}
	
			for (i = 0, len = createDebug.names.length; i < len; i++) {
				if (createDebug.names[i].test(name)) {
					return true;
				}
			}
	
			return false;
		}
	
		/**
		* Convert regexp to namespace
		*
		* @param {RegExp} regxep
		* @return {String} namespace
		* @api private
		*/
		function toNamespace(regexp) {
			return regexp.toString()
				.substring(2, regexp.toString().length - 2)
				.replace(/\.\*\?$/, '*');
		}
	
		/**
		* Coerce `val`.
		*
		* @param {Mixed} val
		* @return {Mixed}
		* @api private
		*/
		function coerce(val) {
			if (val instanceof Error) {
				return val.stack || val.message;
			}
			return val;
		}
	
		createDebug.enable(createDebug.load());
	
		return createDebug;
	}
	
	module.exports = setup;


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, global) {/*!
	 * @overview es6-promise - a tiny implementation of Promises/A+.
	 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
	 * @license   Licensed under MIT license
	 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
	 * @version   v4.2.5+7f2b526d
	 */
	
	(function (global, factory) {
		 true ? module.exports = factory() :
		typeof define === 'function' && define.amd ? define(factory) :
		(global.ES6Promise = factory());
	}(this, (function () { 'use strict';
	
	function objectOrFunction(x) {
	  var type = typeof x;
	  return x !== null && (type === 'object' || type === 'function');
	}
	
	function isFunction(x) {
	  return typeof x === 'function';
	}
	
	
	
	var _isArray = void 0;
	if (Array.isArray) {
	  _isArray = Array.isArray;
	} else {
	  _isArray = function (x) {
	    return Object.prototype.toString.call(x) === '[object Array]';
	  };
	}
	
	var isArray = _isArray;
	
	var len = 0;
	var vertxNext = void 0;
	var customSchedulerFn = void 0;
	
	var asap = function asap(callback, arg) {
	  queue[len] = callback;
	  queue[len + 1] = arg;
	  len += 2;
	  if (len === 2) {
	    // If len is 2, that means that we need to schedule an async flush.
	    // If additional callbacks are queued before the queue is flushed, they
	    // will be processed by this flush that we are scheduling.
	    if (customSchedulerFn) {
	      customSchedulerFn(flush);
	    } else {
	      scheduleFlush();
	    }
	  }
	};
	
	function setScheduler(scheduleFn) {
	  customSchedulerFn = scheduleFn;
	}
	
	function setAsap(asapFn) {
	  asap = asapFn;
	}
	
	var browserWindow = typeof window !== 'undefined' ? window : undefined;
	var browserGlobal = browserWindow || {};
	var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;
	var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';
	
	// test for web worker but not in IE10
	var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';
	
	// node
	function useNextTick() {
	  // node version 0.10.x displays a deprecation warning when nextTick is used recursively
	  // see https://github.com/cujojs/when/issues/410 for details
	  return function () {
	    return process.nextTick(flush);
	  };
	}
	
	// vertx
	function useVertxTimer() {
	  if (typeof vertxNext !== 'undefined') {
	    return function () {
	      vertxNext(flush);
	    };
	  }
	
	  return useSetTimeout();
	}
	
	function useMutationObserver() {
	  var iterations = 0;
	  var observer = new BrowserMutationObserver(flush);
	  var node = document.createTextNode('');
	  observer.observe(node, { characterData: true });
	
	  return function () {
	    node.data = iterations = ++iterations % 2;
	  };
	}
	
	// web worker
	function useMessageChannel() {
	  var channel = new MessageChannel();
	  channel.port1.onmessage = flush;
	  return function () {
	    return channel.port2.postMessage(0);
	  };
	}
	
	function useSetTimeout() {
	  // Store setTimeout reference so es6-promise will be unaffected by
	  // other code modifying setTimeout (like sinon.useFakeTimers())
	  var globalSetTimeout = setTimeout;
	  return function () {
	    return globalSetTimeout(flush, 1);
	  };
	}
	
	var queue = new Array(1000);
	function flush() {
	  for (var i = 0; i < len; i += 2) {
	    var callback = queue[i];
	    var arg = queue[i + 1];
	
	    callback(arg);
	
	    queue[i] = undefined;
	    queue[i + 1] = undefined;
	  }
	
	  len = 0;
	}
	
	function attemptVertx() {
	  try {
	    var vertx = Function('return this')().require('vertx');
	    vertxNext = vertx.runOnLoop || vertx.runOnContext;
	    return useVertxTimer();
	  } catch (e) {
	    return useSetTimeout();
	  }
	}
	
	var scheduleFlush = void 0;
	// Decide what async method to use to triggering processing of queued callbacks:
	if (isNode) {
	  scheduleFlush = useNextTick();
	} else if (BrowserMutationObserver) {
	  scheduleFlush = useMutationObserver();
	} else if (isWorker) {
	  scheduleFlush = useMessageChannel();
	} else if (browserWindow === undefined && "function" === 'function') {
	  scheduleFlush = attemptVertx();
	} else {
	  scheduleFlush = useSetTimeout();
	}
	
	function then(onFulfillment, onRejection) {
	  var parent = this;
	
	  var child = new this.constructor(noop);
	
	  if (child[PROMISE_ID] === undefined) {
	    makePromise(child);
	  }
	
	  var _state = parent._state;
	
	
	  if (_state) {
	    var callback = arguments[_state - 1];
	    asap(function () {
	      return invokeCallback(_state, child, callback, parent._result);
	    });
	  } else {
	    subscribe(parent, child, onFulfillment, onRejection);
	  }
	
	  return child;
	}
	
	/**
	  `Promise.resolve` returns a promise that will become resolved with the
	  passed `value`. It is shorthand for the following:
	
	  ```javascript
	  let promise = new Promise(function(resolve, reject){
	    resolve(1);
	  });
	
	  promise.then(function(value){
	    // value === 1
	  });
	  ```
	
	  Instead of writing the above, your code now simply becomes the following:
	
	  ```javascript
	  let promise = Promise.resolve(1);
	
	  promise.then(function(value){
	    // value === 1
	  });
	  ```
	
	  @method resolve
	  @static
	  @param {Any} value value that the returned promise will be resolved with
	  Useful for tooling.
	  @return {Promise} a promise that will become fulfilled with the given
	  `value`
	*/
	function resolve$1(object) {
	  /*jshint validthis:true */
	  var Constructor = this;
	
	  if (object && typeof object === 'object' && object.constructor === Constructor) {
	    return object;
	  }
	
	  var promise = new Constructor(noop);
	  resolve(promise, object);
	  return promise;
	}
	
	var PROMISE_ID = Math.random().toString(36).substring(2);
	
	function noop() {}
	
	var PENDING = void 0;
	var FULFILLED = 1;
	var REJECTED = 2;
	
	var TRY_CATCH_ERROR = { error: null };
	
	function selfFulfillment() {
	  return new TypeError("You cannot resolve a promise with itself");
	}
	
	function cannotReturnOwn() {
	  return new TypeError('A promises callback cannot return that same promise.');
	}
	
	function getThen(promise) {
	  try {
	    return promise.then;
	  } catch (error) {
	    TRY_CATCH_ERROR.error = error;
	    return TRY_CATCH_ERROR;
	  }
	}
	
	function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {
	  try {
	    then$$1.call(value, fulfillmentHandler, rejectionHandler);
	  } catch (e) {
	    return e;
	  }
	}
	
	function handleForeignThenable(promise, thenable, then$$1) {
	  asap(function (promise) {
	    var sealed = false;
	    var error = tryThen(then$$1, thenable, function (value) {
	      if (sealed) {
	        return;
	      }
	      sealed = true;
	      if (thenable !== value) {
	        resolve(promise, value);
	      } else {
	        fulfill(promise, value);
	      }
	    }, function (reason) {
	      if (sealed) {
	        return;
	      }
	      sealed = true;
	
	      reject(promise, reason);
	    }, 'Settle: ' + (promise._label || ' unknown promise'));
	
	    if (!sealed && error) {
	      sealed = true;
	      reject(promise, error);
	    }
	  }, promise);
	}
	
	function handleOwnThenable(promise, thenable) {
	  if (thenable._state === FULFILLED) {
	    fulfill(promise, thenable._result);
	  } else if (thenable._state === REJECTED) {
	    reject(promise, thenable._result);
	  } else {
	    subscribe(thenable, undefined, function (value) {
	      return resolve(promise, value);
	    }, function (reason) {
	      return reject(promise, reason);
	    });
	  }
	}
	
	function handleMaybeThenable(promise, maybeThenable, then$$1) {
	  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {
	    handleOwnThenable(promise, maybeThenable);
	  } else {
	    if (then$$1 === TRY_CATCH_ERROR) {
	      reject(promise, TRY_CATCH_ERROR.error);
	      TRY_CATCH_ERROR.error = null;
	    } else if (then$$1 === undefined) {
	      fulfill(promise, maybeThenable);
	    } else if (isFunction(then$$1)) {
	      handleForeignThenable(promise, maybeThenable, then$$1);
	    } else {
	      fulfill(promise, maybeThenable);
	    }
	  }
	}
	
	function resolve(promise, value) {
	  if (promise === value) {
	    reject(promise, selfFulfillment());
	  } else if (objectOrFunction(value)) {
	    handleMaybeThenable(promise, value, getThen(value));
	  } else {
	    fulfill(promise, value);
	  }
	}
	
	function publishRejection(promise) {
	  if (promise._onerror) {
	    promise._onerror(promise._result);
	  }
	
	  publish(promise);
	}
	
	function fulfill(promise, value) {
	  if (promise._state !== PENDING) {
	    return;
	  }
	
	  promise._result = value;
	  promise._state = FULFILLED;
	
	  if (promise._subscribers.length !== 0) {
	    asap(publish, promise);
	  }
	}
	
	function reject(promise, reason) {
	  if (promise._state !== PENDING) {
	    return;
	  }
	  promise._state = REJECTED;
	  promise._result = reason;
	
	  asap(publishRejection, promise);
	}
	
	function subscribe(parent, child, onFulfillment, onRejection) {
	  var _subscribers = parent._subscribers;
	  var length = _subscribers.length;
	
	
	  parent._onerror = null;
	
	  _subscribers[length] = child;
	  _subscribers[length + FULFILLED] = onFulfillment;
	  _subscribers[length + REJECTED] = onRejection;
	
	  if (length === 0 && parent._state) {
	    asap(publish, parent);
	  }
	}
	
	function publish(promise) {
	  var subscribers = promise._subscribers;
	  var settled = promise._state;
	
	  if (subscribers.length === 0) {
	    return;
	  }
	
	  var child = void 0,
	      callback = void 0,
	      detail = promise._result;
	
	  for (var i = 0; i < subscribers.length; i += 3) {
	    child = subscribers[i];
	    callback = subscribers[i + settled];
	
	    if (child) {
	      invokeCallback(settled, child, callback, detail);
	    } else {
	      callback(detail);
	    }
	  }
	
	  promise._subscribers.length = 0;
	}
	
	function tryCatch(callback, detail) {
	  try {
	    return callback(detail);
	  } catch (e) {
	    TRY_CATCH_ERROR.error = e;
	    return TRY_CATCH_ERROR;
	  }
	}
	
	function invokeCallback(settled, promise, callback, detail) {
	  var hasCallback = isFunction(callback),
	      value = void 0,
	      error = void 0,
	      succeeded = void 0,
	      failed = void 0;
	
	  if (hasCallback) {
	    value = tryCatch(callback, detail);
	
	    if (value === TRY_CATCH_ERROR) {
	      failed = true;
	      error = value.error;
	      value.error = null;
	    } else {
	      succeeded = true;
	    }
	
	    if (promise === value) {
	      reject(promise, cannotReturnOwn());
	      return;
	    }
	  } else {
	    value = detail;
	    succeeded = true;
	  }
	
	  if (promise._state !== PENDING) {
	    // noop
	  } else if (hasCallback && succeeded) {
	    resolve(promise, value);
	  } else if (failed) {
	    reject(promise, error);
	  } else if (settled === FULFILLED) {
	    fulfill(promise, value);
	  } else if (settled === REJECTED) {
	    reject(promise, value);
	  }
	}
	
	function initializePromise(promise, resolver) {
	  try {
	    resolver(function resolvePromise(value) {
	      resolve(promise, value);
	    }, function rejectPromise(reason) {
	      reject(promise, reason);
	    });
	  } catch (e) {
	    reject(promise, e);
	  }
	}
	
	var id = 0;
	function nextId() {
	  return id++;
	}
	
	function makePromise(promise) {
	  promise[PROMISE_ID] = id++;
	  promise._state = undefined;
	  promise._result = undefined;
	  promise._subscribers = [];
	}
	
	function validationError() {
	  return new Error('Array Methods must be provided an Array');
	}
	
	var Enumerator = function () {
	  function Enumerator(Constructor, input) {
	    this._instanceConstructor = Constructor;
	    this.promise = new Constructor(noop);
	
	    if (!this.promise[PROMISE_ID]) {
	      makePromise(this.promise);
	    }
	
	    if (isArray(input)) {
	      this.length = input.length;
	      this._remaining = input.length;
	
	      this._result = new Array(this.length);
	
	      if (this.length === 0) {
	        fulfill(this.promise, this._result);
	      } else {
	        this.length = this.length || 0;
	        this._enumerate(input);
	        if (this._remaining === 0) {
	          fulfill(this.promise, this._result);
	        }
	      }
	    } else {
	      reject(this.promise, validationError());
	    }
	  }
	
	  Enumerator.prototype._enumerate = function _enumerate(input) {
	    for (var i = 0; this._state === PENDING && i < input.length; i++) {
	      this._eachEntry(input[i], i);
	    }
	  };
	
	  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {
	    var c = this._instanceConstructor;
	    var resolve$$1 = c.resolve;
	
	
	    if (resolve$$1 === resolve$1) {
	      var _then = getThen(entry);
	
	      if (_then === then && entry._state !== PENDING) {
	        this._settledAt(entry._state, i, entry._result);
	      } else if (typeof _then !== 'function') {
	        this._remaining--;
	        this._result[i] = entry;
	      } else if (c === Promise$1) {
	        var promise = new c(noop);
	        handleMaybeThenable(promise, entry, _then);
	        this._willSettleAt(promise, i);
	      } else {
	        this._willSettleAt(new c(function (resolve$$1) {
	          return resolve$$1(entry);
	        }), i);
	      }
	    } else {
	      this._willSettleAt(resolve$$1(entry), i);
	    }
	  };
	
	  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {
	    var promise = this.promise;
	
	
	    if (promise._state === PENDING) {
	      this._remaining--;
	
	      if (state === REJECTED) {
	        reject(promise, value);
	      } else {
	        this._result[i] = value;
	      }
	    }
	
	    if (this._remaining === 0) {
	      fulfill(promise, this._result);
	    }
	  };
	
	  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {
	    var enumerator = this;
	
	    subscribe(promise, undefined, function (value) {
	      return enumerator._settledAt(FULFILLED, i, value);
	    }, function (reason) {
	      return enumerator._settledAt(REJECTED, i, reason);
	    });
	  };
	
	  return Enumerator;
	}();
	
	/**
	  `Promise.all` accepts an array of promises, and returns a new promise which
	  is fulfilled with an array of fulfillment values for the passed promises, or
	  rejected with the reason of the first passed promise to be rejected. It casts all
	  elements of the passed iterable to promises as it runs this algorithm.
	
	  Example:
	
	  ```javascript
	  let promise1 = resolve(1);
	  let promise2 = resolve(2);
	  let promise3 = resolve(3);
	  let promises = [ promise1, promise2, promise3 ];
	
	  Promise.all(promises).then(function(array){
	    // The array here would be [ 1, 2, 3 ];
	  });
	  ```
	
	  If any of the `promises` given to `all` are rejected, the first promise
	  that is rejected will be given as an argument to the returned promises's
	  rejection handler. For example:
	
	  Example:
	
	  ```javascript
	  let promise1 = resolve(1);
	  let promise2 = reject(new Error("2"));
	  let promise3 = reject(new Error("3"));
	  let promises = [ promise1, promise2, promise3 ];
	
	  Promise.all(promises).then(function(array){
	    // Code here never runs because there are rejected promises!
	  }, function(error) {
	    // error.message === "2"
	  });
	  ```
	
	  @method all
	  @static
	  @param {Array} entries array of promises
	  @param {String} label optional string for labeling the promise.
	  Useful for tooling.
	  @return {Promise} promise that is fulfilled when all `promises` have been
	  fulfilled, or rejected if any of them become rejected.
	  @static
	*/
	function all(entries) {
	  return new Enumerator(this, entries).promise;
	}
	
	/**
	  `Promise.race` returns a new promise which is settled in the same way as the
	  first passed promise to settle.
	
	  Example:
	
	  ```javascript
	  let promise1 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      resolve('promise 1');
	    }, 200);
	  });
	
	  let promise2 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      resolve('promise 2');
	    }, 100);
	  });
	
	  Promise.race([promise1, promise2]).then(function(result){
	    // result === 'promise 2' because it was resolved before promise1
	    // was resolved.
	  });
	  ```
	
	  `Promise.race` is deterministic in that only the state of the first
	  settled promise matters. For example, even if other promises given to the
	  `promises` array argument are resolved, but the first settled promise has
	  become rejected before the other promises became fulfilled, the returned
	  promise will become rejected:
	
	  ```javascript
	  let promise1 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      resolve('promise 1');
	    }, 200);
	  });
	
	  let promise2 = new Promise(function(resolve, reject){
	    setTimeout(function(){
	      reject(new Error('promise 2'));
	    }, 100);
	  });
	
	  Promise.race([promise1, promise2]).then(function(result){
	    // Code here never runs
	  }, function(reason){
	    // reason.message === 'promise 2' because promise 2 became rejected before
	    // promise 1 became fulfilled
	  });
	  ```
	
	  An example real-world use case is implementing timeouts:
	
	  ```javascript
	  Promise.race([ajax('foo.json'), timeout(5000)])
	  ```
	
	  @method race
	  @static
	  @param {Array} promises array of promises to observe
	  Useful for tooling.
	  @return {Promise} a promise which settles in the same way as the first passed
	  promise to settle.
	*/
	function race(entries) {
	  /*jshint validthis:true */
	  var Constructor = this;
	
	  if (!isArray(entries)) {
	    return new Constructor(function (_, reject) {
	      return reject(new TypeError('You must pass an array to race.'));
	    });
	  } else {
	    return new Constructor(function (resolve, reject) {
	      var length = entries.length;
	      for (var i = 0; i < length; i++) {
	        Constructor.resolve(entries[i]).then(resolve, reject);
	      }
	    });
	  }
	}
	
	/**
	  `Promise.reject` returns a promise rejected with the passed `reason`.
	  It is shorthand for the following:
	
	  ```javascript
	  let promise = new Promise(function(resolve, reject){
	    reject(new Error('WHOOPS'));
	  });
	
	  promise.then(function(value){
	    // Code here doesn't run because the promise is rejected!
	  }, function(reason){
	    // reason.message === 'WHOOPS'
	  });
	  ```
	
	  Instead of writing the above, your code now simply becomes the following:
	
	  ```javascript
	  let promise = Promise.reject(new Error('WHOOPS'));
	
	  promise.then(function(value){
	    // Code here doesn't run because the promise is rejected!
	  }, function(reason){
	    // reason.message === 'WHOOPS'
	  });
	  ```
	
	  @method reject
	  @static
	  @param {Any} reason value that the returned promise will be rejected with.
	  Useful for tooling.
	  @return {Promise} a promise rejected with the given `reason`.
	*/
	function reject$1(reason) {
	  /*jshint validthis:true */
	  var Constructor = this;
	  var promise = new Constructor(noop);
	  reject(promise, reason);
	  return promise;
	}
	
	function needsResolver() {
	  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
	}
	
	function needsNew() {
	  throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
	}
	
	/**
	  Promise objects represent the eventual result of an asynchronous operation. The
	  primary way of interacting with a promise is through its `then` method, which
	  registers callbacks to receive either a promise's eventual value or the reason
	  why the promise cannot be fulfilled.
	
	  Terminology
	  -----------
	
	  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
	  - `thenable` is an object or function that defines a `then` method.
	  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
	  - `exception` is a value that is thrown using the throw statement.
	  - `reason` is a value that indicates why a promise was rejected.
	  - `settled` the final resting state of a promise, fulfilled or rejected.
	
	  A promise can be in one of three states: pending, fulfilled, or rejected.
	
	  Promises that are fulfilled have a fulfillment value and are in the fulfilled
	  state.  Promises that are rejected have a rejection reason and are in the
	  rejected state.  A fulfillment value is never a thenable.
	
	  Promises can also be said to *resolve* a value.  If this value is also a
	  promise, then the original promise's settled state will match the value's
	  settled state.  So a promise that *resolves* a promise that rejects will
	  itself reject, and a promise that *resolves* a promise that fulfills will
	  itself fulfill.
	
	
	  Basic Usage:
	  ------------
	
	  ```js
	  let promise = new Promise(function(resolve, reject) {
	    // on success
	    resolve(value);
	
	    // on failure
	    reject(reason);
	  });
	
	  promise.then(function(value) {
	    // on fulfillment
	  }, function(reason) {
	    // on rejection
	  });
	  ```
	
	  Advanced Usage:
	  ---------------
	
	  Promises shine when abstracting away asynchronous interactions such as
	  `XMLHttpRequest`s.
	
	  ```js
	  function getJSON(url) {
	    return new Promise(function(resolve, reject){
	      let xhr = new XMLHttpRequest();
	
	      xhr.open('GET', url);
	      xhr.onreadystatechange = handler;
	      xhr.responseType = 'json';
	      xhr.setRequestHeader('Accept', 'application/json');
	      xhr.send();
	
	      function handler() {
	        if (this.readyState === this.DONE) {
	          if (this.status === 200) {
	            resolve(this.response);
	          } else {
	            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
	          }
	        }
	      };
	    });
	  }
	
	  getJSON('/posts.json').then(function(json) {
	    // on fulfillment
	  }, function(reason) {
	    // on rejection
	  });
	  ```
	
	  Unlike callbacks, promises are great composable primitives.
	
	  ```js
	  Promise.all([
	    getJSON('/posts'),
	    getJSON('/comments')
	  ]).then(function(values){
	    values[0] // => postsJSON
	    values[1] // => commentsJSON
	
	    return values;
	  });
	  ```
	
	  @class Promise
	  @param {Function} resolver
	  Useful for tooling.
	  @constructor
	*/
	
	var Promise$1 = function () {
	  function Promise(resolver) {
	    this[PROMISE_ID] = nextId();
	    this._result = this._state = undefined;
	    this._subscribers = [];
	
	    if (noop !== resolver) {
	      typeof resolver !== 'function' && needsResolver();
	      this instanceof Promise ? initializePromise(this, resolver) : needsNew();
	    }
	  }
	
	  /**
	  The primary way of interacting with a promise is through its `then` method,
	  which registers callbacks to receive either a promise's eventual value or the
	  reason why the promise cannot be fulfilled.
	   ```js
	  findUser().then(function(user){
	    // user is available
	  }, function(reason){
	    // user is unavailable, and you are given the reason why
	  });
	  ```
	   Chaining
	  --------
	   The return value of `then` is itself a promise.  This second, 'downstream'
	  promise is resolved with the return value of the first promise's fulfillment
	  or rejection handler, or rejected if the handler throws an exception.
	   ```js
	  findUser().then(function (user) {
	    return user.name;
	  }, function (reason) {
	    return 'default name';
	  }).then(function (userName) {
	    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
	    // will be `'default name'`
	  });
	   findUser().then(function (user) {
	    throw new Error('Found user, but still unhappy');
	  }, function (reason) {
	    throw new Error('`findUser` rejected and we're unhappy');
	  }).then(function (value) {
	    // never reached
	  }, function (reason) {
	    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
	    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
	  });
	  ```
	  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.
	   ```js
	  findUser().then(function (user) {
	    throw new PedagogicalException('Upstream error');
	  }).then(function (value) {
	    // never reached
	  }).then(function (value) {
	    // never reached
	  }, function (reason) {
	    // The `PedgagocialException` is propagated all the way down to here
	  });
	  ```
	   Assimilation
	  ------------
	   Sometimes the value you want to propagate to a downstream promise can only be
	  retrieved asynchronously. This can be achieved by returning a promise in the
	  fulfillment or rejection handler. The downstream promise will then be pending
	  until the returned promise is settled. This is called *assimilation*.
	   ```js
	  findUser().then(function (user) {
	    return findCommentsByAuthor(user);
	  }).then(function (comments) {
	    // The user's comments are now available
	  });
	  ```
	   If the assimliated promise rejects, then the downstream promise will also reject.
	   ```js
	  findUser().then(function (user) {
	    return findCommentsByAuthor(user);
	  }).then(function (comments) {
	    // If `findCommentsByAuthor` fulfills, we'll have the value here
	  }, function (reason) {
	    // If `findCommentsByAuthor` rejects, we'll have the reason here
	  });
	  ```
	   Simple Example
	  --------------
	   Synchronous Example
	   ```javascript
	  let result;
	   try {
	    result = findResult();
	    // success
	  } catch(reason) {
	    // failure
	  }
	  ```
	   Errback Example
	   ```js
	  findResult(function(result, err){
	    if (err) {
	      // failure
	    } else {
	      // success
	    }
	  });
	  ```
	   Promise Example;
	   ```javascript
	  findResult().then(function(result){
	    // success
	  }, function(reason){
	    // failure
	  });
	  ```
	   Advanced Example
	  --------------
	   Synchronous Example
	   ```javascript
	  let author, books;
	   try {
	    author = findAuthor();
	    books  = findBooksByAuthor(author);
	    // success
	  } catch(reason) {
	    // failure
	  }
	  ```
	   Errback Example
	   ```js
	   function foundBooks(books) {
	   }
	   function failure(reason) {
	   }
	   findAuthor(function(author, err){
	    if (err) {
	      failure(err);
	      // failure
	    } else {
	      try {
	        findBoooksByAuthor(author, function(books, err) {
	          if (err) {
	            failure(err);
	          } else {
	            try {
	              foundBooks(books);
	            } catch(reason) {
	              failure(reason);
	            }
	          }
	        });
	      } catch(error) {
	        failure(err);
	      }
	      // success
	    }
	  });
	  ```
	   Promise Example;
	   ```javascript
	  findAuthor().
	    then(findBooksByAuthor).
	    then(function(books){
	      // found books
	  }).catch(function(reason){
	    // something went wrong
	  });
	  ```
	   @method then
	  @param {Function} onFulfilled
	  @param {Function} onRejected
	  Useful for tooling.
	  @return {Promise}
	  */
	
	  /**
	  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
	  as the catch block of a try/catch statement.
	  ```js
	  function findAuthor(){
	  throw new Error('couldn't find that author');
	  }
	  // synchronous
	  try {
	  findAuthor();
	  } catch(reason) {
	  // something went wrong
	  }
	  // async with promises
	  findAuthor().catch(function(reason){
	  // something went wrong
	  });
	  ```
	  @method catch
	  @param {Function} onRejection
	  Useful for tooling.
	  @return {Promise}
	  */
	
	
	  Promise.prototype.catch = function _catch(onRejection) {
	    return this.then(null, onRejection);
	  };
	
	  /**
	    `finally` will be invoked regardless of the promise's fate just as native
	    try/catch/finally behaves
	  
	    Synchronous example:
	  
	    ```js
	    findAuthor() {
	      if (Math.random() > 0.5) {
	        throw new Error();
	      }
	      return new Author();
	    }
	  
	    try {
	      return findAuthor(); // succeed or fail
	    } catch(error) {
	      return findOtherAuther();
	    } finally {
	      // always runs
	      // doesn't affect the return value
	    }
	    ```
	  
	    Asynchronous example:
	  
	    ```js
	    findAuthor().catch(function(reason){
	      return findOtherAuther();
	    }).finally(function(){
	      // author was either found, or not
	    });
	    ```
	  
	    @method finally
	    @param {Function} callback
	    @return {Promise}
	  */
	
	
	  Promise.prototype.finally = function _finally(callback) {
	    var promise = this;
	    var constructor = promise.constructor;
	
	    if (isFunction(callback)) {
	      return promise.then(function (value) {
	        return constructor.resolve(callback()).then(function () {
	          return value;
	        });
	      }, function (reason) {
	        return constructor.resolve(callback()).then(function () {
	          throw reason;
	        });
	      });
	    }
	
	    return promise.then(callback, callback);
	  };
	
	  return Promise;
	}();
	
	Promise$1.prototype.then = then;
	Promise$1.all = all;
	Promise$1.race = race;
	Promise$1.resolve = resolve$1;
	Promise$1.reject = reject$1;
	Promise$1._setScheduler = setScheduler;
	Promise$1._setAsap = setAsap;
	Promise$1._asap = asap;
	
	/*global self*/
	function polyfill() {
	  var local = void 0;
	
	  if (typeof global !== 'undefined') {
	    local = global;
	  } else if (typeof self !== 'undefined') {
	    local = self;
	  } else {
	    try {
	      local = Function('return this')();
	    } catch (e) {
	      throw new Error('polyfill failed because global object is unavailable in this environment');
	    }
	  }
	
	  var P = local.Promise;
	
	  if (P) {
	    var promiseToString = null;
	    try {
	      promiseToString = Object.prototype.toString.call(P.resolve());
	    } catch (e) {
	      // silently ignored
	    }
	
	    if (promiseToString === '[object Promise]' && !P.cast) {
	      return;
	    }
	  }
	
	  local.Promise = Promise$1;
	}
	
	// Strange compat..
	Promise$1.polyfill = polyfill;
	Promise$1.Promise = Promise$1;
	
	return Promise$1;
	
	})));
	
	
	
	//# sourceMappingURL=es6-promise.map
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(90), (function() { return this; }())))

/***/ }),
/* 250 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {var win;
	
	if (typeof window !== "undefined") {
	    win = window;
	} else if (typeof global !== "undefined") {
	    win = global;
	} else if (typeof self !== "undefined"){
	    win = self;
	} else {
	    win = {};
	}
	
	module.exports = win;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 251 */,
/* 252 */
/***/ (function(module, exports) {

	/*!
	 * isobject <https://github.com/jonschlinkert/isobject>
	 *
	 * Copyright (c) 2014-2017, Jon Schlinkert.
	 * Released under the MIT License.
	 */
	
	'use strict';
	
	module.exports = function isObject(val) {
	  return val != null && typeof val === 'object' && Array.isArray(val) === false;
	};


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(30);
	
	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;
	
	module.exports = Uint8Array;


/***/ }),
/* 254 */
/***/ (function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;
	
	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}
	
	module.exports = arrayPush;


/***/ }),
/* 255 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length;
	
	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	module.exports = arraySome;


/***/ }),
/* 256 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(96),
	    arrayIncludes = __webpack_require__(141),
	    arrayIncludesWith = __webpack_require__(142),
	    arrayMap = __webpack_require__(34),
	    baseUnary = __webpack_require__(99),
	    cacheHas = __webpack_require__(100);
	
	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;
	
	/**
	 * The base implementation of methods like `_.difference` without support
	 * for excluding multiple arrays or iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Array} values The values to exclude.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of filtered values.
	 */
	function baseDifference(array, values, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      isCommon = true,
	      length = array.length,
	      result = [],
	      valuesLength = values.length;
	
	  if (!length) {
	    return result;
	  }
	  if (iteratee) {
	    values = arrayMap(values, baseUnary(iteratee));
	  }
	  if (comparator) {
	    includes = arrayIncludesWith;
	    isCommon = false;
	  }
	  else if (values.length >= LARGE_ARRAY_SIZE) {
	    includes = cacheHas;
	    isCommon = false;
	    values = new SetCache(values);
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee == null ? value : iteratee(value);
	
	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var valuesIndex = valuesLength;
	      while (valuesIndex--) {
	        if (values[valuesIndex] === computed) {
	          continue outer;
	        }
	      }
	      result.push(value);
	    }
	    else if (!includes(values, computed, comparator)) {
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseDifference;


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(44),
	    toLength = __webpack_require__(339);
	
	/**
	 * The base implementation of `_.fill` without an iteratee call guard.
	 *
	 * @private
	 * @param {Array} array The array to fill.
	 * @param {*} value The value to fill `array` with.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns `array`.
	 */
	function baseFill(array, value, start, end) {
	  var length = array.length;
	
	  start = toInteger(start);
	  if (start < 0) {
	    start = -start > length ? 0 : (length + start);
	  }
	  end = (end === undefined || end > length) ? length : toInteger(end);
	  if (end < 0) {
	    end += length;
	  }
	  end = start > end ? 0 : toLength(end);
	  while (start < end) {
	    array[start++] = value;
	  }
	  return array;
	}
	
	module.exports = baseFill;


/***/ }),
/* 259 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.findIndex` and `_.findLastIndex` without
	 * support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} predicate The function invoked per iteration.
	 * @param {number} fromIndex The index to search from.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseFindIndex(array, predicate, fromIndex, fromRight) {
	  var length = array.length,
	      index = fromIndex + (fromRight ? 1 : -1);
	
	  while ((fromRight ? index-- : ++index < length)) {
	    if (predicate(array[index], index, array)) {
	      return index;
	    }
	  }
	  return -1;
	}
	
	module.exports = baseFindIndex;


/***/ }),
/* 260 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  return object != null && hasOwnProperty.call(object, key);
	}
	
	module.exports = baseHas;


/***/ }),
/* 261 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return object != null && key in Object(object);
	}
	
	module.exports = baseHasIn;


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(96),
	    arrayIncludes = __webpack_require__(141),
	    arrayIncludesWith = __webpack_require__(142),
	    arrayMap = __webpack_require__(34),
	    baseUnary = __webpack_require__(99),
	    cacheHas = __webpack_require__(100);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * The base implementation of methods like `_.intersection`, without support
	 * for iteratee shorthands, that accepts an array of arrays to inspect.
	 *
	 * @private
	 * @param {Array} arrays The arrays to inspect.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of shared values.
	 */
	function baseIntersection(arrays, iteratee, comparator) {
	  var includes = comparator ? arrayIncludesWith : arrayIncludes,
	      length = arrays[0].length,
	      othLength = arrays.length,
	      othIndex = othLength,
	      caches = Array(othLength),
	      maxLength = Infinity,
	      result = [];
	
	  while (othIndex--) {
	    var array = arrays[othIndex];
	    if (othIndex && iteratee) {
	      array = arrayMap(array, baseUnary(iteratee));
	    }
	    maxLength = nativeMin(array.length, maxLength);
	    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	      ? new SetCache(othIndex && array)
	      : undefined;
	  }
	  array = arrays[0];
	
	  var index = -1,
	      seen = caches[0];
	
	  outer:
	  while (++index < length && result.length < maxLength) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;
	
	    value = (comparator || value !== 0) ? value : 0;
	    if (!(seen
	          ? cacheHas(seen, computed)
	          : includes(result, computed, comparator)
	        )) {
	      othIndex = othLength;
	      while (--othIndex) {
	        var cache = caches[othIndex];
	        if (!(cache
	              ? cacheHas(cache, computed)
	              : includes(arrays[othIndex], computed, comparator))
	            ) {
	          continue outer;
	        }
	      }
	      if (seen) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	  }
	  return result;
	}
	
	module.exports = baseIntersection;


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(67);
	
	/**
	 * The base implementation of `_.invert` and `_.invertBy` which inverts
	 * `object` with values transformed by `iteratee` and set by `setter`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} setter The function to set `accumulator` values.
	 * @param {Function} iteratee The iteratee to transform values.
	 * @param {Object} accumulator The initial inverted object.
	 * @returns {Function} Returns `accumulator`.
	 */
	function baseInverter(object, setter, iteratee, accumulator) {
	  baseForOwn(object, function(value, key, object) {
	    setter(accumulator, iteratee(value), key, object);
	  });
	  return accumulator;
	}
	
	module.exports = baseInverter;


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(265),
	    isObjectLike = __webpack_require__(53);
	
	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Unordered comparison
	 *  2 - Partial comparison
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, bitmask, customizer, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	}
	
	module.exports = baseIsEqual;


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(139),
	    equalArrays = __webpack_require__(299),
	    equalByTag = __webpack_require__(300),
	    equalObjects = __webpack_require__(301),
	    getTag = __webpack_require__(120),
	    isArray = __webpack_require__(21),
	    isBuffer = __webpack_require__(85),
	    isTypedArray = __webpack_require__(86);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;
	
	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = objIsArr ? arrayTag : getTag(object),
	      othTag = othIsArr ? arrayTag : getTag(other);
	
	  objTag = objTag == argsTag ? objectTag : objTag;
	  othTag = othTag == argsTag ? objectTag : othTag;
	
	  var objIsObj = objTag == objectTag,
	      othIsObj = othTag == objectTag,
	      isSameTag = objTag == othTag;
	
	  if (isSameTag && isBuffer(object)) {
	    if (!isBuffer(other)) {
	      return false;
	    }
	    objIsArr = true;
	    objIsObj = false;
	  }
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	  }
	  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
	
	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;
	
	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	}
	
	module.exports = baseIsEqualDeep;


/***/ }),
/* 266 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      result = Array(length);
	
	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}
	
	module.exports = arrayMap;


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(139),
	    assignMergeValue = __webpack_require__(143),
	    baseFor = __webpack_require__(148),
	    baseMergeDeep = __webpack_require__(268),
	    isObject = __webpack_require__(32),
	    keysIn = __webpack_require__(108),
	    safeGet = __webpack_require__(161);
	
	/**
	 * The base implementation of `_.merge` without support for multiple sources.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMerge(object, source, srcIndex, customizer, stack) {
	  if (object === source) {
	    return;
	  }
	  baseFor(source, function(srcValue, key) {
	    if (isObject(srcValue)) {
	      stack || (stack = new Stack);
	      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	    }
	    else {
	      var newValue = customizer
	        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
	        : undefined;
	
	      if (newValue === undefined) {
	        newValue = srcValue;
	      }
	      assignMergeValue(object, key, newValue);
	    }
	  }, keysIn);
	}
	
	module.exports = baseMerge;


/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

	var assignMergeValue = __webpack_require__(143),
	    cloneBuffer = __webpack_require__(282),
	    cloneTypedArray = __webpack_require__(283),
	    copyArray = __webpack_require__(151),
	    initCloneObject = __webpack_require__(306),
	    isArguments = __webpack_require__(60),
	    isArray = __webpack_require__(21),
	    isArrayLikeObject = __webpack_require__(107),
	    isBuffer = __webpack_require__(85),
	    isFunction = __webpack_require__(45),
	    isObject = __webpack_require__(32),
	    isPlainObject = __webpack_require__(73),
	    isTypedArray = __webpack_require__(86),
	    safeGet = __webpack_require__(161),
	    toPlainObject = __webpack_require__(341);
	
	/**
	 * A specialized version of `baseMerge` for arrays and objects which performs
	 * deep merges and tracks traversed objects enabling objects with circular
	 * references to be merged.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {string} key The key of the value to merge.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} mergeFunc The function to merge values.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	  var objValue = safeGet(object, key),
	      srcValue = safeGet(source, key),
	      stacked = stack.get(srcValue);
	
	  if (stacked) {
	    assignMergeValue(object, key, stacked);
	    return;
	  }
	  var newValue = customizer
	    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	    : undefined;
	
	  var isCommon = newValue === undefined;
	
	  if (isCommon) {
	    var isArr = isArray(srcValue),
	        isBuff = !isArr && isBuffer(srcValue),
	        isTyped = !isArr && !isBuff && isTypedArray(srcValue);
	
	    newValue = srcValue;
	    if (isArr || isBuff || isTyped) {
	      if (isArray(objValue)) {
	        newValue = objValue;
	      }
	      else if (isArrayLikeObject(objValue)) {
	        newValue = copyArray(objValue);
	      }
	      else if (isBuff) {
	        isCommon = false;
	        newValue = cloneBuffer(srcValue, true);
	      }
	      else if (isTyped) {
	        isCommon = false;
	        newValue = cloneTypedArray(srcValue, true);
	      }
	      else {
	        newValue = [];
	      }
	    }
	    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	      newValue = objValue;
	      if (isArguments(objValue)) {
	        newValue = toPlainObject(objValue);
	      }
	      else if (!isObject(objValue) || isFunction(objValue)) {
	        newValue = initCloneObject(srcValue);
	      }
	    }
	    else {
	      isCommon = false;
	    }
	  }
	  if (isCommon) {
	    // Recursively merge objects and arrays (susceptible to call stack limits).
	    stack.set(srcValue, newValue);
	    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	    stack['delete'](srcValue);
	  }
	  assignMergeValue(object, key, newValue);
	}
	
	module.exports = baseMergeDeep;


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(34),
	    baseIteratee = __webpack_require__(35),
	    baseMap = __webpack_require__(266),
	    baseSortBy = __webpack_require__(274),
	    baseUnary = __webpack_require__(99),
	    compareMultiple = __webpack_require__(285),
	    identity = __webpack_require__(106);
	
	/**
	 * The base implementation of `_.orderBy` without param guards.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	 * @param {string[]} orders The sort orders of `iteratees`.
	 * @returns {Array} Returns the new sorted array.
	 */
	function baseOrderBy(collection, iteratees, orders) {
	  var index = -1;
	  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));
	
	  var result = baseMap(collection, function(value, key, collection) {
	    var criteria = arrayMap(iteratees, function(iteratee) {
	      return iteratee(value);
	    });
	    return { 'criteria': criteria, 'index': ++index, 'value': value };
	  });
	
	  return baseSortBy(result, function(object, other) {
	    return compareMultiple(object, other, orders);
	  });
	}
	
	module.exports = baseOrderBy;


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

	var basePickBy = __webpack_require__(149),
	    hasIn = __webpack_require__(326);
	
	/**
	 * The base implementation of `_.pick` without support for individual
	 * property identifiers.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} paths The property paths to pick.
	 * @returns {Object} Returns the new object.
	 */
	function basePick(object, paths) {
	  return basePickBy(object, paths, function(value, path) {
	    return hasIn(object, path);
	  });
	}
	
	module.exports = basePick;


/***/ }),
/* 271 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeCeil = Math.ceil,
	    nativeMax = Math.max;
	
	/**
	 * The base implementation of `_.range` and `_.rangeRight` which doesn't
	 * coerce arguments.
	 *
	 * @private
	 * @param {number} start The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} step The value to increment or decrement by.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Array} Returns the range of numbers.
	 */
	function baseRange(start, end, step, fromRight) {
	  var index = -1,
	      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	      result = Array(length);
	
	  while (length--) {
	    result[fromRight ? length : ++index] = start;
	    start += step;
	  }
	  return result;
	}
	
	module.exports = baseRange;


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(144),
	    castPath = __webpack_require__(42),
	    isIndex = __webpack_require__(102),
	    isObject = __webpack_require__(32),
	    toKey = __webpack_require__(70);
	
	/**
	 * The base implementation of `_.set`.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @param {Function} [customizer] The function to customize path creation.
	 * @returns {Object} Returns `object`.
	 */
	function baseSet(object, path, value, customizer) {
	  if (!isObject(object)) {
	    return object;
	  }
	  path = castPath(path, object);
	
	  var index = -1,
	      length = path.length,
	      lastIndex = length - 1,
	      nested = object;
	
	  while (nested != null && ++index < length) {
	    var key = toKey(path[index]),
	        newValue = value;
	
	    if (index != lastIndex) {
	      var objValue = nested[key];
	      newValue = customizer ? customizer(objValue, key, nested) : undefined;
	      if (newValue === undefined) {
	        newValue = isObject(objValue)
	          ? objValue
	          : (isIndex(path[index + 1]) ? [] : {});
	      }
	    }
	    assignValue(nested, key, newValue);
	    nested = nested[key];
	  }
	  return object;
	}
	
	module.exports = baseSet;


/***/ }),
/* 273 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 274 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.sortBy` which uses `comparer` to define the
	 * sort order of `array` and replaces criteria objects with their corresponding
	 * values.
	 *
	 * @private
	 * @param {Array} array The array to sort.
	 * @param {Function} comparer The function to define sort order.
	 * @returns {Array} Returns `array`.
	 */
	function baseSortBy(array, comparer) {
	  var length = array.length;
	
	  array.sort(comparer);
	  while (length--) {
	    array[length] = array[length].value;
	  }
	  return array;
	}
	
	module.exports = baseSortBy;


/***/ }),
/* 275 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.sum` and `_.sumBy` without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {number} Returns the sum.
	 */
	function baseSum(array, iteratee) {
	  var result,
	      index = -1,
	      length = array.length;
	
	  while (++index < length) {
	    var current = iteratee(array[index]);
	    if (current !== undefined) {
	      result = result === undefined ? current : (result + current);
	    }
	  }
	  return result;
	}
	
	module.exports = baseSum;


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(42),
	    last = __webpack_require__(171),
	    parent = __webpack_require__(317),
	    toKey = __webpack_require__(70);
	
	/**
	 * The base implementation of `_.unset`.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The property path to unset.
	 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	 */
	function baseUnset(object, path) {
	  path = castPath(path, object);
	  object = parent(object, path);
	  return object == null || delete object[toKey(last(path))];
	}
	
	module.exports = baseUnset;


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(107);
	
	/**
	 * Casts `value` to an empty array if it's not an array like object.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Array|Object} Returns the cast array-like object.
	 */
	function castArrayLikeObject(value) {
	  return isArrayLikeObject(value) ? value : [];
	}
	
	module.exports = castArrayLikeObject;


/***/ }),
/* 278 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(41);
	
	/**
	 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	 * that is not found in the character symbols.
	 *
	 * @private
	 * @param {Array} strSymbols The string symbols to inspect.
	 * @param {Array} chrSymbols The character symbols to find.
	 * @returns {number} Returns the index of the last unmatched string symbol.
	 */
	function charsEndIndex(strSymbols, chrSymbols) {
	  var index = strSymbols.length;
	
	  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	  return index;
	}
	
	module.exports = charsEndIndex;


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(41);
	
	/**
	 * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	 * that is not found in the character symbols.
	 *
	 * @private
	 * @param {Array} strSymbols The string symbols to inspect.
	 * @param {Array} chrSymbols The character symbols to find.
	 * @returns {number} Returns the index of the first unmatched string symbol.
	 */
	function charsStartIndex(strSymbols, chrSymbols) {
	  var index = -1,
	      length = strSymbols.length;
	
	  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	  return index;
	}
	
	module.exports = charsStartIndex;


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

	var Uint8Array = __webpack_require__(253);
	
	/**
	 * Creates a clone of `arrayBuffer`.
	 *
	 * @private
	 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	 * @returns {ArrayBuffer} Returns the cloned array buffer.
	 */
	function cloneArrayBuffer(arrayBuffer) {
	  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	  return result;
	}
	
	module.exports = cloneArrayBuffer;


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(30);
	
	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
	
	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
	
	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;
	
	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined,
	    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;
	
	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var length = buffer.length,
	      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
	
	  buffer.copy(result);
	  return result;
	}
	
	module.exports = cloneBuffer;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(117)(module)))

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(281);
	
	/**
	 * Creates a clone of `typedArray`.
	 *
	 * @private
	 * @param {Object} typedArray The typed array to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned typed array.
	 */
	function cloneTypedArray(typedArray, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	}
	
	module.exports = cloneTypedArray;


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(54);
	
	/**
	 * Compares values to sort them in ascending order.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {number} Returns the sort order indicator for `value`.
	 */
	function compareAscending(value, other) {
	  if (value !== other) {
	    var valIsDefined = value !== undefined,
	        valIsNull = value === null,
	        valIsReflexive = value === value,
	        valIsSymbol = isSymbol(value);
	
	    var othIsDefined = other !== undefined,
	        othIsNull = other === null,
	        othIsReflexive = other === other,
	        othIsSymbol = isSymbol(other);
	
	    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	        (valIsNull && othIsDefined && othIsReflexive) ||
	        (!valIsDefined && othIsReflexive) ||
	        !valIsReflexive) {
	      return 1;
	    }
	    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	        (othIsNull && valIsDefined && valIsReflexive) ||
	        (!othIsDefined && valIsReflexive) ||
	        !othIsReflexive) {
	      return -1;
	    }
	  }
	  return 0;
	}
	
	module.exports = compareAscending;


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

	var compareAscending = __webpack_require__(284);
	
	/**
	 * Used by `_.orderBy` to compare multiple properties of a value to another
	 * and stable sort them.
	 *
	 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	 * specify an order of "desc" for descending or "asc" for ascending sort order
	 * of corresponding values.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {boolean[]|string[]} orders The order to sort by for each property.
	 * @returns {number} Returns the sort order indicator for `object`.
	 */
	function compareMultiple(object, other, orders) {
	  var index = -1,
	      objCriteria = object.criteria,
	      othCriteria = other.criteria,
	      length = objCriteria.length,
	      ordersLength = orders.length;
	
	  while (++index < length) {
	    var result = compareAscending(objCriteria[index], othCriteria[index]);
	    if (result) {
	      if (index >= ordersLength) {
	        return result;
	      }
	      var order = orders[index];
	      return result * (order == 'desc' ? -1 : 1);
	    }
	  }
	  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	  // that causes it, under certain circumstances, to provide the same value for
	  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	  // for more details.
	  //
	  // This also ensures a stable sort in V8 and other engines.
	  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	  return object.index - other.index;
	}
	
	module.exports = compareMultiple;


/***/ }),
/* 286 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * Creates an array that is the composition of partially applied arguments,
	 * placeholders, and provided arguments into a single array of arguments.
	 *
	 * @private
	 * @param {Array} args The provided arguments.
	 * @param {Array} partials The arguments to prepend to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @params {boolean} [isCurried] Specify composing for a curried function.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgs(args, partials, holders, isCurried) {
	  var argsIndex = -1,
	      argsLength = args.length,
	      holdersLength = holders.length,
	      leftIndex = -1,
	      leftLength = partials.length,
	      rangeLength = nativeMax(argsLength - holdersLength, 0),
	      result = Array(leftLength + rangeLength),
	      isUncurried = !isCurried;
	
	  while (++leftIndex < leftLength) {
	    result[leftIndex] = partials[leftIndex];
	  }
	  while (++argsIndex < holdersLength) {
	    if (isUncurried || argsIndex < argsLength) {
	      result[holders[argsIndex]] = args[argsIndex];
	    }
	  }
	  while (rangeLength--) {
	    result[leftIndex++] = args[argsIndex++];
	  }
	  return result;
	}
	
	module.exports = composeArgs;


/***/ }),
/* 287 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;
	
	/**
	 * This function is like `composeArgs` except that the arguments composition
	 * is tailored for `_.partialRight`.
	 *
	 * @private
	 * @param {Array} args The provided arguments.
	 * @param {Array} partials The arguments to append to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @params {boolean} [isCurried] Specify composing for a curried function.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgsRight(args, partials, holders, isCurried) {
	  var argsIndex = -1,
	      argsLength = args.length,
	      holdersIndex = -1,
	      holdersLength = holders.length,
	      rightIndex = -1,
	      rightLength = partials.length,
	      rangeLength = nativeMax(argsLength - holdersLength, 0),
	      result = Array(rangeLength + rightLength),
	      isUncurried = !isCurried;
	
	  while (++argsIndex < rangeLength) {
	    result[argsIndex] = args[argsIndex];
	  }
	  var offset = argsIndex;
	  while (++rightIndex < rightLength) {
	    result[offset + rightIndex] = partials[rightIndex];
	  }
	  while (++holdersIndex < holdersLength) {
	    if (isUncurried || argsIndex < argsLength) {
	      result[offset + holders[holdersIndex]] = args[argsIndex++];
	    }
	  }
	  return result;
	}
	
	module.exports = composeArgsRight;


/***/ }),
/* 288 */
/***/ (function(module, exports) {

	/**
	 * Gets the number of `placeholder` occurrences in `array`.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} placeholder The placeholder to search for.
	 * @returns {number} Returns the placeholder count.
	 */
	function countHolders(array, placeholder) {
	  var length = array.length,
	      result = 0;
	
	  while (length--) {
	    if (array[length] === placeholder) {
	      ++result;
	    }
	  }
	  return result;
	}
	
	module.exports = countHolders;


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(36),
	    isIterateeCall = __webpack_require__(69);
	
	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return baseRest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;
	
	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;
	
	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}
	
	module.exports = createAssigner;


/***/ }),
/* 290 */
/***/ (function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;
	
	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}
	
	module.exports = createBaseFor;


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

	var createCtor = __webpack_require__(68),
	    root = __webpack_require__(30);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1;
	
	/**
	 * Creates a function that wraps `func` to invoke it with the optional `this`
	 * binding of `thisArg`.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createBind(func, bitmask, thisArg) {
	  var isBind = bitmask & WRAP_BIND_FLAG,
	      Ctor = createCtor(func);
	
	  function wrapper() {
	    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	    return fn.apply(isBind ? thisArg : this, arguments);
	  }
	  return wrapper;
	}
	
	module.exports = createBind;


/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(97),
	    createCtor = __webpack_require__(68),
	    createHybrid = __webpack_require__(153),
	    createRecurry = __webpack_require__(154),
	    getHolder = __webpack_require__(50),
	    replaceHolders = __webpack_require__(51),
	    root = __webpack_require__(30);
	
	/**
	 * Creates a function that wraps `func` to enable currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {number} arity The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCurry(func, bitmask, arity) {
	  var Ctor = createCtor(func);
	
	  function wrapper() {
	    var length = arguments.length,
	        args = Array(length),
	        index = length,
	        placeholder = getHolder(wrapper);
	
	    while (index--) {
	      args[index] = arguments[index];
	    }
	    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	      ? []
	      : replaceHolders(args, placeholder);
	
	    length -= holders.length;
	    if (length < arity) {
	      return createRecurry(
	        func, bitmask, createHybrid, wrapper.placeholder, undefined,
	        args, holders, undefined, undefined, arity - length);
	    }
	    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	    return apply(fn, this, args);
	  }
	  return wrapper;
	}
	
	module.exports = createCurry;


/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(35),
	    isArrayLike = __webpack_require__(84),
	    keys = __webpack_require__(55);
	
	/**
	 * Creates a `_.find` or `_.findLast` function.
	 *
	 * @private
	 * @param {Function} findIndexFunc The function to find the collection index.
	 * @returns {Function} Returns the new find function.
	 */
	function createFind(findIndexFunc) {
	  return function(collection, predicate, fromIndex) {
	    var iterable = Object(collection);
	    if (!isArrayLike(collection)) {
	      var iteratee = baseIteratee(predicate, 3);
	      collection = keys(collection);
	      predicate = function(key) { return iteratee(iterable[key], key, iterable); };
	    }
	    var index = findIndexFunc(collection, predicate, fromIndex);
	    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
	  };
	}
	
	module.exports = createFind;


/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

	var baseInverter = __webpack_require__(263);
	
	/**
	 * Creates a function like `_.invertBy`.
	 *
	 * @private
	 * @param {Function} setter The function to set accumulator values.
	 * @param {Function} toIteratee The function to resolve iteratees.
	 * @returns {Function} Returns the new inverter function.
	 */
	function createInverter(setter, toIteratee) {
	  return function(object, iteratee) {
	    return baseInverter(object, setter, toIteratee(iteratee), {});
	  };
	}
	
	module.exports = createInverter;


/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(97),
	    createCtor = __webpack_require__(68),
	    root = __webpack_require__(30);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1;
	
	/**
	 * Creates a function that wraps `func` to invoke it with the `this` binding
	 * of `thisArg` and `partials` prepended to the arguments it receives.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} partials The arguments to prepend to those provided to
	 *  the new function.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createPartial(func, bitmask, thisArg, partials) {
	  var isBind = bitmask & WRAP_BIND_FLAG,
	      Ctor = createCtor(func);
	
	  function wrapper() {
	    var argsIndex = -1,
	        argsLength = arguments.length,
	        leftIndex = -1,
	        leftLength = partials.length,
	        args = Array(leftLength + argsLength),
	        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	
	    while (++leftIndex < leftLength) {
	      args[leftIndex] = partials[leftIndex];
	    }
	    while (argsLength--) {
	      args[leftIndex++] = arguments[++argsIndex];
	    }
	    return apply(fn, isBind ? thisArg : this, args);
	  }
	  return wrapper;
	}
	
	module.exports = createPartial;


/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRange = __webpack_require__(271),
	    isIterateeCall = __webpack_require__(69),
	    toFinite = __webpack_require__(172);
	
	/**
	 * Creates a `_.range` or `_.rangeRight` function.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new range function.
	 */
	function createRange(fromRight) {
	  return function(start, end, step) {
	    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	      end = step = undefined;
	    }
	    // Ensure the sign of `-0` is preserved.
	    start = toFinite(start);
	    if (end === undefined) {
	      end = start;
	      start = 0;
	    } else {
	      end = toFinite(end);
	    }
	    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
	    return baseRange(start, end, step, fromRight);
	  };
	}
	
	module.exports = createRange;


/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

	var isPlainObject = __webpack_require__(73);
	
	/**
	 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
	 * objects.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {string} key The key of the property to inspect.
	 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
	 */
	function customOmitClone(value) {
	  return isPlainObject(value) ? undefined : value;
	}
	
	module.exports = customOmitClone;


/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(305);
	
	var defineProperty = (function() {
	  try {
	    var func = getNative(Object, 'defineProperty');
	    func({}, '', {});
	    return func;
	  } catch (e) {}
	}());
	
	module.exports = defineProperty;


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(96),
	    arraySome = __webpack_require__(255),
	    cacheHas = __webpack_require__(100);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      arrLength = array.length,
	      othLength = other.length;
	
	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;
	
	  stack.set(array, other);
	  stack.set(other, array);
	
	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!cacheHas(seen, othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	              return seen.push(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, bitmask, customizer, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalArrays;


/***/ }),
/* 300 */
/***/ (function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}
	
	module.exports = eq;


/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

	var getAllKeys = __webpack_require__(303);
	
	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      objProps = getAllKeys(object),
	      objLength = objProps.length,
	      othProps = getAllKeys(other),
	      othLength = othProps.length;
	
	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);
	
	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];
	
	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;
	
	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  stack['delete'](other);
	  return result;
	}
	
	module.exports = equalObjects;


/***/ }),
/* 302 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(59);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);
	
	module.exports = nativeKeys;


/***/ }),
/* 304 */
/***/ (function(module, exports) {

	/**
	 * This method returns `undefined`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.3.0
	 * @category Util
	 * @example
	 *
	 * _.times(2, _.noop);
	 * // => [undefined, undefined]
	 */
	function noop() {
	  // No operation performed.
	}
	
	module.exports = noop;


/***/ }),
/* 305 */
/***/ (function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}
	
	module.exports = getValue;


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(146),
	    getPrototype = __webpack_require__(157),
	    isPrototype = __webpack_require__(121);
	
	/**
	 * Initializes an object clone.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneObject(object) {
	  return (typeof object.constructor == 'function' && !isPrototype(object))
	    ? baseCreate(getPrototype(object))
	    : {};
	}
	
	module.exports = initCloneObject;


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(140),
	    isArguments = __webpack_require__(60),
	    isArray = __webpack_require__(21);
	
	/** Built-in value references. */
	var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;
	
	/**
	 * Checks if `value` is a flattenable `arguments` object or array.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */
	function isFlattenable(value) {
	  return isArray(value) || isArguments(value) ||
	    !!(spreadableSymbol && value && value[spreadableSymbol]);
	}
	
	module.exports = isFlattenable;


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(21),
	    isSymbol = __webpack_require__(54);
	
	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;
	
	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}
	
	module.exports = isKey;


/***/ }),
/* 309 */
/***/ (function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}
	
	module.exports = stubFalse;


/***/ }),
/* 310 */
/***/ (function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	  this.size = 0;
	}
	
	module.exports = listCacheClear;


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(66);
	
	/** Used for built-in method references. */
	var arrayProto = Array.prototype;
	
	/** Built-in value references. */
	var splice = arrayProto.splice;
	
	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  --this.size;
	  return true;
	}
	
	module.exports = listCacheDelete;


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(66);
	
	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  return index < 0 ? undefined : data[index][1];
	}
	
	module.exports = listCacheGet;


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(66);
	
	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}
	
	module.exports = listCacheHas;


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(66);
	
	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);
	
	  if (index < 0) {
	    ++this.size;
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}
	
	module.exports = listCacheSet;


/***/ }),
/* 315 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 316 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}
	
	module.exports = identity;


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(98),
	    baseSlice = __webpack_require__(119);
	
	/**
	 * Gets the parent value at `path` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} path The path to get the parent value of.
	 * @returns {*} Returns the parent value.
	 */
	function parent(object, path) {
	  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
	}
	
	module.exports = parent;


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

	var copyArray = __webpack_require__(151),
	    isIndex = __webpack_require__(102);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;
	
	/**
	 * Reorder `array` according to the specified indexes where the element at
	 * the first index is assigned as the first element, the element at
	 * the second index is assigned as the second element, and so on.
	 *
	 * @private
	 * @param {Array} array The array to reorder.
	 * @param {Array} indexes The arranged array indexes.
	 * @returns {Array} Returns `array`.
	 */
	function reorder(array, indexes) {
	  var arrLength = array.length,
	      length = nativeMin(indexes.length, arrLength),
	      oldArray = copyArray(array);
	
	  while (length--) {
	    var index = indexes[length];
	    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	  }
	  return array;
	}
	
	module.exports = reorder;


/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

	var memoizeCapped = __webpack_require__(315);
	
	/** Used to match property names within property paths. */
	var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
	
	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;
	
	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoizeCapped(function(string) {
	  var result = [];
	  if (string.charCodeAt(0) === 46 /* . */) {
	    result.push('');
	  }
	  string.replace(rePropName, function(match, number, quote, subString) {
	    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});
	
	module.exports = stringToPath;


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(36),
	    createWrap = __webpack_require__(101),
	    getHolder = __webpack_require__(50),
	    replaceHolders = __webpack_require__(51);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_PARTIAL_FLAG = 32;
	
	/**
	 * Creates a function that invokes `func` with the `this` binding of `thisArg`
	 * and `partials` prepended to the arguments it receives.
	 *
	 * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	 * may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
	 * property of bound functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to bind.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new bound function.
	 * @example
	 *
	 * function greet(greeting, punctuation) {
	 *   return greeting + ' ' + this.user + punctuation;
	 * }
	 *
	 * var object = { 'user': 'fred' };
	 *
	 * var bound = _.bind(greet, object, 'hi');
	 * bound('!');
	 * // => 'hi fred!'
	 *
	 * // Bound with placeholders.
	 * var bound = _.bind(greet, object, _, '!');
	 * bound('hi');
	 * // => 'hi fred!'
	 */
	var bind = baseRest(function(func, thisArg, partials) {
	  var bitmask = WRAP_BIND_FLAG;
	  if (partials.length) {
	    var holders = replaceHolders(partials, getHolder(bind));
	    bitmask |= WRAP_PARTIAL_FLAG;
	  }
	  return createWrap(func, bitmask, thisArg, partials, holders);
	});
	
	// Assign default placeholders.
	bind.placeholder = {};
	
	module.exports = bind;


/***/ }),
/* 321 */
/***/ (function(module, exports) {

	/**
	 * Creates an array with all falsey values removed. The values `false`, `null`,
	 * `0`, `""`, `undefined`, and `NaN` are falsey.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to compact.
	 * @returns {Array} Returns the new array of filtered values.
	 * @example
	 *
	 * _.compact([0, 1, false, 2, '', 3]);
	 * // => [1, 2, 3]
	 */
	function compact(array) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      resIndex = 0,
	      result = [];
	
	  while (++index < length) {
	    var value = array[index];
	    if (value) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}
	
	module.exports = compact;


/***/ }),
/* 322 */
/***/ (function(module, exports) {

	/**
	 * Creates a function that returns `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {*} value The value to return from the new function.
	 * @returns {Function} Returns the new constant function.
	 * @example
	 *
	 * var objects = _.times(2, _.constant({ 'a': 1 }));
	 *
	 * console.log(objects);
	 * // => [{ 'a': 1 }, { 'a': 1 }]
	 *
	 * console.log(objects[0] === objects[1]);
	 * // => true
	 */
	function constant(value) {
	  return function() {
	    return value;
	  };
	}
	
	module.exports = constant;


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

	var baseDifference = __webpack_require__(257),
	    baseFlatten = __webpack_require__(147),
	    baseRest = __webpack_require__(36),
	    isArrayLikeObject = __webpack_require__(107);
	
	/**
	 * Creates an array of `array` values not included in the other given arrays
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons. The order and references of result values are
	 * determined by the first array.
	 *
	 * **Note:** Unlike `_.pullAll`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {...Array} [values] The values to exclude.
	 * @returns {Array} Returns the new array of filtered values.
	 * @see _.without, _.xor
	 * @example
	 *
	 * _.difference([2, 1], [2, 3]);
	 * // => [1]
	 */
	var difference = baseRest(function(array, values) {
	  return isArrayLikeObject(array)
	    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
	    : [];
	});
	
	module.exports = difference;


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFill = __webpack_require__(258),
	    isIterateeCall = __webpack_require__(69);
	
	/**
	 * Fills elements of `array` with `value` from `start` up to, but not
	 * including, `end`.
	 *
	 * **Note:** This method mutates `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.2.0
	 * @category Array
	 * @param {Array} array The array to fill.
	 * @param {*} value The value to fill `array` with.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns `array`.
	 * @example
	 *
	 * var array = [1, 2, 3];
	 *
	 * _.fill(array, 'a');
	 * console.log(array);
	 * // => ['a', 'a', 'a']
	 *
	 * _.fill(Array(3), 2);
	 * // => [2, 2, 2]
	 *
	 * _.fill([4, 6, 8, 10], '*', 1, 3);
	 * // => [4, '*', '*', 10]
	 */
	function fill(array, value, start, end) {
	  var length = array == null ? 0 : array.length;
	  if (!length) {
	    return [];
	  }
	  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
	    start = 0;
	    end = length;
	  }
	  return baseFill(array, value, start, end);
	}
	
	module.exports = fill;


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(67),
	    castFunction = __webpack_require__(278);
	
	/**
	 * Iterates over own enumerable string keyed properties of an object and
	 * invokes `iteratee` for each property. The iteratee is invoked with three
	 * arguments: (value, key, object). Iteratee functions may exit iteration
	 * early by explicitly returning `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.3.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 * @see _.forOwnRight
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.forOwn(new Foo, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	 */
	function forOwn(object, iteratee) {
	  return object && baseForOwn(object, castFunction(iteratee));
	}
	
	module.exports = forOwn;


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(261),
	    hasPath = __webpack_require__(158);
	
	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return object != null && hasPath(object, path, baseHasIn);
	}
	
	module.exports = hasIn;


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(41);
	
	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  var length = array == null ? 0 : array.length;
	  return !!length && baseIndexOf(array, value, 0) > -1;
	}
	
	module.exports = arrayIncludes;


/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(34),
	    baseIntersection = __webpack_require__(262),
	    baseRest = __webpack_require__(36),
	    castArrayLikeObject = __webpack_require__(277);
	
	/**
	 * Creates an array of unique values that are included in all given arrays
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons. The order and references of result values are
	 * determined by the first array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {...Array} [arrays] The arrays to inspect.
	 * @returns {Array} Returns the new array of intersecting values.
	 * @example
	 *
	 * _.intersection([2, 1], [2, 3]);
	 * // => [2]
	 */
	var intersection = baseRest(function(arrays) {
	  var mapped = arrayMap(arrays, castArrayLikeObject);
	  return (mapped.length && mapped[0] === arrays[0])
	    ? baseIntersection(mapped)
	    : [];
	});
	
	module.exports = intersection;


/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(30);
	
	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsFinite = root.isFinite;
	
	/**
	 * Checks if `value` is a finite primitive number.
	 *
	 * **Note:** This method is based on
	 * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
	 * @example
	 *
	 * _.isFinite(3);
	 * // => true
	 *
	 * _.isFinite(Number.MIN_VALUE);
	 * // => true
	 *
	 * _.isFinite(Infinity);
	 * // => false
	 *
	 * _.isFinite('3');
	 * // => false
	 */
	function isFinite(value) {
	  return typeof value == 'number' && nativeIsFinite(value);
	}
	
	module.exports = isFinite;


/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

	var isNumber = __webpack_require__(169);
	
	/**
	 * Checks if `value` is `NaN`.
	 *
	 * **Note:** This method is based on
	 * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	 * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	 * `undefined` and other non-number values.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	 * @example
	 *
	 * _.isNaN(NaN);
	 * // => true
	 *
	 * _.isNaN(new Number(NaN));
	 * // => true
	 *
	 * isNaN(undefined);
	 * // => true
	 *
	 * _.isNaN(undefined);
	 * // => false
	 */
	function isNaN(value) {
	  // An `NaN` primitive is the only value that is not equal to itself.
	  // Perform the `toStringTag` check first to avoid errors with some
	  // ActiveX objects in IE.
	  return isNumber(value) && value != +value;
	}
	
	module.exports = isNaN;


/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(49),
	    baseForOwn = __webpack_require__(67),
	    baseIteratee = __webpack_require__(35);
	
	/**
	 * The opposite of `_.mapValues`; this method creates an object with the
	 * same values as `object` and keys generated by running each own enumerable
	 * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	 * with three arguments: (value, key, object).
	 *
	 * @static
	 * @memberOf _
	 * @since 3.8.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns the new mapped object.
	 * @see _.mapValues
	 * @example
	 *
	 * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   return key + value;
	 * });
	 * // => { 'a1': 1, 'b2': 2 }
	 */
	function mapKeys(object, iteratee) {
	  var result = {};
	  iteratee = baseIteratee(iteratee, 3);
	
	  baseForOwn(object, function(value, key, object) {
	    baseAssignValue(result, iteratee(value, key, object), value);
	  });
	  return result;
	}
	
	module.exports = mapKeys;


/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(49),
	    baseForOwn = __webpack_require__(67),
	    baseIteratee = __webpack_require__(35);
	
	/**
	 * Creates an object with the same keys as `object` and values generated
	 * by running each own enumerable string keyed property of `object` thru
	 * `iteratee`. The iteratee is invoked with three arguments:
	 * (value, key, object).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns the new mapped object.
	 * @see _.mapKeys
	 * @example
	 *
	 * var users = {
	 *   'fred':    { 'user': 'fred',    'age': 40 },
	 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	 * };
	 *
	 * _.mapValues(users, function(o) { return o.age; });
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.mapValues(users, 'age');
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 */
	function mapValues(object, iteratee) {
	  var result = {};
	  iteratee = baseIteratee(iteratee, 3);
	
	  baseForOwn(object, function(value, key, object) {
	    baseAssignValue(result, key, iteratee(value, key, object));
	  });
	  return result;
	}
	
	module.exports = mapValues;


/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(36),
	    createWrap = __webpack_require__(101),
	    getHolder = __webpack_require__(50),
	    replaceHolders = __webpack_require__(51);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_PARTIAL_FLAG = 32;
	
	/**
	 * Creates a function that invokes `func` with `partials` prepended to the
	 * arguments it receives. This method is like `_.bind` except it does **not**
	 * alter the `this` binding.
	 *
	 * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	 * builds, may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of partially
	 * applied functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.2.0
	 * @category Function
	 * @param {Function} func The function to partially apply arguments to.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new partially applied function.
	 * @example
	 *
	 * function greet(greeting, name) {
	 *   return greeting + ' ' + name;
	 * }
	 *
	 * var sayHelloTo = _.partial(greet, 'hello');
	 * sayHelloTo('fred');
	 * // => 'hello fred'
	 *
	 * // Partially applied with placeholders.
	 * var greetFred = _.partial(greet, _, 'fred');
	 * greetFred('hi');
	 * // => 'hi fred'
	 */
	var partial = baseRest(function(func, partials) {
	  var holders = replaceHolders(partials, getHolder(partial));
	  return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
	});
	
	// Assign default placeholders.
	partial.placeholder = {};
	
	module.exports = partial;


/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(36),
	    createWrap = __webpack_require__(101),
	    getHolder = __webpack_require__(50),
	    replaceHolders = __webpack_require__(51);
	
	/** Used to compose bitmasks for function metadata. */
	var WRAP_PARTIAL_RIGHT_FLAG = 64;
	
	/**
	 * This method is like `_.partial` except that partially applied arguments
	 * are appended to the arguments it receives.
	 *
	 * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	 * builds, may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of partially
	 * applied functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.0.0
	 * @category Function
	 * @param {Function} func The function to partially apply arguments to.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new partially applied function.
	 * @example
	 *
	 * function greet(greeting, name) {
	 *   return greeting + ' ' + name;
	 * }
	 *
	 * var greetFred = _.partialRight(greet, 'fred');
	 * greetFred('hi');
	 * // => 'hi fred'
	 *
	 * // Partially applied with placeholders.
	 * var sayHelloTo = _.partialRight(greet, 'hello', _);
	 * sayHelloTo('fred');
	 * // => 'hello fred'
	 */
	var partialRight = baseRest(function(func, partials) {
	  var holders = replaceHolders(partials, getHolder(partialRight));
	  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	});
	
	// Assign default placeholders.
	partialRight.placeholder = {};
	
	module.exports = partialRight;


/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(34),
	    baseIteratee = __webpack_require__(35),
	    basePickBy = __webpack_require__(149),
	    getAllKeysIn = __webpack_require__(156);
	
	/**
	 * Creates an object composed of the `object` properties `predicate` returns
	 * truthy for. The predicate is invoked with two arguments: (value, key).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {Function} [predicate=_.identity] The function invoked per property.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pickBy(object, _.isNumber);
	 * // => { 'a': 1, 'c': 3 }
	 */
	function pickBy(object, predicate) {
	  if (object == null) {
	    return {};
	  }
	  var props = arrayMap(getAllKeysIn(object), function(prop) {
	    return [prop];
	  });
	  predicate = baseIteratee(predicate);
	  return basePickBy(object, props, function(value, path) {
	    return predicate(value, path[0]);
	  });
	}
	
	module.exports = pickBy;


/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

	var createRange = __webpack_require__(296);
	
	/**
	 * Creates an array of numbers (positive and/or negative) progressing from
	 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	 * `start` is specified without an `end` or `step`. If `end` is not specified,
	 * it's set to `start` with `start` then set to `0`.
	 *
	 * **Note:** JavaScript follows the IEEE-754 standard for resolving
	 * floating-point values which can produce unexpected results.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {number} [start=0] The start of the range.
	 * @param {number} end The end of the range.
	 * @param {number} [step=1] The value to increment or decrement by.
	 * @returns {Array} Returns the range of numbers.
	 * @see _.inRange, _.rangeRight
	 * @example
	 *
	 * _.range(4);
	 * // => [0, 1, 2, 3]
	 *
	 * _.range(-4);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 5);
	 * // => [1, 2, 3, 4]
	 *
	 * _.range(0, 20, 5);
	 * // => [0, 5, 10, 15]
	 *
	 * _.range(0, -4, -1);
	 * // => [0, -1, -2, -3]
	 *
	 * _.range(1, 4, 0);
	 * // => [1, 1, 1]
	 *
	 * _.range(0);
	 * // => []
	 */
	var range = createRange();
	
	module.exports = range;


/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

	var baseClamp = __webpack_require__(145),
	    baseToString = __webpack_require__(150),
	    toInteger = __webpack_require__(44),
	    toString = __webpack_require__(61);
	
	/**
	 * Checks if `string` starts with the given target string.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to inspect.
	 * @param {string} [target] The string to search for.
	 * @param {number} [position=0] The position to search from.
	 * @returns {boolean} Returns `true` if `string` starts with `target`,
	 *  else `false`.
	 * @example
	 *
	 * _.startsWith('abc', 'a');
	 * // => true
	 *
	 * _.startsWith('abc', 'b');
	 * // => false
	 *
	 * _.startsWith('abc', 'b', 1);
	 * // => true
	 */
	function startsWith(string, target, position) {
	  string = toString(string);
	  position = position == null
	    ? 0
	    : baseClamp(toInteger(position), 0, string.length);
	
	  target = baseToString(target);
	  return string.slice(position, position + target.length) == target;
	}
	
	module.exports = startsWith;


/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(35),
	    baseSum = __webpack_require__(275);
	
	/**
	 * This method is like `_.sum` except that it accepts `iteratee` which is
	 * invoked for each element in `array` to generate the value to be summed.
	 * The iteratee is invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Math
	 * @param {Array} array The array to iterate over.
	 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
	 * @returns {number} Returns the sum.
	 * @example
	 *
	 * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	 *
	 * _.sumBy(objects, function(o) { return o.n; });
	 * // => 20
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.sumBy(objects, 'n');
	 * // => 20
	 */
	function sumBy(array, iteratee) {
	  return (array && array.length)
	    ? baseSum(array, baseIteratee(iteratee, 2))
	    : 0;
	}
	
	module.exports = sumBy;


/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

	var baseClamp = __webpack_require__(145),
	    toInteger = __webpack_require__(44);
	
	/** Used as references for the maximum length and index of an array. */
	var MAX_ARRAY_LENGTH = 4294967295;
	
	/**
	 * Converts `value` to an integer suitable for use as the length of an
	 * array-like object.
	 *
	 * **Note:** This method is based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toLength(3.2);
	 * // => 3
	 *
	 * _.toLength(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toLength(Infinity);
	 * // => 4294967295
	 *
	 * _.toLength('3.2');
	 * // => 3
	 */
	function toLength(value) {
	  return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
	}
	
	module.exports = toLength;


/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(32),
	    isSymbol = __webpack_require__(54);
	
	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;
	
	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;
	
	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
	
	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;
	
	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;
	
	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;
	
	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}
	
	module.exports = toNumber;


/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(152),
	    keysIn = __webpack_require__(108);
	
	/**
	 * Converts `value` to a plain object flattening inherited enumerable string
	 * keyed properties of `value` to own properties of the plain object.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {Object} Returns the converted plain object.
	 * @example
	 *
	 * function Foo() {
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.assign({ 'a': 1 }, new Foo);
	 * // => { 'a': 1, 'b': 2 }
	 *
	 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	 * // => { 'a': 1, 'b': 2, 'c': 3 }
	 */
	function toPlainObject(value) {
	  return copyObject(value, keysIn(value));
	}
	
	module.exports = toPlainObject;


/***/ }),
/* 342 */
/***/ (function(module, exports) {

	// empty (null-loader)

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var slice = Array.prototype.slice;
	var isArgs = __webpack_require__(344);
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};
	
	var keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];
	
		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}
	
		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}
	
		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}
	
		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);
	
			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
	
	keysShim.shim = function shimObjectKeys() {
		if (Object.keys) {
			var keysWorksWithArguments = (function () {
				// Safari 5.0 bug
				return (Object.keys(arguments) || '').length === 2;
			}(1, 2));
			if (!keysWorksWithArguments) {
				var originalKeys = Object.keys;
				Object.keys = function keys(object) { // eslint-disable-line func-name-matching
					if (isArgs(object)) {
						return originalKeys(slice.call(object));
					} else {
						return originalKeys(object);
					}
				};
			}
		} else {
			Object.keys = keysShim;
		}
		return Object.keys || keysShim;
	};
	
	module.exports = keysShim;


/***/ }),
/* 344 */
/***/ (function(module, exports) {

	'use strict';
	
	var toStr = Object.prototype.toString;
	
	module.exports = function isArguments(value) {
		var str = toStr.call(value);
		var isArgs = str === '[object Arguments]';
		if (!isArgs) {
			isArgs = str !== '[object Array]' &&
				value !== null &&
				typeof value === 'object' &&
				typeof value.length === 'number' &&
				value.length >= 0 &&
				toStr.call(value.callee) === '[object Function]';
		}
		return isArgs;
	};


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var stringify = __webpack_require__(347);
	var parse = __webpack_require__(346);
	var formats = __webpack_require__(174);
	
	module.exports = {
	    formats: formats,
	    parse: parse,
	    stringify: stringify
	};


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(111);
	
	var has = Object.prototype.hasOwnProperty;
	
	var defaults = {
	    allowDots: false,
	    allowPrototypes: false,
	    arrayLimit: 20,
	    decoder: utils.decode,
	    delimiter: '&',
	    depth: 5,
	    parameterLimit: 1000,
	    plainObjects: false,
	    strictNullHandling: false
	};
	
	var parseValues = function parseQueryStringValues(str, options) {
	    var obj = {};
	    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
	    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
	    var parts = cleanStr.split(options.delimiter, limit);
	
	    for (var i = 0; i < parts.length; ++i) {
	        var part = parts[i];
	
	        var bracketEqualsPos = part.indexOf(']=');
	        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;
	
	        var key, val;
	        if (pos === -1) {
	            key = options.decoder(part, defaults.decoder);
	            val = options.strictNullHandling ? null : '';
	        } else {
	            key = options.decoder(part.slice(0, pos), defaults.decoder);
	            val = options.decoder(part.slice(pos + 1), defaults.decoder);
	        }
	        if (has.call(obj, key)) {
	            obj[key] = [].concat(obj[key]).concat(val);
	        } else {
	            obj[key] = val;
	        }
	    }
	
	    return obj;
	};
	
	var parseObject = function (chain, val, options) {
	    var leaf = val;
	
	    for (var i = chain.length - 1; i >= 0; --i) {
	        var obj;
	        var root = chain[i];
	
	        if (root === '[]') {
	            obj = [];
	            obj = obj.concat(leaf);
	        } else {
	            obj = options.plainObjects ? Object.create(null) : {};
	            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
	            var index = parseInt(cleanRoot, 10);
	            if (
	                !isNaN(index)
	                && root !== cleanRoot
	                && String(index) === cleanRoot
	                && index >= 0
	                && (options.parseArrays && index <= options.arrayLimit)
	            ) {
	                obj = [];
	                obj[index] = leaf;
	            } else {
	                obj[cleanRoot] = leaf;
	            }
	        }
	
	        leaf = obj;
	    }
	
	    return leaf;
	};
	
	var parseKeys = function parseQueryStringKeys(givenKey, val, options) {
	    if (!givenKey) {
	        return;
	    }
	
	    // Transform dot notation to bracket notation
	    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey;
	
	    // The regex chunks
	
	    var brackets = /(\[[^[\]]*])/;
	    var child = /(\[[^[\]]*])/g;
	
	    // Get the parent
	
	    var segment = brackets.exec(key);
	    var parent = segment ? key.slice(0, segment.index) : key;
	
	    // Stash the parent if it exists
	
	    var keys = [];
	    if (parent) {
	        // If we aren't using plain objects, optionally prefix keys
	        // that would overwrite object prototype properties
	        if (!options.plainObjects && has.call(Object.prototype, parent)) {
	            if (!options.allowPrototypes) {
	                return;
	            }
	        }
	
	        keys.push(parent);
	    }
	
	    // Loop through children appending to the array until we hit depth
	
	    var i = 0;
	    while ((segment = child.exec(key)) !== null && i < options.depth) {
	        i += 1;
	        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
	            if (!options.allowPrototypes) {
	                return;
	            }
	        }
	        keys.push(segment[1]);
	    }
	
	    // If there's a remainder, just add whatever is left
	
	    if (segment) {
	        keys.push('[' + key.slice(segment.index) + ']');
	    }
	
	    return parseObject(keys, val, options);
	};
	
	module.exports = function (str, opts) {
	    var options = opts ? utils.assign({}, opts) : {};
	
	    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {
	        throw new TypeError('Decoder has to be a function.');
	    }
	
	    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;
	    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;
	    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;
	    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;
	    options.parseArrays = options.parseArrays !== false;
	    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;
	    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;
	    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;
	    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;
	    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;
	    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;
	
	    if (str === '' || str === null || typeof str === 'undefined') {
	        return options.plainObjects ? Object.create(null) : {};
	    }
	
	    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
	    var obj = options.plainObjects ? Object.create(null) : {};
	
	    // Iterate over the keys and setup the new object
	
	    var keys = Object.keys(tempObj);
	    for (var i = 0; i < keys.length; ++i) {
	        var key = keys[i];
	        var newObj = parseKeys(key, tempObj[key], options);
	        obj = utils.merge(obj, newObj, options);
	    }
	
	    return utils.compact(obj);
	};


/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var utils = __webpack_require__(111);
	var formats = __webpack_require__(174);
	
	var arrayPrefixGenerators = {
	    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching
	        return prefix + '[]';
	    },
	    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching
	        return prefix + '[' + key + ']';
	    },
	    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching
	        return prefix;
	    }
	};
	
	var toISO = Date.prototype.toISOString;
	
	var defaults = {
	    delimiter: '&',
	    encode: true,
	    encoder: utils.encode,
	    encodeValuesOnly: false,
	    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching
	        return toISO.call(date);
	    },
	    skipNulls: false,
	    strictNullHandling: false
	};
	
	var stringify = function stringify( // eslint-disable-line func-name-matching
	    object,
	    prefix,
	    generateArrayPrefix,
	    strictNullHandling,
	    skipNulls,
	    encoder,
	    filter,
	    sort,
	    allowDots,
	    serializeDate,
	    formatter,
	    encodeValuesOnly
	) {
	    var obj = object;
	    if (typeof filter === 'function') {
	        obj = filter(prefix, obj);
	    } else if (obj instanceof Date) {
	        obj = serializeDate(obj);
	    } else if (obj === null) {
	        if (strictNullHandling) {
	            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;
	        }
	
	        obj = '';
	    }
	
	    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {
	        if (encoder) {
	            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);
	            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];
	        }
	        return [formatter(prefix) + '=' + formatter(String(obj))];
	    }
	
	    var values = [];
	
	    if (typeof obj === 'undefined') {
	        return values;
	    }
	
	    var objKeys;
	    if (Array.isArray(filter)) {
	        objKeys = filter;
	    } else {
	        var keys = Object.keys(obj);
	        objKeys = sort ? keys.sort(sort) : keys;
	    }
	
	    for (var i = 0; i < objKeys.length; ++i) {
	        var key = objKeys[i];
	
	        if (skipNulls && obj[key] === null) {
	            continue;
	        }
	
	        if (Array.isArray(obj)) {
	            values = values.concat(stringify(
	                obj[key],
	                generateArrayPrefix(prefix, key),
	                generateArrayPrefix,
	                strictNullHandling,
	                skipNulls,
	                encoder,
	                filter,
	                sort,
	                allowDots,
	                serializeDate,
	                formatter,
	                encodeValuesOnly
	            ));
	        } else {
	            values = values.concat(stringify(
	                obj[key],
	                prefix + (allowDots ? '.' + key : '[' + key + ']'),
	                generateArrayPrefix,
	                strictNullHandling,
	                skipNulls,
	                encoder,
	                filter,
	                sort,
	                allowDots,
	                serializeDate,
	                formatter,
	                encodeValuesOnly
	            ));
	        }
	    }
	
	    return values;
	};
	
	module.exports = function (object, opts) {
	    var obj = object;
	    var options = opts ? utils.assign({}, opts) : {};
	
	    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {
	        throw new TypeError('Encoder has to be a function.');
	    }
	
	    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;
	    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;
	    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;
	    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;
	    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;
	    var sort = typeof options.sort === 'function' ? options.sort : null;
	    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;
	    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;
	    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;
	    if (typeof options.format === 'undefined') {
	        options.format = formats['default'];
	    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {
	        throw new TypeError('Unknown format option provided.');
	    }
	    var formatter = formats.formatters[options.format];
	    var objKeys;
	    var filter;
	
	    if (typeof options.filter === 'function') {
	        filter = options.filter;
	        obj = filter('', obj);
	    } else if (Array.isArray(options.filter)) {
	        filter = options.filter;
	        objKeys = filter;
	    }
	
	    var keys = [];
	
	    if (typeof obj !== 'object' || obj === null) {
	        return '';
	    }
	
	    var arrayFormat;
	    if (options.arrayFormat in arrayPrefixGenerators) {
	        arrayFormat = options.arrayFormat;
	    } else if ('indices' in options) {
	        arrayFormat = options.indices ? 'indices' : 'repeat';
	    } else {
	        arrayFormat = 'indices';
	    }
	
	    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
	
	    if (!objKeys) {
	        objKeys = Object.keys(obj);
	    }
	
	    if (sort) {
	        objKeys.sort(sort);
	    }
	
	    for (var i = 0; i < objKeys.length; ++i) {
	        var key = objKeys[i];
	
	        if (skipNulls && obj[key] === null) {
	            continue;
	        }
	
	        keys = keys.concat(stringify(
	            obj[key],
	            key,
	            generateArrayPrefix,
	            strictNullHandling,
	            skipNulls,
	            encode ? encoder : null,
	            filter,
	            sort,
	            allowDots,
	            serializeDate,
	            formatter,
	            encodeValuesOnly
	        ));
	    }
	
	    var joined = keys.join(delimiter);
	    var prefix = options.addQueryPrefix === true ? '?' : '';
	
	    return joined.length > 0 ? prefix + joined : '';
	};


/***/ }),
/* 348 */
/***/ (function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	'use strict';
	
	// If obj.hasOwnProperty has been overridden, then calling
	// obj.hasOwnProperty(prop) will break.
	// See: https://github.com/joyent/node/issues/1707
	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	
	module.exports = function(qs, sep, eq, options) {
	  sep = sep || '&';
	  eq = eq || '=';
	  var obj = {};
	
	  if (typeof qs !== 'string' || qs.length === 0) {
	    return obj;
	  }
	
	  var regexp = /\+/g;
	  qs = qs.split(sep);
	
	  var maxKeys = 1000;
	  if (options && typeof options.maxKeys === 'number') {
	    maxKeys = options.maxKeys;
	  }
	
	  var len = qs.length;
	  // maxKeys <= 0 means that we should not limit keys count
	  if (maxKeys > 0 && len > maxKeys) {
	    len = maxKeys;
	  }
	
	  for (var i = 0; i < len; ++i) {
	    var x = qs[i].replace(regexp, '%20'),
	        idx = x.indexOf(eq),
	        kstr, vstr, k, v;
	
	    if (idx >= 0) {
	      kstr = x.substr(0, idx);
	      vstr = x.substr(idx + 1);
	    } else {
	      kstr = x;
	      vstr = '';
	    }
	
	    k = decodeURIComponent(kstr);
	    v = decodeURIComponent(vstr);
	
	    if (!hasOwnProperty(obj, k)) {
	      obj[k] = v;
	    } else if (isArray(obj[k])) {
	      obj[k].push(v);
	    } else {
	      obj[k] = [obj[k], v];
	    }
	  }
	
	  return obj;
	};
	
	var isArray = Array.isArray || function (xs) {
	  return Object.prototype.toString.call(xs) === '[object Array]';
	};


/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.decode = exports.parse = __webpack_require__(348);
	exports.encode = exports.stringify = __webpack_require__(175);


/***/ }),
/* 350 */,
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	/**
	 * @description
	 * `<Index>` is the component that allows you to apply widgets to a dedicated index. It's
	 * useful if you want to build an interface that targets multiple indices.
	 * @kind widget
	 * @name <Index>
	 * @propType {string} indexName - index in which to search.
	 * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Index, SearchBox, Hits, Configure } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Configure hitsPerPage={5} />
	 *     <SearchBox />
	 *     <Index indexName="instant_search">
	 *       <Hits />
	 *     </Index>
	 *     <Index indexName="bestbuy">
	 *       <Hits />
	 *     </Index>
	 *   </InstantSearch>
	 * );
	 */
	var Index =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Index, _Component);
	
	  function Index() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Index);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Index)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    /*
	     we want <Index> to be seen as a regular widget.
	     It means that with only <Index> present a new query will be sent to Algolia.
	     That way you don't need a virtual hits widget to use the connectAutoComplete.
	    */
	
	    _this.unregisterWidget = _this.context.ais.widgetsManager.registerWidget((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));
	    return _this;
	  }
	
	  (0, _createClass2.default)(Index, [{
	    key: "componentWillMount",
	    value: function componentWillMount() {
	      this.context.ais.onSearchParameters(this.getSearchParameters.bind(this), this.getChildContext(), this.props);
	    }
	  }, {
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.props.indexName !== nextProps.indexName) {
	        this.context.ais.widgetsManager.update();
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.unregisterWidget();
	    }
	  }, {
	    key: "getChildContext",
	    value: function getChildContext() {
	      return {
	        multiIndexContext: {
	          targetedIndex: this.props.indexId
	        }
	      };
	    }
	  }, {
	    key: "getSearchParameters",
	    value: function getSearchParameters(searchParameters, props) {
	      return searchParameters.setIndex(this.props ? this.props.indexName : props.indexName);
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var childrenCount = _react.Children.count(this.props.children);
	
	      var _this$props$root = this.props.root,
	          Root = _this$props$root.Root,
	          props = _this$props$root.props;
	      if (childrenCount === 0) return null;else return _react.default.createElement(Root, props, this.props.children);
	    }
	  }]);
	  return Index;
	}(_react.Component);
	
	Index.propTypes = {
	  // @TODO: These props are currently constant.
	  indexName: _propTypes.default.string.isRequired,
	  indexId: _propTypes.default.string.isRequired,
	  children: _propTypes.default.node,
	  root: _propTypes.default.shape({
	    Root: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	    props: _propTypes.default.object
	  }).isRequired
	};
	Index.childContextTypes = {
	  multiIndexContext: _propTypes.default.object.isRequired
	};
	Index.contextTypes = {
	  // @TODO: more precise widgets manager propType
	  ais: _propTypes.default.object.isRequired
	};
	var _default = Index;
	exports.default = _default;

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(20));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createInstantSearchManager = _interopRequireDefault(__webpack_require__(376));
	
	function validateNextProps(props, nextProps) {
	  if (!props.searchState && nextProps.searchState) {
	    throw new Error("You can't switch <InstantSearch> from being uncontrolled to controlled");
	  } else if (props.searchState && !nextProps.searchState) {
	    throw new Error("You can't switch <InstantSearch> from being controlled to uncontrolled");
	  }
	}
	/**
	 * @description
	 * `<InstantSearch>` is the root component of all React InstantSearch implementations.
	 * It provides all the connected components (aka widgets) a means to interact
	 * with the searchState.
	 * @kind widget
	 * @name <InstantSearch>
	 * @requirements You will need to have an Algolia account to be able to use this widget.
	 * [Create one now](https://www.algolia.com/users/sign_up).
	 * @propType {string} appId - Your Algolia application id.
	 * @propType {string} apiKey - Your Algolia search-only API key.
	 * @propType {string} indexName - Main index in which to search.
	 * @propType {boolean} [refresh=false] - Flag to activate when the cache needs to be cleared so that the front-end is updated when a change occurs in the index.
	 * @propType {object} [algoliaClient] - Provide a custom Algolia client instead of the internal one (deprecated in favor of `searchClient`).
	 * @propType {object} [searchClient] - Provide a custom search client.
	 * @propType {func} [onSearchStateChange] - Function to be called everytime a new search is done. Useful for [URL Routing](guide/Routing.html).
	 * @propType {object} [searchState] - Object to inject some search state. Switches the InstantSearch component in controlled mode. Useful for [URL Routing](guide/Routing.html).
	 * @propType {func} [createURL] - Function to call when creating links, useful for [URL Routing](guide/Routing.html).
	 * @propType {SearchResults|SearchResults[]} [resultsState] - Use this to inject the results that will be used at first rendering. Those results are found by using the `findResultsState` function. Useful for [Server Side Rendering](guide/Server-side_rendering.html).
	 * @propType {number} [stalledSearchDelay=200] - The amount of time before considering that the search takes too much time. The time is expressed in milliseconds.
	 * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <SearchBox />
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	
	
	var InstantSearch =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(InstantSearch, _Component);
	
	  function InstantSearch(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, InstantSearch);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InstantSearch).call(this, props));
	    _this.isControlled = Boolean(props.searchState);
	    var initialState = _this.isControlled ? props.searchState : {};
	    _this.isUnmounting = false;
	    _this.aisManager = (0, _createInstantSearchManager.default)({
	      indexName: props.indexName,
	      searchClient: props.searchClient,
	      initialState: initialState,
	      resultsState: props.resultsState,
	      stalledSearchDelay: props.stalledSearchDelay
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(InstantSearch, [{
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      validateNextProps(this.props, nextProps);
	
	      if (this.props.indexName !== nextProps.indexName) {
	        this.aisManager.updateIndex(nextProps.indexName);
	      }
	
	      if (this.props.refresh !== nextProps.refresh) {
	        if (nextProps.refresh) {
	          this.aisManager.clearCache();
	        }
	      }
	
	      if (this.props.searchClient !== nextProps.searchClient) {
	        this.aisManager.updateClient(nextProps.searchClient);
	      }
	
	      if (this.isControlled) {
	        this.aisManager.onExternalStateUpdate(nextProps.searchState);
	      }
	    }
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      this.isUnmounting = true;
	      this.aisManager.skipSearch();
	    }
	  }, {
	    key: "getChildContext",
	    value: function getChildContext() {
	      // If not already cached, cache the bound methods so that we can forward them as part
	      // of the context.
	      if (!this._aisContextCache) {
	        this._aisContextCache = {
	          ais: {
	            onInternalStateUpdate: this.onWidgetsInternalStateUpdate.bind(this),
	            createHrefForState: this.createHrefForState.bind(this),
	            onSearchForFacetValues: this.onSearchForFacetValues.bind(this),
	            onSearchStateChange: this.onSearchStateChange.bind(this),
	            onSearchParameters: this.onSearchParameters.bind(this)
	          }
	        };
	      }
	
	      return {
	        ais: (0, _objectSpread2.default)({}, this._aisContextCache.ais, {
	          store: this.aisManager.store,
	          widgetsManager: this.aisManager.widgetsManager,
	          mainTargetedIndex: this.props.indexName
	        })
	      };
	    }
	  }, {
	    key: "createHrefForState",
	    value: function createHrefForState(searchState) {
	      searchState = this.aisManager.transitionState(searchState);
	      return this.isControlled && this.props.createURL ? this.props.createURL(searchState, this.getKnownKeys()) : '#';
	    }
	  }, {
	    key: "onWidgetsInternalStateUpdate",
	    value: function onWidgetsInternalStateUpdate(searchState) {
	      searchState = this.aisManager.transitionState(searchState);
	      this.onSearchStateChange(searchState);
	
	      if (!this.isControlled) {
	        this.aisManager.onExternalStateUpdate(searchState);
	      }
	    }
	  }, {
	    key: "onSearchStateChange",
	    value: function onSearchStateChange(searchState) {
	      if (this.props.onSearchStateChange && !this.isUnmounting) {
	        this.props.onSearchStateChange(searchState);
	      }
	    }
	  }, {
	    key: "onSearchParameters",
	    value: function onSearchParameters(getSearchParameters, context, props) {
	      if (this.props.onSearchParameters) {
	        var searchState = this.props.searchState ? this.props.searchState : {};
	        this.props.onSearchParameters(getSearchParameters, context, props, searchState);
	      }
	    }
	  }, {
	    key: "onSearchForFacetValues",
	    value: function onSearchForFacetValues(searchState) {
	      this.aisManager.onSearchForFacetValues(searchState);
	    }
	  }, {
	    key: "getKnownKeys",
	    value: function getKnownKeys() {
	      return this.aisManager.getWidgetsIds();
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var childrenCount = _react.Children.count(this.props.children);
	
	      var _this$props$root = this.props.root,
	          Root = _this$props$root.Root,
	          props = _this$props$root.props;
	      if (childrenCount === 0) return null;else return _react.default.createElement(Root, props, this.props.children);
	    }
	  }]);
	  return InstantSearch;
	}(_react.Component);
	
	InstantSearch.defaultProps = {
	  stalledSearchDelay: 200
	};
	InstantSearch.propTypes = {
	  // @TODO: These props are currently constant.
	  indexName: _propTypes.default.string.isRequired,
	  searchClient: _propTypes.default.object.isRequired,
	  createURL: _propTypes.default.func,
	  refresh: _propTypes.default.bool.isRequired,
	  searchState: _propTypes.default.object,
	  onSearchStateChange: _propTypes.default.func,
	  onSearchParameters: _propTypes.default.func,
	  resultsState: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
	  children: _propTypes.default.node,
	  root: _propTypes.default.shape({
	    Root: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),
	    props: _propTypes.default.object
	  }).isRequired,
	  stalledSearchDelay: _propTypes.default.number
	};
	InstantSearch.childContextTypes = {
	  // @TODO: more precise widgets manager propType
	  ais: _propTypes.default.object.isRequired
	};
	var _default = InstantSearch;
	exports.default = _default;

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(126));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	var getId = function getId() {
	  return 'query';
	};
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId();
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, '', function (currentRefinement) {
	    if (currentRefinement) {
	      return currentRefinement;
	    }
	
	    return '';
	  });
	}
	
	function getHits(searchResults) {
	  if (searchResults.results) {
	    if (searchResults.results.hits && Array.isArray(searchResults.results.hits)) {
	      return searchResults.results.hits;
	    } else {
	      return Object.keys(searchResults.results).reduce(function (hits, index) {
	        return [].concat((0, _toConsumableArray2.default)(hits), [{
	          index: index,
	          hits: searchResults.results[index].hits
	        }]);
	      }, []);
	    }
	  } else {
	    return [];
	  }
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId();
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement);
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, getId());
	}
	/**
	 * connectAutoComplete connector provides the logic to create connected
	 * components that will render the results retrieved from
	 * Algolia.
	 *
	 * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),
	 * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage
	 * prop to a [Configure](guide/Search_parameters.html) widget.
	 * @name connectAutoComplete
	 * @kind connector
	 * @propType {string} [defaultRefinement] - Provide a default value for the query
	 * @providedPropType {array.<object>} hits - the records that matched the search state
	 * @providedPropType {function} refine - a function to change the query
	 * @providedPropType {string} currentRefinement - the query to search for
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaAutoComplete',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    return {
	      hits: getHits(searchResults),
	      currentRefinement: getCurrentRefinement(props, searchState, this.context)
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	
	  /* connectAutoComplete needs to be considered as a widget to trigger a search if no others widgets are used.
	   * To be considered as a widget you need either getSearchParameters, getMetadata or getTransitionState
	   * See createConnector.js
	   * */
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setQuery(getCurrentRefinement(props, searchState, this.context));
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.getId = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	var getId = function getId(props) {
	  return props.attributes[0];
	};
	
	exports.getId = getId;
	var namespace = 'hierarchicalMenu';
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props);
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement || '');
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function transformValue(values) {
	  return values.reduce(function (acc, item) {
	    if (item.isRefined) {
	      acc.push({
	        label: item.name,
	        // If dealing with a nested "items", "value" is equal to the previous value concatenated with the current label
	        // If dealing with the first level, "value" is equal to the current label
	        value: item.path
	      }); // Create a variable in order to keep the same acc for the recursion, otherwise "reduce" returns a new one
	
	      if (item.data) {
	        acc = acc.concat(transformValue(item.data, acc));
	      }
	    }
	
	    return acc;
	  }, []);
	}
	/**
	 * The breadcrumb component is s a type of secondary navigation scheme that
	 * reveals the user’s location in a website or web application.
	 *
	 * @name connectBreadcrumb
	 * @requirements To use this widget, your attributes must be formatted in a specific way.
	 * If you want for example to have a Breadcrumb of categories, objects in your index
	 * should be formatted this way:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 *   "categories.lvl2": "products > fruits > citrus"
	 * }
	 * ```
	 *
	 * It's also possible to provide more than one path for each level:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": ["products", "goods"],
	 *   "categories.lvl1": ["products > fruits", "goods > to eat"]
	 * }
	 * ```
	 *
	 * All attributes passed to the `attributes` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * @kind connector
	 * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the Breadcrumb can display.
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaBreadcrumb',
	  propTypes: {
	    attributes: function attributes(props, propName, componentName) {
	      var isNotString = function isNotString(val) {
	        return typeof val !== 'string';
	      };
	
	      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {
	        return new Error("Invalid prop ".concat(propName, " supplied to ").concat(componentName, ". Expected an Array of Strings"));
	      }
	
	      return undefined;
	    },
	    transformItems: _propTypes.default.func
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var id = getId(props);
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));
	
	    if (!isFacetPresent) {
	      return {
	        items: [],
	        canRefine: false
	      };
	    }
	
	    var values = results.getFacetValues(id);
	    var items = values.data ? transformValue(values.data) : [];
	    var transformedItems = props.transformItems ? props.transformItems(items) : items;
	    return {
	      canRefine: transformedItems.length > 0,
	      items: transformedItems
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(20));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	/**
	 * connectCurrentRefinements connector provides the logic to build a widget that will
	 * give the user the ability to remove all or some of the filters that were
	 * set.
	 * @name connectCurrentRefinements
	 * @kind connector
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @propType {function} [clearsQuery=false] - Pass true to also clear the search query
	 * @providedPropType {function} refine - a function to remove a single filter
	 * @providedPropType {array.<{label: string, attribute: string, currentRefinement: string || object, items: array, value: function}>} items - all the filters, the `value` is to pass to the `refine` function for removing all currentrefinements, `label` is for the display. When existing several refinements for the same atribute name, then you get a nested `items` object that contains a `label` and a `value` function to use to remove a single filter. `attribute` and `currentRefinement` are metadata containing row values.
	 * @providedPropType {string} query - the search query
	 */
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaCurrentRefinements',
	  propTypes: {
	    transformItems: _propTypes.default.func
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults, metadata) {
	    var items = metadata.reduce(function (res, meta) {
	      if (typeof meta.items !== 'undefined') {
	        if (!props.clearsQuery && meta.id === 'query') {
	          return res;
	        } else {
	          if (props.clearsQuery && meta.id === 'query' && meta.items[0].currentRefinement === '') {
	            return res;
	          }
	
	          return res.concat(meta.items.map(function (item) {
	            return (0, _objectSpread2.default)({}, item, {
	              id: meta.id,
	              index: meta.index
	            });
	          }));
	        }
	      }
	
	      return res;
	    }, []);
	    var transformedItems = props.transformItems ? props.transformItems(items) : items;
	    return {
	      items: transformedItems,
	      canRefine: transformedItems.length > 0
	    };
	  },
	  refine: function refine(props, searchState, items) {
	    // `value` corresponds to our internal clear function computed in each connector metadata.
	    var refinementsToClear = items instanceof Array ? items.map(function (item) {
	      return item.value;
	    }) : [items];
	    return refinementsToClear.reduce(function (res, clear) {
	      return clear(res);
	    }, searchState);
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(125));
	
	var _isEmpty2 = _interopRequireDefault(__webpack_require__(24));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	/**
	 * The GeoSearch connector provides the logic to build a widget that will display the results on a map.
	 * It also provides a way to search for results based on their position. The connector provides function to manage the search experience (search on map interaction).
	 * @name connectGeoSearch
	 * @kind connector
	 * @requirements Note that the GeoSearch connector uses the [geosearch](https://www.algolia.com/doc/guides/searching/geo-search) capabilities of Algolia.
	 * Your hits **must** have a `_geoloc` attribute in order to be passed to the rendering function. Currently, the feature is not compatible with multiple values in the `_geoloc` attribute
	 * (e.g. a restaurant with multiple locations). In that case you can duplicate your records and use the [distinct](https://www.algolia.com/doc/guides/ranking/distinct) feature of Algolia to only retrieve unique results.
	 * @propType {{ northEast: { lat: number, lng: number }, southWest: { lat: number, lng: number } }} [defaultRefinement] - Default search state of the widget containing the bounds for the map
	 * @providedPropType {function({ northEast: { lat: number, lng: number }, southWest: { lat: number, lng: number } })} refine - a function to toggle the refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {array.<object>} hits - the records that matched the search
	 * @providedPropType {boolean} isRefinedWithMap - true if the current refinement is set with the map bounds
	 * @providedPropType {{ northEast: { lat: number, lng: number }, southWest: { lat: number, lng: number } }} [currentRefinement] - the refinement currently applied
	 * @providedPropType {{ lat: number, lng: number }} [position] - the position of the search
	 */
	// To control the map with an external widget the other widget
	// **must** write the value in the attribute `aroundLatLng`
	var getBoundingBoxId = function getBoundingBoxId() {
	  return 'boundingBox';
	};
	
	var getAroundLatLngId = function getAroundLatLngId() {
	  return 'aroundLatLng';
	};
	
	var getConfigureAroundLatLngId = function getConfigureAroundLatLngId() {
	  return 'configure.aroundLatLng';
	};
	
	var currentRefinementToString = function currentRefinementToString(currentRefinement) {
	  return [currentRefinement.northEast.lat, currentRefinement.northEast.lng, currentRefinement.southWest.lat, currentRefinement.southWest.lng].join();
	};
	
	var stringToCurrentRefinement = function stringToCurrentRefinement(value) {
	  var values = value.split(',');
	  return {
	    northEast: {
	      lat: parseFloat(values[0]),
	      lng: parseFloat(values[1])
	    },
	    southWest: {
	      lat: parseFloat(values[2]),
	      lng: parseFloat(values[3])
	    }
	  };
	};
	
	var latLngRegExp = /^(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)$/;
	
	var stringToPosition = function stringToPosition(value) {
	  var pattern = value.match(latLngRegExp);
	  return {
	    lat: parseFloat(pattern[1]),
	    lng: parseFloat(pattern[2])
	  };
	};
	
	var getCurrentRefinement = function getCurrentRefinement(props, searchState, context) {
	  var refinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, getBoundingBoxId(), {});
	
	  if ((0, _isEmpty2.default)(refinement)) {
	    return;
	  } // eslint-disable-next-line consistent-return
	
	
	  return {
	    northEast: {
	      lat: parseFloat(refinement.northEast.lat),
	      lng: parseFloat(refinement.northEast.lng)
	    },
	    southWest: {
	      lat: parseFloat(refinement.southWest.lat),
	      lng: parseFloat(refinement.southWest.lng)
	    }
	  };
	};
	
	var getCurrentPosition = function getCurrentPosition(props, searchState, context) {
	  var defaultRefinement = props.defaultRefinement,
	      propsWithoutDefaultRefinement = (0, _objectWithoutProperties2.default)(props, ["defaultRefinement"]);
	  var aroundLatLng = (0, _indexUtils.getCurrentRefinementValue)(propsWithoutDefaultRefinement, searchState, context, getAroundLatLngId());
	
	  if (!aroundLatLng) {
	    // Fallback on `configure.aroundLatLng`
	    var configureAroundLatLng = (0, _indexUtils.getCurrentRefinementValue)(propsWithoutDefaultRefinement, searchState, context, getConfigureAroundLatLngId());
	    return configureAroundLatLng && stringToPosition(configureAroundLatLng);
	  }
	
	  return aroundLatLng;
	};
	
	var _refine = function refine(searchState, nextValue, context) {
	  var resetPage = true;
	  var nextRefinement = (0, _defineProperty2.default)({}, getBoundingBoxId(), nextValue);
	  return (0, _indexUtils.refineValue)(searchState, nextRefinement, context, resetPage);
	};
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaGeoSearch',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context); // We read it from both because the SearchParameters & the searchState are not always
	    // in sync. When we set the refinement the searchState is used but when we clear the refinement
	    // the SearchParameters is used. In the first case when we render, the results are not there
	    // so we can't find the value from the results. The most up to date value is the searchState.
	    // But when we clear the refinement the searchState is immediatly cleared even when the items
	    // retrieved are still the one from the previous query with the bounding box. It leads to some
	    // issue with the position of the map. We should rely on 1 source of truth or at least always
	    // be sync.
	
	    var currentRefinementFromSearchState = getCurrentRefinement(props, searchState, this.context);
	    var currentRefinementFromSearchParameters = results && results._state.insideBoundingBox && stringToCurrentRefinement(results._state.insideBoundingBox) || undefined;
	    var currentPositionFromSearchState = getCurrentPosition(props, searchState, this.context);
	    var currentPositionFromSearchParameters = results && results._state.aroundLatLng && stringToPosition(results._state.aroundLatLng) || undefined;
	    var currentRefinement = currentRefinementFromSearchState || currentRefinementFromSearchParameters;
	    var position = currentPositionFromSearchState || currentPositionFromSearchParameters;
	    return {
	      hits: !results ? [] : results.hits.filter(function (_) {
	        return Boolean(_._geoloc);
	      }),
	      isRefinedWithMap: Boolean(currentRefinement),
	      currentRefinement: currentRefinement,
	      position: position
	    };
	  },
	  refine: function refine(props, searchState, nextValue) {
	    return _refine(searchState, nextValue, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	
	    if (!currentRefinement) {
	      return searchParameters;
	    }
	
	    return searchParameters.setQueryParameter('insideBoundingBox', currentRefinementToString(currentRefinement));
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getBoundingBoxId());
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var items = [];
	    var id = getBoundingBoxId();
	    var index = (0, _indexUtils.getIndexId)(this.context);
	    var nextRefinement = {};
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	
	    if (currentRefinement) {
	      items.push({
	        label: "".concat(id, ": ").concat(currentRefinementToString(currentRefinement)),
	        value: function value(nextState) {
	          return _refine(nextState, nextRefinement, _this.context);
	        },
	        currentRefinement: currentRefinement
	      });
	    }
	
	    return {
	      id: id,
	      index: index,
	      items: items
	    };
	  },
	  shouldComponentUpdate: function shouldComponentUpdate() {
	    return true;
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.getId = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(20));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _algoliasearchHelper = _interopRequireDefault(__webpack_require__(127));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	var getId = function getId(props) {
	  return props.attributes[0];
	};
	
	exports.getId = getId;
	var namespace = 'hierarchicalMenu';
	
	function getCurrentRefinement(props, searchState, context) {
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, "".concat(namespace, ".").concat(getId(props)), null, function (currentRefinement) {
	    if (currentRefinement === '') {
	      return null;
	    }
	
	    return currentRefinement;
	  });
	}
	
	function getValue(path, props, searchState, context) {
	  var id = props.id,
	      attributes = props.attributes,
	      separator = props.separator,
	      rootPath = props.rootPath,
	      showParentLevel = props.showParentLevel;
	  var currentRefinement = getCurrentRefinement(props, searchState, context);
	  var nextRefinement;
	
	  if (currentRefinement === null) {
	    nextRefinement = path;
	  } else {
	    var tmpSearchParameters = new _algoliasearchHelper.default.SearchParameters({
	      hierarchicalFacets: [{
	        name: id,
	        attributes: attributes,
	        separator: separator,
	        rootPath: rootPath,
	        showParentLevel: showParentLevel
	      }]
	    });
	    nextRefinement = tmpSearchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement).toggleHierarchicalFacetRefinement(id, path).getHierarchicalRefinement(id)[0];
	  }
	
	  return nextRefinement;
	}
	
	function transformValue(value, props, searchState, context) {
	  return value.map(function (v) {
	    return {
	      label: v.name,
	      value: getValue(v.path, props, searchState, context),
	      count: v.count,
	      isRefined: v.isRefined,
	      items: v.data && transformValue(v.data, props, searchState, context)
	    };
	  });
	}
	
	var truncate = function truncate() {
	  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
	  return items.slice(0, limit).map(function () {
	    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    return Array.isArray(item.items) ? (0, _objectSpread2.default)({}, item, {
	      items: truncate(item.items, limit)
	    }) : item;
	  });
	};
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props);
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement || '');
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, "".concat(namespace, ".").concat(getId(props)));
	}
	
	var sortBy = ['name:asc'];
	/**
	 * connectHierarchicalMenu connector provides the logic to build a widget that will
	 * give the user the ability to explore a tree-like structure.
	 * This is commonly used for multi-level categorization of products on e-commerce
	 * websites. From a UX point of view, we suggest not displaying more than two levels deep.
	 * @name connectHierarchicalMenu
	 * @requirements To use this widget, your attributes must be formatted in a specific way.
	 * If you want for example to have a hiearchical menu of categories, objects in your index
	 * should be formatted this way:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 *   "categories.lvl2": "products > fruits > citrus"
	 * }
	 * ```
	 *
	 * It's also possible to provide more than one path for each level:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": ["products", "goods"],
	 *   "categories.lvl1": ["products > fruits", "goods > to eat"]
	 * }
	 * ```
	 *
	 * All attributes passed to the `attributes` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * @kind connector
	 * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.
	 * @propType {string} [defaultRefinement] - the item value selected by default
	 * @propType {boolean} [showMore=false] - Flag to activate the show more button, for toggling the number of items between limit and showMoreLimit.
	 * @propType {number} [limit=10] -  The maximum number of items displayed.
	 * @propType {number} [showMoreLimit=20] -  The maximum number of items displayed when the user triggers the show more. Not considered if `showMore` is false.
	 * @propType {string} [separator='>'] -  Specifies the level separator used in the data.
	 * @propType {string} [rootPath=null] - The path to use if the first level is not the root level.
	 * @propType {boolean} [showParentLevel=true] - Flag to set if the parent level should be displayed.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the HierarchicalMenu can display. items has the same shape as parent items.
	 */
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaHierarchicalMenu',
	  propTypes: {
	    attributes: function attributes(props, propName, componentName) {
	      var isNotString = function isNotString(val) {
	        return typeof val !== 'string';
	      };
	
	      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {
	        return new Error("Invalid prop ".concat(propName, " supplied to ").concat(componentName, ". Expected an Array of Strings"));
	      }
	
	      return undefined;
	    },
	    separator: _propTypes.default.string,
	    rootPath: _propTypes.default.string,
	    showParentLevel: _propTypes.default.bool,
	    defaultRefinement: _propTypes.default.string,
	    showMore: _propTypes.default.bool,
	    limit: _propTypes.default.number,
	    showMoreLimit: _propTypes.default.number,
	    transformItems: _propTypes.default.func
	  },
	  defaultProps: {
	    showMore: false,
	    limit: 10,
	    showMoreLimit: 20,
	    separator: ' > ',
	    rootPath: null,
	    showParentLevel: true
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var showMore = props.showMore,
	        limit = props.limit,
	        showMoreLimit = props.showMoreLimit;
	    var id = getId(props);
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));
	
	    if (!isFacetPresent) {
	      return {
	        items: [],
	        currentRefinement: getCurrentRefinement(props, searchState, this.context),
	        canRefine: false
	      };
	    }
	
	    var itemsLimit = showMore ? showMoreLimit : limit;
	    var value = results.getFacetValues(id, {
	      sortBy: sortBy
	    });
	    var items = value.data ? transformValue(value.data, props, searchState, this.context) : [];
	    var transformedItems = props.transformItems ? props.transformItems(items) : items;
	    return {
	      items: truncate(transformedItems, itemsLimit),
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      canRefine: transformedItems.length > 0
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attributes = props.attributes,
	        separator = props.separator,
	        rootPath = props.rootPath,
	        showParentLevel = props.showParentLevel,
	        showMore = props.showMore,
	        limit = props.limit,
	        showMoreLimit = props.showMoreLimit;
	    var id = getId(props);
	    var itemsLimit = showMore ? showMoreLimit : limit;
	    searchParameters = searchParameters.addHierarchicalFacet({
	      name: id,
	      attributes: attributes,
	      separator: separator,
	      rootPath: rootPath,
	      showParentLevel: showParentLevel
	    }).setQueryParameters({
	      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, itemsLimit)
	    });
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	
	    if (currentRefinement !== null) {
	      searchParameters = searchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement);
	    }
	
	    return searchParameters;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var rootAttribute = props.attributes[0];
	    var id = getId(props);
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    return {
	      id: id,
	      index: (0, _indexUtils.getIndexId)(this.context),
	      items: !currentRefinement ? [] : [{
	        label: "".concat(rootAttribute, ": ").concat(currentRefinement),
	        attribute: rootAttribute,
	        value: function value(nextState) {
	          return _refine(props, nextState, '', _this.context);
	        },
	        currentRefinement: currentRefinement
	      }]
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _highlight = __webpack_require__(112);
	
	var highlight = function highlight(_ref) {
	  var attribute = _ref.attribute,
	      hit = _ref.hit,
	      highlightProperty = _ref.highlightProperty,
	      _ref$preTag = _ref.preTag,
	      preTag = _ref$preTag === void 0 ? _highlight.HIGHLIGHT_TAGS.highlightPreTag : _ref$preTag,
	      _ref$postTag = _ref.postTag,
	      postTag = _ref$postTag === void 0 ? _highlight.HIGHLIGHT_TAGS.highlightPostTag : _ref$postTag;
	  return (0, _highlight.parseAlgoliaHit)({
	    attribute: attribute,
	    highlightProperty: highlightProperty,
	    hit: hit,
	    preTag: preTag,
	    postTag: postTag
	  });
	};
	/**
	 * connectHighlight connector provides the logic to create an highlighter
	 * component that will retrieve, parse and render an highlighted attribute
	 * from an Algolia hit.
	 * @name connectHighlight
	 * @kind connector
	 * @category connector
	 * @providedPropType {function} highlight - function to retrieve and parse an attribute from a hit. It takes a configuration object with 3 attributes: `highlightProperty` which is the property that contains the highlight structure from the records, `attribute` which is the name of the attribute (it can be either a string or an array of strings) to look for and `hit` which is the hit from Algolia. It returns an array of objects `{value: string, isHighlighted: boolean}`. If the element that corresponds to the attribute is an array of strings, it will return a nested array of objects.
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits, connectHighlight } from 'react-instantsearch-dom';
	 *
	 * const CustomHighlight = connectHighlight(
	 *   ({ highlight, attribute, hit, highlightProperty }) => {
	 *     const highlights = highlight({
	 *       highlightProperty: '_highlightResult',
	 *       attribute,
	 *       hit
	 *     });
	 *
	 *     return highlights.map(part => part.isHighlighted ? (
	 *       <mark>{part.value}</mark>
	 *     ) : (
	 *       <span>{part.value}</span>
	 *     ));
	 *   }
	 * );
	 *
	 * const Hit = ({ hit }) => (
	 *   <p>
	 *     <CustomHighlight attribute="name" hit={hit} />
	 *   </p>
	 * );
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <SearchBox defaultRefinement="pho" />
	 *     <Hits hitComponent={Hit} />
	 *   </InstantSearch>
	 * );
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaHighlighter',
	  propTypes: {},
	  getProvidedProps: function getProvidedProps() {
	    return {
	      highlight: highlight
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	/**
	 * connectHits connector provides the logic to create connected
	 * components that will render the results retrieved from
	 * Algolia.
	 *
	 * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),
	 * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage
	 * prop to a [Configure](guide/Search_parameters.html) widget.
	 *
	 * **Warning:** you will need to use the **objectID** property available on every hit as a key
	 * when iterating over them. This will ensure you have the best possible UI experience
	 * especially on slow networks.
	 * @name connectHits
	 * @kind connector
	 * @providedPropType {array.<object>} hits - the records that matched the search state
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Highlight, connectHits } from 'react-instantsearch-dom';
	 *
	 * const CustomHits = connectHits(({ hits }) => (
	 *   <div>
	 *     {hits.map(hit =>
	 *       <p key={hit.objectID}>
	 *         <Highlight attribute="name" hit={hit} />
	 *       </p>
	 *     )}
	 *   </div>
	 * ));
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <CustomHits />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaHits',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var hits = results ? results.hits : [];
	    return {
	      hits: hits
	    };
	  },
	
	  /* Hits needs to be considered as a widget to trigger a search if no others widgets are used.
	   * To be considered as a widget you need either getSearchParameters, getMetadata or getTransitionState
	   * See createConnector.js
	   * */
	  getSearchParameters: function getSearchParameters(searchParameters) {
	    return searchParameters;
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(20));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	function getId() {
	  return 'hitsPerPage';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId();
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, null, function (currentRefinement) {
	    if (typeof currentRefinement === 'string') {
	      return parseInt(currentRefinement, 10);
	    }
	
	    return currentRefinement;
	  });
	}
	/**
	 * connectHitsPerPage connector provides the logic to create connected
	 * components that will allow a user to choose to display more or less results from Algolia.
	 * @name connectHitsPerPage
	 * @kind connector
	 * @propType {number} defaultRefinement - The number of items selected by default
	 * @propType {{value: number, label: string}[]} items - List of hits per page options.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to remove a single filter
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{isRefined: boolean, label?: string, value: number}>} items - the list of items the HitsPerPage can display. If no label provided, the value will be displayed.
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaHitsPerPage',
	  propTypes: {
	    defaultRefinement: _propTypes.default.number.isRequired,
	    items: _propTypes.default.arrayOf(_propTypes.default.shape({
	      label: _propTypes.default.string,
	      value: _propTypes.default.number.isRequired
	    })).isRequired,
	    transformItems: _propTypes.default.func
	  },
	  getProvidedProps: function getProvidedProps(props, searchState) {
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    var items = props.items.map(function (item) {
	      return item.value === currentRefinement ? (0, _objectSpread2.default)({}, item, {
	        isRefined: true
	      }) : (0, _objectSpread2.default)({}, item, {
	        isRefined: false
	      });
	    });
	    return {
	      items: props.transformItems ? props.transformItems(items) : items,
	      currentRefinement: currentRefinement
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    var id = getId();
	    var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement);
	    var resetPage = true;
	    return (0, _indexUtils.refineValue)(searchState, nextValue, this.context, resetPage);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getId());
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setHitsPerPage(getCurrentRefinement(props, searchState, this.context));
	  },
	  getMetadata: function getMetadata() {
	    return {
	      id: getId()
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(126));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	function getId() {
	  return 'page';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId();
	  var page = 1;
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, page, function (currentRefinement) {
	    if (typeof currentRefinement === 'string') {
	      currentRefinement = parseInt(currentRefinement, 10);
	    }
	
	    return currentRefinement;
	  });
	}
	/**
	 * InfiniteHits connector provides the logic to create connected
	 * components that will render an continuous list of results retrieved from
	 * Algolia. This connector provides a function to load more results.
	 * @name connectInfiniteHits
	 * @kind connector
	 * @providedPropType {array.<object>} hits - the records that matched the search state
	 * @providedPropType {boolean} hasMore - indicates if there are more pages to load
	 * @providedPropType {function} refine - call to load more results
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaInfiniteHits',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    this._allResults = this._allResults || [];
	    this._previousPage = this._previousPage || 0;
	
	    if (!results) {
	      return {
	        hits: [],
	        hasMore: false
	      };
	    }
	
	    var hits = results.hits,
	        page = results.page,
	        nbPages = results.nbPages;
	
	    if (page === 0) {
	      this._allResults = hits;
	    } else if (page > this._previousPage) {
	      this._allResults = [].concat((0, _toConsumableArray2.default)(this._allResults), (0, _toConsumableArray2.default)(hits));
	    } else if (page < this._previousPage) {
	      this._allResults = hits;
	    }
	
	    var lastPageIndex = nbPages - 1;
	    var hasMore = page < lastPageIndex;
	    this._previousPage = page;
	    return {
	      hits: this._allResults,
	      hasMore: hasMore
	    };
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setQueryParameters({
	      page: getCurrentRefinement(props, searchState, this.context) - 1
	    });
	  },
	  refine: function refine(props, searchState) {
	    var id = getId();
	    var nextPage = getCurrentRefinement(props, searchState, this.context) + 1;
	    var nextValue = (0, _defineProperty2.default)({}, id, nextPage);
	    var resetPage = false;
	    return (0, _indexUtils.refineValue)(searchState, nextValue, this.context, resetPage);
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _orderBy2 = _interopRequireDefault(__webpack_require__(110));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	var namespace = 'menu';
	
	function getId(props) {
	  return props.attribute;
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, "".concat(namespace, ".").concat(getId(props)), null, function (currentRefinement) {
	    if (currentRefinement === '') {
	      return null;
	    }
	
	    return currentRefinement;
	  });
	}
	
	function getValue(name, props, searchState, context) {
	  var currentRefinement = getCurrentRefinement(props, searchState, context);
	  return name === currentRefinement ? '' : name;
	}
	
	function getLimit(_ref) {
	  var showMore = _ref.showMore,
	      limit = _ref.limit,
	      showMoreLimit = _ref.showMoreLimit;
	  return showMore ? showMoreLimit : limit;
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props);
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement ? nextRefinement : '');
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, "".concat(namespace, ".").concat(getId(props)));
	}
	
	var sortBy = ['count:desc', 'name:asc'];
	/**
	 * connectMenu connector provides the logic to build a widget that will
	 * give the user the ability to choose a single value for a specific facet.
	 * @name connectMenu
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * @kind connector
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items
	 * @propType {number} [limit=10] - the minimum number of diplayed items
	 * @propType {number} [showMoreLimit=20] - the maximun number of displayed items. Only used when showMore is set to `true`
	 * @propType {string} [defaultRefinement] - the value of the item selected by default
	 * @propType {boolean} [searchable=false] - allow search inside values
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the Menu can display.
	 * @providedPropType {function} searchForItems - a function to toggle a search inside items values
	 * @providedPropType {boolean} isFromSearch - a boolean that says if the `items` props contains facet values from the global search or from the search inside items.
	 */
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaMenu',
	  propTypes: {
	    attribute: _propTypes.default.string.isRequired,
	    showMore: _propTypes.default.bool,
	    limit: _propTypes.default.number,
	    showMoreLimit: _propTypes.default.number,
	    defaultRefinement: _propTypes.default.string,
	    transformItems: _propTypes.default.func,
	    searchable: _propTypes.default.bool
	  },
	  defaultProps: {
	    showMore: false,
	    limit: 10,
	    showMoreLimit: 20
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults, meta, searchForFacetValuesResults) {
	    var _this = this;
	
	    var attribute = props.attribute,
	        searchable = props.searchable;
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var canRefine = Boolean(results) && Boolean(results.getFacetByName(attribute));
	    var isFromSearch = Boolean(searchForFacetValuesResults && searchForFacetValuesResults[attribute] && searchForFacetValuesResults.query !== ''); // Search For Facet Values is not available with derived helper (used for multi index search)
	
	    if (searchable && this.context.multiIndexContext) {
	      throw new Error('react-instantsearch: searching in *List is not available when used inside a' + ' multi index context');
	    }
	
	    if (!canRefine) {
	      return {
	        items: [],
	        currentRefinement: getCurrentRefinement(props, searchState, this.context),
	        isFromSearch: isFromSearch,
	        searchable: searchable,
	        canRefine: canRefine
	      };
	    }
	
	    var items = isFromSearch ? searchForFacetValuesResults[attribute].map(function (v) {
	      return {
	        label: v.value,
	        value: getValue(v.value, props, searchState, _this.context),
	        _highlightResult: {
	          label: {
	            value: v.highlighted
	          }
	        },
	        count: v.count,
	        isRefined: v.isRefined
	      };
	    }) : results.getFacetValues(attribute, {
	      sortBy: sortBy
	    }).map(function (v) {
	      return {
	        label: v.name,
	        value: getValue(v.name, props, searchState, _this.context),
	        count: v.count,
	        isRefined: v.isRefined
	      };
	    });
	    var sortedItems = searchable && !isFromSearch ? (0, _orderBy2.default)(items, ['isRefined', 'count', 'label'], ['desc', 'desc', 'asc']) : items;
	    var transformedItems = props.transformItems ? props.transformItems(sortedItems) : sortedItems;
	    return {
	      items: transformedItems.slice(0, getLimit(props)),
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      isFromSearch: isFromSearch,
	      searchable: searchable,
	      canRefine: transformedItems.length > 0
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  searchForFacetValues: function searchForFacetValues(props, searchState, nextRefinement) {
	    return {
	      facetName: props.attribute,
	      query: nextRefinement,
	      maxFacetHits: getLimit(props)
	    };
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attribute = props.attribute;
	    searchParameters = searchParameters.setQueryParameters({
	      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, getLimit(props))
	    });
	    searchParameters = searchParameters.addDisjunctiveFacet(attribute);
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	
	    if (currentRefinement !== null) {
	      searchParameters = searchParameters.addDisjunctiveFacetRefinement(attribute, currentRefinement);
	    }
	
	    return searchParameters;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this2 = this;
	
	    var id = getId(props);
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    return {
	      id: id,
	      index: (0, _indexUtils.getIndexId)(this.context),
	      items: currentRefinement === null ? [] : [{
	        label: "".concat(props.attribute, ": ").concat(currentRefinement),
	        attribute: props.attribute,
	        value: function value(nextState) {
	          return _refine(props, nextState, '', _this2.context);
	        },
	        currentRefinement: currentRefinement
	      }]
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _slicedToArray2 = _interopRequireDefault(__webpack_require__(212));
	
	var _isEmpty2 = _interopRequireDefault(__webpack_require__(24));
	
	var _find3 = _interopRequireDefault(__webpack_require__(26));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	function stringifyItem(item) {
	  if (typeof item.start === 'undefined' && typeof item.end === 'undefined') {
	    return '';
	  }
	
	  return "".concat(item.start ? item.start : '', ":").concat(item.end ? item.end : '');
	}
	
	function parseItem(value) {
	  if (value.length === 0) {
	    return {
	      start: null,
	      end: null
	    };
	  }
	
	  var _value$split = value.split(':'),
	      _value$split2 = (0, _slicedToArray2.default)(_value$split, 2),
	      startStr = _value$split2[0],
	      endStr = _value$split2[1];
	
	  return {
	    start: startStr.length > 0 ? parseInt(startStr, 10) : null,
	    end: endStr.length > 0 ? parseInt(endStr, 10) : null
	  };
	}
	
	var namespace = 'multiRange';
	
	function getId(props) {
	  return props.attribute;
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, "".concat(namespace, ".").concat(getId(props)), '', function (currentRefinement) {
	    if (currentRefinement === '') {
	      return '';
	    }
	
	    return currentRefinement;
	  });
	}
	
	function isRefinementsRangeIncludesInsideItemRange(stats, start, end) {
	  return stats.min > start && stats.min < end || stats.max > start && stats.max < end;
	}
	
	function isItemRangeIncludedInsideRefinementsRange(stats, start, end) {
	  return start > stats.min && start < stats.max || end > stats.min && end < stats.max;
	}
	
	function itemHasRefinement(attribute, results, value) {
	  var stats = results.getFacetByName(attribute) ? results.getFacetStats(attribute) : null;
	  var range = value.split(':');
	  var start = Number(range[0]) === 0 || value === '' ? Number.NEGATIVE_INFINITY : Number(range[0]);
	  var end = Number(range[1]) === 0 || value === '' ? Number.POSITIVE_INFINITY : Number(range[1]);
	  return !(Boolean(stats) && (isRefinementsRangeIncludesInsideItemRange(stats, start, end) || isItemRangeIncludedInsideRefinementsRange(stats, start, end)));
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var nextValue = (0, _defineProperty2.default)({}, getId(props, searchState), nextRefinement);
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, "".concat(namespace, ".").concat(getId(props)));
	}
	/**
	 * connectNumericMenu connector provides the logic to build a widget that will
	 * give the user the ability to select a range value for a numeric attribute.
	 * Ranges are defined statically.
	 * @name connectNumericMenu
	 * @requirements The attribute passed to the `attribute` prop must be holding numerical values.
	 * @kind connector
	 * @propType {string} attribute - the name of the attribute in the records
	 * @propType {{label: string, start: number, end: number}[]} items - List of options. With a text label, and upper and lower bounds.
	 * @propType {string} [defaultRefinement] - the value of the item selected by default, follow the shape of a `string` with a pattern of `'{start}:{end}'`.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to select a range.
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied.  follow the shape of a `string` with a pattern of `'{start}:{end}'` which corresponds to the current selected item. For instance, when the selected item is `{start: 10, end: 20}`, the searchState of the widget is `'10:20'`. When `start` isn't defined, the searchState of the widget is `':{end}'`, and the same way around when `end` isn't defined. However, when neither `start` nor `end` are defined, the searchState is an empty string.
	 * @providedPropType {array.<{isRefined: boolean, label: string, value: string, isRefined: boolean, noRefinement: boolean}>} items - the list of ranges the NumericMenu can display.
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaNumericMenu',
	  propTypes: {
	    id: _propTypes.default.string,
	    attribute: _propTypes.default.string.isRequired,
	    items: _propTypes.default.arrayOf(_propTypes.default.shape({
	      label: _propTypes.default.node,
	      start: _propTypes.default.number,
	      end: _propTypes.default.number
	    })).isRequired,
	    transformItems: _propTypes.default.func
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var attribute = props.attribute;
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var items = props.items.map(function (item) {
	      var value = stringifyItem(item);
	      return {
	        label: item.label,
	        value: value,
	        isRefined: value === currentRefinement,
	        noRefinement: results ? itemHasRefinement(getId(props), results, value) : false
	      };
	    });
	    var stats = results && results.getFacetByName(attribute) ? results.getFacetStats(attribute) : null;
	    var refinedItem = (0, _find3.default)(items, function (item) {
	      return item.isRefined === true;
	    });
	
	    if (!items.some(function (item) {
	      return item.value === '';
	    })) {
	      items.push({
	        value: '',
	        isRefined: (0, _isEmpty2.default)(refinedItem),
	        noRefinement: !stats,
	        label: 'All'
	      });
	    }
	
	    var transformedItems = props.transformItems ? props.transformItems(items) : items;
	    return {
	      items: transformedItems,
	      currentRefinement: currentRefinement,
	      canRefine: transformedItems.length > 0 && transformedItems.some(function (item) {
	        return item.noRefinement === false;
	      })
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attribute = props.attribute;
	
	    var _parseItem = parseItem(getCurrentRefinement(props, searchState, this.context)),
	        start = _parseItem.start,
	        end = _parseItem.end;
	
	    searchParameters = searchParameters.addDisjunctiveFacet(attribute);
	
	    if (start) {
	      searchParameters = searchParameters.addNumericRefinement(attribute, '>=', start);
	    }
	
	    if (end) {
	      searchParameters = searchParameters.addNumericRefinement(attribute, '<=', end);
	    }
	
	    return searchParameters;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var id = getId(props);
	    var value = getCurrentRefinement(props, searchState, this.context);
	    var items = [];
	    var index = (0, _indexUtils.getIndexId)(this.context);
	
	    if (value !== '') {
	      var _find2 = (0, _find3.default)(props.items, function (item) {
	        return stringifyItem(item) === value;
	      }),
	          label = _find2.label;
	
	      items.push({
	        label: "".concat(props.attribute, ": ").concat(label),
	        attribute: props.attribute,
	        currentRefinement: label,
	        value: function value(nextState) {
	          return _refine(props, nextState, '', _this.context);
	        }
	      });
	    }
	
	    return {
	      id: id,
	      index: index,
	      items: items
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	function getId() {
	  return 'page';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId();
	  var page = 1;
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, page, function (currentRefinement) {
	    if (typeof currentRefinement === 'string') {
	      return parseInt(currentRefinement, 10);
	    }
	
	    return currentRefinement;
	  });
	}
	
	function _refine(props, searchState, nextPage, context) {
	  var id = getId();
	  var nextValue = (0, _defineProperty2.default)({}, id, nextPage);
	  var resetPage = false;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);
	}
	/**
	 * connectPagination connector provides the logic to build a widget that will
	 * let the user displays hits corresponding to a certain page.
	 * @name connectPagination
	 * @kind connector
	 * @propType {boolean} [showFirst=true] - Display the first page link.
	 * @propType {boolean} [showLast=false] - Display the last page link.
	 * @propType {boolean} [showPrevious=true] - Display the previous page link.
	 * @propType {boolean} [showNext=true] - Display the next page link.
	 * @propType {number} [padding=3] - How many page links to display around the current page.
	 * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.
	 * @providedPropType {function} refine - a function to remove a single filter
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {number} nbPages - the total of existing pages
	 * @providedPropType {number} currentRefinement - the page refinement currently applied
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaPagination',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    if (!results) {
	      return null;
	    }
	
	    var nbPages = results.nbPages;
	    return {
	      nbPages: nbPages,
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      canRefine: nbPages > 1
	    };
	  },
	  refine: function refine(props, searchState, nextPage) {
	    return _refine(props, searchState, nextPage, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getId());
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setPage(getCurrentRefinement(props, searchState, this.context) - 1);
	  },
	  getMetadata: function getMetadata() {
	    return {
	      id: getId()
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	/**
	 * connectPoweredBy connector provides the logic to build a widget that
	 * will display a link to algolia.
	 * @name connectPoweredBy
	 * @kind connector
	 * @providedPropType {string} url - the url to redirect to algolia
	 */
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaPoweredBy',
	  getProvidedProps: function getProvidedProps() {
	    var isServer = typeof window === 'undefined';
	    var url = 'https://www.algolia.com/?' + 'utm_source=react-instantsearch&' + 'utm_medium=website&' + "utm_content=".concat(!isServer ? window.location.hostname : '', "&") + 'utm_campaign=poweredby';
	    return {
	      url: url
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _isFinite3 = _interopRequireDefault(__webpack_require__(329));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	/**
	 * connectRange connector provides the logic to create connected
	 * components that will give the ability for a user to refine results using
	 * a numeric range.
	 * @name connectRange
	 * @kind connector
	 * @requirements The attribute passed to the `attribute` prop must be present in “attributes for faceting”
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * The values inside the attribute must be JavaScript numbers (not strings).
	 * @propType {string} attribute - Name of the attribute for faceting
	 * @propType {{min?: number, max?: number}} [defaultRefinement] - Default searchState of the widget containing the start and the end of the range.
	 * @propType {number} [min] - Minimum value. When this isn't set, the minimum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [max] - Maximum value. When this isn't set, the maximum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [precision=0] - Number of digits after decimal point to use.
	 * @providedPropType {function} refine - a function to select a range.
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string} currentRefinement - the refinement currently applied
	 * @providedPropType {number} min - the minimum value available.
	 * @providedPropType {number} max - the maximum value available.
	 * @providedPropType {number} precision - Number of digits after decimal point to use.
	 */
	function getId(props) {
	  return props.attribute;
	}
	
	var namespace = 'range';
	
	function getCurrentRange(boundaries, stats, precision) {
	  var pow = Math.pow(10, precision);
	  var min;
	
	  if ((0, _isFinite3.default)(boundaries.min)) {
	    min = boundaries.min;
	  } else if ((0, _isFinite3.default)(stats.min)) {
	    min = stats.min;
	  } else {
	    min = undefined;
	  }
	
	  var max;
	
	  if ((0, _isFinite3.default)(boundaries.max)) {
	    max = boundaries.max;
	  } else if ((0, _isFinite3.default)(stats.max)) {
	    max = stats.max;
	  } else {
	    max = undefined;
	  }
	
	  return {
	    min: min !== undefined ? Math.floor(min * pow) / pow : min,
	    max: max !== undefined ? Math.ceil(max * pow) / pow : max
	  };
	}
	
	function getCurrentRefinement(props, searchState, currentRange, context) {
	  var refinement = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, "".concat(namespace, ".").concat(getId(props)), {}, function (currentRefinement) {
	    var min = currentRefinement.min,
	        max = currentRefinement.max;
	    var isFloatPrecision = Boolean(props.precision);
	    var nextMin = min;
	
	    if (typeof nextMin === 'string') {
	      nextMin = isFloatPrecision ? parseFloat(nextMin) : parseInt(nextMin, 10);
	    }
	
	    var nextMax = max;
	
	    if (typeof nextMax === 'string') {
	      nextMax = isFloatPrecision ? parseFloat(nextMax) : parseInt(nextMax, 10);
	    }
	
	    return {
	      min: nextMin,
	      max: nextMax
	    };
	  });
	  var hasMinBound = props.min !== undefined;
	  var hasMaxBound = props.max !== undefined;
	  var hasMinRefinment = refinement.min !== undefined;
	  var hasMaxRefinment = refinement.max !== undefined;
	
	  if (hasMinBound && hasMinRefinment && refinement.min < currentRange.min) {
	    throw Error("You can't provide min value lower than range.");
	  }
	
	  if (hasMaxBound && hasMaxRefinment && refinement.max > currentRange.max) {
	    throw Error("You can't provide max value greater than range.");
	  }
	
	  if (hasMinBound && !hasMinRefinment) {
	    refinement.min = currentRange.min;
	  }
	
	  if (hasMaxBound && !hasMaxRefinment) {
	    refinement.max = currentRange.max;
	  }
	
	  return refinement;
	}
	
	function getCurrentRefinementWithRange(refinement, range) {
	  return {
	    min: refinement.min !== undefined ? refinement.min : range.min,
	    max: refinement.max !== undefined ? refinement.max : range.max
	  };
	}
	
	function nextValueForRefinement(hasBound, isReset, range, value) {
	  var next;
	
	  if (!hasBound && range === value) {
	    next = undefined;
	  } else if (hasBound && isReset) {
	    next = range;
	  } else {
	    next = value;
	  }
	
	  return next;
	}
	
	function _refine(props, searchState, nextRefinement, currentRange, context) {
	  var nextMin = nextRefinement.min,
	      nextMax = nextRefinement.max;
	  var currentMinRange = currentRange.min,
	      currentMaxRange = currentRange.max;
	  var isMinReset = nextMin === undefined || nextMin === '';
	  var isMaxReset = nextMax === undefined || nextMax === '';
	  var nextMinAsNumber = !isMinReset ? parseFloat(nextMin) : undefined;
	  var nextMaxAsNumber = !isMaxReset ? parseFloat(nextMax) : undefined;
	  var isNextMinValid = isMinReset || (0, _isFinite3.default)(nextMinAsNumber);
	  var isNextMaxValid = isMaxReset || (0, _isFinite3.default)(nextMaxAsNumber);
	
	  if (!isNextMinValid || !isNextMaxValid) {
	    throw Error("You can't provide non finite values to the range connector.");
	  }
	
	  if (nextMinAsNumber < currentMinRange) {
	    throw Error("You can't provide min value lower than range.");
	  }
	
	  if (nextMaxAsNumber > currentMaxRange) {
	    throw Error("You can't provide max value greater than range.");
	  }
	
	  var id = getId(props);
	  var resetPage = true;
	  var nextValue = (0, _defineProperty2.default)({}, id, {
	    min: nextValueForRefinement(props.min !== undefined, isMinReset, currentMinRange, nextMinAsNumber),
	    max: nextValueForRefinement(props.max !== undefined, isMaxReset, currentMaxRange, nextMaxAsNumber)
	  });
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, "".concat(namespace, ".").concat(getId(props)));
	}
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaRange',
	  propTypes: {
	    id: _propTypes.default.string,
	    attribute: _propTypes.default.string.isRequired,
	    defaultRefinement: _propTypes.default.shape({
	      min: _propTypes.default.number,
	      max: _propTypes.default.number
	    }),
	    min: _propTypes.default.number,
	    max: _propTypes.default.number,
	    precision: _propTypes.default.number,
	    header: _propTypes.default.node,
	    footer: _propTypes.default.node
	  },
	  defaultProps: {
	    precision: 0
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var attribute = props.attribute,
	        precision = props.precision,
	        minBound = props.min,
	        maxBound = props.max;
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var hasFacet = results && results.getFacetByName(attribute);
	    var stats = hasFacet ? results.getFacetStats(attribute) || {} : {};
	    var facetValues = hasFacet ? results.getFacetValues(attribute) : [];
	    var count = facetValues.map(function (v) {
	      return {
	        value: v.name,
	        count: v.count
	      };
	    });
	
	    var _getCurrentRange = getCurrentRange({
	      min: minBound,
	      max: maxBound
	    }, stats, precision),
	        rangeMin = _getCurrentRange.min,
	        rangeMax = _getCurrentRange.max; // The searchState is not always in sync with the helper state. For example
	    // when we set boundaries on the first render the searchState don't have
	    // the correct refinement. If this behaviour change in the upcoming version
	    // we could store the range inside the searchState instead of rely on `this`.
	
	
	    this._currentRange = {
	      min: rangeMin,
	      max: rangeMax
	    };
	    var currentRefinement = getCurrentRefinement(props, searchState, this._currentRange, this.context);
	    return {
	      min: rangeMin,
	      max: rangeMax,
	      canRefine: count.length > 0,
	      currentRefinement: getCurrentRefinementWithRange(currentRefinement, this._currentRange),
	      count: count,
	      precision: precision
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this._currentRange, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(params, props, searchState) {
	    var attribute = props.attribute;
	
	    var _getCurrentRefinement = getCurrentRefinement(props, searchState, this._currentRange, this.context),
	        min = _getCurrentRefinement.min,
	        max = _getCurrentRefinement.max;
	
	    params = params.addDisjunctiveFacet(attribute);
	
	    if (min !== undefined) {
	      params = params.addNumericRefinement(attribute, '>=', min);
	    }
	
	    if (max !== undefined) {
	      params = params.addNumericRefinement(attribute, '<=', max);
	    }
	
	    return params;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var _this$_currentRange = this._currentRange,
	        minRange = _this$_currentRange.min,
	        maxRange = _this$_currentRange.max;
	
	    var _getCurrentRefinement2 = getCurrentRefinement(props, searchState, this._currentRange, this.context),
	        minValue = _getCurrentRefinement2.min,
	        maxValue = _getCurrentRefinement2.max;
	
	    var items = [];
	    var hasMin = minValue !== undefined;
	    var hasMax = maxValue !== undefined;
	    var shouldDisplayMinLabel = hasMin && minValue !== minRange;
	    var shouldDisplayMaxLabel = hasMax && maxValue !== maxRange;
	
	    if (shouldDisplayMinLabel || shouldDisplayMaxLabel) {
	      var fragments = [hasMin ? "".concat(minValue, " <= ") : '', props.attribute, hasMax ? " <= ".concat(maxValue) : ''];
	      items.push({
	        label: fragments.join(''),
	        attribute: props.attribute,
	        value: function value(nextState) {
	          return _refine(props, nextState, {}, _this._currentRange, _this.context);
	        },
	        currentRefinement: getCurrentRefinementWithRange({
	          min: minValue,
	          max: maxValue
	        }, {
	          min: minRange,
	          max: maxRange
	        })
	      });
	    }
	
	    return {
	      id: getId(props),
	      index: (0, _indexUtils.getIndexId)(this.context),
	      items: items
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	var namespace = 'refinementList';
	
	function getId(props) {
	  return props.attribute;
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, "".concat(namespace, ".").concat(getId(props)), [], function (currentRefinement) {
	    if (typeof currentRefinement === 'string') {
	      // All items were unselected
	      if (currentRefinement === '') {
	        return [];
	      } // Only one item was in the searchState but we know it should be an array
	
	
	      return [currentRefinement];
	    }
	
	    return currentRefinement;
	  });
	}
	
	function getValue(name, props, searchState, context) {
	  var currentRefinement = getCurrentRefinement(props, searchState, context);
	  var isAnewValue = currentRefinement.indexOf(name) === -1;
	  var nextRefinement = isAnewValue ? currentRefinement.concat([name]) // cannot use .push(), it mutates
	  : currentRefinement.filter(function (selectedValue) {
	    return selectedValue !== name;
	  }); // cannot use .splice(), it mutates
	
	  return nextRefinement;
	}
	
	function getLimit(_ref) {
	  var showMore = _ref.showMore,
	      limit = _ref.limit,
	      showMoreLimit = _ref.showMoreLimit;
	  return showMore ? showMoreLimit : limit;
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props); // Setting the value to an empty string ensures that it is persisted in
	  // the URL as an empty value.
	  // This is necessary in the case where `defaultRefinement` contains one
	  // item and we try to deselect it. `nextSelected` would be an empty array,
	  // which would not be persisted to the URL.
	  // {foo: ['bar']} => "foo[0]=bar"
	  // {foo: []} => ""
	
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement.length > 0 ? nextRefinement : '');
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, "".concat(namespace, ".").concat(getId(props)));
	}
	/**
	 * connectRefinementList connector provides the logic to build a widget that will
	 * give the user the ability to choose multiple values for a specific facet.
	 * @name connectRefinementList
	 * @kind connector
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {boolean} [searchable=false] - allow search inside values
	 * @propType {string} [operator=or] - How to apply the refinements. Possible values: 'or' or 'and'.
	 * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items
	 * @propType {number} [limit=10] - the minimum number of displayed items
	 * @propType {number} [showMoreLimit=20] - the maximun number of displayed items. Only used when showMore is set to `true`
	 * @propType {string[]} defaultRefinement - the values of the items selected by default. The searchState of this widget takes the form of a list of `string`s, which correspond to the values of all selected refinements. However, when there are no refinements selected, the value of the searchState is an empty string.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string[]} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the RefinementList can display.
	 * @providedPropType {function} searchForItems - a function to toggle a search inside items values
	 * @providedPropType {boolean} isFromSearch - a boolean that says if the `items` props contains facet values from the global search or from the search inside items.
	 * @providedPropType {boolean} canRefine - a boolean that says whether you can refine
	 */
	
	
	var sortBy = ['isRefined', 'count:desc', 'name:asc'];
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaRefinementList',
	  propTypes: {
	    id: _propTypes.default.string,
	    attribute: _propTypes.default.string.isRequired,
	    operator: _propTypes.default.oneOf(['and', 'or']),
	    showMore: _propTypes.default.bool,
	    limit: _propTypes.default.number,
	    showMoreLimit: _propTypes.default.number,
	    defaultRefinement: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])),
	    searchable: _propTypes.default.bool,
	    transformItems: _propTypes.default.func
	  },
	  defaultProps: {
	    operator: 'or',
	    showMore: false,
	    limit: 10,
	    showMoreLimit: 20
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults, metadata, searchForFacetValuesResults) {
	    var _this = this;
	
	    var attribute = props.attribute,
	        searchable = props.searchable;
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var canRefine = Boolean(results) && Boolean(results.getFacetByName(attribute));
	    var isFromSearch = Boolean(searchForFacetValuesResults && searchForFacetValuesResults[attribute] && searchForFacetValuesResults.query !== ''); // Search For Facet Values is not available with derived helper (used for multi index search)
	
	    if (searchable && this.context.multiIndexContext) {
	      throw new Error('react-instantsearch: searching in *List is not available when used inside a' + ' multi index context');
	    }
	
	    if (!canRefine) {
	      return {
	        items: [],
	        currentRefinement: getCurrentRefinement(props, searchState, this.context),
	        canRefine: canRefine,
	        isFromSearch: isFromSearch,
	        searchable: searchable
	      };
	    }
	
	    var items = isFromSearch ? searchForFacetValuesResults[attribute].map(function (v) {
	      return {
	        label: v.value,
	        value: getValue(v.value, props, searchState, _this.context),
	        _highlightResult: {
	          label: {
	            value: v.highlighted
	          }
	        },
	        count: v.count,
	        isRefined: v.isRefined
	      };
	    }) : results.getFacetValues(attribute, {
	      sortBy: sortBy
	    }).map(function (v) {
	      return {
	        label: v.name,
	        value: getValue(v.name, props, searchState, _this.context),
	        count: v.count,
	        isRefined: v.isRefined
	      };
	    });
	    var transformedItems = props.transformItems ? props.transformItems(items) : items;
	    return {
	      items: transformedItems.slice(0, getLimit(props)),
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      isFromSearch: isFromSearch,
	      searchable: searchable,
	      canRefine: transformedItems.length > 0
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  searchForFacetValues: function searchForFacetValues(props, searchState, nextRefinement) {
	    return {
	      facetName: props.attribute,
	      query: nextRefinement,
	      maxFacetHits: getLimit(props)
	    };
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attribute = props.attribute,
	        operator = props.operator;
	    var addKey = operator === 'and' ? 'addFacet' : 'addDisjunctiveFacet';
	    var addRefinementKey = "".concat(addKey, "Refinement");
	    searchParameters = searchParameters.setQueryParameters({
	      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, getLimit(props))
	    });
	    searchParameters = searchParameters[addKey](attribute);
	    return getCurrentRefinement(props, searchState, this.context).reduce(function (res, val) {
	      return res[addRefinementKey](attribute, val);
	    }, searchParameters);
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var id = getId(props);
	    var context = this.context;
	    return {
	      id: id,
	      index: (0, _indexUtils.getIndexId)(this.context),
	      items: getCurrentRefinement(props, searchState, context).length > 0 ? [{
	        attribute: props.attribute,
	        label: "".concat(props.attribute, ": "),
	        currentRefinement: getCurrentRefinement(props, searchState, context),
	        value: function value(nextState) {
	          return _refine(props, nextState, [], context);
	        },
	        items: getCurrentRefinement(props, searchState, context).map(function (item) {
	          return {
	            label: "".concat(item),
	            value: function value(nextState) {
	              var nextSelectedItems = getCurrentRefinement(props, nextState, context).filter(function (other) {
	                return other !== item;
	              });
	              return _refine(props, searchState, nextSelectedItems, context);
	            }
	          };
	        })
	      }] : []
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _omit2 = _interopRequireDefault(__webpack_require__(37));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	var _utils = __webpack_require__(113);
	
	/**
	 * connectScrollTo connector provides the logic to build a widget that will
	 * let the page scroll to a certain point.
	 * @name connectScrollTo
	 * @kind connector
	 * @propType {string} [scrollOn="page"] - Widget searchState key on which to listen for changes, default to the pagination widget.
	 * @providedPropType {any} value - the current refinement applied to the widget listened by scrollTo
	 * @providedPropType {boolean} hasNotChanged - indicates whether the refinement came from the scrollOn argument (for instance page by default)
	 */
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaScrollTo',
	  propTypes: {
	    scrollOn: _propTypes.default.string
	  },
	  defaultProps: {
	    scrollOn: 'page'
	  },
	  getProvidedProps: function getProvidedProps(props, searchState) {
	    var id = props.scrollOn;
	    var value = (0, _indexUtils.getCurrentRefinementValue)(props, searchState, this.context, id, null, function (currentRefinement) {
	      return currentRefinement;
	    });
	
	    if (!this._prevSearchState) {
	      this._prevSearchState = {};
	    }
	    /* Get the subpart of the state that interest us*/
	
	
	    if ((0, _indexUtils.hasMultipleIndices)(this.context)) {
	      searchState = searchState.indices ? searchState.indices[(0, _indexUtils.getIndexId)(this.context)] : {};
	    }
	    /*
	      if there is a change in the app that has been triggered by another element than
	      "props.scrollOn (id) or the Configure widget, we need to keep track of the search state to
	      know if there's a change in the app that was not triggered by the props.scrollOn (id)
	      or the Configure widget. This is useful when using ScrollTo in combination of Pagination.
	      As pagination can be change by every widget, we want to scroll only if it cames from the pagination
	      widget itself. We also remove the configure key from the search state to do this comparaison because for
	      now configure values are not present in the search state before a first refinement has been made
	      and will false the results.
	      See: https://github.com/algolia/react-instantsearch/issues/164
	    */
	
	
	    var cleanedSearchState = (0, _omit2.default)((0, _omit2.default)(searchState, 'configure'), id);
	    var hasNotChanged = (0, _utils.shallowEqual)(this._prevSearchState, cleanedSearchState);
	    this._prevSearchState = cleanedSearchState;
	    return {
	      value: value,
	      hasNotChanged: hasNotChanged
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	function getId() {
	  return 'query';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId(props);
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, '', function (currentRefinement) {
	    if (currentRefinement) {
	      return currentRefinement;
	    }
	
	    return '';
	  });
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId();
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement);
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, getId());
	}
	/**
	 * connectSearchBox connector provides the logic to build a widget that will
	 * let the user search for a query
	 * @name connectSearchBox
	 * @kind connector
	 * @propType {string} [defaultRefinement] - Provide a default value for the query
	 * @providedPropType {function} refine - a function to change the current query
	 * @providedPropType {string} currentRefinement - the current query used
	 * @providedPropType {boolean} isSearchStalled - a flag that indicates if InstantSearch has detected that searches are stalled
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaSearchBox',
	  propTypes: {
	    defaultRefinement: _propTypes.default.string
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    return {
	      currentRefinement: getCurrentRefinement(props, searchState, this.context),
	      isSearchStalled: searchResults.isSearchStalled
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    return searchParameters.setQuery(getCurrentRefinement(props, searchState, this.context));
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var id = getId(props);
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    return {
	      id: id,
	      index: (0, _indexUtils.getIndexId)(this.context),
	      items: currentRefinement === null ? [] : [{
	        label: "".concat(id, ": ").concat(currentRefinement),
	        value: function value(nextState) {
	          return _refine(props, nextState, '', _this.context);
	        },
	        currentRefinement: currentRefinement
	      }]
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(20));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	function getId() {
	  return 'sortBy';
	}
	
	function getCurrentRefinement(props, searchState, context) {
	  var id = getId(props);
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, id, null, function (currentRefinement) {
	    if (currentRefinement) {
	      return currentRefinement;
	    }
	
	    return null;
	  });
	}
	/**
	 * The connectSortBy connector provides the logic to build a widget that will
	 *  display a list of indices. This allows a user to change how the hits are being sorted.
	 * @name connectSortBy
	 * @requirements Algolia handles sorting by creating replica indices. [Read more about sorting](https://www.algolia.com/doc/guides/relevance/sorting/) on
	 * the Algolia website.
	 * @kind connector
	 * @propType {string} defaultRefinement - The default selected index.
	 * @propType {{value: string, label: string}[]} items - The list of indexes to search in.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @providedPropType {function} refine - a function to remove a single filter
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 * @providedPropType {string[]} currentRefinement - the refinement currently applied
	 * @providedPropType {array.<{isRefined: boolean, label?: string, value: string}>} items - the list of items the HitsPerPage can display.  If no label provided, the value will be displayed.
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaSortBy',
	  propTypes: {
	    defaultRefinement: _propTypes.default.string,
	    items: _propTypes.default.arrayOf(_propTypes.default.shape({
	      label: _propTypes.default.string,
	      value: _propTypes.default.string.isRequired
	    })).isRequired,
	    transformItems: _propTypes.default.func
	  },
	  getProvidedProps: function getProvidedProps(props, searchState) {
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    var items = props.items.map(function (item) {
	      return item.value === currentRefinement ? (0, _objectSpread2.default)({}, item, {
	        isRefined: true
	      }) : (0, _objectSpread2.default)({}, item, {
	        isRefined: false
	      });
	    });
	    return {
	      items: props.transformItems ? props.transformItems(items) : items,
	      currentRefinement: currentRefinement
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    var id = getId();
	    var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement);
	    var resetPage = true;
	    return (0, _indexUtils.refineValue)(searchState, nextValue, this.context, resetPage);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return (0, _indexUtils.cleanUpValue)(searchState, this.context, getId());
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var selectedIndex = getCurrentRefinement(props, searchState, this.context);
	    return searchParameters.setIndex(selectedIndex);
	  },
	  getMetadata: function getMetadata() {
	    return {
	      id: getId()
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	/**
	 * The `connectStateResults` connector provides a way to access the `searchState` and the `searchResults`
	 * of InstantSearch.
	 * For instance this connector allows you to create results/noResults or query/noQuery pages.
	 * @name connectStateResults
	 * @kind connector
	 * @providedPropType {object} searchState - The search state of the instant search component. <br/><br/> See: [Search state structure](https://community.algolia.com/react-instantsearch/guide/Search_state.html)
	 * @providedPropType {object} searchResults - The search results. <br/><br/> In case of multiple indices: if used under `<Index>`, results will be those of the corresponding index otherwise it'll be those of the root index  See: [Search results structure](https://community.algolia.com/algoliasearch-helper-js/reference.html#searchresults)
	 * @providedPropType {object} allSearchResults - In case of multiple indices you can retrieve all the results
	 * @providedPropType {string} error - If the search failed, the error will be logged here.
	 * @providedPropType {boolean} searching - If there is a search in progress.
	 * @providedPropType {boolean} isSearchStalled - Flag that indicates if React InstantSearch has detected that searches are stalled.
	 * @providedPropType {boolean} searchingForFacetValues - If there is a search in a list in progress.
	 * @providedPropType {object} props - component props.
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits, connectStateResults } from 'react-instantsearch-dom';
	 *
	 * const Content = connectStateResults(({ searchState, searchResults }) => {
	 *   const hasResults = searchResults && searchResults.nbHits !== 0;
	 *
	 *    return (
	 *      <div>
	 *        <div hidden={!hasResults}>
	 *          <Hits />
	 *        </div>
	 *        <div hidden={hasResults}>
	 *          <div>No results has been found for {searchState.query}</div>
	 *        </div>
	 *      </div>
	 *    );
	 * });
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *      appId="latency"
	 *      apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *      indexName="instant_search"
	 *    >
	 *      <SearchBox />
	 *      <Content />
	 *    </InstantSearch>
	 * );
	 */
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaStateResults',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    return {
	      searchState: searchState,
	      searchResults: results,
	      allSearchResults: searchResults.results,
	      searching: searchResults.searching,
	      isSearchStalled: searchResults.isSearchStalled,
	      error: searchResults.error,
	      searchingForFacetValues: searchResults.searchingForFacetValues,
	      props: props
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	/**
	 * connectStats connector provides the logic to build a widget that will
	 *  displays algolia search statistics (hits number and processing time).
	 * @name connectStats
	 * @kind connector
	 * @providedPropType {number} nbHits - number of hits returned by Algolia.
	 * @providedPropType {number} processingTimeMS - the time in ms took by Algolia to search for results.
	 */
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaStats',
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	
	    if (!results) {
	      return null;
	    }
	
	    return {
	      nbHits: results.nbHits,
	      processingTimeMS: results.processingTimeMS
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _find2 = _interopRequireDefault(__webpack_require__(26));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _createConnector = _interopRequireDefault(__webpack_require__(15));
	
	var _indexUtils = __webpack_require__(17);
	
	function getId(props) {
	  return props.attribute;
	}
	
	var namespace = 'toggle';
	
	function getCurrentRefinement(props, searchState, context) {
	  return (0, _indexUtils.getCurrentRefinementValue)(props, searchState, context, "".concat(namespace, ".").concat(getId(props)), false, function (currentRefinement) {
	    if (currentRefinement) {
	      return currentRefinement;
	    }
	
	    return false;
	  });
	}
	
	function _refine(props, searchState, nextRefinement, context) {
	  var id = getId(props);
	  var nextValue = (0, _defineProperty2.default)({}, id, nextRefinement ? nextRefinement : false);
	  var resetPage = true;
	  return (0, _indexUtils.refineValue)(searchState, nextValue, context, resetPage, namespace);
	}
	
	function _cleanUp(props, searchState, context) {
	  return (0, _indexUtils.cleanUpValue)(searchState, context, "".concat(namespace, ".").concat(getId(props)));
	}
	/**
	 * connectToggleRefinement connector provides the logic to build a widget that will
	 * provides an on/off filtering feature based on an attribute value.
	 * @name connectToggleRefinement
	 * @kind connector
	 * @requirements To use this widget, you'll need an attribute to toggle on.
	 *
	 * You can't toggle on null or not-null values. If you want to address this particular use-case you'll need to compute an
	 * extra boolean attribute saying if the value exists or not. See this [thread](https://discourse.algolia.com/t/how-to-create-a-toggle-for-the-absence-of-a-string-attribute/2460) for more details.
	 *
	 * @propType {string} attribute - Name of the attribute on which to apply the `value` refinement. Required when `value` is present.
	 * @propType {string} label - Label for the toggle.
	 * @propType {string} value - Value of the refinement to apply on `attribute`.
	 * @propType {boolean} [defaultRefinement=false] - Default searchState of the widget. Should the toggle be checked by default?
	 * @providedPropType {boolean} currentRefinement - `true` when the refinement is applied, `false` otherwise
	 * @providedPropType {object} count - an object that contains the count for `checked` and `unchecked` state
	 * @providedPropType {function} refine - a function to toggle a refinement
	 * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state
	 */
	
	
	var _default = (0, _createConnector.default)({
	  displayName: 'AlgoliaToggle',
	  propTypes: {
	    label: _propTypes.default.string.isRequired,
	    attribute: _propTypes.default.string.isRequired,
	    value: _propTypes.default.any.isRequired,
	    filter: _propTypes.default.func,
	    defaultRefinement: _propTypes.default.bool
	  },
	  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {
	    var attribute = props.attribute,
	        value = props.value;
	    var results = (0, _indexUtils.getResults)(searchResults, this.context);
	    var currentRefinement = getCurrentRefinement(props, searchState, this.context);
	    var allFacetValues = results && results.getFacetByName(attribute) ? results.getFacetValues(attribute) : null;
	    var facetValue = // Use null to always be consistent with type of the value
	    // count: number | null
	    allFacetValues && allFacetValues.length ? (0, _find2.default)(allFacetValues, function (item) {
	      return item.name === value.toString();
	    }) : null;
	    var facetValueCount = facetValue && facetValue.count;
	    var allFacetValuesCount = // Use null to always be consistent with type of the value
	    // count: number | null
	    allFacetValues && allFacetValues.length ? allFacetValues.reduce(function (acc, item) {
	      return acc + item.count;
	    }, 0) : null;
	    var canRefine = currentRefinement ? allFacetValuesCount !== null && allFacetValuesCount > 0 : facetValueCount !== null && facetValueCount > 0;
	    var count = {
	      checked: allFacetValuesCount,
	      unchecked: facetValueCount
	    };
	    return {
	      currentRefinement: currentRefinement,
	      canRefine: canRefine,
	      count: count
	    };
	  },
	  refine: function refine(props, searchState, nextRefinement) {
	    return _refine(props, searchState, nextRefinement, this.context);
	  },
	  cleanUp: function cleanUp(props, searchState) {
	    return _cleanUp(props, searchState, this.context);
	  },
	  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {
	    var attribute = props.attribute,
	        value = props.value,
	        filter = props.filter;
	    var checked = getCurrentRefinement(props, searchState, this.context);
	    var nextSearchParameters = searchParameters.addDisjunctiveFacet(attribute);
	
	    if (checked) {
	      nextSearchParameters = nextSearchParameters.addDisjunctiveFacetRefinement(attribute, value);
	
	      if (filter) {
	        nextSearchParameters = filter(nextSearchParameters);
	      }
	    }
	
	    return nextSearchParameters;
	  },
	  getMetadata: function getMetadata(props, searchState) {
	    var _this = this;
	
	    var id = getId(props);
	    var checked = getCurrentRefinement(props, searchState, this.context);
	    var items = [];
	    var index = (0, _indexUtils.getIndexId)(this.context);
	
	    if (checked) {
	      items.push({
	        label: props.label,
	        currentRefinement: checked,
	        attribute: props.attribute,
	        value: function value(nextState) {
	          return _refine(props, nextState, false, _this.context);
	        }
	      });
	    }
	
	    return {
	      id: id,
	      index: index,
	      items: items
	    };
	  }
	});
	
	exports.default = _default;

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _Index = _interopRequireDefault(__webpack_require__(351));
	
	/**
	 * Creates a specialized root Index component. It accepts
	 * a specification of the root Element.
	 * @param {object} defaultRoot - the defininition of the root of an Index sub tree.
	 * @return {object} a Index root
	 */
	var createIndex = function createIndex(defaultRoot) {
	  var CreateIndex = function CreateIndex(_ref) {
	    var indexName = _ref.indexName,
	        indexId = _ref.indexId,
	        root = _ref.root,
	        children = _ref.children;
	    return _react.default.createElement(_Index.default, {
	      indexName: indexName,
	      indexId: indexId || indexName,
	      root: root
	    }, children);
	  };
	
	  CreateIndex.propTypes = {
	    indexName: _propTypes.default.string.isRequired,
	    // @MAJOR: indexId must be required
	    indexId: _propTypes.default.string,
	    root: _propTypes.default.shape({
	      Root: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]).isRequired,
	      props: _propTypes.default.object
	    }),
	    children: _propTypes.default.node
	  };
	  CreateIndex.defaultProps = {
	    root: defaultRoot
	  };
	  return CreateIndex;
	};
	
	var _default = createIndex;
	exports.default = _default;

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createInstantSearch;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _InstantSearch = _interopRequireDefault(__webpack_require__(352));
	
	var _version = _interopRequireDefault(__webpack_require__(178));
	
	/**
	 * Creates a specialized root InstantSearch component. It accepts
	 * an algolia client and a specification of the root Element.
	 * @param {function} defaultAlgoliaClient - a function that builds an Algolia client
	 * @param {object} root - the defininition of the root of an InstantSearch sub tree.
	 * @returns {object} an InstantSearch root
	 */
	function createInstantSearch(defaultAlgoliaClient, root) {
	  var _class, _temp;
	
	  return _temp = _class =
	  /*#__PURE__*/
	  function (_Component) {
	    (0, _inherits2.default)(CreateInstantSearch, _Component);
	
	    function CreateInstantSearch() {
	      var _getPrototypeOf2;
	
	      var _this;
	
	      (0, _classCallCheck2.default)(this, CreateInstantSearch);
	
	      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CreateInstantSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));
	
	      if (_this.props.searchClient) {
	        if (_this.props.appId || _this.props.apiKey || _this.props.algoliaClient) {
	          throw new Error('react-instantsearch:: `searchClient` cannot be used with `appId`, `apiKey` or `algoliaClient`.');
	        }
	      }
	
	      if (_this.props.algoliaClient) {
	        // eslint-disable-next-line no-console
	        console.warn('`algoliaClient` option was renamed `searchClient`. Please use this new option before the next major version.');
	      }
	
	      _this.client = _this.props.searchClient || _this.props.algoliaClient || defaultAlgoliaClient(_this.props.appId, _this.props.apiKey, {
	        _useRequestCache: true
	      });
	
	      if (typeof _this.client.addAlgoliaAgent === 'function') {
	        _this.client.addAlgoliaAgent("react-instantsearch ".concat(_version.default));
	      }
	
	      return _this;
	    }
	
	    (0, _createClass2.default)(CreateInstantSearch, [{
	      key: "componentWillReceiveProps",
	      value: function componentWillReceiveProps(nextProps) {
	        var props = this.props;
	
	        if (nextProps.searchClient) {
	          this.client = nextProps.searchClient;
	        } else if (nextProps.algoliaClient) {
	          this.client = nextProps.algoliaClient;
	        } else if (props.appId !== nextProps.appId || props.apiKey !== nextProps.apiKey) {
	          this.client = defaultAlgoliaClient(nextProps.appId, nextProps.apiKey);
	        }
	
	        if (typeof this.client.addAlgoliaAgent === 'function') {
	          this.client.addAlgoliaAgent("react-instantsearch ".concat(_version.default));
	        }
	      }
	    }, {
	      key: "render",
	      value: function render() {
	        return _react.default.createElement(_InstantSearch.default, {
	          createURL: this.props.createURL,
	          indexName: this.props.indexName,
	          searchState: this.props.searchState,
	          onSearchStateChange: this.props.onSearchStateChange,
	          onSearchParameters: this.props.onSearchParameters,
	          root: this.props.root,
	          searchClient: this.client,
	          algoliaClient: this.client,
	          refresh: this.props.refresh,
	          resultsState: this.props.resultsState
	        }, this.props.children);
	      }
	    }]);
	    return CreateInstantSearch;
	  }(_react.Component), (0, _defineProperty2.default)(_class, "propTypes", {
	    algoliaClient: _propTypes.default.object,
	    searchClient: _propTypes.default.object,
	    appId: _propTypes.default.string,
	    apiKey: _propTypes.default.string,
	    children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]),
	    indexName: _propTypes.default.string.isRequired,
	    createURL: _propTypes.default.func,
	    searchState: _propTypes.default.object,
	    refresh: _propTypes.default.bool.isRequired,
	    onSearchStateChange: _propTypes.default.func,
	    onSearchParameters: _propTypes.default.func,
	    resultsState: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
	    root: _propTypes.default.shape({
	      Root: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]).isRequired,
	      props: _propTypes.default.object
	    })
	  }), (0, _defineProperty2.default)(_class, "defaultProps", {
	    refresh: false,
	    root: root
	  }), _temp;
	}

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createInstantSearchManager;
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _objectSpread4 = _interopRequireDefault(__webpack_require__(20));
	
	var _omit2 = _interopRequireDefault(__webpack_require__(37));
	
	var _algoliasearchHelper = _interopRequireDefault(__webpack_require__(127));
	
	var _createWidgetsManager = _interopRequireDefault(__webpack_require__(378));
	
	var _createStore = _interopRequireDefault(__webpack_require__(377));
	
	var _highlight = __webpack_require__(112);
	
	var _indexUtils = __webpack_require__(17);
	
	var isMultiIndexContext = function isMultiIndexContext(widget) {
	  return (0, _indexUtils.hasMultipleIndices)(widget.context);
	};
	
	var isTargetedIndexEqualIndex = function isTargetedIndexEqualIndex(widget, indexId) {
	  return widget.context.multiIndexContext.targetedIndex === indexId;
	}; // Relying on the `indexId` is a bit brittle to detect the `Index` widget.
	// Since it's a class we could rely on `instanceof` or similar. We never
	// had an issue though. Works for now.
	
	
	var isIndexWidget = function isIndexWidget(widget) {
	  return Boolean(widget.props.indexId);
	};
	
	var isIndexWidgetEqualIndex = function isIndexWidgetEqualIndex(widget, indexId) {
	  return widget.props.indexId === indexId;
	};
	/**
	 * Creates a new instance of the InstantSearchManager which controls the widgets and
	 * trigger the search when the widgets are updated.
	 * @param {string} indexName - the main index name
	 * @param {object} initialState - initial widget state
	 * @param {object} SearchParameters - optional additional parameters to send to the algolia API
	 * @param {number} stalledSearchDelay - time (in ms) after the search is stalled
	 * @return {InstantSearchManager} a new instance of InstantSearchManager
	 */
	
	
	function createInstantSearchManager(_ref) {
	  var indexName = _ref.indexName,
	      _ref$initialState = _ref.initialState,
	      initialState = _ref$initialState === void 0 ? {} : _ref$initialState,
	      searchClient = _ref.searchClient,
	      resultsState = _ref.resultsState,
	      stalledSearchDelay = _ref.stalledSearchDelay;
	  var helper = (0, _algoliasearchHelper.default)(searchClient, indexName, (0, _objectSpread4.default)({}, _highlight.HIGHLIGHT_TAGS));
	  helper.on('search', handleNewSearch).on('result', handleSearchSuccess({
	    indexId: indexName
	  })).on('error', handleSearchError);
	  var skip = false;
	  var stalledSearchTimer = null;
	  var initialSearchParameters = helper.state;
	  var widgetsManager = (0, _createWidgetsManager.default)(onWidgetsUpdate);
	  var store = (0, _createStore.default)({
	    widgets: initialState,
	    metadata: [],
	    results: resultsState || null,
	    error: null,
	    searching: false,
	    isSearchStalled: true,
	    searchingForFacetValues: false
	  });
	
	  function skipSearch() {
	    skip = true;
	  }
	
	  function updateClient(client) {
	    helper.setClient(client);
	    search();
	  }
	
	  function clearCache() {
	    helper.clearCache();
	    search();
	  }
	
	  function getMetadata(state) {
	    return widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.getMetadata);
	    }).map(function (widget) {
	      return widget.getMetadata(state);
	    });
	  }
	
	  function getSearchParameters() {
	    var sharedParameters = widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.getSearchParameters);
	    }).filter(function (widget) {
	      return !isMultiIndexContext(widget) && !isIndexWidget(widget);
	    }).reduce(function (res, widget) {
	      return widget.getSearchParameters(res);
	    }, initialSearchParameters);
	    var mainParameters = widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.getSearchParameters);
	    }).filter(function (widget) {
	      var targetedIndexEqualMainIndex = isMultiIndexContext(widget) && isTargetedIndexEqualIndex(widget, indexName);
	      var subIndexEqualMainIndex = isIndexWidget(widget) && isIndexWidgetEqualIndex(widget, indexName);
	      return targetedIndexEqualMainIndex || subIndexEqualMainIndex;
	    }).reduce(function (res, widget) {
	      return widget.getSearchParameters(res);
	    }, sharedParameters);
	    var derivedIndices = widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.getSearchParameters);
	    }).filter(function (widget) {
	      var targetedIndexNotEqualMainIndex = isMultiIndexContext(widget) && !isTargetedIndexEqualIndex(widget, indexName);
	      var subIndexNotEqualMainIndex = isIndexWidget(widget) && !isIndexWidgetEqualIndex(widget, indexName);
	      return targetedIndexNotEqualMainIndex || subIndexNotEqualMainIndex;
	    }).reduce(function (indices, widget) {
	      var indexId = isMultiIndexContext(widget) ? widget.context.multiIndexContext.targetedIndex : widget.props.indexId;
	      var widgets = indices[indexId] || [];
	      return (0, _objectSpread4.default)({}, indices, (0, _defineProperty2.default)({}, indexId, widgets.concat(widget)));
	    }, {});
	    var derivedParameters = Object.keys(derivedIndices).map(function (indexId) {
	      return {
	        parameters: derivedIndices[indexId].reduce(function (res, widget) {
	          return widget.getSearchParameters(res);
	        }, sharedParameters),
	        indexId: indexId
	      };
	    });
	    return {
	      mainParameters: mainParameters,
	      derivedParameters: derivedParameters
	    };
	  }
	
	  function search() {
	    if (!skip) {
	      var _getSearchParameters = getSearchParameters(helper.state),
	          mainParameters = _getSearchParameters.mainParameters,
	          derivedParameters = _getSearchParameters.derivedParameters; // We have to call `slice` because the method `detach` on the derived
	      // helpers mutates the value `derivedHelpers`. The `forEach` loop does
	      // not iterate on each value and we're not able to correctly clear the
	      // previous derived helpers (memory leak + useless requests).
	
	
	      helper.derivedHelpers.slice().forEach(function (derivedHelper) {
	        // Since we detach the derived helpers on **every** new search they
	        // won't receive intermediate results in case of a stalled search.
	        // Only the last result is dispatched by the derived helper because
	        // they are not detached yet:
	        //
	        // - a -> main helper receives results
	        // - ap -> main helper receives results
	        // - app -> main helper + derived helpers receive results
	        //
	        // The quick fix is to avoid to detatch them on search but only once they
	        // received the results. But it means that in case of a stalled search
	        // all the derived helpers not detached yet register a new search inside
	        // the helper. The number grows fast in case of a bad network and it's
	        // not deterministic.
	        derivedHelper.detach();
	      });
	      derivedParameters.forEach(function (_ref2) {
	        var indexId = _ref2.indexId,
	            parameters = _ref2.parameters;
	        var derivedHelper = helper.derive(function () {
	          return parameters;
	        });
	        derivedHelper.on('result', handleSearchSuccess({
	          indexId: indexId
	        })).on('error', handleSearchError);
	      });
	      helper.setState(mainParameters);
	      helper.search();
	    }
	  }
	
	  function handleSearchSuccess(_ref3) {
	    var indexId = _ref3.indexId;
	    return function (content) {
	      var state = store.getState();
	      var isDerivedHelpersEmpty = !helper.derivedHelpers.length;
	      var results = state.results ? state.results : {}; // Switching from mono index to multi index and vice versa must reset the
	      // results to an empty object, otherwise we keep reference of stalled and
	      // unused results.
	
	      results = !isDerivedHelpersEmpty && results.getFacetByName ? {} : results;
	
	      if (!isDerivedHelpersEmpty) {
	        results[indexId] = content;
	      } else {
	        results = content;
	      }
	
	      var currentState = store.getState();
	      var nextIsSearchStalled = currentState.isSearchStalled;
	
	      if (!helper.hasPendingRequests()) {
	        clearTimeout(stalledSearchTimer);
	        stalledSearchTimer = null;
	        nextIsSearchStalled = false;
	      }
	
	      var nextState = (0, _omit2.default)((0, _objectSpread4.default)({}, currentState, {
	        results: results,
	        isSearchStalled: nextIsSearchStalled,
	        searching: false,
	        error: null
	      }), 'resultsFacetValues');
	      store.setState(nextState);
	    };
	  }
	
	  function handleSearchError(error) {
	    var currentState = store.getState();
	    var nextIsSearchStalled = currentState.isSearchStalled;
	
	    if (!helper.hasPendingRequests()) {
	      clearTimeout(stalledSearchTimer);
	      nextIsSearchStalled = false;
	    }
	
	    var nextState = (0, _omit2.default)((0, _objectSpread4.default)({}, currentState, {
	      isSearchStalled: nextIsSearchStalled,
	      error: error,
	      searching: false
	    }), 'resultsFacetValues');
	    store.setState(nextState);
	  }
	
	  function handleNewSearch() {
	    if (!stalledSearchTimer) {
	      stalledSearchTimer = setTimeout(function () {
	        var nextState = (0, _omit2.default)((0, _objectSpread4.default)({}, store.getState(), {
	          isSearchStalled: true
	        }), 'resultsFacetValues');
	        store.setState(nextState);
	      }, stalledSearchDelay);
	    }
	  } // Called whenever a widget has been rendered with new props.
	
	
	  function onWidgetsUpdate() {
	    var metadata = getMetadata(store.getState().widgets);
	    store.setState((0, _objectSpread4.default)({}, store.getState(), {
	      metadata: metadata,
	      searching: true
	    })); // Since the `getSearchParameters` method of widgets also depends on props,
	    // the result search parameters might have changed.
	
	    search();
	  }
	
	  function transitionState(nextSearchState) {
	    var searchState = store.getState().widgets;
	    return widgetsManager.getWidgets().filter(function (widget) {
	      return Boolean(widget.transitionState);
	    }).reduce(function (res, widget) {
	      return widget.transitionState(searchState, res);
	    }, nextSearchState);
	  }
	
	  function onExternalStateUpdate(nextSearchState) {
	    var metadata = getMetadata(nextSearchState);
	    store.setState((0, _objectSpread4.default)({}, store.getState(), {
	      widgets: nextSearchState,
	      metadata: metadata,
	      searching: true
	    }));
	    search();
	  }
	
	  function onSearchForFacetValues(_ref4) {
	    var facetName = _ref4.facetName,
	        query = _ref4.query,
	        _ref4$maxFacetHits = _ref4.maxFacetHits,
	        maxFacetHits = _ref4$maxFacetHits === void 0 ? 10 : _ref4$maxFacetHits;
	    // The values 1, 100 are the min / max values that the engine accepts.
	    // see: https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits
	    var maxFacetHitsWithinRange = Math.max(1, Math.min(maxFacetHits, 100));
	    store.setState((0, _objectSpread4.default)({}, store.getState(), {
	      searchingForFacetValues: true
	    }));
	    helper.searchForFacetValues(facetName, query, maxFacetHitsWithinRange).then(function (content) {
	      var _objectSpread3;
	
	      store.setState((0, _objectSpread4.default)({}, store.getState(), {
	        error: null,
	        searchingForFacetValues: false,
	        resultsFacetValues: (0, _objectSpread4.default)({}, store.getState().resultsFacetValues, (_objectSpread3 = {}, (0, _defineProperty2.default)(_objectSpread3, facetName, content.facetHits), (0, _defineProperty2.default)(_objectSpread3, "query", query), _objectSpread3))
	      }));
	    }, function (error) {
	      store.setState((0, _objectSpread4.default)({}, store.getState(), {
	        searchingForFacetValues: false,
	        error: error
	      }));
	    }).catch(function (error) {
	      // Since setState is synchronous, any error that occurs in the render of a
	      // component will be swallowed by this promise.
	      // This is a trick to make the error show up correctly in the console.
	      // See http://stackoverflow.com/a/30741722/969302
	      setTimeout(function () {
	        throw error;
	      });
	    });
	  }
	
	  function updateIndex(newIndex) {
	    initialSearchParameters = initialSearchParameters.setIndex(newIndex);
	    search();
	  }
	
	  function getWidgetsIds() {
	    return store.getState().metadata.reduce(function (res, meta) {
	      return typeof meta.id !== 'undefined' ? res.concat(meta.id) : res;
	    }, []);
	  }
	
	  return {
	    store: store,
	    widgetsManager: widgetsManager,
	    getWidgetsIds: getWidgetsIds,
	    getSearchParameters: getSearchParameters,
	    onSearchForFacetValues: onSearchForFacetValues,
	    onExternalStateUpdate: onExternalStateUpdate,
	    transitionState: transitionState,
	    updateClient: updateClient,
	    updateIndex: updateIndex,
	    clearCache: clearCache,
	    skipSearch: skipSearch
	  };
	}

/***/ }),
/* 377 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createStore;
	
	function createStore(initialState) {
	  var state = initialState;
	  var listeners = [];
	
	  function dispatch() {
	    listeners.forEach(function (listener) {
	      return listener();
	    });
	  }
	
	  return {
	    getState: function getState() {
	      return state;
	    },
	    setState: function setState(nextState) {
	      state = nextState;
	      dispatch();
	    },
	    subscribe: function subscribe(listener) {
	      listeners.push(listener);
	      return function unsubcribe() {
	        listeners.splice(listeners.indexOf(listener), 1);
	      };
	    }
	  };
	}

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createWidgetsManager;
	
	var _utils = __webpack_require__(113);
	
	function createWidgetsManager(onWidgetsUpdate) {
	  var widgets = []; // Is an update scheduled?
	
	  var scheduled = false; // The state manager's updates need to be batched since more than one
	  // component can register or unregister widgets during the same tick.
	
	  function scheduleUpdate() {
	    if (scheduled) {
	      return;
	    }
	
	    scheduled = true;
	    (0, _utils.defer)(function () {
	      scheduled = false;
	      onWidgetsUpdate();
	    });
	  }
	
	  return {
	    registerWidget: function registerWidget(widget) {
	      widgets.push(widget);
	      scheduleUpdate();
	      return function unregisterWidget() {
	        widgets.splice(widgets.indexOf(widget), 1);
	        scheduleUpdate();
	      };
	    },
	    update: scheduleUpdate,
	    getWidgets: function getWidgets() {
	      return widgets;
	    }
	  };
	}

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = translatable;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(22));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _has2 = _interopRequireDefault(__webpack_require__(52));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var withKeysPropType = function withKeysPropType(keys) {
	  return function (props, propName, componentName) {
	    var prop = props[propName];
	
	    if (prop) {
	      var _arr = Object.keys(prop);
	
	      for (var _i = 0; _i < _arr.length; _i++) {
	        var key = _arr[_i];
	
	        if (keys.indexOf(key) === -1) {
	          return new Error("Unknown `".concat(propName, "` key `").concat(key, "`. Check the render method ") + "of `".concat(componentName, "`."));
	        }
	      }
	    }
	
	    return undefined;
	  };
	};
	
	function translatable(defaultTranslations) {
	  return function (Composed) {
	    var Translatable =
	    /*#__PURE__*/
	    function (_Component) {
	      (0, _inherits2.default)(Translatable, _Component);
	
	      function Translatable() {
	        var _getPrototypeOf2;
	
	        var _this;
	
	        (0, _classCallCheck2.default)(this, Translatable);
	
	        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	          args[_key] = arguments[_key];
	        }
	
	        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Translatable)).call.apply(_getPrototypeOf2, [this].concat(args)));
	        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "translate", function (key) {
	          var translations = _this.props.translations;
	          var translation = translations && (0, _has2.default)(translations, key) ? translations[key] : defaultTranslations[key];
	
	          if (typeof translation === 'function') {
	            for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	              params[_key2 - 1] = arguments[_key2];
	            }
	
	            return translation.apply(void 0, params);
	          }
	
	          return translation;
	        });
	        return _this;
	      }
	
	      (0, _createClass2.default)(Translatable, [{
	        key: "render",
	        value: function render() {
	          return _react.default.createElement(Composed, (0, _extends2.default)({
	            translate: this.translate
	          }, this.props));
	        }
	      }]);
	      return Translatable;
	    }(_react.Component);
	
	    var name = Composed.displayName || Composed.name || 'UnknownComponent';
	    Translatable.displayName = "Translatable(".concat(name, ")");
	    Translatable.propTypes = {
	      translations: withKeysPropType(Object.keys(defaultTranslations))
	    };
	    return Translatable;
	  };
	}

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _connectConfigure = _interopRequireDefault(__webpack_require__(177));
	
	/**
	 * Configure is a widget that lets you provide raw search parameters
	 * to the Algolia API.
	 *
	 * Any of the props added to this widget will be forwarded to Algolia. For more information
	 * on the different parameters that can be set, have a look at the
	 * [reference](https://www.algolia.com/doc/api-client/javascript/search#search-parameters).
	 *
	 * This widget can be used either with react-dom and react-native. It will not render anything
	 * on screen, only configure some parameters.
	 *
	 * Read more in the [Search parameters](guide/Search_parameters.html) guide.
	 * @name Configure
	 * @kind widget
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Configure, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Configure hitsPerPage={5} />
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _connectConfigure.default)(function () {
	  return null;
	});
	
	exports.default = _default;

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var _Link = _interopRequireDefault(__webpack_require__(76));
	
	var cx = (0, _utils.createClassNames)('Breadcrumb');
	
	var itemsPropType = _propTypes.default.arrayOf(_propTypes.default.shape({
	  label: _propTypes.default.string.isRequired,
	  value: _propTypes.default.string.isRequired
	}));
	
	var Breadcrumb =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Breadcrumb, _Component);
	
	  function Breadcrumb() {
	    (0, _classCallCheck2.default)(this, Breadcrumb);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Breadcrumb).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(Breadcrumb, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          canRefine = _this$props.canRefine,
	          createURL = _this$props.createURL,
	          items = _this$props.items,
	          refine = _this$props.refine,
	          rootURL = _this$props.rootURL,
	          separator = _this$props.separator,
	          translate = _this$props.translate,
	          className = _this$props.className;
	      var rootPath = canRefine ? _react.default.createElement("li", {
	        className: cx('item')
	      }, _react.default.createElement(_Link.default, {
	        className: cx('link'),
	        onClick: function onClick() {
	          return !rootURL ? refine() : null;
	        },
	        href: rootURL ? rootURL : createURL()
	      }, translate('rootLabel'))) : null;
	      var breadcrumb = items.map(function (item, idx) {
	        var isLast = idx === items.length - 1;
	        return _react.default.createElement("li", {
	          className: cx('item', isLast && 'item--selected'),
	          key: idx
	        }, _react.default.createElement("span", {
	          className: cx('separator')
	        }, separator), !isLast ? _react.default.createElement(_Link.default, {
	          className: cx('link'),
	          onClick: function onClick() {
	            return refine(item.value);
	          },
	          href: createURL(item.value)
	        }, item.label) : item.label);
	      });
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	      }, _react.default.createElement("ul", {
	        className: cx('list')
	      }, rootPath, breadcrumb));
	    }
	  }]);
	  return Breadcrumb;
	}(_react.Component);
	
	(0, _defineProperty2.default)(Breadcrumb, "propTypes", {
	  canRefine: _propTypes.default.bool.isRequired,
	  createURL: _propTypes.default.func.isRequired,
	  items: itemsPropType,
	  refine: _propTypes.default.func.isRequired,
	  rootURL: _propTypes.default.string,
	  separator: _propTypes.default.node,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(Breadcrumb, "defaultProps", {
	  rootURL: null,
	  separator: ' > ',
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  rootLabel: 'Home'
	})(Breadcrumb);
	
	exports.default = _default;

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var cx = (0, _utils.createClassNames)('ClearRefinements');
	
	var ClearRefinements =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(ClearRefinements, _Component);
	
	  function ClearRefinements() {
	    (0, _classCallCheck2.default)(this, ClearRefinements);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ClearRefinements).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(ClearRefinements, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          items = _this$props.items,
	          canRefine = _this$props.canRefine,
	          refine = _this$props.refine,
	          translate = _this$props.translate,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, _react.default.createElement("button", {
	        className: cx('button', !canRefine && 'button--disabled'),
	        onClick: function onClick() {
	          return refine(items);
	        },
	        disabled: !canRefine
	      }, translate('reset')));
	    }
	  }]);
	  return ClearRefinements;
	}(_react.Component);
	
	(0, _defineProperty2.default)(ClearRefinements, "propTypes", {
	  items: _propTypes.default.arrayOf(_propTypes.default.object).isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(ClearRefinements, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  reset: 'Clear all filters'
	})(ClearRefinements);
	
	exports.default = _default;

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.CurrentRefinements = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var cx = (0, _utils.createClassNames)('CurrentRefinements');
	
	var CurrentRefinements = function CurrentRefinements(_ref) {
	  var items = _ref.items,
	      canRefine = _ref.canRefine,
	      refine = _ref.refine,
	      translate = _ref.translate,
	      className = _ref.className;
	  return _react.default.createElement("div", {
	    className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	  }, _react.default.createElement("ul", {
	    className: cx('list', !canRefine && 'list--noRefinement')
	  }, items.map(function (item) {
	    return _react.default.createElement("li", {
	      key: item.label,
	      className: cx('item')
	    }, _react.default.createElement("span", {
	      className: cx('label')
	    }, item.label), item.items ? item.items.map(function (nest) {
	      return _react.default.createElement("span", {
	        key: nest.label,
	        className: cx('category')
	      }, _react.default.createElement("span", {
	        className: cx('categoryLabel')
	      }, nest.label), _react.default.createElement("button", {
	        className: cx('delete'),
	        onClick: function onClick() {
	          return refine(nest.value);
	        }
	      }, translate('clearFilter', nest)));
	    }) : _react.default.createElement("span", {
	      className: cx('category')
	    }, _react.default.createElement("button", {
	      className: cx('delete'),
	      onClick: function onClick() {
	        return refine(item.value);
	      }
	    }, translate('clearFilter', item))));
	  })));
	};
	
	exports.CurrentRefinements = CurrentRefinements;
	
	var itemPropTypes = _propTypes.default.arrayOf(_propTypes.default.shape({
	  label: _propTypes.default.string.isRequired,
	  value: _propTypes.default.func.isRequired,
	  items: function items() {
	    return itemPropTypes.apply(void 0, arguments);
	  }
	}));
	
	CurrentRefinements.propTypes = {
	  items: itemPropTypes.isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	};
	CurrentRefinements.defaultProps = {
	  className: ''
	};
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  clearFilter: '✕'
	})(CurrentRefinements);
	
	exports.default = _default;

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(22));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _pick2 = _interopRequireDefault(__webpack_require__(75));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var _List = _interopRequireDefault(__webpack_require__(77));
	
	var _Link = _interopRequireDefault(__webpack_require__(76));
	
	var cx = (0, _utils.createClassNames)('HierarchicalMenu');
	
	var itemsPropType = _propTypes.default.arrayOf(_propTypes.default.shape({
	  label: _propTypes.default.string.isRequired,
	  value: _propTypes.default.string,
	  count: _propTypes.default.number.isRequired,
	  items: function items() {
	    return itemsPropType.apply(void 0, arguments);
	  }
	}));
	
	var HierarchicalMenu =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(HierarchicalMenu, _Component);
	
	  function HierarchicalMenu() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, HierarchicalMenu);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(HierarchicalMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "renderItem", function (item) {
	      var _this$props = _this.props,
	          createURL = _this$props.createURL,
	          refine = _this$props.refine;
	      return _react.default.createElement(_Link.default, {
	        className: cx('link'),
	        onClick: function onClick() {
	          return refine(item.value);
	        },
	        href: createURL(item.value)
	      }, _react.default.createElement("span", {
	        className: cx('label')
	      }, item.label), ' ', _react.default.createElement("span", {
	        className: cx('count')
	      }, item.count));
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(HierarchicalMenu, [{
	    key: "render",
	    value: function render() {
	      return _react.default.createElement(_List.default, (0, _extends2.default)({
	        renderItem: this.renderItem,
	        cx: cx
	      }, (0, _pick2.default)(this.props, ['translate', 'items', 'showMore', 'limit', 'showMoreLimit', 'isEmpty', 'canRefine', 'className'])));
	    }
	  }]);
	  return HierarchicalMenu;
	}(_react.Component);
	
	(0, _defineProperty2.default)(HierarchicalMenu, "propTypes", {
	  translate: _propTypes.default.func.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  createURL: _propTypes.default.func.isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  items: itemsPropType,
	  showMore: _propTypes.default.bool,
	  className: _propTypes.default.string,
	  limit: _propTypes.default.number,
	  showMoreLimit: _propTypes.default.number,
	  transformItems: _propTypes.default.func
	});
	(0, _defineProperty2.default)(HierarchicalMenu, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  showMore: function showMore(extended) {
	    return extended ? 'Show less' : 'Show more';
	  }
	})(HierarchicalMenu);
	
	exports.default = _default;

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(22));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _utils = __webpack_require__(14);
	
	var _Highlighter = _interopRequireDefault(__webpack_require__(179));
	
	var cx = (0, _utils.createClassNames)('Highlight');
	
	var Highlight = function Highlight(props) {
	  return _react.default.createElement(_Highlighter.default, (0, _extends2.default)({}, props, {
	    highlightProperty: "_highlightResult",
	    cx: cx
	  }));
	};
	
	var _default = Highlight;
	exports.default = _default;

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _utils = __webpack_require__(14);
	
	var cx = (0, _utils.createClassNames)('Hits');
	
	var Hits = function Hits(_ref) {
	  var hits = _ref.hits,
	      _ref$className = _ref.className,
	      className = _ref$className === void 0 ? '' : _ref$className,
	      _ref$hitComponent = _ref.hitComponent,
	      HitComponent = _ref$hitComponent === void 0 ? DefaultHitComponent : _ref$hitComponent;
	  return _react.default.createElement("div", {
	    className: (0, _classnames.default)(cx(''), className)
	  }, _react.default.createElement("ul", {
	    className: cx('list')
	  }, hits.map(function (hit) {
	    return _react.default.createElement("li", {
	      className: cx('item'),
	      key: hit.objectID
	    }, _react.default.createElement(HitComponent, {
	      hit: hit
	    }));
	  })));
	};
	
	var DefaultHitComponent = function DefaultHitComponent(props) {
	  return _react.default.createElement("div", {
	    style: {
	      borderBottom: '1px solid #bbb',
	      paddingBottom: '5px',
	      marginBottom: '5px',
	      wordBreak: 'break-all'
	    }
	  }, JSON.stringify(props).slice(0, 100), "...");
	};
	
	var HitPropTypes = _propTypes.default.shape({
	  objectID: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired
	});
	
	Hits.propTypes = {
	  hits: _propTypes.default.arrayOf(HitPropTypes.isRequired).isRequired,
	  className: _propTypes.default.string,
	  hitComponent: _propTypes.default.func
	};
	var _default = Hits;
	exports.default = _default;

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _utils = __webpack_require__(14);
	
	var _Select = _interopRequireDefault(__webpack_require__(181));
	
	var cx = (0, _utils.createClassNames)('HitsPerPage');
	
	var HitsPerPage =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(HitsPerPage, _Component);
	
	  function HitsPerPage() {
	    (0, _classCallCheck2.default)(this, HitsPerPage);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HitsPerPage).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(HitsPerPage, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          items = _this$props.items,
	          currentRefinement = _this$props.currentRefinement,
	          refine = _this$props.refine,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, _react.default.createElement(_Select.default, {
	        onSelect: refine,
	        selectedItem: currentRefinement,
	        items: items,
	        cx: cx
	      }));
	    }
	  }]);
	  return HitsPerPage;
	}(_react.Component);
	
	(0, _defineProperty2.default)(HitsPerPage, "propTypes", {
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    value: _propTypes.default.number.isRequired,
	    label: _propTypes.default.string
	  })).isRequired,
	  currentRefinement: _propTypes.default.number.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(HitsPerPage, "defaultProps", {
	  className: ''
	});
	var _default = HitsPerPage;
	exports.default = _default;

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var cx = (0, _utils.createClassNames)('InfiniteHits');
	
	var InfiniteHits =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(InfiniteHits, _Component);
	
	  function InfiniteHits() {
	    (0, _classCallCheck2.default)(this, InfiniteHits);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InfiniteHits).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(InfiniteHits, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          HitComponent = _this$props.hitComponent,
	          hits = _this$props.hits,
	          hasMore = _this$props.hasMore,
	          refine = _this$props.refine,
	          translate = _this$props.translate,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, _react.default.createElement("ul", {
	        className: cx('list')
	      }, hits.map(function (hit) {
	        return _react.default.createElement("li", {
	          key: hit.objectID,
	          className: cx('item')
	        }, _react.default.createElement(HitComponent, {
	          hit: hit
	        }));
	      })), _react.default.createElement("button", {
	        className: cx('loadMore', !hasMore && 'loadMore--disabled'),
	        onClick: function onClick() {
	          return refine();
	        },
	        disabled: !hasMore
	      }, translate('loadMore')));
	    }
	  }]);
	  return InfiniteHits;
	}(_react.Component);
	
	InfiniteHits.propTypes = {
	  hits: _propTypes.default.arrayOf(_propTypes.default.object).isRequired,
	  hasMore: _propTypes.default.bool.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string,
	  hitComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func])
	};
	InfiniteHits.defaultProps = {
	  className: '',
	  hitComponent: function hitComponent(hit) {
	    return _react.default.createElement("div", {
	      style: {
	        borderBottom: '1px solid #bbb',
	        paddingBottom: '5px',
	        marginBottom: '5px',
	        wordBreak: 'break-all'
	      }
	    }, JSON.stringify(hit).slice(0, 100), "...");
	  }
	};
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  loadMore: 'Load more'
	})(InfiniteHits);
	
	exports.default = _default;

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _has2 = _interopRequireDefault(__webpack_require__(52));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _Link = _interopRequireDefault(__webpack_require__(76));
	
	var LinkList =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(LinkList, _Component);
	
	  function LinkList() {
	    (0, _classCallCheck2.default)(this, LinkList);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LinkList).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(LinkList, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          cx = _this$props.cx,
	          createURL = _this$props.createURL,
	          items = _this$props.items,
	          onSelect = _this$props.onSelect,
	          canRefine = _this$props.canRefine;
	      return _react.default.createElement("ul", {
	        className: cx('list', !canRefine && 'list--noRefinement')
	      }, items.map(function (item) {
	        return _react.default.createElement("li", {
	          key: (0, _has2.default)(item, 'key') ? item.key : item.value,
	          className: cx('item', item.selected && !item.disabled && 'item--selected', item.disabled && 'item--disabled', item.modifier)
	        }, item.disabled ? _react.default.createElement("span", {
	          className: cx('link')
	        }, (0, _has2.default)(item, 'label') ? item.label : item.value) : _react.default.createElement(_Link.default, {
	          className: cx('link', item.selected && 'link--selected'),
	          "aria-label": item.ariaLabel,
	          href: createURL(item.value),
	          onClick: function onClick() {
	            return onSelect(item.value);
	          }
	        }, (0, _has2.default)(item, 'label') ? item.label : item.value));
	      }));
	    }
	  }]);
	  return LinkList;
	}(_react.Component);
	
	exports.default = LinkList;
	(0, _defineProperty2.default)(LinkList, "propTypes", {
	  cx: _propTypes.default.func.isRequired,
	  createURL: _propTypes.default.func.isRequired,
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.object]).isRequired,
	    key: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
	    label: _propTypes.default.node,
	    modifier: _propTypes.default.string,
	    ariaLabel: _propTypes.default.string,
	    disabled: _propTypes.default.bool
	  })),
	  onSelect: _propTypes.default.func.isRequired,
	  canRefine: _propTypes.default.bool.isRequired
	});

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(22));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _pick2 = _interopRequireDefault(__webpack_require__(75));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var _Highlight = _interopRequireDefault(__webpack_require__(114));
	
	var _List = _interopRequireDefault(__webpack_require__(77));
	
	var _Link = _interopRequireDefault(__webpack_require__(76));
	
	var cx = (0, _utils.createClassNames)('Menu');
	
	var Menu =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Menu, _Component);
	
	  function Menu() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Menu);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "renderItem", function (item, resetQuery) {
	      var createURL = _this.props.createURL;
	      var label = _this.props.isFromSearch ? _react.default.createElement(_Highlight.default, {
	        attribute: "label",
	        hit: item
	      }) : item.label;
	      return _react.default.createElement(_Link.default, {
	        className: cx('link'),
	        onClick: function onClick() {
	          return _this.selectItem(item, resetQuery);
	        },
	        href: createURL(item.value)
	      }, _react.default.createElement("span", {
	        className: cx('label')
	      }, label), ' ', _react.default.createElement("span", {
	        className: cx('count')
	      }, item.count));
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "selectItem", function (item, resetQuery) {
	      resetQuery();
	
	      _this.props.refine(item.value);
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(Menu, [{
	    key: "render",
	    value: function render() {
	      return _react.default.createElement(_List.default, (0, _extends2.default)({
	        renderItem: this.renderItem,
	        selectItem: this.selectItem,
	        cx: cx
	      }, (0, _pick2.default)(this.props, ['translate', 'items', 'showMore', 'limit', 'showMoreLimit', 'isFromSearch', 'searchForItems', 'searchable', 'canRefine', 'className'])));
	    }
	  }]);
	  return Menu;
	}(_react.Component);
	
	(0, _defineProperty2.default)(Menu, "propTypes", {
	  translate: _propTypes.default.func.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  searchForItems: _propTypes.default.func.isRequired,
	  searchable: _propTypes.default.bool,
	  createURL: _propTypes.default.func.isRequired,
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    label: _propTypes.default.string.isRequired,
	    value: _propTypes.default.string.isRequired,
	    count: _propTypes.default.number.isRequired,
	    isRefined: _propTypes.default.bool.isRequired
	  })),
	  isFromSearch: _propTypes.default.bool.isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  showMore: _propTypes.default.bool,
	  limit: _propTypes.default.number,
	  showMoreLimit: _propTypes.default.number,
	  transformItems: _propTypes.default.func,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(Menu, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  showMore: function showMore(extended) {
	    return extended ? 'Show less' : 'Show more';
	  },
	  noResults: 'No results',
	  submit: null,
	  reset: null,
	  resetTitle: 'Clear the search query.',
	  submitTitle: 'Submit your search query.',
	  placeholder: 'Search here…'
	})(Menu);
	
	exports.default = _default;

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _find2 = _interopRequireDefault(__webpack_require__(26));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var cx = (0, _utils.createClassNames)('MenuSelect');
	
	var MenuSelect =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(MenuSelect, _Component);
	
	  function MenuSelect() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, MenuSelect);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MenuSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "handleSelectChange", function (_ref) {
	      var value = _ref.target.value;
	
	      _this.props.refine(value === 'ais__see__all__option' ? '' : value);
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(MenuSelect, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          items = _this$props.items,
	          canRefine = _this$props.canRefine,
	          translate = _this$props.translate,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	      }, _react.default.createElement("select", {
	        value: this.selectedValue,
	        onChange: this.handleSelectChange,
	        className: cx('select')
	      }, _react.default.createElement("option", {
	        value: "ais__see__all__option",
	        className: cx('option')
	      }, translate('seeAllOption')), items.map(function (item) {
	        return _react.default.createElement("option", {
	          key: item.value,
	          value: item.value,
	          className: cx('option')
	        }, item.label, " (", item.count, ")");
	      })));
	    }
	  }, {
	    key: "selectedValue",
	    get: function get() {
	      var _ref2 = (0, _find2.default)(this.props.items, {
	        isRefined: true
	      }) || {
	        value: 'ais__see__all__option'
	      },
	          value = _ref2.value;
	
	      return value;
	    }
	  }]);
	  return MenuSelect;
	}(_react.Component);
	
	(0, _defineProperty2.default)(MenuSelect, "propTypes", {
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    label: _propTypes.default.string.isRequired,
	    value: _propTypes.default.string.isRequired,
	    count: _propTypes.default.oneOfType([_propTypes.default.number.isRequired, _propTypes.default.string.isRequired]),
	    isRefined: _propTypes.default.bool.isRequired
	  })).isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(MenuSelect, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  seeAllOption: 'See all'
	})(MenuSelect);
	
	exports.default = _default;

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(20));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var _List = _interopRequireDefault(__webpack_require__(77));
	
	var cx = (0, _utils.createClassNames)('NumericMenu');
	
	var NumericMenu =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(NumericMenu, _Component);
	
	  function NumericMenu() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, NumericMenu);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(NumericMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "renderItem", function (item) {
	      var _this$props = _this.props,
	          refine = _this$props.refine,
	          translate = _this$props.translate;
	      return _react.default.createElement("label", {
	        className: cx('label')
	      }, _react.default.createElement("input", {
	        className: cx('radio'),
	        type: "radio",
	        checked: item.isRefined,
	        disabled: item.noRefinement,
	        onChange: function onChange() {
	          return refine(item.value);
	        }
	      }), _react.default.createElement("span", {
	        className: cx('labelText')
	      }, item.value === '' ? translate('all') : item.label));
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(NumericMenu, [{
	    key: "render",
	    value: function render() {
	      var _this$props2 = this.props,
	          items = _this$props2.items,
	          canRefine = _this$props2.canRefine,
	          className = _this$props2.className;
	      return _react.default.createElement(_List.default, {
	        renderItem: this.renderItem,
	        showMore: false,
	        canRefine: canRefine,
	        cx: cx,
	        items: items.map(function (item) {
	          return (0, _objectSpread2.default)({}, item, {
	            key: item.value
	          });
	        }),
	        className: className
	      });
	    }
	  }]);
	  return NumericMenu;
	}(_react.Component);
	
	(0, _defineProperty2.default)(NumericMenu, "propTypes", {
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    label: _propTypes.default.node.isRequired,
	    value: _propTypes.default.string.isRequired,
	    isRefined: _propTypes.default.bool.isRequired,
	    noRefinement: _propTypes.default.bool.isRequired
	  })).isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(NumericMenu, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  all: 'All'
	})(NumericMenu);
	
	exports.default = _default;

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(22));
	
	var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(125));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _range2 = _interopRequireDefault(__webpack_require__(336));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var _LinkList = _interopRequireDefault(__webpack_require__(389));
	
	var cx = (0, _utils.createClassNames)('Pagination'); // Determines the size of the widget (the number of pages displayed - that the user can directly click on)
	
	function calculateSize(padding, maxPages) {
	  return Math.min(2 * padding + 1, maxPages);
	}
	
	function calculatePaddingLeft(currentPage, padding, maxPages, size) {
	  if (currentPage <= padding) {
	    return currentPage;
	  }
	
	  if (currentPage >= maxPages - padding) {
	    return size - (maxPages - currentPage);
	  }
	
	  return padding + 1;
	} // Retrieve the correct page range to populate the widget
	
	
	function getPages(currentPage, maxPages, padding) {
	  var size = calculateSize(padding, maxPages); // If the widget size is equal to the max number of pages, return the entire page range
	
	  if (size === maxPages) return (0, _range2.default)(1, maxPages + 1);
	  var paddingLeft = calculatePaddingLeft(currentPage, padding, maxPages, size);
	  var paddingRight = size - paddingLeft;
	  var first = currentPage - paddingLeft;
	  var last = currentPage + paddingRight;
	  return (0, _range2.default)(first + 1, last + 1);
	}
	
	var Pagination =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Pagination, _Component);
	
	  function Pagination() {
	    (0, _classCallCheck2.default)(this, Pagination);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Pagination).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(Pagination, [{
	    key: "getItem",
	    value: function getItem(modifier, translationKey, value) {
	      var _this$props = this.props,
	          nbPages = _this$props.nbPages,
	          totalPages = _this$props.totalPages,
	          translate = _this$props.translate;
	      return {
	        key: "".concat(modifier, ".").concat(value),
	        modifier: modifier,
	        disabled: value < 1 || value >= Math.min(totalPages, nbPages),
	        label: translate(translationKey, value),
	        value: value,
	        ariaLabel: translate("aria".concat((0, _utils.capitalize)(translationKey)), value)
	      };
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props2 = this.props,
	          ListComponent = _this$props2.listComponent,
	          nbPages = _this$props2.nbPages,
	          totalPages = _this$props2.totalPages,
	          currentRefinement = _this$props2.currentRefinement,
	          padding = _this$props2.padding,
	          showFirst = _this$props2.showFirst,
	          showPrevious = _this$props2.showPrevious,
	          showNext = _this$props2.showNext,
	          showLast = _this$props2.showLast,
	          refine = _this$props2.refine,
	          createURL = _this$props2.createURL,
	          canRefine = _this$props2.canRefine,
	          translate = _this$props2.translate,
	          className = _this$props2.className,
	          otherProps = (0, _objectWithoutProperties2.default)(_this$props2, ["listComponent", "nbPages", "totalPages", "currentRefinement", "padding", "showFirst", "showPrevious", "showNext", "showLast", "refine", "createURL", "canRefine", "translate", "className"]);
	      var maxPages = Math.min(nbPages, totalPages);
	      var lastPage = maxPages;
	      var items = [];
	
	      if (showFirst) {
	        items.push({
	          key: 'first',
	          modifier: 'item--firstPage',
	          disabled: currentRefinement === 1,
	          label: translate('first'),
	          value: 1,
	          ariaLabel: translate('ariaFirst')
	        });
	      }
	
	      if (showPrevious) {
	        items.push({
	          key: 'previous',
	          modifier: 'item--previousPage',
	          disabled: currentRefinement === 1,
	          label: translate('previous'),
	          value: currentRefinement - 1,
	          ariaLabel: translate('ariaPrevious')
	        });
	      }
	
	      items = items.concat(getPages(currentRefinement, maxPages, padding).map(function (value) {
	        return {
	          key: value,
	          modifier: 'item--page',
	          label: translate('page', value),
	          value: value,
	          selected: value === currentRefinement,
	          ariaLabel: translate('ariaPage', value)
	        };
	      }));
	
	      if (showNext) {
	        items.push({
	          key: 'next',
	          modifier: 'item--nextPage',
	          disabled: currentRefinement === lastPage || lastPage <= 1,
	          label: translate('next'),
	          value: currentRefinement + 1,
	          ariaLabel: translate('ariaNext')
	        });
	      }
	
	      if (showLast) {
	        items.push({
	          key: 'last',
	          modifier: 'item--lastPage',
	          disabled: currentRefinement === lastPage || lastPage <= 1,
	          label: translate('last'),
	          value: lastPage,
	          ariaLabel: translate('ariaLast')
	        });
	      }
	
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	      }, _react.default.createElement(ListComponent, (0, _extends2.default)({}, otherProps, {
	        cx: cx,
	        items: items,
	        onSelect: refine,
	        createURL: createURL,
	        canRefine: canRefine
	      })));
	    }
	  }]);
	  return Pagination;
	}(_react.Component);
	
	(0, _defineProperty2.default)(Pagination, "propTypes", {
	  nbPages: _propTypes.default.number.isRequired,
	  currentRefinement: _propTypes.default.number.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  createURL: _propTypes.default.func.isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  listComponent: _propTypes.default.func,
	  showFirst: _propTypes.default.bool,
	  showPrevious: _propTypes.default.bool,
	  showNext: _propTypes.default.bool,
	  showLast: _propTypes.default.bool,
	  padding: _propTypes.default.number,
	  totalPages: _propTypes.default.number,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(Pagination, "defaultProps", {
	  listComponent: _LinkList.default,
	  showFirst: true,
	  showPrevious: true,
	  showNext: true,
	  showLast: false,
	  padding: 3,
	  totalPages: Infinity,
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  previous: '‹',
	  next: '›',
	  first: '«',
	  last: '»',
	  page: function page(currentRefinement) {
	    return currentRefinement.toString();
	  },
	  ariaPrevious: 'Previous page',
	  ariaNext: 'Next page',
	  ariaFirst: 'First page',
	  ariaLast: 'Last page',
	  ariaPage: function ariaPage(currentRefinement) {
	    return "Page ".concat(currentRefinement.toString());
	  }
	})(Pagination);
	
	exports.default = _default;

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _utils = __webpack_require__(14);
	
	var cx = (0, _utils.createClassNames)('Panel');
	
	var Panel =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Panel, _Component);
	
	  function Panel() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, Panel);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Panel)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "state", {
	      canRefine: true
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "setCanRefine", function (nextCanRefine) {
	      _this.setState({
	        canRefine: nextCanRefine
	      });
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(Panel, [{
	    key: "getChildContext",
	    value: function getChildContext() {
	      return {
	        setCanRefine: this.setCanRefine
	      };
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          children = _this$props.children,
	          className = _this$props.className,
	          header = _this$props.header,
	          footer = _this$props.footer;
	      var canRefine = this.state.canRefine;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	      }, header && _react.default.createElement("div", {
	        className: cx('header')
	      }, header), _react.default.createElement("div", {
	        className: cx('body')
	      }, children), footer && _react.default.createElement("div", {
	        className: cx('footer')
	      }, footer));
	    }
	  }]);
	  return Panel;
	}(_react.Component);
	
	(0, _defineProperty2.default)(Panel, "propTypes", {
	  children: _propTypes.default.node.isRequired,
	  className: _propTypes.default.string,
	  header: _propTypes.default.node,
	  footer: _propTypes.default.node
	});
	(0, _defineProperty2.default)(Panel, "childContextTypes", {
	  setCanRefine: _propTypes.default.func.isRequired
	});
	(0, _defineProperty2.default)(Panel, "defaultProps", {
	  className: '',
	  header: null,
	  footer: null
	});
	var _default = Panel;
	exports.default = _default;

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var cx = (0, _utils.createClassNames)('PoweredBy');
	/* eslint-disable max-len */
	
	var AlgoliaLogo = function AlgoliaLogo() {
	  return _react.default.createElement("svg", {
	    xmlns: "http://www.w3.org/2000/svg",
	    baseProfile: "basic",
	    viewBox: "0 0 1366 362",
	    width: "100",
	    height: "27",
	    className: cx('logo')
	  }, _react.default.createElement("linearGradient", {
	    id: "g",
	    x1: "428.258",
	    x2: "434.145",
	    y1: "404.15",
	    y2: "409.85",
	    gradientUnits: "userSpaceOnUse",
	    gradientTransform: "matrix(94.045 0 0 -94.072 -40381.527 38479.52)"
	  }, _react.default.createElement("stop", {
	    offset: "0",
	    stopColor: "#00AEFF"
	  }), _react.default.createElement("stop", {
	    offset: "1",
	    stopColor: "#3369E7"
	  })), _react.default.createElement("path", {
	    d: "M61.8 15.4h242.8c23.9 0 43.4 19.4 43.4 43.4v242.9c0 23.9-19.4 43.4-43.4 43.4H61.8c-23.9 0-43.4-19.4-43.4-43.4v-243c0-23.9 19.4-43.3 43.4-43.3z",
	    fill: "url(#g)"
	  }), _react.default.createElement("path", {
	    d: "M187 98.7c-51.4 0-93.1 41.7-93.1 93.2S135.6 285 187 285s93.1-41.7 93.1-93.2-41.6-93.1-93.1-93.1zm0 158.8c-36.2 0-65.6-29.4-65.6-65.6s29.4-65.6 65.6-65.6 65.6 29.4 65.6 65.6-29.3 65.6-65.6 65.6zm0-117.8v48.9c0 1.4 1.5 2.4 2.8 1.7l43.4-22.5c1-.5 1.3-1.7.8-2.7-9-15.8-25.7-26.6-45-27.3-1 0-2 .8-2 1.9zm-60.8-35.9l-5.7-5.7c-5.6-5.6-14.6-5.6-20.2 0l-6.8 6.8c-5.6 5.6-5.6 14.6 0 20.2l5.6 5.6c.9.9 2.2.7 3-.2 3.3-4.5 6.9-8.8 10.9-12.8 4.1-4.1 8.3-7.7 12.9-11 1-.6 1.1-2 .3-2.9zM217.5 89V77.7c0-7.9-6.4-14.3-14.3-14.3h-33.3c-7.9 0-14.3 6.4-14.3 14.3v11.6c0 1.3 1.2 2.2 2.5 1.9 9.3-2.7 19.1-4.1 29-4.1 9.5 0 18.9 1.3 28 3.8 1.2.3 2.4-.6 2.4-1.9z",
	    fill: "#FFFFFF"
	  }), _react.default.createElement("path", {
	    d: "M842.5 267.6c0 26.7-6.8 46.2-20.5 58.6-13.7 12.4-34.6 18.6-62.8 18.6-10.3 0-31.7-2-48.8-5.8l6.3-31c14.3 3 33.2 3.8 43.1 3.8 15.7 0 26.9-3.2 33.6-9.6s10-15.9 10-28.5v-6.4c-3.9 1.9-9 3.8-15.3 5.8-6.3 1.9-13.6 2.9-21.8 2.9-10.8 0-20.6-1.7-29.5-5.1-8.9-3.4-16.6-8.4-22.9-15-6.3-6.6-11.3-14.9-14.8-24.8s-5.3-27.6-5.3-40.6c0-12.2 1.9-27.5 5.6-37.7 3.8-10.2 9.2-19 16.5-26.3 7.2-7.3 16-12.9 26.3-17s22.4-6.7 35.5-6.7c12.7 0 24.4 1.6 35.8 3.5 11.4 1.9 21.1 3.9 29 6.1v155.2zm-108.7-77.2c0 16.4 3.6 34.6 10.8 42.2 7.2 7.6 16.5 11.4 27.9 11.4 6.2 0 12.1-.9 17.6-2.6 5.5-1.7 9.9-3.7 13.4-6.1v-97.1c-2.8-.6-14.5-3-25.8-3.3-14.2-.4-25 5.4-32.6 14.7-7.5 9.3-11.3 25.6-11.3 40.8zm294.3 0c0 13.2-1.9 23.2-5.8 34.1s-9.4 20.2-16.5 27.9c-7.1 7.7-15.6 13.7-25.6 17.9s-25.4 6.6-33.1 6.6c-7.7-.1-23-2.3-32.9-6.6-9.9-4.3-18.4-10.2-25.5-17.9-7.1-7.7-12.6-17-16.6-27.9s-6-20.9-6-34.1c0-13.2 1.8-25.9 5.8-36.7 4-10.8 9.6-20 16.8-27.7s15.8-13.6 25.6-17.8c9.9-4.2 20.8-6.2 32.6-6.2s22.7 2.1 32.7 6.2c10 4.2 18.6 10.1 25.6 17.8 7.1 7.7 12.6 16.9 16.6 27.7 4.2 10.8 6.3 23.5 6.3 36.7zm-40 .1c0-16.9-3.7-31-10.9-40.8-7.2-9.9-17.3-14.8-30.2-14.8-12.9 0-23 4.9-30.2 14.8-7.2 9.9-10.7 23.9-10.7 40.8 0 17.1 3.6 28.6 10.8 38.5 7.2 10 17.3 14.9 30.2 14.9 12.9 0 23-5 30.2-14.9 7.2-10 10.8-21.4 10.8-38.5zm127.1 86.4c-64.1.3-64.1-51.8-64.1-60.1L1051 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9zm68.9 0h-39.3V108.1l39.3-6.2v175zm-19.7-193.5c13.1 0 23.8-10.6 23.8-23.7S1177.6 36 1164.4 36s-23.8 10.6-23.8 23.7 10.7 23.7 23.8 23.7zm117.4 18.6c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4s8.9 13.5 11.1 21.7c2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6s-25.9 2.7-41.1 2.7c-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8s9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2s-10-3-16.7-3c-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1s19.5-2.6 30.3-2.6zm3.3 141.9c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18 5.9 3.6 13.7 5.3 23.6 5.3zM512.9 103c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4 5.3 5.8 8.9 13.5 11.1 21.7 2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6-12.2 1.8-25.9 2.7-41.1 2.7-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8 4.7.5 9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2-4.4-1.7-10-3-16.7-3-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1 9.4-1.8 19.5-2.6 30.3-2.6zm3.4 142c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18s13.7 5.3 23.6 5.3zm158.5 31.9c-64.1.3-64.1-51.8-64.1-60.1L610.6 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9z",
	    fill: "#182359"
	  }));
	};
	/* eslint-enable max-len */
	
	
	var PoweredBy =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(PoweredBy, _Component);
	
	  function PoweredBy() {
	    (0, _classCallCheck2.default)(this, PoweredBy);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PoweredBy).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(PoweredBy, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          url = _this$props.url,
	          translate = _this$props.translate,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, _react.default.createElement("span", {
	        className: cx('text')
	      }, translate('searchBy')), ' ', _react.default.createElement("a", {
	        href: url,
	        target: "_blank",
	        className: cx('link'),
	        "aria-label": "Algolia",
	        rel: "noopener noreferrer"
	      }, _react.default.createElement(AlgoliaLogo, null)));
	    }
	  }]);
	  return PoweredBy;
	}(_react.Component);
	
	(0, _defineProperty2.default)(PoweredBy, "propTypes", {
	  url: _propTypes.default.string.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  searchBy: 'Search by'
	})(PoweredBy);
	
	exports.default = _default;

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.RawRangeInput = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var cx = (0, _utils.createClassNames)('RangeInput');
	
	var RawRangeInput =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(RawRangeInput, _Component);
	
	  function RawRangeInput(props) {
	    var _this;
	
	    (0, _classCallCheck2.default)(this, RawRangeInput);
	    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RawRangeInput).call(this, props));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "onSubmit", function (e) {
	      e.preventDefault();
	
	      _this.props.refine({
	        min: _this.state.from,
	        max: _this.state.to
	      });
	    });
	    _this.state = _this.normalizeStateForRendering(props);
	    return _this;
	  }
	
	  (0, _createClass2.default)(RawRangeInput, [{
	    key: "componentWillReceiveProps",
	    value: function componentWillReceiveProps(nextProps) {
	      // In react@16.0.0 the call to setState on the inputs trigger this lifecycle hook
	      // because the context has changed (for react). I don't think that the bug is related
	      // to react because I failed to reproduce it with a simple hierarchy of components.
	      // The workaround here is to check the differences between previous & next props in order
	      // to avoid to override current state when values are not yet refined. In the react documentation,
	      // they DON'T categorically say that setState never run componentWillReceiveProps.
	      // see: https://reactjs.org/docs/react-component.html#componentwillreceiveprops
	      if (nextProps.canRefine && (this.props.canRefine !== nextProps.canRefine || this.props.currentRefinement.min !== nextProps.currentRefinement.min || this.props.currentRefinement.max !== nextProps.currentRefinement.max)) {
	        this.setState(this.normalizeStateForRendering(nextProps));
	      }
	    }
	  }, {
	    key: "normalizeStateForRendering",
	    value: function normalizeStateForRendering(props) {
	      var canRefine = props.canRefine,
	          rangeMin = props.min,
	          rangeMax = props.max;
	      var _props$currentRefinem = props.currentRefinement,
	          valueMin = _props$currentRefinem.min,
	          valueMax = _props$currentRefinem.max;
	      return {
	        from: canRefine && valueMin !== undefined && valueMin !== rangeMin ? valueMin : '',
	        to: canRefine && valueMax !== undefined && valueMax !== rangeMax ? valueMax : ''
	      };
	    }
	  }, {
	    key: "normalizeRangeForRendering",
	    value: function normalizeRangeForRendering(_ref) {
	      var canRefine = _ref.canRefine,
	          min = _ref.min,
	          max = _ref.max;
	      var hasMin = min !== undefined;
	      var hasMax = max !== undefined;
	      return {
	        min: canRefine && hasMin && hasMax ? min : '',
	        max: canRefine && hasMin && hasMax ? max : ''
	      };
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this2 = this;
	
	      var _this$state = this.state,
	          from = _this$state.from,
	          to = _this$state.to;
	      var _this$props = this.props,
	          precision = _this$props.precision,
	          translate = _this$props.translate,
	          canRefine = _this$props.canRefine,
	          className = _this$props.className;
	
	      var _this$normalizeRangeF = this.normalizeRangeForRendering(this.props),
	          min = _this$normalizeRangeF.min,
	          max = _this$normalizeRangeF.max;
	
	      var step = 1 / Math.pow(10, precision);
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	      }, _react.default.createElement("form", {
	        className: cx('form'),
	        onSubmit: this.onSubmit
	      }, _react.default.createElement("input", {
	        className: cx('input', 'input--min'),
	        type: "number",
	        min: min,
	        max: max,
	        value: from,
	        step: step,
	        placeholder: min,
	        disabled: !canRefine,
	        onChange: function onChange(e) {
	          return _this2.setState({
	            from: e.currentTarget.value
	          });
	        }
	      }), _react.default.createElement("span", {
	        className: cx('separator')
	      }, translate('separator')), _react.default.createElement("input", {
	        className: cx('input', 'input--max'),
	        type: "number",
	        min: min,
	        max: max,
	        value: to,
	        step: step,
	        placeholder: max,
	        disabled: !canRefine,
	        onChange: function onChange(e) {
	          return _this2.setState({
	            to: e.currentTarget.value
	          });
	        }
	      }), _react.default.createElement("button", {
	        className: cx('submit'),
	        type: "submit"
	      }, translate('submit'))));
	    }
	  }]);
	  return RawRangeInput;
	}(_react.Component);
	
	exports.RawRangeInput = RawRangeInput;
	(0, _defineProperty2.default)(RawRangeInput, "propTypes", {
	  canRefine: _propTypes.default.bool.isRequired,
	  precision: _propTypes.default.number.isRequired,
	  translate: _propTypes.default.func.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  min: _propTypes.default.number,
	  max: _propTypes.default.number,
	  currentRefinement: _propTypes.default.shape({
	    min: _propTypes.default.number,
	    max: _propTypes.default.number
	  }),
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(RawRangeInput, "defaultProps", {
	  currentRefinement: {},
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  submit: 'ok',
	  separator: 'to'
	})(RawRangeInput);
	
	exports.default = _default;

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _objectSpread2 = _interopRequireDefault(__webpack_require__(20));
	
	var _extends2 = _interopRequireDefault(__webpack_require__(22));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _fill2 = _interopRequireDefault(__webpack_require__(324));
	
	var _find2 = _interopRequireDefault(__webpack_require__(26));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var cx = (0, _utils.createClassNames)('RatingMenu');
	
	var RatingMenu =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(RatingMenu, _Component);
	
	  function RatingMenu() {
	    (0, _classCallCheck2.default)(this, RatingMenu);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RatingMenu).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(RatingMenu, [{
	    key: "onClick",
	    value: function onClick(min, max, e) {
	      e.preventDefault();
	      e.stopPropagation();
	
	      if (min === this.props.currentRefinement.min && max === this.props.currentRefinement.max) {
	        this.props.refine({
	          min: this.props.min,
	          max: this.props.max
	        });
	      } else {
	        this.props.refine({
	          min: min,
	          max: max
	        });
	      }
	    }
	  }, {
	    key: "buildItem",
	    value: function buildItem(_ref) {
	      var max = _ref.max,
	          lowerBound = _ref.lowerBound,
	          count = _ref.count,
	          translate = _ref.translate,
	          createURL = _ref.createURL,
	          isLastSelectableItem = _ref.isLastSelectableItem;
	      var disabled = !count;
	      var isCurrentMinLower = this.props.currentRefinement.min < lowerBound;
	      var selected = isLastSelectableItem && isCurrentMinLower || !disabled && lowerBound === this.props.currentRefinement.min && max === this.props.currentRefinement.max;
	      var icons = [];
	      var rating = 0;
	
	      for (var icon = 0; icon < max; icon++) {
	        if (icon < lowerBound) {
	          rating++;
	        }
	
	        icons.push([_react.default.createElement("svg", {
	          key: icon,
	          className: cx('starIcon', icon >= lowerBound ? 'starIcon--empty' : 'starIcon--full'),
	          "aria-hidden": "true",
	          width: "24",
	          height: "24"
	        }, _react.default.createElement("use", {
	          xlinkHref: "#".concat(cx(icon >= lowerBound ? 'starEmptySymbol' : 'starSymbol'))
	        })), ' ']);
	      } // The last item of the list (the default item), should not
	      // be clickable if it is selected.
	
	
	      var isLastAndSelect = isLastSelectableItem && selected;
	      var onClickHandler = disabled || isLastAndSelect ? {} : {
	        href: createURL({
	          min: lowerBound,
	          max: max
	        }),
	        onClick: this.onClick.bind(this, lowerBound, max)
	      };
	      return _react.default.createElement("li", {
	        key: lowerBound,
	        className: cx('item', selected && 'item--selected', disabled && 'item--disabled')
	      }, _react.default.createElement("a", (0, _extends2.default)({
	        className: cx('link'),
	        "aria-label": "".concat(rating).concat(translate('ratingLabel'))
	      }, onClickHandler), icons, _react.default.createElement("span", {
	        className: cx('label'),
	        "aria-hidden": "true"
	      }, translate('ratingLabel')), ' ', _react.default.createElement("span", {
	        className: cx('count')
	      }, count)));
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this = this;
	
	      var _this$props = this.props,
	          min = _this$props.min,
	          max = _this$props.max,
	          translate = _this$props.translate,
	          count = _this$props.count,
	          createURL = _this$props.createURL,
	          canRefine = _this$props.canRefine,
	          className = _this$props.className; // min & max are always set when there is a results, otherwise it means
	      // that we don't want to render anything since we don't have any values.
	
	      var limitMin = min !== undefined && min >= 0 ? min : 1;
	      var limitMax = max !== undefined && max >= 0 ? max : 0;
	      var inclusiveLength = limitMax - limitMin + 1;
	      var safeInclusiveLength = Math.max(inclusiveLength, 0);
	      var values = count.map(function (item) {
	        return (0, _objectSpread2.default)({}, item, {
	          value: parseFloat(item.value)
	        });
	      }).filter(function (item) {
	        return item.value >= limitMin && item.value <= limitMax;
	      });
	      var range = (0, _fill2.default)(new Array(safeInclusiveLength), null).map(function (_, index) {
	        var element = (0, _find2.default)(values, function (item) {
	          return item.value === limitMax - index;
	        });
	        var placeholder = {
	          value: limitMax - index,
	          count: 0,
	          total: 0
	        };
	        return element || placeholder;
	      }).reduce(function (acc, item, index) {
	        return acc.concat((0, _objectSpread2.default)({}, item, {
	          total: index === 0 ? item.count : acc[index - 1].total + item.count
	        }));
	      }, []);
	      var items = range.map(function (item, index) {
	        return _this.buildItem({
	          lowerBound: item.value,
	          count: item.total,
	          isLastSelectableItem: range.length - 1 === index,
	          max: limitMax,
	          translate: translate,
	          createURL: createURL
	        });
	      });
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	      }, _react.default.createElement("svg", {
	        xmlns: "http://www.w3.org/2000/svg",
	        style: {
	          display: 'none'
	        }
	      }, _react.default.createElement("symbol", {
	        id: cx('starSymbol'),
	        viewBox: "0 0 24 24"
	      }, _react.default.createElement("path", {
	        d: "M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z"
	      })), _react.default.createElement("symbol", {
	        id: cx('starEmptySymbol'),
	        viewBox: "0 0 24 24"
	      }, _react.default.createElement("path", {
	        d: "M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z"
	      }))), _react.default.createElement("ul", {
	        className: cx('list', !canRefine && 'list--noRefinement')
	      }, items));
	    }
	  }]);
	  return RatingMenu;
	}(_react.Component);
	
	(0, _defineProperty2.default)(RatingMenu, "propTypes", {
	  translate: _propTypes.default.func.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  createURL: _propTypes.default.func.isRequired,
	  min: _propTypes.default.number,
	  max: _propTypes.default.number,
	  currentRefinement: _propTypes.default.shape({
	    min: _propTypes.default.number,
	    max: _propTypes.default.number
	  }),
	  count: _propTypes.default.arrayOf(_propTypes.default.shape({
	    value: _propTypes.default.string,
	    count: _propTypes.default.number
	  })),
	  canRefine: _propTypes.default.bool.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(RatingMenu, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  ratingLabel: ' & Up'
	})(RatingMenu);
	
	exports.default = _default;

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(22));
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf3 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(19));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _pick2 = _interopRequireDefault(__webpack_require__(75));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var _Highlight = _interopRequireDefault(__webpack_require__(114));
	
	var _List = _interopRequireDefault(__webpack_require__(77));
	
	var cx = (0, _utils.createClassNames)('RefinementList');
	
	var RefinementList =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(RefinementList, _Component);
	
	  function RefinementList() {
	    var _getPrototypeOf2;
	
	    var _this;
	
	    (0, _classCallCheck2.default)(this, RefinementList);
	
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(RefinementList)).call.apply(_getPrototypeOf2, [this].concat(args)));
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "state", {
	      query: ''
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "selectItem", function (item, resetQuery) {
	      resetQuery();
	
	      _this.props.refine(item.value);
	    });
	    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "renderItem", function (item, resetQuery) {
	      var label = _this.props.isFromSearch ? _react.default.createElement(_Highlight.default, {
	        attribute: "label",
	        hit: item
	      }) : item.label;
	      return _react.default.createElement("label", {
	        className: cx('label')
	      }, _react.default.createElement("input", {
	        className: cx('checkbox'),
	        type: "checkbox",
	        checked: item.isRefined,
	        onChange: function onChange() {
	          return _this.selectItem(item, resetQuery);
	        }
	      }), _react.default.createElement("span", {
	        className: cx('labelText')
	      }, label), ' ', _react.default.createElement("span", {
	        className: cx('count')
	      }, item.count.toLocaleString()));
	    });
	    return _this;
	  }
	
	  (0, _createClass2.default)(RefinementList, [{
	    key: "render",
	    value: function render() {
	      return _react.default.createElement(_List.default, (0, _extends2.default)({
	        renderItem: this.renderItem,
	        selectItem: this.selectItem,
	        cx: cx
	      }, (0, _pick2.default)(this.props, ['translate', 'items', 'showMore', 'limit', 'showMoreLimit', 'isFromSearch', 'searchForItems', 'searchable', 'canRefine', 'className']), {
	        query: this.state.query
	      }));
	    }
	  }]);
	  return RefinementList;
	}(_react.Component);
	
	(0, _defineProperty2.default)(RefinementList, "propTypes", {
	  translate: _propTypes.default.func.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  searchForItems: _propTypes.default.func.isRequired,
	  searchable: _propTypes.default.bool,
	  createURL: _propTypes.default.func.isRequired,
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    label: _propTypes.default.string.isRequired,
	    value: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,
	    count: _propTypes.default.number.isRequired,
	    isRefined: _propTypes.default.bool.isRequired
	  })),
	  isFromSearch: _propTypes.default.bool.isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  showMore: _propTypes.default.bool,
	  limit: _propTypes.default.number,
	  showMoreLimit: _propTypes.default.number,
	  transformItems: _propTypes.default.func,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(RefinementList, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  showMore: function showMore(extended) {
	    return extended ? 'Show less' : 'Show more';
	  },
	  noResults: 'No results',
	  submit: null,
	  reset: null,
	  resetTitle: 'Clear the search query.',
	  submitTitle: 'Submit your search query.',
	  placeholder: 'Search here…'
	})(RefinementList);
	
	exports.default = _default;

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _utils = __webpack_require__(14);
	
	var cx = (0, _utils.createClassNames)('ScrollTo');
	
	var ScrollTo =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(ScrollTo, _Component);
	
	  function ScrollTo() {
	    (0, _classCallCheck2.default)(this, ScrollTo);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ScrollTo).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(ScrollTo, [{
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps) {
	      var _this$props = this.props,
	          value = _this$props.value,
	          hasNotChanged = _this$props.hasNotChanged;
	
	      if (value !== prevProps.value && hasNotChanged) {
	        this.el.scrollIntoView();
	      }
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this = this;
	
	      return _react.default.createElement("div", {
	        ref: function ref(_ref) {
	          return _this.el = _ref;
	        },
	        className: cx('')
	      }, this.props.children);
	    }
	  }]);
	  return ScrollTo;
	}(_react.Component);
	
	(0, _defineProperty2.default)(ScrollTo, "propTypes", {
	  value: _propTypes.default.any,
	  children: _propTypes.default.node,
	  hasNotChanged: _propTypes.default.bool
	});
	var _default = ScrollTo;
	exports.default = _default;

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _extends2 = _interopRequireDefault(__webpack_require__(22));
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _utils = __webpack_require__(14);
	
	var _Highlighter = _interopRequireDefault(__webpack_require__(179));
	
	var cx = (0, _utils.createClassNames)('Snippet');
	
	var Snippet = function Snippet(props) {
	  return _react.default.createElement(_Highlighter.default, (0, _extends2.default)({}, props, {
	    highlightProperty: "_snippetResult",
	    cx: cx
	  }));
	};
	
	var _default = Snippet;
	exports.default = _default;

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _utils = __webpack_require__(14);
	
	var _Select = _interopRequireDefault(__webpack_require__(181));
	
	var cx = (0, _utils.createClassNames)('SortBy');
	
	var SortBy =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(SortBy, _Component);
	
	  function SortBy() {
	    (0, _classCallCheck2.default)(this, SortBy);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SortBy).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(SortBy, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          items = _this$props.items,
	          currentRefinement = _this$props.currentRefinement,
	          refine = _this$props.refine,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, _react.default.createElement(_Select.default, {
	        cx: cx,
	        items: items,
	        selectedItem: currentRefinement,
	        onSelect: refine
	      }));
	    }
	  }]);
	  return SortBy;
	}(_react.Component);
	
	(0, _defineProperty2.default)(SortBy, "propTypes", {
	  items: _propTypes.default.arrayOf(_propTypes.default.shape({
	    label: _propTypes.default.string,
	    value: _propTypes.default.string.isRequired
	  })).isRequired,
	  currentRefinement: _propTypes.default.string.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(SortBy, "defaultProps", {
	  className: ''
	});
	var _default = SortBy;
	exports.default = _default;

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = __webpack_require__(13);
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _classCallCheck2 = _interopRequireDefault(__webpack_require__(8));
	
	var _createClass2 = _interopRequireDefault(__webpack_require__(9));
	
	var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(12));
	
	var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(10));
	
	var _inherits2 = _interopRequireDefault(__webpack_require__(11));
	
	var _defineProperty2 = _interopRequireDefault(__webpack_require__(6));
	
	var _react = _interopRequireWildcard(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _utils = __webpack_require__(14);
	
	var cx = (0, _utils.createClassNames)('Stats');
	
	var Stats =
	/*#__PURE__*/
	function (_Component) {
	  (0, _inherits2.default)(Stats, _Component);
	
	  function Stats() {
	    (0, _classCallCheck2.default)(this, Stats);
	    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Stats).apply(this, arguments));
	  }
	
	  (0, _createClass2.default)(Stats, [{
	    key: "render",
	    value: function render() {
	      var _this$props = this.props,
	          translate = _this$props.translate,
	          nbHits = _this$props.nbHits,
	          processingTimeMS = _this$props.processingTimeMS,
	          className = _this$props.className;
	      return _react.default.createElement("div", {
	        className: (0, _classnames.default)(cx(''), className)
	      }, _react.default.createElement("span", {
	        className: cx('text')
	      }, translate('stats', nbHits, processingTimeMS)));
	    }
	  }]);
	  return Stats;
	}(_react.Component);
	
	(0, _defineProperty2.default)(Stats, "propTypes", {
	  translate: _propTypes.default.func.isRequired,
	  nbHits: _propTypes.default.number.isRequired,
	  processingTimeMS: _propTypes.default.number.isRequired,
	  className: _propTypes.default.string
	});
	(0, _defineProperty2.default)(Stats, "defaultProps", {
	  className: ''
	});
	
	var _default = (0, _reactInstantsearchCore.translatable)({
	  stats: function stats(n, ms) {
	    return "".concat(n.toLocaleString(), " results found in ").concat(ms.toLocaleString(), "ms");
	  }
	})(Stats);
	
	exports.default = _default;

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _propTypes = _interopRequireDefault(__webpack_require__(3));
	
	var _classnames = _interopRequireDefault(__webpack_require__(18));
	
	var _utils = __webpack_require__(14);
	
	var cx = (0, _utils.createClassNames)('ToggleRefinement');
	
	var ToggleRefinement = function ToggleRefinement(_ref) {
	  var currentRefinement = _ref.currentRefinement,
	      label = _ref.label,
	      canRefine = _ref.canRefine,
	      refine = _ref.refine,
	      className = _ref.className;
	  return _react.default.createElement("div", {
	    className: (0, _classnames.default)(cx('', !canRefine && '-noRefinement'), className)
	  }, _react.default.createElement("label", {
	    className: cx('label')
	  }, _react.default.createElement("input", {
	    className: cx('checkbox'),
	    type: "checkbox",
	    checked: currentRefinement,
	    onChange: function onChange(event) {
	      return refine(event.target.checked);
	    }
	  }), _react.default.createElement("span", {
	    className: cx('labelText')
	  }, label)));
	};
	
	ToggleRefinement.propTypes = {
	  currentRefinement: _propTypes.default.bool.isRequired,
	  label: _propTypes.default.string.isRequired,
	  canRefine: _propTypes.default.bool.isRequired,
	  refine: _propTypes.default.func.isRequired,
	  className: _propTypes.default.string
	};
	ToggleRefinement.defaultProps = {
	  className: ''
	};
	var _default = ToggleRefinement;
	exports.default = _default;

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(23));
	
	var _Breadcrumb = _interopRequireDefault(__webpack_require__(381));
	
	/**
	 * A breadcrumb is a secondary navigation scheme that allows the user to see where the current page
	 * is in relation to the website or web application’s hierarchy.
	 * In terms of usability, using a breadcrumb reduces the number of actions a visitor needs to take in
	 * order to get to a higher-level page.
	 *
	 * If you want to select a specific refinement for your Breadcrumb component, you will need to
	 * use a [Virtual Hierarchical Menu](https://community.algolia.com/react-instantsearch/guide/Virtual_widgets.html)
	 * and set its defaultRefinement that will be then used by the Breadcrumb.
	 *
	 * @name Breadcrumb
	 * @kind widget
	 * @requirements Breadcrumbs are used for websites with a large amount of content organised in a hierarchical manner.
	 * The typical example is an e-commerce website which has a large variety of products grouped into logical categories
	 * (with categories, subcategories which also have subcategories).To use this widget, your attributes must be formatted in a specific way.
	 *
	 * Keep in mind that breadcrumbs shouldn’t replace effective primary navigation menus:
	 * it is only an alternative way to navigate around the website.
	 *
	 * If, for instance, you would like to have a breadcrumb of categories, objects in your index
	 * should be formatted this way:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 *   "categories.lvl2": "products > fruits > citrus"
	 * }
	 * ```
	 *
	 * It's also possible to provide more than one path for each level:
	 *
	 * ```json
	 * {
	 *   "categories.lvl0": ["products", "goods"],
	 *   "categories.lvl1": ["products > fruits", "goods > to eat"]
	 * }
	 * ```
	 *
	 * All attributes passed to the `attributes` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow
	 * @propType {node} [separator='>'] -  Symbol used for separating hyperlinks
	 * @propType {string} [rootURL=null] - The originating page (homepage)
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return
	 * @themeKey ais-Breadcrumb - the root div of the widget
	 * @themeKey ais-Breadcrumb--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-Breadcrumb-list - the list of all breadcrumb items
	 * @themeKey ais-Breadcrumb-item - the breadcrumb navigation item
	 * @themeKey ais-Breadcrumb-item--selected - the selected breadcrumb item
	 * @themeKey ais-Breadcrumb-separator - the separator of each breadcrumb item
	 * @themeKey ais-Breadcrumb-link - the clickable breadcrumb element
	 * @translationKey rootLabel - The root's label. Accepts a string
	 * @example
	 * import React from 'react';
	 * import { Breadcrumb, InstantSearch, HierarchicalMenu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Breadcrumb
	 *       attributes={[
	 *         'hierarchicalCategories.lvl0',
	 *         'hierarchicalCategories.lvl1',
	 *         'hierarchicalCategories.lvl2',
	 *       ]}
	 *     />
	 *     <HierarchicalMenu
	 *       defaultRefinement="Cameras & Camcorders"
	 *       attributes={[
	 *         'hierarchicalCategories.lvl0',
	 *         'hierarchicalCategories.lvl1',
	 *         'hierarchicalCategories.lvl2',
	 *       ]}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var BreadcrumbWidget = function BreadcrumbWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_Breadcrumb.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectBreadcrumb)(BreadcrumbWidget);
	
	exports.default = _default;

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(23));
	
	var _ClearRefinements = _interopRequireDefault(__webpack_require__(382));
	
	/**
	 * The ClearRefinements widget displays a button that lets the user clean every refinement applied
	 * to the search.
	 * @name ClearRefinements
	 * @kind widget
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @propType {boolean} [clearsQuery=false] - Pass true to also clear the search query
	 * @themeKey ais-ClearRefinements - the root div of the widget
	 * @themeKey ais-ClearRefinements-button - the clickable button
	 * @themeKey ais-ClearRefinements-button--disabled - the disabled clickable button
	 * @translationKey reset - the clear all button value
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, ClearRefinements, RefinementList } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <ClearRefinements />
	 *     <RefinementList
	 *       attribute="brand"
	 *       defaultRefinement={['Apple']}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var ClearRefinementsWidget = function ClearRefinementsWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_ClearRefinements.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectCurrentRefinements)(ClearRefinementsWidget);
	
	exports.default = _default;

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(23));
	
	var _CurrentRefinements = _interopRequireDefault(__webpack_require__(383));
	
	/**
	 * The CurrentRefinements widget displays the list of currently applied filters.
	 *
	 * It allows the user to selectively remove them.
	 * @name CurrentRefinements
	 * @kind widget
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-CurrentRefinements - the root div of the widget
	 * @themeKey ais-CurrentRefinements--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-CurrentRefinements-list - the list of all refined items
	 * @themeKey ais-CurrentRefinements-list--noRefinement - the list of all refined items when there is no refinement
	 * @themeKey ais-CurrentRefinements-item - the refined list item
	 * @themeKey ais-CurrentRefinements-button - the button of each refined list item
	 * @themeKey ais-CurrentRefinements-label - the refined list label
	 * @themeKey ais-CurrentRefinements-category - the category of each item
	 * @themeKey ais-CurrentRefinements-categoryLabel - the label of each catgory
	 * @themeKey ais-CurrentRefinements-delete - the delete button of each label
	 * @translationKey clearFilter - the remove filter button label
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, CurrentRefinements, RefinementList } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <CurrentRefinements />
	 *     <RefinementList
	 *       attribute="brand"
	 *       defaultRefinement={['Colors']}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var CurrentRefinementsWidget = function CurrentRefinementsWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_CurrentRefinements.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectCurrentRefinements)(CurrentRefinementsWidget);
	
	exports.default = _default;

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(23));
	
	var _HierarchicalMenu = _interopRequireDefault(__webpack_require__(384));
	
	/**
	 * The hierarchical menu lets the user browse attributes using a tree-like structure.
	 *
	 * This is commonly used for multi-level categorization of products on e-commerce
	 * websites. From a UX point of view, we suggest not displaying more than two levels deep.
	 *
	 * @name HierarchicalMenu
	 * @kind widget
	 * @requirements To use this widget, your attributes must be formatted in a specific way.
	 * If you want for example to have a hiearchical menu of categories, objects in your index
	 * should be formatted this way:
	 *
	 * ```json
	 * [{
	 *   "objectID": "321432",
	 *   "name": "lemon",
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 * },
	 * {
	 *   "objectID": "8976987",
	 *   "name": "orange",
	 *   "categories.lvl0": "products",
	 *   "categories.lvl1": "products > fruits",
	 * }]
	 * ```
	 *
	 * It's also possible to provide more than one path for each level:
	 *
	 * ```json
	 * {
	 *   "objectID": "321432",
	 *   "name": "lemon",
	 *   "categories.lvl0": ["products", "goods"],
	 *   "categories.lvl1": ["products > fruits", "goods > to eat"]
	 * }
	 * ```
	 *
	 * All attributes passed to the `attributes` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.
	 * @propType {boolean} [showMore=false] - Flag to activate the show more button, for toggling the number of items between limit and showMoreLimit.
	 * @propType {number} [limit=10] -  The maximum number of items displayed.
	 * @propType {number} [showMoreLimit=20] -  The maximum number of items displayed when the user triggers the show more. Not considered if `showMore` is false.
	 * @propType {string} [separator='>'] -  Specifies the level separator used in the data.
	 * @propType {string} [rootPath=null] - The path to use if the first level is not the root level.
	 * @propType {boolean} [showParentLevel=true] - Flag to set if the parent level should be displayed.
	 * @propType {string} [defaultRefinement] - the item value selected by default
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-HierarchicalMenu - the root div of the widget
	 * @themeKey ais-HierarchicalMenu-noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-HierarchicalMenu-searchBox - the search box of the widget. See [the SearchBox documentation](widgets/SearchBox.html#classnames) for the classnames and translation keys of the SearchBox.
	 * @themeKey ais-HierarchicalMenu-list - the list of menu items
	 * @themeKey ais-HierarchicalMenu-list--child - the child list of menu items
	 * @themeKey ais-HierarchicalMenu-item - the menu list item
	 * @themeKey ais-HierarchicalMenu-item--selected - the selected menu list item
	 * @themeKey ais-HierarchicalMenu-item--parent - the menu list item containing children
	 * @themeKey ais-HierarchicalMenu-link - the clickable menu element
	 * @themeKey ais-HierarchicalMenu-label - the label of each item
	 * @themeKey ais-HierarchicalMenu-count - the count of values for each item
	 * @themeKey ais-HierarchicalMenu-showMore - the button used to display more categories
	 * @themeKey ais-HierarchicalMenu-showMore--disabled - the disabled button used to display more categories
	 * @translationKey showMore - The label of the show more button. Accepts one parameter, a boolean that is true if the values are expanded
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, HierarchicalMenu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <HierarchicalMenu
	 *       attributes={[
	 *         'hierarchicalCategories.lvl0',
	 *         'hierarchicalCategories.lvl1',
	 *         'hierarchicalCategories.lvl2',
	 *       ]}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var HierarchicalMenuWidget = function HierarchicalMenuWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_HierarchicalMenu.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectHierarchicalMenu)(HierarchicalMenuWidget);
	
	exports.default = _default;

/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _Hits = _interopRequireDefault(__webpack_require__(386));
	
	/**
	 * Displays a list of hits.
	 *
	 * To configure the number of hits being shown, use the [HitsPerPage widget](widgets/HitsPerPage.html),
	 * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or the [Configure widget](widgets/Configure.html).
	 *
	 * @name Hits
	 * @kind widget
	 * @propType {Component} [hitComponent] - Component used for rendering each hit from
	 *   the results. If it is not provided the rendering defaults to displaying the
	 *   hit in its JSON form. The component will be called with a `hit` prop.
	 * @themeKey ais-Hits - the root div of the widget
	 * @themeKey ais-Hits-list - the list of results
	 * @themeKey ais-Hits-item - the hit list item
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectHits)(_Hits.default);
	
	exports.default = _default;

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _HitsPerPage = _interopRequireDefault(__webpack_require__(387));
	
	/**
	 * The HitsPerPage widget displays a dropdown menu to let the user change the number
	 * of displayed hits.
	 *
	 * If you only want to configure the number of hits per page without
	 * displaying a widget, you should use the `<Configure hitsPerPage={20} />` widget. See [`<Configure />` documentation](widgets/Configure.html)
	 *
	 * @name HitsPerPage
	 * @kind widget
	 * @propType {{value: number, label: string}[]} items - List of available options.
	 * @propType {number} defaultRefinement - The number of items selected by default
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-HitsPerPage - the root div of the widget
	 * @themeKey ais-HitsPerPage-select - the select
	 * @themeKey ais-HitsPerPage-option - the select option
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, HitsPerPage, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <HitsPerPage
	 *       defaultRefinement={5}
	 *       items={[
	 *         { value: 5, label: 'Show 5 hits' },
	 *         { value: 10, label: 'Show 10 hits' },
	 *       ]}
	 *     />
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectHitsPerPage)(_HitsPerPage.default);
	
	exports.default = _default;

/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var Index = (0, _reactInstantsearchCore.createIndex)({
	  Root: 'div',
	  props: {
	    className: 'ais-MultiIndex__root'
	  }
	});
	var _default = Index;
	exports.default = _default;

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _InfiniteHits = _interopRequireDefault(__webpack_require__(388));
	
	/**
	 * Displays an infinite list of hits along with a **load more** button.
	 *
	 * To configure the number of hits being shown, use the [HitsPerPage widget](widgets/HitsPerPage.html),
	 * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or the [Configure widget](widgets/Configure.html).
	 *
	 * @name InfiniteHits
	 * @kind widget
	 * @propType {Component} [hitComponent] - Component used for rendering each hit from
	 *   the results. If it is not provided the rendering defaults to displaying the
	 *   hit in its JSON form. The component will be called with a `hit` prop.
	 * @themeKey ais-InfiniteHits - the root div of the widget
	 * @themeKey ais-InfiniteHits-list - the list of hits
	 * @themeKey ais-InfiniteHits-item - the hit list item
	 * @themeKey ais-InfiniteHits-loadMore - the button used to display more results
	 * @themeKey ais-InfiniteHits-loadMore--disabled - the disabled button used to display more results
	 * @translationKey loadMore - the label of load more button
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, InfiniteHits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <InfiniteHits />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectInfiniteHits)(_InfiniteHits.default);
	
	exports.default = _default;

/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _lite = _interopRequireDefault(__webpack_require__(132));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var InstantSearch = (0, _reactInstantsearchCore.createInstantSearch)(_lite.default, {
	  Root: 'div',
	  props: {
	    className: 'ais-InstantSearch__root'
	  }
	});
	var _default = InstantSearch;
	exports.default = _default;

/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(23));
	
	var _Menu = _interopRequireDefault(__webpack_require__(390));
	
	/**
	 * The Menu component displays a menu that lets the user choose a single value for a specific attribute.
	 * @name Menu
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * If you are using the `searchable` prop, you'll also need to make the attribute searchable using
	 * the [dashboard](https://www.algolia.com/explorer/display/) or using the [API](https://www.algolia.com/doc/guides/searching/faceting/#search-for-facet-values).
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items
	 * @propType {number} [limit=10] - the minimum number of diplayed items
	 * @propType {number} [showMoreLimit=20] - the maximun number of displayed items. Only used when showMore is set to `true`
	 * @propType {string} [defaultRefinement] - the value of the item selected by default
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @propType {boolean} [searchable=false] - true if the component should display an input to search for facet values. <br> In order to make this feature work, you need to make the attribute searchable [using the API](https://www.algolia.com/doc/guides/searching/faceting/?language=js#declaring-a-searchable-attribute-for-faceting) or [the dashboard](https://www.algolia.com/explorer/display/).
	 * @themeKey ais-Menu - the root div of the widget
	 * @themeKey ais-Menu-searchBox - the search box of the widget. See [the SearchBox documentation](widgets/SearchBox.html#classnames) for the classnames and translation keys of the SearchBox.
	 * @themeKey ais-Menu-list - the list of all menu items
	 * @themeKey ais-Menu-item - the menu list item
	 * @themeKey ais-Menu-item--selected - the selected menu list item
	 * @themeKey ais-Menu-link - the clickable menu element
	 * @themeKey ais-Menu-label - the label of each item
	 * @themeKey ais-Menu-count - the count of values for each item
	 * @themeKey ais-Menu-noResults - the div displayed when there are no results
	 * @themeKey ais-Menu-showMore - the button used to display more categories
	 * @themeKey ais-Menu-showMore--disabled - the disabled button used to display more categories
	 * @translationkey showMore - The label of the show more button. Accepts one parameters, a boolean that is true if the values are expanded
	 * @translationkey noResults - The label of the no results text when no search for facet values results are found.
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Menu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Menu attribute="categories" />
	 *   </InstantSearch>
	 * );
	 */
	var MenuWidget = function MenuWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_Menu.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectMenu)(MenuWidget);
	
	exports.default = _default;

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(23));
	
	var _MenuSelect = _interopRequireDefault(__webpack_require__(391));
	
	/**
	 * The MenuSelect component displays a select that lets the user choose a single value for a specific attribute.
	 * @name MenuSelect
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {string} [defaultRefinement] - the value of the item selected by default
	 * @propType {number} [limit=10] - the minimum number of diplayed items
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-MenuSelect - the root div of the widget
	 * @themeKey ais-MenuSelect-noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-MenuSelect-select - the `<select>`
	 * @themeKey ais-MenuSelect-option - the select `<option>`
	 * @translationkey seeAllOption - The label of the option to select to remove the refinement
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, MenuSelect } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <MenuSelect attribute="categories" />
	 *   </InstantSearch>
	 * );
	 */
	var MenuSelectWidget = function MenuSelectWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_MenuSelect.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectMenu)(MenuSelectWidget);
	
	exports.default = _default;

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(23));
	
	var _NumericMenu = _interopRequireDefault(__webpack_require__(392));
	
	/**
	 * NumericMenu is a widget used for selecting the range value of a numeric attribute.
	 * @name NumericMenu
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be holding numerical values.
	 * @propType {string} attribute - the name of the attribute in the records
	 * @propType {{label: string, start: number, end: number}[]} items - List of options. With a text label, and upper and lower bounds.
	 * @propType {string} [defaultRefinement] - the value of the item selected by default, follow the format "min:max".
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-NumericMenu - the root div of the widget
	 * @themeKey ais-NumericMenu--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-NumericMenu-list - the list of all refinement items
	 * @themeKey ais-NumericMenu-item - the refinement list item
	 * @themeKey ais-NumericMenu-item--selected - the selected refinement list item
	 * @themeKey ais-NumericMenu-label - the label of each refinement item
	 * @themeKey ais-NumericMenu-radio - the radio input of each refinement item
	 * @themeKey ais-NumericMenu-labelText - the label text of each refinement item
	 * @translationkey all - The label of the largest range added automatically by react instantsearch
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, NumericMenu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <NumericMenu
	 *       attribute="price"
	 *       items={[
	 *         { end: 10, label: '< $10' },
	 *         { start: 10, end: 100, label: '$10 - $100' },
	 *         { start: 100, end: 500, label: '$100 - $500' },
	 *         { start: 500, label: '> $500' },
	 *       ]}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var NumericMenuWidget = function NumericMenuWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_NumericMenu.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectNumericMenu)(NumericMenuWidget);
	
	exports.default = _default;

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(23));
	
	var _Pagination = _interopRequireDefault(__webpack_require__(393));
	
	/**
	 * The Pagination widget displays a simple pagination system allowing the user to
	 * change the current page.
	 * @name Pagination
	 * @kind widget
	 * @propType {boolean} [showFirst=true] - Display the first page link.
	 * @propType {boolean} [showLast=false] - Display the last page link.
	 * @propType {boolean} [showPrevious=true] - Display the previous page link.
	 * @propType {boolean} [showNext=true] - Display the next page link.
	 * @propType {number} [padding=3] - How many page links to display around the current page.
	 * @propType {number} [totalPages=Infinity] - Maximum number of pages to display.
	 * @themeKey ais-Pagination - the root div of the widget
	 * @themeKey ais-Pagination--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-Pagination-list - the list of all pagination items
	 * @themeKey ais-Pagination-list--noRefinement - the list of all pagination items when there is no refinement
	 * @themeKey ais-Pagination-item - the pagination list item
	 * @themeKey ais-Pagination-item--firstPage - the "first" pagination list item
	 * @themeKey ais-Pagination-item--lastPage - the "last" pagination list item
	 * @themeKey ais-Pagination-item--previousPage - the "previous" pagination list item
	 * @themeKey ais-Pagination-item--nextPage - the "next" pagination list item
	 * @themeKey ais-Pagination-item--page - the "page" pagination list item
	 * @themeKey ais-Pagination-item--selected - the selected pagination list item
	 * @themeKey ais-Pagination-item--disabled - the disabled pagination list item
	 * @themeKey ais-Pagination-link - the pagination clickable element
	 * @translationKey previous - Label value for the previous page link
	 * @translationKey next - Label value for the next page link
	 * @translationKey first - Label value for the first page link
	 * @translationKey last - Label value for the last page link
	 * @translationkey page - Label value for a page item. You get function(currentRefinement) and you need to return a string
	 * @translationKey ariaPrevious - Accessibility label value for the previous page link
	 * @translationKey ariaNext - Accessibility label value for the next page link
	 * @translationKey ariaFirst - Accessibility label value for the first page link
	 * @translationKey ariaLast - Accessibility label value for the last page link
	 * @translationkey ariaPage - Accessibility label value for a page item. You get function(currentRefinement) and you need to return a string
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Pagination } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Pagination />
	 *   </InstantSearch>
	 * );
	 */
	var PaginationWidget = function PaginationWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_Pagination.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectPagination)(PaginationWidget);
	
	exports.default = _default;

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _Panel = _interopRequireDefault(__webpack_require__(394));
	
	/**
	 * The Panel widget wraps other widgets in a consistent panel design.
	 * It also reacts, indicates and set CSS classes when widgets are no more relevant for refining.
	 * E.g. when a RefinementList becomes empty because of the current search results.
	 *
	 * @name Panel
	 * @kind widget
	 * @propType {string} [className] - Adds a className on the root element.
	 * @propType {node} [header] - Adds a header to the widget.
	 * @propType {node} [footer] - Adds a footer to the widget.
	 * @themeKey ais-Panel - the root div of the Panel
	 * @themeKey ais-Panel--noRefinement - the root div of the Panel without refinement
	 * @themeKey ais-Panel-header - the header of the Panel (optional)
	 * @themeKey ais-Panel-body - the body of the Panel
	 * @themeKey ais-Panel-footer - the footer of the Panel (optional)
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Panel, RefinementList } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Panel header="Categories">
	 *       <RefinementList attribute="categories" />
	 *     </Panel>
	 *   </InstantSearch>
	 * );
	 */
	var _default = _Panel.default;
	exports.default = _default;

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _PoweredBy = _interopRequireDefault(__webpack_require__(395));
	
	/**
	 * PoweredBy displays an Algolia logo.
	 *
	 * Algolia requires that you use this widget if you are on a [community or free plan](https://www.algolia.com/pricing).
	 * @name PoweredBy
	 * @kind widget
	 * @themeKey ais-PoweredBy - the root div of the widget
	 * @themeKey ais-PoweredBy-text - the text of the widget
	 * @themeKey ais-PoweredBy-link - the link of the logo
	 * @themeKey ais-PoweredBy-logo - the logo of the widget
	 * @translationKey searchBy - Label value for the powered by
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, PoweredBy } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <PoweredBy />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectPoweredBy)(_PoweredBy.default);
	
	exports.default = _default;

/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(23));
	
	var _RangeInput = _interopRequireDefault(__webpack_require__(396));
	
	/**
	 * RangeInput allows a user to select a numeric range using a minimum and maximum input.
	 * @name RangeInput
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be present in “attributes for faceting”
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * The values inside the attribute must be JavaScript numbers (not strings).
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {{min: number, max: number}} [defaultRefinement] - Default state of the widget containing the start and the end of the range.
	 * @propType {number} [min] - Minimum value. When this isn't set, the minimum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [max] - Maximum value. When this isn't set, the maximum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [precision=0] - Number of digits after decimal point to use.
	 * @themeKey ais-RangeInput - the root div of the widget
	 * @themeKey ais-RangeInput-form - the wrapping form
	 * @themeKey ais-RangeInput-label - the label wrapping inputs
	 * @themeKey ais-RangeInput-input - the input (number)
	 * @themeKey ais-RangeInput-input--min - the minimum input
	 * @themeKey ais-RangeInput-input--max - the maximum input
	 * @themeKey ais-RangeInput-separator - the separator word used between the two inputs
	 * @themeKey ais-RangeInput-button - the submit button
	 * @translationKey submit - Label value for the submit button
	 * @translationKey separator - Label value for the input separator
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, RangeInput } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <RangeInput attribute="price" />
	 *   </InstantSearch>
	 * );
	 */
	var RangeInputWidget = function RangeInputWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_RangeInput.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectRange)(RangeInputWidget);
	
	exports.default = _default;

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	/**
	 * Since a lot of sliders already exist, we did not include one by default.
	 * However you can easily connect React InstantSearch to an existing one
	 * using the [connectRange connector](connectors/connectRange.html).
	 *
	 * @name RangeSlider
	 * @requirements To connect any slider to Algolia, the underlying attribute used must be holding numerical values.
	 * @kind widget
	 * @example
	 *
	 * // Here's an example showing how to connect the AirBnb Rheostat Slider to React InstantSearch
	 * // using the range connector. ⚠️ This example only works with the version 2.x of Rheostat.
	
	import React, {Component} from 'react';
	import PropTypes from 'prop-types';
	import Rheostat from 'rheostat';
	import { connectRange } from 'react-instantsearch-dom';
	
	class Range extends React.Component {
	  static propTypes = {
	    min: PropTypes.number,
	    max: PropTypes.number,
	    currentRefinement: PropTypes.object,
	    refine: PropTypes.func.isRequired,
	    canRefine: PropTypes.bool.isRequired
	  };
	
	  state = { currentValues: { min: this.props.min, max: this.props.max } };
	
	  componentWillReceiveProps(sliderState) {
	    if (sliderState.canRefine) {
	      this.setState({
	        currentValues: {
	          min: sliderState.currentRefinement.min,
	          max: sliderState.currentRefinement.max
	        }
	      });
	    }
	  }
	
	  onValuesUpdated = sliderState => {
	    this.setState({
	      currentValues: { min: sliderState.values[0], max: sliderState.values[1] }
	    });
	  };
	
	  onChange = sliderState => {
	    if (
	      this.props.currentRefinement.min !== sliderState.values[0] ||
	      this.props.currentRefinement.max !== sliderState.values[1]
	    ) {
	      this.props.refine({
	        min: sliderState.values[0],
	        max: sliderState.values[1]
	      });
	    }
	  };
	
	  render() {
	    const { min, max, currentRefinement } = this.props;
	    const { currentValues } = this.state;
	    return min !== max ? (
	      <div>
	        <Rheostat
	          className="ais-RangeSlider"
	          min={min}
	          max={max}
	          values={[currentRefinement.min, currentRefinement.max]}
	          onChange={this.onChange}
	          onValuesUpdated={this.onValuesUpdated}
	        />
	        <div style={{ display: "flex", justifyContent: "space-between" }}>
	          <div>{currentValues.min}</div>
	          <div>{currentValues.max}</div>
	        </div>
	      </div>
	    ) : null;
	  }
	}
	
	const ConnectedRange = connectRange(Range);
	*/
	var _default = function _default() {
	  return _react.default.createElement("div", null, "We do not provide any Slider, see the documentation to learn how to connect one easily:", _react.default.createElement("a", {
	    target: "_blank",
	    rel: "noopener noreferrer",
	    href: "https://community.algolia.com/react-instantsearch/widgets/RangeSlider.html"
	  }, "https://community.algolia.com/react-instantsearch/widgets/RangeSlider.html"));
	};
	
	exports.default = _default;

/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(23));
	
	var _RatingMenu = _interopRequireDefault(__webpack_require__(397));
	
	/**
	 * RatingMenu lets the user refine search results by clicking on stars.
	 *
	 * The stars are based on the selected `attribute`.
	 * @requirements The attribute passed to the `attribute` prop must be holding numerical values.
	 * @name RatingMenu
	 * @kind widget
	 * @requirements The attribute passed to the `attribute` prop must be present in “attributes for faceting”
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 * The values inside the attribute must be JavaScript numbers (not strings).
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {number} [min] - Minimum value for the rating. When this isn't set, the minimum value will be automatically computed by Algolia using the data in the index.
	 * @propType {number} [max] - Maximum value for the rating. When this isn't set, the maximum value will be automatically computed by Algolia using the data in the index.
	 * @propType {{min: number, max: number}} [defaultRefinement] - Default state of the widget containing the lower bound (end) and the max for the rating.
	 * @themeKey ais-RatingMenu - the root div of the widget
	 * @themeKey ais-RatingMenu--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-RatingMenu-list - the list of ratings
	 * @themeKey ais-RatingMenu-list--noRefinement - the list of ratings when there is no refinement
	 * @themeKey ais-RatingMenu-item - the rating list item
	 * @themeKey ais-RatingMenu-item--selected - the selected rating list item
	 * @themeKey ais-RatingMenu-item--disabled - the disabled rating list item
	 * @themeKey ais-RatingMenu-link - the rating clickable item
	 * @themeKey ais-RatingMenu-starIcon - the star icon
	 * @themeKey ais-RatingMenu-starIcon--full - the filled star icon
	 * @themeKey ais-RatingMenu-starIcon--empty - the empty star icon
	 * @themeKey ais-RatingMenu-label - the label used after the stars
	 * @themeKey ais-RatingMenu-count - the count of ratings for a specific item
	 * @translationKey ratingLabel - Label value for the rating link
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, RatingMenu } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <RatingMenu attribute="rating" />
	 *   </InstantSearch>
	 * );
	 */
	var RatingMenuWidget = function RatingMenuWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_RatingMenu.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectRange)(RatingMenuWidget);
	
	exports.default = _default;

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _react = _interopRequireDefault(__webpack_require__(1));
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _PanelCallbackHandler = _interopRequireDefault(__webpack_require__(23));
	
	var _RefinementList = _interopRequireDefault(__webpack_require__(398));
	
	/**
	 * The RefinementList component displays a list that let the end user choose multiple values for a specific facet.
	 * @name RefinementList
	 * @kind widget
	 * @propType {string} attribute - the name of the attribute in the record
	 * @propType {boolean} [searchable=false] - true if the component should display an input to search for facet values. <br> In order to make this feature work, you need to make the attribute searchable [using the API](https://www.algolia.com/doc/guides/searching/faceting/?language=js#declaring-a-searchable-attribute-for-faceting) or [the dashboard](https://www.algolia.com/explorer/display/).
	 * @propType {string} [operator=or] - How to apply the refinements. Possible values: 'or' or 'and'.
	 * @propType {boolean} [showMore=false] - true if the component should display a button that will expand the number of items
	 * @propType {number} [limit=10] - the minimum number of displayed items
	 * @propType {number} [showMoreLimit=20] - the maximum number of displayed items. Only used when showMore is set to `true`
	 * @propType {string[]} [defaultRefinement] - the values of the items selected by default
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-RefinementList - the root div of the widget
	 * @themeKey ais-RefinementList--noRefinement - the root div of the widget when there is no refinement
	 * @themeKey ais-RefinementList-searchBox - the search box of the widget. See [the SearchBox documentation](widgets/SearchBox.html#classnames) for the classnames and translation keys of the SearchBox.
	 * @themeKey ais-RefinementList-list - the list of refinement items
	 * @themeKey ais-RefinementList-item - the refinement list item
	 * @themeKey ais-RefinementList-item--selected - the refinement selected list item
	 * @themeKey ais-RefinementList-label - the label of each refinement item
	 * @themeKey ais-RefinementList-checkbox - the checkbox input of each refinement item
	 * @themeKey ais-RefinementList-labelText - the label text of each refinement item
	 * @themeKey ais-RefinementList-count - the count of values for each item
	 * @themeKey ais-RefinementList-noResults - the div displayed when there are no results
	 * @themeKey ais-RefinementList-showMore - the button used to display more categories
	 * @themeKey ais-RefinementList-showMore--disabled - the disabled button used to display more categories
	 * @translationkey showMore - The label of the show more button. Accepts one parameters, a boolean that is true if the values are expanded
	 * @translationkey noResults - The label of the no results text when no search for facet values results are found.
	 * @requirements The attribute passed to the `attribute` prop must be present in "attributes for faceting"
	 * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.
	 *
	 * If you are using the `searchable` prop, you'll also need to make the attribute searchable using
	 * the [dashboard](https://www.algolia.com/explorer/display/) or using the [API](https://www.algolia.com/doc/guides/searching/faceting/#search-for-facet-values).
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, RefinementList } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <RefinementList attribute="brand" />
	 *   </InstantSearch>
	 * );
	 */
	var RefinementListWidget = function RefinementListWidget(props) {
	  return _react.default.createElement(_PanelCallbackHandler.default, props, _react.default.createElement(_RefinementList.default, props));
	};
	
	var _default = (0, _reactInstantsearchCore.connectRefinementList)(RefinementListWidget);
	
	exports.default = _default;

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _ScrollTo = _interopRequireDefault(__webpack_require__(399));
	
	/**
	 * The ScrollTo component will make the page scroll to the component wrapped by it when one of the
	 * [search state](guide/Search_state.html) prop is updated. By default when the page number changes,
	 * the scroll goes to the wrapped component.
	 *
	 * @name ScrollTo
	 * @kind widget
	 * @propType {string} [scrollOn="page"] - Widget state key on which to listen for changes.
	 * @themeKey ais-ScrollTo - the root div of the widget
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, ScrollTo, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <ScrollTo>
	 *       <Hits />
	 *     </ScrollTo>
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectScrollTo)(_ScrollTo.default);
	
	exports.default = _default;

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _SearchBox = _interopRequireDefault(__webpack_require__(180));
	
	/**
	 * The SearchBox component displays a search box that lets the user search for a specific query.
	 * @name SearchBox
	 * @kind widget
	 * @propType {string[]} [focusShortcuts=['s','/']] - List of keyboard shortcuts that focus the search box. Accepts key names and key codes.
	 * @propType {boolean} [autoFocus=false] - Should the search box be focused on render?
	 * @propType {boolean} [searchAsYouType=true] - Should we search on every change to the query? If you disable this option, new searches will only be triggered by clicking the search button or by pressing the enter key while the search box is focused.
	 * @propType {function} [onSubmit] - Intercept submit event sent from the SearchBox form container.
	 * @propType {function} [onReset] - Listen to `reset` event sent from the SearchBox form container.
	 * @propType {function} [on*] - Listen to any events sent from the search input itself.
	 * @propType {node} [submit] - Change the apparence of the default submit button (magnifying glass).
	 * @propType {node} [reset] - Change the apparence of the default reset button (cross).
	 * @propType {node} [loadingIndicator] - Change the apparence of the default loading indicator (spinning circle).
	 * @propType {string} [defaultRefinement] - Provide default refinement value when component is mounted.
	 * @propType {boolean} [showLoadingIndicator=false] - Display that the search is loading. This only happens after a certain amount of time to avoid a blinking effect. This timer can be configured with `stalledSearchDelay` props on <InstantSearch>. By default, the value is 200ms.
	 * @themeKey ais-SearchBox - the root div of the widget
	 * @themeKey ais-SearchBox-form - the wrapping form
	 * @themeKey ais-SearchBox-input - the search input
	 * @themeKey ais-SearchBox-submit - the submit button
	 * @themeKey ais-SearchBox-submitIcon - the default magnifier icon used with the search input
	 * @themeKey ais-SearchBox-reset - the reset button used to clear the content of the input
	 * @themeKey ais-SearchBox-resetIcon - the default reset icon used inside the reset button
	 * @themeKey ais-SearchBox-loadingIndicator - the loading indicator container
	 * @themeKey ais-SearchBox-loadingIcon - the default loading icon
	 * @translationkey submitTitle - The submit button title
	 * @translationkey resetTitle - The reset button title
	 * @translationkey placeholder - The label of the input placeholder
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <SearchBox />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectSearchBox)(_SearchBox.default);
	
	exports.default = _default;

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _Snippet = _interopRequireDefault(__webpack_require__(400));
	
	/**
	 * Renders any attribute from an hit into its highlighted snippet form when relevant.
	 *
	 * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.
	 * @name Snippet
	 * @kind widget
	 * @requirements To use this widget, the attribute name passed to the `attribute` prop must be
	 * present in "Attributes to snippet" on the Algolia dashboard or configured as `attributesToSnippet`
	 * via a set settings call to the Algolia API.
	 * @propType {string} attribute - location of the highlighted snippet attribute in the hit (the corresponding element can be either a string or an array of strings)
	 * @propType {object} hit - hit object containing the highlighted snippet attribute
	 * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the attribute
	 * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted
	 * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.
	 * @themeKey ais-Snippet - the root span of the widget
	 * @themeKey ais-Snippet-highlighted - the highlighted text
	 * @themeKey ais-Snippet-nonHighlighted - the normal text
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SearchBox, Hits, Snippet } from 'react-instantsearch-dom';
	 *
	 * const Hit = ({ hit }) => (
	 *   <div>
	 *     <Snippet attribute="description" hit={hit} />
	 *   </div>
	 * );
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <SearchBox defaultRefinement="adjustable" />
	 *     <Hits hitComponent={Hit} />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectHighlight)(_Snippet.default);
	
	exports.default = _default;

/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _SortBy = _interopRequireDefault(__webpack_require__(401));
	
	/**
	 * The SortBy component displays a list of indexes allowing a user to change the hits are sorting.
	 * @name SortBy
	 * @requirements Algolia handles sorting by creating replica indices. [Read more about sorting](https://www.algolia.com/doc/guides/relevance/sorting/) on
	 * the Algolia website.
	 * @kind widget
	 * @propType {{value: string, label: string}[]} items - The list of indexes to search in.
	 * @propType {string} defaultRefinement - The default selected index.
	 * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.
	 * @themeKey ais-SortBy - the root div of the widget
	 * @themeKey ais-SortBy-select - the select
	 * @themeKey ais-SortBy-option - the select option
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, SortBy } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <SortBy
	 *       defaultRefinement="instant_search"
	 *       items={[
	 *         { value: 'instant_search', label: 'Featured' },
	 *         { value: 'instant_search_price_asc', label: 'Price asc.' },
	 *         { value: 'instant_search_price_desc', label: 'Price desc.' },
	 *       ]}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectSortBy)(_SortBy.default);
	
	exports.default = _default;

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _Stats = _interopRequireDefault(__webpack_require__(402));
	
	/**
	 * The Stats component displays the total number of matching hits and the time it took to get them (time spent in the Algolia server).
	 * @name Stats
	 * @kind widget
	 * @themeKey ais-Stats - the root div of the widget
	 * @themeKey ais-Stats-text - the text of the widget - the count of items for each item
	 * @translationkey stats - The string displayed by the stats widget. You get function(n, ms) and you need to return a string. n is a number of hits retrieved, ms is a processed time.
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, Stats, Hits } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <Stats />
	 *     <Hits />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectStats)(_Stats.default);
	
	exports.default = _default;

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireDefault = __webpack_require__(4);
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = void 0;
	
	var _reactInstantsearchCore = __webpack_require__(7);
	
	var _ToggleRefinement = _interopRequireDefault(__webpack_require__(403));
	
	/**
	 * The ToggleRefinement provides an on/off filtering feature based on an attribute value.
	 * @name ToggleRefinement
	 * @kind widget
	 * @requirements To use this widget, you'll need an attribute to toggle on.
	 *
	 * You can't toggle on null or not-null values. If you want to address this particular use-case you'll need to compute an
	 * extra boolean attribute saying if the value exists or not. See this [thread](https://discourse.algolia.com/t/how-to-create-a-toggle-for-the-absence-of-a-string-attribute/2460) for more details.
	 *
	 * @propType {string} attribute - Name of the attribute on which to apply the `value` refinement. Required when `value` is present.
	 * @propType {string} label - Label for the toggle.
	 * @propType {any} value - Value of the refinement to apply on `attribute` when checked.
	 * @propType {boolean} [defaultRefinement=false] - Default state of the widget. Should the toggle be checked by default?
	 * @themeKey ais-ToggleRefinement - the root div of the widget
	 * @themeKey ais-ToggleRefinement-list - the list of toggles
	 * @themeKey ais-ToggleRefinement-item - the toggle list item
	 * @themeKey ais-ToggleRefinement-label - the label of each toggle item
	 * @themeKey ais-ToggleRefinement-checkbox - the checkbox input of each toggle item
	 * @themeKey ais-ToggleRefinement-labelText - the label text of each toggle item
	 * @example
	 * import React from 'react';
	 * import { InstantSearch, ToggleRefinement } from 'react-instantsearch-dom';
	 *
	 * const App = () => (
	 *   <InstantSearch
	 *     appId="latency"
	 *     apiKey="6be0576ff61c053d5f9a3225e2a90f76"
	 *     indexName="instant_search"
	 *   >
	 *     <ToggleRefinement
	 *       attribute="free_shipping"
	 *       label="Free Shipping"
	 *       value={true}
	 *     />
	 *   </InstantSearch>
	 * );
	 */
	var _default = (0, _reactInstantsearchCore.connectToggleRefinement)(_ToggleRefinement.default);
	
	exports.default = _default;

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var babelPluginFlowReactPropTypes_proptype_Target = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Target || __webpack_require__(3).any;
	
	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(3).any;
	
	exports.default = function (css) {
	  var constructWithOptions = function constructWithOptions(componentConstructor, tag) {
	    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	    if (false) {
	      // $FlowInvalidInputTest
	      throw new Error('Cannot create styled-component for component: ' + tag);
	    }
	
	    /* This is callable directly as a template function */
	    var templateFunction = function templateFunction(strings) {
	      for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        interpolations[_key - 1] = arguments[_key];
	      }
	
	      return componentConstructor(tag, options, css.apply(undefined, [strings].concat(interpolations)));
	    };
	
	    /* If config methods are called, wrap up a new template function and merge options */
	    templateFunction.withConfig = function (config) {
	      return constructWithOptions(componentConstructor, tag, _extends({}, options, config));
	    };
	    templateFunction.attrs = function (attrs) {
	      return constructWithOptions(componentConstructor, tag, _extends({}, options, {
	        attrs: _extends({}, options.attrs || {}, attrs)
	      }));
	    };
	
	    return templateFunction;
	  };
	
	  return constructWithOptions;
	};
	
	module.exports = exports['default'];

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _interleave = __webpack_require__(444);
	
	var _interleave2 = _interopRequireDefault(_interleave);
	
	var _flatten = __webpack_require__(186);
	
	var _flatten2 = _interopRequireDefault(_flatten);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var babelPluginFlowReactPropTypes_proptype_RuleSet = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_RuleSet || __webpack_require__(3).any;
	
	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(3).any;
	
	exports.default = function (strings) {
	  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    interpolations[_key - 1] = arguments[_key];
	  }
	
	  return (0, _flatten2.default)((0, _interleave2.default)(strings, interpolations));
	};
	
	module.exports = exports['default'];

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _hash = __webpack_require__(116);
	
	var _hash2 = _interopRequireDefault(_hash);
	
	var _StyleSheet = __webpack_require__(27);
	
	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var babelPluginFlowReactPropTypes_proptype_Stringifier = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Stringifier || __webpack_require__(3).any;
	
	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(3).any;
	
	exports.default = function (stringifyRules, css) {
	  var injectGlobal = function injectGlobal(strings) {
	    for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      interpolations[_key - 1] = arguments[_key];
	    }
	
	    var rules = css.apply(undefined, [strings].concat(interpolations));
	    var hash = (0, _hash2.default)(JSON.stringify(rules));
	
	    var componentId = 'sc-global-' + hash;
	    if (_StyleSheet2.default.instance.hasInjectedComponent(componentId)) return;
	
	    _StyleSheet2.default.instance.inject(componentId, false, stringifyRules(rules));
	  };
	
	  return injectGlobal;
	};
	
	module.exports = exports['default'];

/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _hash = __webpack_require__(116);
	
	var _hash2 = _interopRequireDefault(_hash);
	
	var _StyleSheet = __webpack_require__(27);
	
	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var babelPluginFlowReactPropTypes_proptype_Stringifier = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Stringifier || __webpack_require__(3).any;
	
	var babelPluginFlowReactPropTypes_proptype_NameGenerator = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_NameGenerator || __webpack_require__(3).any;
	
	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(3).any;
	
	var replaceWhitespace = function replaceWhitespace(str) {
	  return str.replace(/\s|\\n/g, '');
	};
	
	exports.default = function (nameGenerator, stringifyRules, css) {
	  return function (strings) {
	    for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      interpolations[_key - 1] = arguments[_key];
	    }
	
	    var rules = css.apply(undefined, [strings].concat(interpolations));
	    var hash = (0, _hash2.default)(replaceWhitespace(JSON.stringify(rules)));
	
	    var existingName = _StyleSheet2.default.instance.getName(hash);
	    if (existingName) return existingName;
	
	    var name = nameGenerator(hash);
	    if (_StyleSheet2.default.instance.alreadyInjected(hash, name)) return name;
	
	    var generatedCSS = stringifyRules(rules, name, '@keyframes');
	    _StyleSheet2.default.instance.inject('sc-keyframes-' + name, true, generatedCSS, hash, name);
	    return name;
	  };
	};
	
	module.exports = exports['default'];

/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _domElements = __webpack_require__(439);
	
	var _domElements2 = _interopRequireDefault(_domElements);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var babelPluginFlowReactPropTypes_proptype_Target = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Target || __webpack_require__(3).any;
	
	exports.default = function (styledComponent, constructWithOptions) {
	  var styled = function styled(tag) {
	    return constructWithOptions(styledComponent, tag);
	  };
	
	  // Shorthands for all valid HTML Elements
	  _domElements2.default.forEach(function (domElement) {
	    styled[domElement] = styled(domElement);
	  });
	
	  return styled;
	};
	
	module.exports = exports['default'];

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _hoistNonReactStatics = __webpack_require__(462);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _ThemeProvider = __webpack_require__(81);
	
	var _isStyledComponent2 = __webpack_require__(115);
	
	var _isStyledComponent3 = _interopRequireDefault(_isStyledComponent2);
	
	var _determineTheme = __webpack_require__(185);
	
	var _determineTheme2 = _interopRequireDefault(_determineTheme);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	/* globals ReactClass */
	
	var wrapWithTheme = function wrapWithTheme(Component) {
	  var _WithTheme$contextTyp;
	
	  var componentName = Component.displayName || Component.name || 'Component';
	
	  var shouldSetInnerRef = (0, _isStyledComponent3.default)(Component) ||
	  // NOTE: We can't pass a ref to a stateless functional component
	  typeof Component === 'function' && !(Component.prototype && 'isReactComponent' in Component.prototype);
	
	  var WithTheme = function (_React$Component) {
	    _inherits(WithTheme, _React$Component);
	
	    function WithTheme() {
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, WithTheme);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {}, _this.unsubscribeId = -1, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    // NOTE: This is so that isStyledComponent passes for the innerRef unwrapping
	
	
	    WithTheme.prototype.componentWillMount = function componentWillMount() {
	      var _this2 = this;
	
	      var defaultProps = this.constructor.defaultProps;
	
	      var styledContext = this.context[_ThemeProvider.CHANNEL_NEXT];
	      var themeProp = (0, _determineTheme2.default)(this.props, undefined, defaultProps);
	      if (styledContext === undefined && themeProp === undefined && ("production") !== 'production') {
	        // eslint-disable-next-line no-console
	        console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps');
	      } else if (styledContext === undefined && themeProp !== undefined) {
	        this.setState({ theme: themeProp });
	      } else {
	        var subscribe = styledContext.subscribe;
	
	        this.unsubscribeId = subscribe(function (nextTheme) {
	          var theme = (0, _determineTheme2.default)(_this2.props, nextTheme, defaultProps);
	          _this2.setState({ theme: theme });
	        });
	      }
	    };
	
	    WithTheme.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	      var defaultProps = this.constructor.defaultProps;
	
	      this.setState(function (oldState) {
	        var theme = (0, _determineTheme2.default)(nextProps, oldState.theme, defaultProps);
	
	        return { theme: theme };
	      });
	    };
	
	    WithTheme.prototype.componentWillUnmount = function componentWillUnmount() {
	      if (this.unsubscribeId !== -1) {
	        this.context[_ThemeProvider.CHANNEL_NEXT].unsubscribe(this.unsubscribeId);
	      }
	    };
	
	    WithTheme.prototype.render = function render() {
	      // eslint-disable-next-line react/prop-types
	      var innerRef = this.props.innerRef;
	      var theme = this.state.theme;
	
	
	      return _react2.default.createElement(Component, _extends({
	        theme: theme
	      }, this.props, {
	        innerRef: shouldSetInnerRef ? innerRef : undefined,
	        ref: shouldSetInnerRef ? undefined : innerRef
	      }));
	    };
	
	    return WithTheme;
	  }(_react2.default.Component);
	
	  WithTheme.displayName = 'WithTheme(' + componentName + ')';
	  WithTheme.styledComponentId = 'withTheme';
	  WithTheme.contextTypes = (_WithTheme$contextTyp = {}, _WithTheme$contextTyp[_ThemeProvider.CHANNEL] = _propTypes2.default.func, _WithTheme$contextTyp[_ThemeProvider.CHANNEL_NEXT] = _ThemeProvider.CONTEXT_CHANNEL_SHAPE, _WithTheme$contextTyp);
	
	
	  return (0, _hoistNonReactStatics2.default)(WithTheme, Component);
	};
	
	exports.default = wrapWithTheme;
	module.exports = exports['default'];

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.COMPONENTS_PER_TAG = undefined;
	
	var _extractCompsFromCSS = __webpack_require__(441);
	
	var _extractCompsFromCSS2 = _interopRequireDefault(_extractCompsFromCSS);
	
	var _nonce = __webpack_require__(187);
	
	var _nonce2 = _interopRequireDefault(_nonce);
	
	var _StyleSheet = __webpack_require__(27);
	
	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	/* eslint-disable no-underscore-dangle */
	/*
	 * Browser Style Sheet with Rehydration
	 *
	 * <style data-styled-components="x y z"
	 *        data-styled-components-is-local="true">
	 *   /· sc-component-id: a ·/
	 *   .sc-a { ... }
	 *   .x { ... }
	 *   /· sc-component-id: b ·/
	 *   .sc-b { ... }
	 *   .y { ... }
	 *   .z { ... }
	 * </style>
	 *
	 * Note: replace · with * in the above snippet.
	 * */
	
	
	var babelPluginFlowReactPropTypes_proptype_Tag = __webpack_require__(27).babelPluginFlowReactPropTypes_proptype_Tag || __webpack_require__(3).any;
	
	var COMPONENTS_PER_TAG = exports.COMPONENTS_PER_TAG = 40;
	
	var BrowserTag = function () {
	  function BrowserTag(el, isLocal) {
	    var existingSource = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
	
	    _classCallCheck(this, BrowserTag);
	
	    this.el = el;
	    this.isLocal = isLocal;
	    this.ready = false;
	
	    var extractedComps = (0, _extractCompsFromCSS2.default)(existingSource);
	
	    this.size = extractedComps.length;
	    this.components = extractedComps.reduce(function (acc, obj) {
	      acc[obj.componentId] = obj; // eslint-disable-line no-param-reassign
	      return acc;
	    }, {});
	  }
	
	  BrowserTag.prototype.isFull = function isFull() {
	    return this.size >= COMPONENTS_PER_TAG;
	  };
	
	  BrowserTag.prototype.addComponent = function addComponent(componentId) {
	    if (!this.ready) this.replaceElement();
	    if (false) {
	      throw new Error('Trying to add Component \'' + componentId + '\' twice!');
	    }
	
	    var comp = { componentId: componentId, textNode: document.createTextNode('') };
	    this.el.appendChild(comp.textNode);
	
	    this.size += 1;
	    this.components[componentId] = comp;
	  };
	
	  BrowserTag.prototype.inject = function inject(componentId, css, name) {
	    if (!this.ready) this.replaceElement();
	    var comp = this.components[componentId];
	
	    if (false) {
	      throw new Error('Must add a new component before you can inject css into it');
	    }
	    if (comp.textNode.data === '') {
	      comp.textNode.appendData('\n/* sc-component-id: ' + componentId + ' */\n');
	    }
	
	    comp.textNode.appendData(css);
	    if (name) {
	      var existingNames = this.el.getAttribute(_StyleSheet.SC_ATTR);
	      this.el.setAttribute(_StyleSheet.SC_ATTR, existingNames ? existingNames + ' ' + name : name);
	    }
	
	    var nonce = (0, _nonce2.default)();
	
	    if (nonce) {
	      this.el.setAttribute('nonce', nonce);
	    }
	  };
	
	  BrowserTag.prototype.toHTML = function toHTML() {
	    return this.el.outerHTML;
	  };
	
	  BrowserTag.prototype.toReactElement = function toReactElement() {
	    throw new Error("BrowserTag doesn't implement toReactElement!");
	  };
	
	  BrowserTag.prototype.clone = function clone() {
	    throw new Error('BrowserTag cannot be cloned!');
	  };
	
	  /* Because we care about source order, before we can inject anything we need to
	   * create a text node for each component and replace the existing CSS. */
	
	
	  BrowserTag.prototype.replaceElement = function replaceElement() {
	    var _this = this;
	
	    this.ready = true;
	    // We have nothing to inject. Use the current el.
	    if (this.size === 0) return;
	
	    // Build up our replacement style tag
	    var newEl = this.el.cloneNode();
	    newEl.appendChild(document.createTextNode('\n'));
	
	    Object.keys(this.components).forEach(function (key) {
	      var comp = _this.components[key];
	
	      // eslint-disable-next-line no-param-reassign
	      comp.textNode = document.createTextNode(comp.cssFromDOM);
	      newEl.appendChild(comp.textNode);
	    });
	
	    if (!this.el.parentNode) {
	      throw new Error("Trying to replace an element that wasn't mounted!");
	    }
	
	    // The ol' switcheroo
	    this.el.parentNode.replaceChild(newEl, this.el);
	    this.el = newEl;
	  };
	
	  return BrowserTag;
	}();
	
	/* Factory function to separate DOM operations from logical ones*/
	
	
	exports.default = {
	  create: function create() {
	    var tags = [];
	    var names = {};
	
	    /* Construct existing state from DOM */
	    var nodes = document.querySelectorAll('[' + _StyleSheet.SC_ATTR + ']');
	    var nodesLength = nodes.length;
	
	    for (var i = 0; i < nodesLength; i += 1) {
	      var el = nodes[i];
	
	      tags.push(new BrowserTag(el, el.getAttribute(_StyleSheet.LOCAL_ATTR) === 'true', el.innerHTML));
	
	      var attr = el.getAttribute(_StyleSheet.SC_ATTR);
	      if (attr) {
	        attr.trim().split(/\s+/).forEach(function (name) {
	          names[name] = true;
	        });
	      }
	    }
	
	    /* Factory for making more tags */
	    var tagConstructor = function tagConstructor(isLocal) {
	      var el = document.createElement('style');
	      el.type = 'text/css';
	      el.setAttribute(_StyleSheet.SC_ATTR, '');
	      el.setAttribute(_StyleSheet.LOCAL_ATTR, isLocal ? 'true' : 'false');
	      if (!document.head) throw new Error('Missing document <head>');
	      document.head.appendChild(el);
	      return new BrowserTag(el, isLocal);
	    };
	
	    return new _StyleSheet2.default(tagConstructor, tags, names);
	  }
	};

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {'use strict';
	
	exports.__esModule = true;
	
	var _hash = __webpack_require__(116);
	
	var _hash2 = _interopRequireDefault(_hash);
	
	var _StyleSheet = __webpack_require__(27);
	
	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
	
	var _isStyledComponent = __webpack_require__(115);
	
	var _isStyledComponent2 = _interopRequireDefault(_isStyledComponent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var babelPluginFlowReactPropTypes_proptype_Stringifier = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Stringifier || __webpack_require__(3).any;
	
	var babelPluginFlowReactPropTypes_proptype_Flattener = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Flattener || __webpack_require__(3).any;
	
	var babelPluginFlowReactPropTypes_proptype_NameGenerator = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_NameGenerator || __webpack_require__(3).any;
	
	var babelPluginFlowReactPropTypes_proptype_RuleSet = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_RuleSet || __webpack_require__(3).any;
	
	var isStaticRules = function isStaticRules(rules, attrs) {
	  for (var i = 0; i < rules.length; i += 1) {
	    var rule = rules[i];
	
	    // recursive case
	    if (Array.isArray(rule) && !isStaticRules(rule)) {
	      return false;
	    } else if (typeof rule === 'function' && !(0, _isStyledComponent2.default)(rule)) {
	      // functions are allowed to be static if they're just being
	      // used to get the classname of a nested styled copmonent
	      return false;
	    }
	  }
	
	  if (attrs !== undefined) {
	    // eslint-disable-next-line guard-for-in, no-restricted-syntax
	    for (var key in attrs) {
	      var value = attrs[key];
	      if (typeof value === 'function') {
	        return false;
	      }
	    }
	  }
	
	  return true;
	};
	
	var isHRMEnabled = typeof module !== 'undefined' && module.hot && ("production") !== 'production';
	
	/*
	 ComponentStyle is all the CSS-specific stuff, not
	 the React-specific stuff.
	 */
	
	exports.default = function (nameGenerator, flatten, stringifyRules) {
	  var ComponentStyle = function () {
	    function ComponentStyle(rules, attrs, componentId) {
	      _classCallCheck(this, ComponentStyle);
	
	      this.rules = rules;
	      this.isStatic = !isHRMEnabled && isStaticRules(rules, attrs);
	      this.componentId = componentId;
	      if (!_StyleSheet2.default.instance.hasInjectedComponent(this.componentId)) {
	        var placeholder =  false ? '.' + componentId + ' {}' : '';
	        _StyleSheet2.default.instance.deferredInject(componentId, true, placeholder);
	      }
	    }
	
	    /*
	     * Flattens a rule set into valid CSS
	     * Hashes it, wraps the whole chunk in a .hash1234 {}
	     * Returns the hash to be injected on render()
	     * */
	
	
	    ComponentStyle.prototype.generateAndInjectStyles = function generateAndInjectStyles(executionContext, styleSheet) {
	      var isStatic = this.isStatic,
	          lastClassName = this.lastClassName;
	
	      if (isStatic && lastClassName !== undefined) {
	        return lastClassName;
	      }
	
	      var flatCSS = flatten(this.rules, executionContext);
	      var hash = (0, _hash2.default)(this.componentId + flatCSS.join(''));
	
	      var existingName = styleSheet.getName(hash);
	      if (existingName !== undefined) {
	        if (styleSheet.stylesCacheable) {
	          this.lastClassName = existingName;
	        }
	        return existingName;
	      }
	
	      var name = nameGenerator(hash);
	      if (styleSheet.stylesCacheable) {
	        this.lastClassName = existingName;
	      }
	      if (styleSheet.alreadyInjected(hash, name)) {
	        return name;
	      }
	
	      var css = '\n' + stringifyRules(flatCSS, '.' + name);
	      // NOTE: this can only be set when we inject the class-name.
	      // For some reason, presumably due to how css is stringifyRules behaves in
	      // differently between client and server, styles break.
	      styleSheet.inject(this.componentId, true, css, hash, name);
	      return name;
	    };
	
	    ComponentStyle.generateName = function generateName(str) {
	      return nameGenerator((0, _hash2.default)(str));
	    };
	
	    return ComponentStyle;
	  }();
	
	  return ComponentStyle;
	};
	
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(117)(module)))

/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createWarnTooManyClasses = __webpack_require__(438);
	
	var _createWarnTooManyClasses2 = _interopRequireDefault(_createWarnTooManyClasses);
	
	var _validAttr = __webpack_require__(448);
	
	var _validAttr2 = _interopRequireDefault(_validAttr);
	
	var _isTag = __webpack_require__(445);
	
	var _isTag2 = _interopRequireDefault(_isTag);
	
	var _isStyledComponent = __webpack_require__(115);
	
	var _isStyledComponent2 = _interopRequireDefault(_isStyledComponent);
	
	var _getComponentName = __webpack_require__(443);
	
	var _getComponentName2 = _interopRequireDefault(_getComponentName);
	
	var _determineTheme = __webpack_require__(185);
	
	var _determineTheme2 = _interopRequireDefault(_determineTheme);
	
	var _escape = __webpack_require__(440);
	
	var _escape2 = _interopRequireDefault(_escape);
	
	var _ThemeProvider = __webpack_require__(81);
	
	var _StyleSheet = __webpack_require__(27);
	
	var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
	
	var _ServerStyleSheet = __webpack_require__(80);
	
	var _ServerStyleSheet2 = _interopRequireDefault(_ServerStyleSheet);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var babelPluginFlowReactPropTypes_proptype_Theme = __webpack_require__(81).babelPluginFlowReactPropTypes_proptype_Theme || __webpack_require__(3).any;
	
	var babelPluginFlowReactPropTypes_proptype_Target = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Target || __webpack_require__(3).any;
	
	var babelPluginFlowReactPropTypes_proptype_RuleSet = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_RuleSet || __webpack_require__(3).any;
	
	// HACK for generating all static styles without needing to allocate
	// an empty execution context every single time...
	var STATIC_EXECUTION_CONTEXT = {};
	
	exports.default = function (ComponentStyle, constructWithOptions) {
	  var identifiers = {};
	
	  /* We depend on components having unique IDs */
	  var generateId = function generateId(_displayName, parentComponentId) {
	    var displayName = typeof _displayName !== 'string' ? 'sc' : (0, _escape2.default)(_displayName);
	
	    var componentId = void 0;
	
	    /**
	     * only fall back to hashing the component injection order if
	     * a proper displayName isn't provided by the babel plugin
	     */
	    if (!_displayName) {
	      var nr = (identifiers[displayName] || 0) + 1;
	      identifiers[displayName] = nr;
	
	      componentId = displayName + '-' + ComponentStyle.generateName(displayName + nr);
	    } else {
	      componentId = displayName + '-' + ComponentStyle.generateName(displayName);
	    }
	
	    return parentComponentId !== undefined ? parentComponentId + '-' + componentId : componentId;
	  };
	
	  var BaseStyledComponent = function (_Component) {
	    _inherits(BaseStyledComponent, _Component);
	
	    function BaseStyledComponent() {
	      var _temp, _this, _ret;
	
	      _classCallCheck(this, BaseStyledComponent);
	
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.attrs = {}, _this.state = {
	        theme: null,
	        generatedClassName: ''
	      }, _this.unsubscribeId = -1, _temp), _possibleConstructorReturn(_this, _ret);
	    }
	
	    BaseStyledComponent.prototype.unsubscribeFromContext = function unsubscribeFromContext() {
	      if (this.unsubscribeId !== -1) {
	        this.context[_ThemeProvider.CHANNEL_NEXT].unsubscribe(this.unsubscribeId);
	      }
	    };
	
	    BaseStyledComponent.prototype.buildExecutionContext = function buildExecutionContext(theme, props) {
	      var attrs = this.constructor.attrs;
	
	      var context = _extends({}, props, { theme: theme });
	      if (attrs === undefined) {
	        return context;
	      }
	
	      this.attrs = Object.keys(attrs).reduce(function (acc, key) {
	        var attr = attrs[key];
	        // eslint-disable-next-line no-param-reassign
	        acc[key] = typeof attr === 'function' ? attr(context) : attr;
	        return acc;
	      }, {});
	
	      return _extends({}, context, this.attrs);
	    };
	
	    BaseStyledComponent.prototype.generateAndInjectStyles = function generateAndInjectStyles(theme, props) {
	      var _constructor = this.constructor,
	          attrs = _constructor.attrs,
	          componentStyle = _constructor.componentStyle,
	          warnTooManyClasses = _constructor.warnTooManyClasses;
	
	      var styleSheet = this.context[_StyleSheet.CONTEXT_KEY] || _StyleSheet2.default.instance;
	
	      // staticaly styled-components don't need to build an execution context object,
	      // and shouldn't be increasing the number of class names
	      if (componentStyle.isStatic && attrs === undefined) {
	        return componentStyle.generateAndInjectStyles(STATIC_EXECUTION_CONTEXT, styleSheet);
	      } else {
	        var executionContext = this.buildExecutionContext(theme, props);
	        var className = componentStyle.generateAndInjectStyles(executionContext, styleSheet);
	
	        if (false) {
	          warnTooManyClasses(className);
	        }
	
	        return className;
	      }
	    };
	
	    BaseStyledComponent.prototype.componentWillMount = function componentWillMount() {
	      var _this2 = this;
	
	      var componentStyle = this.constructor.componentStyle;
	
	      var styledContext = this.context[_ThemeProvider.CHANNEL_NEXT];
	
	      // If this is a staticaly-styled component, we don't need to the theme
	      // to generate or build styles.
	      if (componentStyle.isStatic) {
	        var generatedClassName = this.generateAndInjectStyles(STATIC_EXECUTION_CONTEXT, this.props);
	        this.setState({ generatedClassName: generatedClassName });
	        // If there is a theme in the context, subscribe to the event emitter. This
	        // is necessary due to pure components blocking context updates, this circumvents
	        // that by updating when an event is emitted
	      } else if (styledContext !== undefined) {
	        var subscribe = styledContext.subscribe;
	
	        this.unsubscribeId = subscribe(function (nextTheme) {
	          // This will be called once immediately
	          var theme = (0, _determineTheme2.default)(_this2.props, nextTheme, _this2.constructor.defaultProps);
	          var generatedClassName = _this2.generateAndInjectStyles(theme, _this2.props);
	
	          _this2.setState({ theme: theme, generatedClassName: generatedClassName });
	        });
	      } else {
	        // eslint-disable-next-line react/prop-types
	        var _theme = this.props.theme || {};
	        var _generatedClassName = this.generateAndInjectStyles(_theme, this.props);
	        this.setState({ theme: _theme, generatedClassName: _generatedClassName });
	      }
	    };
	
	    BaseStyledComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	      var _this3 = this;
	
	      // If this is a staticaly-styled component, we don't need to listen to
	      // props changes to update styles
	      var componentStyle = this.constructor.componentStyle;
	
	      if (componentStyle.isStatic) {
	        return;
	      }
	
	      this.setState(function (oldState) {
	        var theme = (0, _determineTheme2.default)(nextProps, oldState.theme, _this3.constructor.defaultProps);
	        var generatedClassName = _this3.generateAndInjectStyles(theme, nextProps);
	
	        return { theme: theme, generatedClassName: generatedClassName };
	      });
	    };
	
	    BaseStyledComponent.prototype.componentWillUnmount = function componentWillUnmount() {
	      this.unsubscribeFromContext();
	    };
	
	    BaseStyledComponent.prototype.render = function render() {
	      var _this4 = this;
	
	      // eslint-disable-next-line react/prop-types
	      var innerRef = this.props.innerRef;
	      var generatedClassName = this.state.generatedClassName;
	      var _constructor2 = this.constructor,
	          styledComponentId = _constructor2.styledComponentId,
	          target = _constructor2.target;
	
	
	      var isTargetTag = (0, _isTag2.default)(target);
	
	      var className = [
	      // eslint-disable-next-line react/prop-types
	      this.props.className, styledComponentId, this.attrs.className, generatedClassName].filter(Boolean).join(' ');
	
	      var baseProps = _extends({}, this.attrs, {
	        className: className
	      });
	
	      if ((0, _isStyledComponent2.default)(target)) {
	        baseProps.innerRef = innerRef;
	      } else {
	        baseProps.ref = innerRef;
	      }
	
	      var propsForElement = Object.keys(this.props).reduce(function (acc, propName) {
	        // Don't pass through non HTML tags through to HTML elements
	        // always omit innerRef
	        if (propName !== 'innerRef' && propName !== 'className' && (!isTargetTag || (0, _validAttr2.default)(propName))) {
	          // eslint-disable-next-line no-param-reassign
	          acc[propName] = _this4.props[propName];
	        }
	
	        return acc;
	      }, baseProps);
	
	      return (0, _react.createElement)(target, propsForElement);
	    };
	
	    return BaseStyledComponent;
	  }(_react.Component);
	
	  var createStyledComponent = function createStyledComponent(target, options, rules) {
	    var _StyledComponent$cont;
	
	    var _options$displayName = options.displayName,
	        displayName = _options$displayName === undefined ? (0, _isTag2.default)(target) ? 'styled.' + target : 'Styled(' + (0, _getComponentName2.default)(target) + ')' : _options$displayName,
	        _options$componentId = options.componentId,
	        componentId = _options$componentId === undefined ? generateId(options.displayName, options.parentComponentId) : _options$componentId,
	        _options$ParentCompon = options.ParentComponent,
	        ParentComponent = _options$ParentCompon === undefined ? BaseStyledComponent : _options$ParentCompon,
	        extendingRules = options.rules,
	        attrs = options.attrs;
	
	
	    var styledComponentId = options.displayName && options.componentId ? (0, _escape2.default)(options.displayName) + '-' + options.componentId : componentId;
	
	    var componentStyle = new ComponentStyle(extendingRules === undefined ? rules : extendingRules.concat(rules), attrs, styledComponentId);
	
	    var StyledComponent = function (_ParentComponent) {
	      _inherits(StyledComponent, _ParentComponent);
	
	      function StyledComponent() {
	        _classCallCheck(this, StyledComponent);
	
	        return _possibleConstructorReturn(this, _ParentComponent.apply(this, arguments));
	      }
	
	      StyledComponent.withComponent = function withComponent(tag) {
	        var previousComponentId = options.componentId,
	            optionsToCopy = _objectWithoutProperties(options, ['componentId']);
	
	        var newComponentId = previousComponentId && previousComponentId + '-' + ((0, _isTag2.default)(tag) ? tag : (0, _escape2.default)((0, _getComponentName2.default)(tag)));
	
	        var newOptions = _extends({}, optionsToCopy, {
	          componentId: newComponentId,
	          ParentComponent: StyledComponent
	        });
	
	        return createStyledComponent(tag, newOptions, rules);
	      };
	
	      _createClass(StyledComponent, null, [{
	        key: 'extend',
	        get: function get() {
	          var rulesFromOptions = options.rules,
	              parentComponentId = options.componentId,
	              optionsToCopy = _objectWithoutProperties(options, ['rules', 'componentId']);
	
	          var newRules = rulesFromOptions === undefined ? rules : rulesFromOptions.concat(rules);
	
	          var newOptions = _extends({}, optionsToCopy, {
	            rules: newRules,
	            parentComponentId: parentComponentId,
	            ParentComponent: StyledComponent
	          });
	
	          return constructWithOptions(createStyledComponent, target, newOptions);
	        }
	      }]);
	
	      return StyledComponent;
	    }(ParentComponent);
	
	    StyledComponent.contextTypes = (_StyledComponent$cont = {}, _StyledComponent$cont[_ThemeProvider.CHANNEL] = _propTypes2.default.func, _StyledComponent$cont[_ThemeProvider.CHANNEL_NEXT] = _ThemeProvider.CONTEXT_CHANNEL_SHAPE, _StyledComponent$cont[_StyleSheet.CONTEXT_KEY] = _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_StyleSheet2.default), _propTypes2.default.instanceOf(_ServerStyleSheet2.default)]), _StyledComponent$cont);
	    StyledComponent.displayName = displayName;
	    StyledComponent.styledComponentId = styledComponentId;
	    StyledComponent.attrs = attrs;
	    StyledComponent.componentStyle = componentStyle;
	    StyledComponent.target = target;
	
	
	    if (false) {
	      StyledComponent.warnTooManyClasses = (0, _createWarnTooManyClasses2.default)(displayName);
	    }
	
	    return StyledComponent;
	  };
	
	  return createStyledComponent;
	};
	
	module.exports = exports['default'];

/***/ }),
/* 438 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var LIMIT = 200;
	
	exports.default = function (displayName) {
	  var generatedClasses = {};
	  var warningSeen = false;
	
	  return function (className) {
	    if (!warningSeen) {
	      generatedClasses[className] = true;
	      if (Object.keys(generatedClasses).length >= LIMIT) {
	        // Unable to find latestRule in test environment.
	        /* eslint-disable no-console, prefer-template */
	        console.warn('Over ' + LIMIT + ' classes were generated for component ' + displayName + '. \n' + 'Consider using the attrs method, together with a style object for frequently changed styles.\n' + 'Example:\n' + '  const Component = styled.div.attrs({\n' + '    style: ({ background }) => ({\n' + '      background,\n' + '    }),\n' + '  })`width: 100%;`\n\n' + '  <Component />');
	        warningSeen = true;
	        generatedClasses = {};
	      }
	    }
	  };
	};
	
	module.exports = exports['default'];

/***/ }),
/* 439 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	
	// Thanks to ReactDOMFactories for this handy list!
	
	exports.default = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr',
	
	// SVG
	'circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];
	module.exports = exports['default'];

/***/ }),
/* 440 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = escape;
	var escapeRegex = /[[\].#*$><+~=|^:(),"'`-]+/g;
	var dashesAtEnds = /(^-|-$)/g;
	
	/**
	 * TODO: Explore using CSS.escape when it becomes more available
	 * in evergreen browsers.
	 */
	function escape(str) {
	  return str
	  // Replace all possible CSS selectors
	  .replace(escapeRegex, '-')
	
	  // Remove extraneous hyphens at the start and end
	  .replace(dashesAtEnds, '');
	}
	module.exports = exports['default'];

/***/ }),
/* 441 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var SC_COMPONENT_ID = /^[^\S\n]*?\/\* sc-component-id:\s+(\S+)\s+\*\//gm;
	
	exports.default = function (maybeCSS) {
	  var css = '' + (maybeCSS || ''); // Definitely a string, and a clone
	  var existingComponents = [];
	  css.replace(SC_COMPONENT_ID, function (match, componentId, matchIndex) {
	    existingComponents.push({ componentId: componentId, matchIndex: matchIndex });
	    return match;
	  });
	  return existingComponents.map(function (_ref, i) {
	    var componentId = _ref.componentId,
	        matchIndex = _ref.matchIndex;
	
	    var nextComp = existingComponents[i + 1];
	    var cssFromDOM = nextComp ? css.slice(matchIndex, nextComp.matchIndex) : css.slice(matchIndex);
	    return { componentId: componentId, cssFromDOM: cssFromDOM };
	  });
	};
	
	module.exports = exports['default'];

/***/ }),
/* 442 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');
	var charsLength = chars.length;
	
	/* Some high number, usually 9-digit base-10. Map it to base-😎 */
	var generateAlphabeticName = function generateAlphabeticName(code) {
	  var name = '';
	  var x = void 0;
	
	  for (x = code; x > charsLength; x = Math.floor(x / charsLength)) {
	    name = chars[x % charsLength] + name;
	  }
	
	  return chars[x % charsLength] + name;
	};
	
	exports.default = generateAlphabeticName;
	module.exports = exports['default'];

/***/ }),
/* 443 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = getComponentName;
	
	
	/* eslint-disable no-undef */
	function getComponentName(target) {
	  return target.displayName || target.name || 'Component';
	}
	module.exports = exports['default'];

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(3).any;
	
	exports.default = function (strings, interpolations) {
	  return interpolations.reduce(function (array, interp, i) {
	    return array.concat(interp, strings[i + 1]);
	  }, [strings[0]]);
	};
	
	module.exports = exports['default'];

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = isTag;
	
	var babelPluginFlowReactPropTypes_proptype_Target = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Target || __webpack_require__(3).any;
	
	function isTag(target) /* : %checks */{
	  return typeof target === 'string';
	}
	module.exports = exports['default'];

/***/ }),
/* 446 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	// Helper to call a given function, only once
	exports.default = function (cb) {
	  var called = false;
	
	  return function () {
	    if (!called) {
	      called = true;
	      cb();
	    }
	  };
	};
	
	module.exports = exports["default"];

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _stylis = __webpack_require__(449);
	
	var _stylis2 = _interopRequireDefault(_stylis);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var babelPluginFlowReactPropTypes_proptype_Interpolation = __webpack_require__(16).babelPluginFlowReactPropTypes_proptype_Interpolation || __webpack_require__(3).any;
	
	var stylis = new _stylis2.default({
	  global: false,
	  cascade: true,
	  keyframe: false,
	  prefix: true,
	  compress: false,
	  semicolon: true
	});
	
	var stringifyRules = function stringifyRules(rules, selector, prefix) {
	  var flatCSS = rules.join('').replace(/^\s*\/\/.*$/gm, ''); // replace JS comments
	
	  var cssStr = selector && prefix ? prefix + ' ' + selector + ' { ' + flatCSS + ' }' : flatCSS;
	
	  return stylis(prefix || !selector ? '' : selector, cssStr);
	};
	
	exports.default = stringifyRules;
	module.exports = exports['default'];

/***/ }),
/* 448 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	
	/* eslint-disable max-len */
	/**
	 * Trying to avoid the unknown-prop errors on styled components by filtering by
	 * React's attribute whitelist.
	 *
	 * To regenerate this regex:
	 *
	 * 1. `npm i -g regexgen` (https://github.com/devongovett/regexgen)
	 * 2. Run `regexgen` with the list of space-separated words below as input
	 * 3. Surround the emitted regex with this: `/^(GENERATED_REGEX)$/` -- this will ensure a full string match
	 *    and no false positives from partials
	 **/
	/*
	children dangerouslySetInnerHTML key ref autoFocus defaultValue valueLink defaultChecked checkedLink innerHTML suppressContentEditableWarning onFocusIn onFocusOut className onCopy onCut onPaste onCompositionEnd onCompositionStart onCompositionUpdate onKeyDown onKeyPress onKeyUp onFocus onBlur onChange onInput onSubmit onReset onClick onContextMenu onDoubleClick onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp onSelect onTouchCancel onTouchEnd onTouchMove onTouchStart onScroll onWheel onAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting onLoad onAnimationStart onAnimationEnd onAnimationIteration onTransitionEnd onCopyCapture onCutCapture onPasteCapture onCompositionEndCapture onCompositionStartCapture onCompositionUpdateCapture onKeyDownCapture onKeyPressCapture onKeyUpCapture onFocusCapture onBlurCapture onChangeCapture onInputCapture onSubmitCapture onResetCapture onClickCapture onContextMenuCapture onDoubleClickCapture onDragCapture onDragEndCapture onDragEnterCapture onDragExitCapture onDragLeaveCapture onDragOverCapture onDragStartCapture onDropCapture onMouseDownCapture onMouseEnterCapture onMouseLeaveCapture onMouseMoveCapture onMouseOutCapture onMouseOverCapture onMouseUpCapture onSelectCapture onTouchCancelCapture onTouchEndCapture onTouchMoveCapture onTouchStartCapture onScrollCapture onWheelCapture onAbortCapture onCanPlayCapture onCanPlayThroughCapture onDurationChangeCapture onEmptiedCapture onEncryptedCapture onEndedCapture onErrorCapture onLoadedDataCapture onLoadedMetadataCapture onLoadStartCapture onPauseCapture onPlayCapture onPlayingCapture onProgressCapture onRateChangeCapture onSeekedCapture onSeekingCapture onStalledCapture onSuspendCapture onTimeUpdateCapture onVolumeChangeCapture onWaitingCapture onLoadCapture onAnimationStartCapture onAnimationEndCapture onAnimationIterationCapture onTransitionEndCapture accept acceptCharset accessKey action allowFullScreen allowTransparency alt as async autoComplete autoPlay capture cellPadding cellSpacing charSet challenge checked cite classID className cols colSpan content contentEditable contextMenu controls coords crossOrigin data dateTime default defer dir disabled download draggable encType form formAction formEncType formMethod formNoValidate formTarget frameBorder headers height hidden high href hrefLang htmlFor httpEquiv icon id inputMode integrity is keyParams keyType kind label lang list loop low manifest marginHeight marginWidth max maxLength media mediaGroup method min minLength multiple muted name nonce noValidate open optimum pattern placeholder playsInline poster preload profile radioGroup readOnly referrerPolicy rel required reversed role rows rowSpan sandbox scope scoped scrolling seamless selected shape size sizes span spellCheck src srcDoc srcLang srcSet start step style summary tabIndex target title type useMap value width wmode wrap about datatype inlist prefix property resource typeof vocab autoCapitalize autoCorrect autoSave color itemProp itemScope itemType itemID itemRef results security unselectable accentHeight accumulate additive alignmentBaseline allowReorder alphabetic amplitude arabicForm ascent attributeName attributeType autoReverse azimuth baseFrequency baseProfile baselineShift bbox begin bias by calcMode capHeight clip clipPath clipRule clipPathUnits colorInterpolation colorInterpolationFilters colorProfile colorRendering contentScriptType contentStyleType cursor cx cy d decelerate descent diffuseConstant direction display divisor dominantBaseline dur dx dy edgeMode elevation enableBackground end exponent externalResourcesRequired fill fillOpacity fillRule filter filterRes filterUnits floodColor floodOpacity focusable fontFamily fontSize fontSizeAdjust fontStretch fontStyle fontVariant fontWeight format from fx fy g1 g2 glyphName glyphOrientationHorizontal glyphOrientationVertical glyphRef gradientTransform gradientUnits hanging horizAdvX horizOriginX ideographic imageRendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lengthAdjust letterSpacing lightingColor limitingConeAngle local markerEnd markerMid markerStart markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical mode numOctaves offset opacity operator order orient orientation origin overflow overlinePosition overlineThickness paintOrder panose1 pathLength patternContentUnits patternTransform patternUnits pointerEvents points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY renderingIntent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shapeRendering slope spacing specularConstant specularExponent speed spreadMethod startOffset stdDeviation stemh stemv stitchTiles stopColor stopOpacity strikethroughPosition strikethroughThickness string stroke strokeDasharray strokeDashoffset strokeLinecap strokeLinejoin strokeMiterlimit strokeOpacity strokeWidth surfaceScale systemLanguage tableValues targetX targetY textAnchor textDecoration textRendering textLength to transform u1 u2 underlinePosition underlineThickness unicode unicodeBidi unicodeRange unitsPerEm vAlphabetic vHanging vIdeographic vMathematical values vectorEffect version vertAdvY vertOriginX vertOriginY viewBox viewTarget visibility widths wordSpacing writingMode x xHeight x1 x2 xChannelSelector xlinkActuate xlinkArcrole xlinkHref xlinkRole xlinkShow xlinkTitle xlinkType xmlBase xmlns xmlnsXlink xmlLang xmlSpace y y1 y2 yChannelSelector z zoomAndPan
	*/
	/* eslint-enable max-len */
	
	var ATTRIBUTE_REGEX = /^((?:s(?:uppressContentEditableWarn|croll|pac)|(?:shape|image|text)Render|(?:letter|word)Spac|vHang|hang)ing|(?:on(?:AnimationIteration|C(?:o(?:mposition(?:Update|Start|End)|ntextMenu|py)|anPlayThrough|anPlay|hange|lick|ut)|(?:(?:Duration|Volume|Rate)Chang|(?:MouseLea|(?:Touch|Mouse)Mo|DragLea)v|Paus)e|Loaded(?:Metad|D)ata|(?:Animation|Touch|Load|Drag)Start|(?:(?:T(?:ransition|ouch)|Animation)E|Suspe)nd|DoubleClick|(?:TouchCanc|Whe)el|(?:Mouse(?:Ent|Ov)e|Drag(?:Ent|Ov)e|Erro)r|TimeUpdate|(?:E(?:n(?:crypt|d)|mpti)|S(?:tall|eek))ed|MouseDown|P(?:rogress|laying)|(?:MouseOu|DragExi|S(?:elec|ubmi)|Rese|Inpu)t|KeyPress|DragEnd|Key(?:Down|Up)|(?:Wait|Seek)ing|(?:MouseU|Dro)p|Scroll|Paste|Focus|Abort|Drag|Play|Load|Blur)Captur|alignmentBaselin|(?:limitingConeAng|xlink(?:(?:Arcr|R)o|Tit)|s(?:urfaceSca|ty|ca)|unselectab|baseProfi|fontSty|(?:focus|dragg)ab|multip|profi|tit)l|d(?:ominantBaselin|efaultValu)|a(?:uto(?:Capitaliz|Revers|Sav)|dditiv)|(?:(?:formNoValid|xlinkActu|noValid|accumul|rot)a|autoComple|decelera)t|(?:(?:attribute|item)T|datat)yp|(?:attribute|glyph)Nam|playsInlin|(?:formE|e)ncTyp|(?:writing|input|edge)Mod|(?:xlinkTy|itemSco|keyTy|slo)p|(?:amplitu|mo)d|(?:xmlSpa|non)c|fillRul|(?:dateTi|na)m|r(?:esourc|ol)|xmlBas|wmod)e|(?:glyphOrientationHorizont|loc)al|(?:externalResourcesRequir|select|revers|mut)ed|c(?:o(?:lorInterpolationFilter|ntrol|ord)s|o(?:lor(?:Interpolation)?|ntent)|(?:ontentS(?:cript|tyle)Typ|o(?:ntentEditab|lorProfi)l|l(?:assNam|ipRul)|a(?:lcMod|ptur)|it)e|olorRendering|l(?:ipPathUnits|assID)|o(?:ntextMenu|ls)|h(?:eckedLink|a(?:llenge|rSet)|ildren|ecked)|ell(?:Spac|Padd)ing|(?:rossOrigi|olSpa)n|apHeight|lip(?:Path)?|ursor|[xy])|glyphOrientationVertical|d(?:angerouslySetInnerHTML|efaultChecked|ownload|isabled|isplay|[xy])|(?:s(?:trikethroughThickn|eaml)es|(?:und|ov)erlineThicknes|r(?:equiredExtension|adiu)|(?:requiredFeatur|tableValu|stitchTil|numOctav|filterR)e|key(?:(?:Splin|Tim)e|Param)|autoFocu|header|bia)s|(?:(?:st(?:rikethroughPosi|dDevia)|(?:und|ov)erlinePosi|(?:textDecor|elev)a|orienta)tio|(?:strokeLinejo|orig)i|formActio|zoomAndPa|onFocusI|directio|(?:vers|act)io|rowSpa|begi|ico)n|o(?:n(?:AnimationIteration|C(?:o(?:mposition(?:Update|Start|End)|ntextMenu|py)|anPlayThrough|anPlay|hange|lick|ut)|(?:(?:Duration|Volume|Rate)Chang|(?:MouseLea|(?:Touch|Mouse)Mo|DragLea)v|Paus)e|Loaded(?:Metad|D)ata|(?:Animation|Touch|Load|Drag)Start|(?:(?:T(?:ransition|ouch)|Animation)E|Suspe)nd|DoubleClick|(?:TouchCanc|Whe)el|(?:Mouse(?:Ent|Ov)e|Drag(?:Ent|Ov)e|Erro)r|TimeUpdate|(?:E(?:n(?:crypt|d)|mpti)|S(?:tall|eek))ed|MouseDown|P(?:rogress|laying)|(?:MouseOu|DragExi|S(?:elec|ubmi)|Rese|Inpu)t|KeyPress|DragEnd|Key(?:Down|Up)|(?:Wait|Seek)ing|(?:MouseU|Dro)p|Scroll|Paste|Focus|Abort|Drag|Play|Load|Blur)|rient)|p(?:reserveA(?:spectRatio|lpha)|ointsAt[X-Z]|anose1)|(?:patternContent|ma(?:sk(?:Content)?|rker)|primitive|gradient|pattern|filter)Units|(?:gradientT|patternT|t)ransform|(?:(?:allowTranspar|baseFrequ)enc|re(?:ferrerPolic|adOnl)|(?:(?:st(?:roke|op)O|floodO|fillO|o)pac|integr|secur)it|visibilit|fontFamil|accessKe|propert|summar)y|(?:strokeMiterlimi|(?:specularConsta|repeatCou|fontVaria)n|(?:(?:specularE|e)xpon|renderingInt|asc)en|d(?:iffuseConsta|esce)n|(?:fontSizeAdju|lengthAdju|manife)s|baselineShif|vectorEffec|(?:(?:mar(?:ker|gin)|x)H|accentH|fontW)eigh|a(?:utoCorrec|bou)|markerStar|onFocusOu|in(?:tercep|lis)|restar|forma|heigh|lis)t|(?:(?:st(?:rokeDasho|artO)|o)ffs|acceptChars|formTarg|viewTarg|srcS)et|(?:(?:enableBackgrou|markerE)n|s(?:p(?:readMetho|ee)|ee)|formMetho|m(?:arkerMi|etho)|preloa|kin)d|k(?:ernel(?:UnitLength|Matrix)|[1-4])|(?:[xy]ChannelSelect|lightingCol|textAnch|floodCol|stopCol|operat|htmlF)or|(?:allowFullScre|hidd)en|strokeDasharray|systemLanguage|(?:strokeLineca|itemPro|useMa|wra|loo)p|v(?:Mathematical|ert(?:Origin[XY]|AdvY)|alues|ocab)|(?:pointerEve|keyPoi)nts|unicodeRange|(?:(?:allowReord|placehold|frameBord|paintOrd|post|ord)e|repeatDu|d(?:efe|u))r|mathematical|(?:vI|i)deographic|h(?:oriz(?:Origin|Adv)X|ttpEquiv)|u(?:nicodeBidi|[12])|(?:fontStretc|hig)h|(?:(?:mar(?:ker|gin)W|strokeW)id|azimu)th|vAlphabetic|mediaGroup|spellCheck|(?:unitsPerE|optimu|fro)m|r(?:adioGroup|e(?:sults|f[XY]|l)|ows|[xy])|(?:xmlnsXl|valueL)ink|a(?:rabicForm|l(?:phabetic|t)|sync)|pathLength|(?:text|m(?:in|ax))Length|innerHTML|xlinkShow|(?:xlinkHr|glyphR)ef|r(?:e(?:quired|sult|f))?|o(?:verflow|pen)|(?:tabInde|(?:sand|b)bo|viewBo)x|(?:(?:href|xml|src)La|kerni)ng|f(?:o(?:ntSize|rm)|il(?:ter|l))|autoPlay|unicode|p(?:attern|oints)|t(?:arget[XY]|o)|i(?:temRef|n2|s)|divisor|d(?:efault|ata|ir)?|srcDoc|s(?:coped|te(?:m[hv]|p)|pan)|(?:width|size)s|(?:stri|la)ng|prefix|itemID|s(?:t(?:roke|art)|hape|cope|rc)|a(?:ccept|s)|t(?:arget|ype)|typeof|width|value|x(?:mlns)?|label|m(?:edia|a(?:sk|x)|in)|size|href|k(?:ey)?|end|low|x[12]|i[dn]|y[12]|g[12]|by|f[xy]|[yz])$/;
	
	/* From DOMProperty */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';
	var isCustomAttribute = RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));
	
	exports.default = function (name) {
	  return ATTRIBUTE_REGEX.test(name) || isCustomAttribute(name.toLowerCase());
	};
	
	module.exports = exports['default'];

/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/*
	 *          __        ___
	 *    _____/ /___  __/ (_)____
	 *   / ___/ __/ / / / / / ___/
	 *  (__  ) /_/ /_/ / / (__  )
	 * /____/\__/\__, /_/_/____/
	 *          /____/
	 *
	 * light - weight css preprocessor @licence MIT
	 */
	(function (factory) {/* eslint-disable */
		 true ? (module['exports'] = factory(null)) :
			typeof define === 'function' && define['amd'] ? define(factory(null)) :
				(window['stylis'] = factory(null))
	}(/** @param {*=} options */function factory (options) {/* eslint-disable */
	
		'use strict'
	
		/**
		 * Notes
		 *
		 * The ['<method name>'] pattern is used to support closure compiler
		 * the jsdoc signatures are also used to the same effect
		 *
		 * ----
		 *
		 * int + int + int === n4 [faster]
		 *
		 * vs
		 *
		 * int === n1 && int === n2 && int === n3
		 *
		 * ----
		 *
		 * switch (int) { case ints...} [faster]
		 *
		 * vs
		 *
		 * if (int == 1 && int === 2 ...)
		 *
		 * ----
		 *
		 * The (first*n1 + second*n2 + third*n3) format used in the property parser
		 * is a simple way to hash the sequence of characters
		 * taking into account the index they occur in
		 * since any number of 3 character sequences could produce duplicates.
		 *
		 * On the other hand sequences that are directly tied to the index of the character
		 * resolve a far more accurate measure, it's also faster
		 * to evaluate one condition in a switch statement
		 * than three in an if statement regardless of the added math.
		 *
		 * This allows the vendor prefixer to be both small and fast.
		 */
	
		var nullptn = /^\0+/g /* matches leading null characters */
		var formatptn = /[\0\r\f]/g /* matches new line, null and formfeed characters */
		var colonptn = /: */g /* splits animation rules */
		var cursorptn = /zoo|gra/ /* assert cursor varient */
		var transformptn = /([,: ])(transform)/g /* vendor prefix transform, older webkit */
		var animationptn = /,+\s*(?![^(]*[)])/g /* splits multiple shorthand notation animations */
		var propertiesptn = / +\s*(?![^(]*[)])/g /* animation properties */
		var elementptn = / *[\0] */g /* selector elements */
		var selectorptn = /,\r+?/g /* splits selectors */
		var andptn = /([\t\r\n ])*\f?&/g /* match & */
		var escapeptn = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g /* matches :global(.*) */
		var invalidptn = /\W+/g /* removes invalid characters from keyframes */
		var keyframeptn = /@(k\w+)\s*(\S*)\s*/ /* matches @keyframes $1 */
		var plcholdrptn = /::(place)/g /* match ::placeholder varient */
		var readonlyptn = /:(read-only)/g /* match :read-only varient */
		var beforeptn = /\s+(?=[{\];=:>])/g /* matches \s before ] ; = : */
		var afterptn = /([[}=:>])\s+/g /* matches \s after characters [ } = : */
		var tailptn = /(\{[^{]+?);(?=\})/g /* matches tail semi-colons ;} */
		var whiteptn = /\s{2,}/g /* matches repeating whitespace */
		var pseudoptn = /([^\(])(:+) */g /* pseudo element */
		var writingptn = /[svh]\w+-[tblr]{2}/ /* match writing mode property values */
		var gradientptn = /([\w-]+t\()/g /* match *gradient property */
		var supportsptn = /\(\s*(.*)\s*\)/g /* match supports (groups) */
		var propertyptn = /([\s\S]*?);/g /* match properties leading semicolon */
		var selfptn = /-self|flex-/g /* match flex- and -self in align-self: flex-*; */
		var pseudofmt = /[^]*?(:[rp][el]a[\w-]+)[^]*/ /* extrats :readonly or :placholder from selector */
		var trimptn = /[ \t]+$/ /* match tail whitspace */
		var dimensionptn = /stretch|:\s*\w+\-(?:conte|avail)/ /* match max/min/fit-content, fill-available */
		var imgsrcptn = /([^-])(image-set\()/
	
		/* vendors */
		var webkit = '-webkit-'
		var moz = '-moz-'
		var ms = '-ms-'
	
		/* character codes */
		var SEMICOLON = 59 /* ; */
		var CLOSEBRACES = 125 /* } */
		var OPENBRACES = 123 /* { */
		var OPENPARENTHESES = 40 /* ( */
		var CLOSEPARENTHESES = 41 /* ) */
		var OPENBRACKET = 91 /* [ */
		var CLOSEBRACKET = 93 /* ] */
		var NEWLINE = 10 /* \n */
		var CARRIAGE = 13 /* \r */
		var TAB = 9 /* \t */
		var AT = 64 /* @ */
		var SPACE = 32 /*   */
		var AND = 38 /* & */
		var DASH = 45 /* - */
		var UNDERSCORE = 95 /* _ */
		var STAR = 42 /* * */
		var COMMA = 44 /* , */
		var COLON = 58 /* : */
		var SINGLEQUOTE = 39 /* ' */
		var DOUBLEQUOTE = 34 /* " */
		var FOWARDSLASH = 47 /* / */
		var GREATERTHAN = 62 /* > */
		var PLUS = 43 /* + */
		var TILDE = 126 /* ~ */
		var NULL = 0 /* \0 */
		var FORMFEED = 12 /* \f */
		var VERTICALTAB = 11 /* \v */
	
		/* special identifiers */
		var KEYFRAME = 107 /* k */
		var MEDIA = 109 /* m */
		var SUPPORTS = 115 /* s */
		var PLACEHOLDER = 112 /* p */
		var READONLY = 111 /* o */
		var IMPORT = 105 /* <at>i */
		var CHARSET = 99 /* <at>c */
		var DOCUMENT = 100 /* <at>d */
		var PAGE = 112 /* <at>p */
	
		var column = 1 /* current column */
		var line = 1 /* current line numebr */
		var pattern = 0 /* :pattern */
	
		var cascade = 1 /* #id h1 h2 vs h1#id h2#id  */
		var prefix = 1 /* vendor prefix */
		var escape = 1 /* escape :global() pattern */
		var compress = 0 /* compress output */
		var semicolon = 0 /* no/semicolon option */
		var preserve = 0 /* preserve empty selectors */
	
		/* empty reference */
		var array = []
	
		/* plugins */
		var plugins = []
		var plugged = 0
		var should = null
	
		/* plugin context */
		var POSTS = -2
		var PREPS = -1
		var UNKWN = 0
		var PROPS = 1
		var BLCKS = 2
		var ATRUL = 3
	
		/* plugin newline context */
		var unkwn = 0
	
		/* keyframe animation */
		var keyed = 1
		var key = ''
	
		/* selector namespace */
		var nscopealt = ''
		var nscope = ''
	
		/**
		 * Compile
		 *
		 * @param {Array<string>} parent
		 * @param {Array<string>} current
		 * @param {string} body
		 * @param {number} id
		 * @param {number} depth
		 * @return {string}
		 */
		function compile (parent, current, body, id, depth) {
			var bracket = 0 /* brackets [] */
			var comment = 0 /* comments /* // or /* */
			var parentheses = 0 /* functions () */
			var quote = 0 /* quotes '', "" */
	
			var first = 0 /* first character code */
			var second = 0 /* second character code */
			var code = 0 /* current character code */
			var tail = 0 /* previous character code */
			var trail = 0 /* character before previous code */
			var peak = 0 /* previous non-whitespace code */
	
			var counter = 0 /* count sequence termination */
			var context = 0 /* track current context */
			var atrule = 0 /* track @at-rule context */
			var pseudo = 0 /* track pseudo token index */
			var caret = 0 /* current character index */
			var format = 0 /* control character formating context */
			var insert = 0 /* auto semicolon insertion */
			var invert = 0 /* inverted selector pattern */
			var length = 0 /* generic length address */
			var eof = body.length /* end of file(length) */
			var eol = eof - 1 /* end of file(characters) */
	
			var char = '' /* current character */
			var chars = '' /* current buffer of characters */
			var child = '' /* next buffer of characters */
			var out = '' /* compiled body */
			var children = '' /* compiled children */
			var flat = '' /* compiled leafs */
			var selector /* generic selector address */
			var result /* generic address */
	
			// ...build body
			while (caret < eof) {
				code = body.charCodeAt(caret)
	
				// eof varient
				if (caret === eol) {
					// last character + noop context, add synthetic padding for noop context to terminate
					if (comment + quote + parentheses + bracket !== 0) {
						if (comment !== 0) {
							code = comment === FOWARDSLASH ? NEWLINE : FOWARDSLASH
						}
	
						quote = parentheses = bracket = 0
						eof++
						eol++
					}
				}
	
				if (comment + quote + parentheses + bracket === 0) {
					// eof varient
					if (caret === eol) {
						if (format > 0) {
							chars = chars.replace(formatptn, '')
						}
	
						if (chars.trim().length > 0) {
							switch (code) {
								case SPACE:
								case TAB:
								case SEMICOLON:
								case CARRIAGE:
								case NEWLINE: {
									break
								}
								default: {
									chars += body.charAt(caret)
								}
							}
	
							code = SEMICOLON
						}
					}
	
					// auto semicolon insertion
					if (insert === 1) {
						switch (code) {
							// false flags
							case OPENBRACES:
							case CLOSEBRACES:
							case SEMICOLON:
							case DOUBLEQUOTE:
							case SINGLEQUOTE:
							case OPENPARENTHESES:
							case CLOSEPARENTHESES:
							case COMMA: {
								insert = 0
							}
							// ignore
							case TAB:
							case CARRIAGE:
							case NEWLINE:
							case SPACE: {
								break
							}
							// valid
							default: {
								insert = 0
								length = caret
								first = code
								caret--
								code = SEMICOLON
	
								while (length < eof) {
									switch (body.charCodeAt(length++)) {
										case NEWLINE:
										case CARRIAGE:
										case SEMICOLON: {
											++caret
											code = first
											length = eof
											break
										}
										case COLON: {
											if (format > 0) {
												++caret
												code = first
											}
										}
										case OPENBRACES: {
											length = eof
										}
									}
								}
							}
						}
					}
	
					// token varient
					switch (code) {
						case OPENBRACES: {
							chars = chars.trim()
							first = chars.charCodeAt(0)
							counter = 1
							length = ++caret
	
							while (caret < eof) {
								switch (code = body.charCodeAt(caret)) {
									case OPENBRACES: {
										counter++
										break
									}
									case CLOSEBRACES: {
										counter--
										break
									}
									case FOWARDSLASH: {
										switch (second = body.charCodeAt(caret + 1)) {
											// /*, //
											case STAR:
											case FOWARDSLASH: {
												caret = delimited(second, caret, eol, body)
											}
										}
										break
									}
									// given "[" === 91 & "]" === 93 hence forth 91 + 1 + 1 === 93
									case OPENBRACKET: {
										code++
									}
									// given "(" === 40 & ")" === 41 hence forth 40 + 1 === 41
									case OPENPARENTHESES: {
										code++
									}
									// quote tail delimiter is identical to the head delimiter hence noop,
									// fallthrough clauses have been shifted to the correct tail delimiter
									case DOUBLEQUOTE:
									case SINGLEQUOTE: {
										while (caret++ < eol) {
											if (body.charCodeAt(caret) === code) {
												break
											}
										}
									}
								}
	
								if (counter === 0) {
									break
								}
	
								caret++
							}
	
							child = body.substring(length, caret)
	
							if (first === NULL) {
								first = (chars = chars.replace(nullptn, '').trim()).charCodeAt(0)
							}
	
							switch (first) {
								// @at-rule
								case AT: {
									if (format > 0) {
										chars = chars.replace(formatptn, '')
									}
	
									second = chars.charCodeAt(1)
	
									switch (second) {
										case DOCUMENT:
										case MEDIA:
										case SUPPORTS:
										case DASH: {
											selector = current
											break
										}
										default: {
											selector = array
										}
									}
	
									child = compile(current, selector, child, second, depth+1)
									length = child.length
	
									// preserve empty @at-rule
									if (preserve > 0 && length === 0) {
										length = chars.length
									}
	
									// execute plugins, @at-rule context
									if (plugged > 0) {
										selector = select(array, chars, invert)
										result = proxy(ATRUL, child, selector, current, line, column, length, second, depth, id)
										chars = selector.join('')
	
										if (result !== void 0) {
											if ((length = (child = result.trim()).length) === 0) {
												second = 0
												child = ''
											}
										}
									}
	
									if (length > 0) {
										switch (second) {
											case SUPPORTS: {
												chars = chars.replace(supportsptn, supports)
											}
											case DOCUMENT:
											case MEDIA:
											case DASH: {
												child = chars + '{' + child + '}'
												break
											}
											case KEYFRAME: {
												chars = chars.replace(keyframeptn, '$1 $2' + (keyed > 0 ? key : ''))
												child = chars + '{' + child + '}'
	
												if (prefix === 1 || (prefix === 2 && vendor('@'+child, 3))) {
													child = '@' + webkit + child + '@' + child
												} else {
													child = '@' + child
												}
												break
											}
											default: {
												child = chars + child
	
												if (id === PAGE) {
													child = (out += child, '')
												}
											}
										}
									} else {
										child = ''
									}
	
									break
								}
								// selector
								default: {
									child = compile(current, select(current, chars, invert), child, id, depth+1)
								}
							}
	
							children += child
	
							// reset
							context = 0
							insert = 0
							pseudo = 0
							format = 0
							invert = 0
							atrule = 0
							chars = ''
							child = ''
							code = body.charCodeAt(++caret)
							break
						}
						case CLOSEBRACES:
						case SEMICOLON: {
							chars = (format > 0 ? chars.replace(formatptn, '') : chars).trim()
	
							if ((length = chars.length) > 1) {
								// monkey-patch missing colon
								if (pseudo === 0) {
									first = chars.charCodeAt(0)
	
									// first character is a letter or dash, buffer has a space character
									if ((first === DASH || first > 96 && first < 123)) {
										length = (chars = chars.replace(' ', ':')).length
									}
								}
	
								// execute plugins, property context
								if (plugged > 0) {
									if ((result = proxy(PROPS, chars, current, parent, line, column, out.length, id, depth, id)) !== void 0) {
										if ((length = (chars = result.trim()).length) === 0) {
											chars = '\0\0'
										}
									}
								}
	
								first = chars.charCodeAt(0)
								second = chars.charCodeAt(1)
	
								switch (first) {
									case NULL: {
										break
									}
									case AT: {
										if (second === IMPORT || second === CHARSET) {
											flat += chars + body.charAt(caret)
											break
										}
									}
									default: {
										if (chars.charCodeAt(length-1) === COLON) {
											break
										}
	
										out += property(chars, first, second, chars.charCodeAt(2))
									}
								}
							}
	
							// reset
							context = 0
							insert = 0
							pseudo = 0
							format = 0
							invert = 0
							chars = ''
							code = body.charCodeAt(++caret)
							break
						}
					}
				}
	
				// parse characters
				switch (code) {
					case CARRIAGE:
					case NEWLINE: {
						// auto insert semicolon
						if (comment + quote + parentheses + bracket + semicolon === 0) {
							// valid non-whitespace characters that
							// may precede a newline
							switch (peak) {
								case CLOSEPARENTHESES:
								case SINGLEQUOTE:
								case DOUBLEQUOTE:
								case AT:
								case TILDE:
								case GREATERTHAN:
								case STAR:
								case PLUS:
								case FOWARDSLASH:
								case DASH:
								case COLON:
								case COMMA:
								case SEMICOLON:
								case OPENBRACES:
								case CLOSEBRACES: {
									break
								}
								default: {
									// current buffer has a colon
									if (pseudo > 0) {
										insert = 1
									}
								}
							}
						}
	
						// terminate line comment
						if (comment === FOWARDSLASH) {
							comment = 0
						} else if (cascade + context === 0 && id !== KEYFRAME && chars.length > 0) {
							format = 1
							chars += '\0'
						}
	
						// execute plugins, newline context
						if (plugged * unkwn > 0) {
							proxy(UNKWN, chars, current, parent, line, column, out.length, id, depth, id)
						}
	
						// next line, reset column position
						column = 1
						line++
						break
					}
					case SEMICOLON:
					case CLOSEBRACES: {
						if (comment + quote + parentheses + bracket === 0) {
							column++
							break
						}
					}
					default: {
						// increment column position
						column++
	
						// current character
						char = body.charAt(caret)
	
						// remove comments, escape functions, strings, attributes and prepare selectors
						switch (code) {
							case TAB:
							case SPACE: {
								if (quote + bracket + comment === 0) {
									switch (tail) {
										case COMMA:
										case COLON:
										case TAB:
										case SPACE: {
											char = ''
											break
										}
										default: {
											if (code !== SPACE) {
												char = ' '
											}
										}
									}
								}
								break
							}
							// escape breaking control characters
							case NULL: {
								char = '\\0'
								break
							}
							case FORMFEED: {
								char = '\\f'
								break
							}
							case VERTICALTAB: {
								char = '\\v'
								break
							}
							// &
							case AND: {
								// inverted selector pattern i.e html &
								if (quote + comment + bracket === 0 && cascade > 0) {
									invert = 1
									format = 1
									char = '\f' + char
								}
								break
							}
							// ::p<l>aceholder, l
							// :read-on<l>y, l
							case 108: {
								if (quote + comment + bracket + pattern === 0 && pseudo > 0) {
									switch (caret - pseudo) {
										// ::placeholder
										case 2: {
											if (tail === PLACEHOLDER && body.charCodeAt(caret-3) === COLON) {
												pattern = tail
											}
										}
										// :read-only
										case 8: {
											if (trail === READONLY) {
												pattern = trail
											}
										}
									}
								}
								break
							}
							// :<pattern>
							case COLON: {
								if (quote + comment + bracket === 0) {
									pseudo = caret
								}
								break
							}
							// selectors
							case COMMA: {
								if (comment + parentheses + quote + bracket === 0) {
									format = 1
									char += '\r'
								}
								break
							}
							// quotes
							case DOUBLEQUOTE:
							case SINGLEQUOTE: {
								if (comment === 0) {
									quote = quote === code ? 0 : (quote === 0 ? code : quote)
								}
								break
							}
							// attributes
							case OPENBRACKET: {
								if (quote + comment + parentheses === 0) {
									bracket++
								}
								break
							}
							case CLOSEBRACKET: {
								if (quote + comment + parentheses === 0) {
									bracket--
								}
								break
							}
							// functions
							case CLOSEPARENTHESES: {
								if (quote + comment + bracket === 0) {
									parentheses--
								}
								break
							}
							case OPENPARENTHESES: {
								if (quote + comment + bracket === 0) {
									if (context === 0) {
										switch (tail*2 + trail*3) {
											// :matches
											case 533: {
												break
											}
											// :global, :not, :nth-child etc...
											default: {
												counter = 0
												context = 1
											}
										}
									}
	
									parentheses++
								}
								break
							}
							case AT: {
								if (comment + parentheses + quote + bracket + pseudo + atrule === 0) {
									atrule = 1
								}
								break
							}
							// block/line comments
							case STAR:
							case FOWARDSLASH: {
								if (quote + bracket + parentheses > 0) {
									break
								}
	
								switch (comment) {
									// initialize line/block comment context
									case 0: {
										switch (code*2 + body.charCodeAt(caret+1)*3) {
											// //
											case 235: {
												comment = FOWARDSLASH
												break
											}
											// /*
											case 220: {
												length = caret
												comment = STAR
												break
											}
										}
										break
									}
									// end block comment context
									case STAR: {
										if (code === FOWARDSLASH && tail === STAR && length + 2 !== caret) {
											// /*<!> ... */, !
											if (body.charCodeAt(length+2) === 33) {
												out += body.substring(length, caret+1)
											}
											char = ''
											comment = 0
										}
									}
								}
							}
						}
	
						// ignore comment blocks
						if (comment === 0) {
							// aggressive isolation mode, divide each individual selector
							// including selectors in :not function but excluding selectors in :global function
							if (cascade + quote + bracket + atrule === 0 && id !== KEYFRAME && code !== SEMICOLON) {
								switch (code) {
									case COMMA:
									case TILDE:
									case GREATERTHAN:
									case PLUS:
									case CLOSEPARENTHESES:
									case OPENPARENTHESES: {
										if (context === 0) {
											// outside of an isolated context i.e nth-child(<...>)
											switch (tail) {
												case TAB:
												case SPACE:
												case NEWLINE:
												case CARRIAGE: {
													char = char + '\0'
													break
												}
												default: {
													char = '\0' + char + (code === COMMA ? '' : '\0')
												}
											}
											format = 1
										} else {
											// within an isolated context, sleep untill it's terminated
											switch (code) {
												case OPENPARENTHESES: {
													// :globa<l>(
													if (pseudo + 7 === caret && tail === 108) {
														pseudo = 0
													}
													context = ++counter
													break
												}
												case CLOSEPARENTHESES: {
													if ((context = --counter) === 0) {
														format = 1
														char += '\0'
													}
													break
												}
											}
										}
										break
									}
									case TAB:
									case SPACE: {
										switch (tail) {
											case NULL:
											case OPENBRACES:
											case CLOSEBRACES:
											case SEMICOLON:
											case COMMA:
											case FORMFEED:
											case TAB:
											case SPACE:
											case NEWLINE:
											case CARRIAGE: {
												break
											}
											default: {
												// ignore in isolated contexts
												if (context === 0) {
													format = 1
													char += '\0'
												}
											}
										}
									}
								}
							}
	
							// concat buffer of characters
							chars += char
	
							// previous non-whitespace character code
							if (code !== SPACE && code !== TAB) {
								peak = code
							}
						}
					}
				}
	
				// tail character codes
				trail = tail
				tail = code
	
				// visit every character
				caret++
			}
	
			length = out.length
	
			// preserve empty selector
	 		if (preserve > 0) {
	 			if (length === 0 && children.length === 0 && (current[0].length === 0) === false) {
	 				if (id !== MEDIA || (current.length === 1 && (cascade > 0 ? nscopealt : nscope) === current[0])) {
						length = current.join(',').length + 2
	 				}
	 			}
			}
	
			if (length > 0) {
				// cascade isolation mode?
				selector = cascade === 0 && id !== KEYFRAME ? isolate(current) : current
	
				// execute plugins, block context
				if (plugged > 0) {
					result = proxy(BLCKS, out, selector, parent, line, column, length, id, depth, id)
	
					if (result !== void 0 && (out = result).length === 0) {
						return flat + out + children
					}
				}
	
				out = selector.join(',') + '{' + out + '}'
	
				if (prefix*pattern !== 0) {
					if (prefix === 2 && !vendor(out, 2))
						pattern = 0
	
					switch (pattern) {
						// ::read-only
						case READONLY: {
							out = out.replace(readonlyptn, ':'+moz+'$1')+out
							break
						}
						// ::placeholder
						case PLACEHOLDER: {
							out = (
								out.replace(plcholdrptn, '::' + webkit + 'input-$1') +
								out.replace(plcholdrptn, '::' + moz + '$1') +
								out.replace(plcholdrptn, ':' + ms + 'input-$1') + out
							)
							break
						}
					}
	
					pattern = 0
				}
			}
	
			return flat + out + children
		}
	
		/**
		 * Select
		 *
		 * @param {Array<string>} parent
		 * @param {string} current
		 * @param {number} invert
		 * @return {Array<string>}
		 */
		function select (parent, current, invert) {
			var selectors = current.trim().split(selectorptn)
			var out = selectors
	
			var length = selectors.length
			var l = parent.length
	
			switch (l) {
				// 0-1 parent selectors
				case 0:
				case 1: {
					for (var i = 0, selector = l === 0 ? '' : parent[0] + ' '; i < length; ++i) {
						out[i] = scope(selector, out[i], invert, l).trim()
					}
					break
				}
				// >2 parent selectors, nested
				default: {
					for (var i = 0, j = 0, out = []; i < length; ++i) {
						for (var k = 0; k < l; ++k) {
							out[j++] = scope(parent[k] + ' ', selectors[i], invert, l).trim()
						}
					}
				}
			}
	
			return out
		}
	
		/**
		 * Scope
		 *
		 * @param {string} parent
		 * @param {string} current
		 * @param {number} invert
		 * @param {number} level
		 * @return {string}
		 */
		function scope (parent, current, invert, level) {
			var selector = current
			var code = selector.charCodeAt(0)
	
			// trim leading whitespace
			if (code < 33) {
				code = (selector = selector.trim()).charCodeAt(0)
			}
	
			switch (code) {
				// &
				case AND: {
					switch (cascade + level) {
						case 0:
						case 1: {
							if (parent.trim().length === 0) {
								break
							}
						}
						default: {
							return selector.replace(andptn, '$1'+parent.trim())
						}
					}
					break
				}
				// :
				case COLON: {
					switch (selector.charCodeAt(1)) {
						// g in :global
						case 103: {
							if (escape > 0 && cascade > 0) {
								return selector.replace(escapeptn, '$1').replace(andptn, '$1'+nscope)
							}
							break
						}
						default: {
							// :hover
							return parent.trim() + selector.replace(andptn, '$1'+parent.trim())
						}
					}
				}
				default: {
					// html &
					if (invert*cascade > 0 && selector.indexOf('\f') > 0) {
						return selector.replace(andptn, (parent.charCodeAt(0) === COLON ? '' : '$1')+parent.trim())
					}
				}
			}
	
			return parent + selector
		}
	
		/**
		 * Property
		 *
		 * @param {string} input
		 * @param {number} first
		 * @param {number} second
		 * @param {number} third
		 * @return {string}
		 */
		function property (input, first, second, third) {
			var index = 0
			var out = input + ';'
			var hash = (first*2) + (second*3) + (third*4)
			var cache
	
			// animation: a, n, i characters
			if (hash === 944) {
				return animation(out)
			} else if (prefix === 0 || (prefix === 2 && !vendor(out, 1))) {
				return out
			}
	
			// vendor prefix
			switch (hash) {
				// text-decoration/text-size-adjust/text-shadow/text-align/text-transform: t, e, x
				case 1015: {
					// text-shadow/text-align/text-transform, a
					return out.charCodeAt(10) === 97 ? webkit + out + out : out
				}
				// filter/fill f, i, l
				case 951: {
					// filter, t
					return out.charCodeAt(3) === 116 ? webkit + out + out : out
				}
				// color/column, c, o, l
				case 963: {
					// column, n
					return out.charCodeAt(5) === 110 ? webkit + out + out : out
				}
				// box-decoration-break, b, o, x
				case 1009: {
					if (out.charCodeAt(4) !== 100) {
						break
					}
				}
				// mask, m, a, s
				// clip-path, c, l, i
				case 969:
				case 942: {
					return webkit + out + out
				}
				// appearance: a, p, p
				case 978: {
					return webkit + out + moz + out + out
				}
				// hyphens: h, y, p
				// user-select: u, s, e
				case 1019:
				case 983: {
					return webkit + out + moz + out + ms + out + out
				}
				// background/backface-visibility, b, a, c
				case 883: {
					// backface-visibility, -
					if (out.charCodeAt(8) === DASH) {
						return webkit + out + out
					}
	
					// image-set(...)
					if (out.indexOf('image-set(', 11) > 0) {
						return out.replace(imgsrcptn, '$1'+webkit+'$2') + out
					}
	
					return out
				}
				// flex: f, l, e
				case 932: {
					if (out.charCodeAt(4) === DASH) {
						switch (out.charCodeAt(5)) {
							// flex-grow, g
							case 103: {
								return webkit + 'box-' + out.replace('-grow', '') + webkit + out + ms + out.replace('grow', 'positive') + out
							}
							// flex-shrink, s
							case 115: {
								return webkit + out + ms + out.replace('shrink', 'negative') + out
							}
							// flex-basis, b
							case 98: {
								return webkit + out + ms + out.replace('basis', 'preferred-size') + out
							}
						}
					}
	
					return webkit + out + ms + out + out
				}
				// order: o, r, d
				case 964: {
					return webkit + out + ms + 'flex' + '-' + out + out
				}
				// justify-items/justify-content, j, u, s
				case 1023: {
					// justify-content, c
					if (out.charCodeAt(8) !== 99) {
						break
					}
	
					cache = out.substring(out.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify')
					return webkit + 'box-pack' + cache + webkit + out + ms + 'flex-pack' + cache + out
				}
				// cursor, c, u, r
				case 1005: {
					return cursorptn.test(out) ? out.replace(colonptn, ':' + webkit) + out.replace(colonptn, ':' + moz) + out : out
				}
				// writing-mode, w, r, i
				case 1000: {
					cache = out.substring(13).trim()
					index = cache.indexOf('-') + 1
	
					switch (cache.charCodeAt(0)+cache.charCodeAt(index)) {
						// vertical-lr
						case 226: {
							cache = out.replace(writingptn, 'tb')
							break
						}
						// vertical-rl
						case 232: {
							cache = out.replace(writingptn, 'tb-rl')
							break
						}
						// horizontal-tb
						case 220: {
							cache = out.replace(writingptn, 'lr')
							break
						}
						default: {
							return out
						}
					}
	
					return webkit + out + ms + cache + out
				}
				// position: sticky
				case 1017: {
					if (out.indexOf('sticky', 9) === -1) {
						return out
					}
				}
				// display(flex/inline-flex/inline-box): d, i, s
				case 975: {
					index = (out = input).length - 10
					cache = (out.charCodeAt(index) === 33 ? out.substring(0, index) : out).substring(input.indexOf(':', 7) + 1).trim()
	
					switch (hash = cache.charCodeAt(0) + (cache.charCodeAt(7)|0)) {
						// inline-
						case 203: {
							// inline-box
							if (cache.charCodeAt(8) < 111) {
								break
							}
						}
						// inline-box/sticky
						case 115: {
							out = out.replace(cache, webkit+cache)+';'+out
							break
						}
						// inline-flex
						// flex
						case 207:
						case 102: {
							out = (
								out.replace(cache, webkit+(hash > 102 ? 'inline-' : '')+'box')+';'+
								out.replace(cache, webkit+cache)+';'+
								out.replace(cache, ms+cache+'box')+';'+
								out
							)
						}
					}
	
					return out + ';'
				}
				// align-items, align-center, align-self: a, l, i, -
				case 938: {
					if (out.charCodeAt(5) === DASH) {
						switch (out.charCodeAt(6)) {
							// align-items, i
							case 105: {
								cache = out.replace('-items', '')
								return webkit + out + webkit + 'box-' + cache + ms + 'flex-' + cache + out
							}
							// align-self, s
							case 115: {
								return webkit + out + ms + 'flex-item-' + out.replace(selfptn, '') + out
							}
							// align-content
							default: {
								return webkit + out + ms + 'flex-line-pack' + out.replace('align-content', '').replace(selfptn, '') + out
							}
						}
					}
					break
				}
				// min/max
				case 973:
				case 989: {
					// min-/max- height/width/block-size/inline-size
					if (out.charCodeAt(3) !== DASH || out.charCodeAt(4) === 122) {
						break
					}
				}
				// height/width: min-content / width: max-content
				case 931:
				case 953: {
					if (dimensionptn.test(input) === true) {
						// stretch
						if ((cache = input.substring(input.indexOf(':') + 1)).charCodeAt(0) === 115)
							return property(input.replace('stretch', 'fill-available'), first, second, third).replace(':fill-available', ':stretch')
						else
							return out.replace(cache, webkit + cache) + out.replace(cache, moz + cache.replace('fill-', '')) + out
					}
					break
				}
				// transform, transition: t, r, a
				case 962: {
					out = webkit + out + (out.charCodeAt(5) === 102 ? ms + out : '') + out
	
					// transitions
					if (second + third === 211 && out.charCodeAt(13) === 105 && out.indexOf('transform', 10) > 0) {
						return out.substring(0, out.indexOf(';', 27) + 1).replace(transformptn, '$1' + webkit + '$2') + out
					}
	
					break
				}
			}
	
			return out
		}
	
		/**
		 * Vendor
		 *
		 * @param {string} content
		 * @param {number} context
		 * @return {boolean}
		 */
		function vendor (content, context) {
			var index = content.indexOf(context === 1 ? ':' : '{')
			var key = content.substring(0, context !== 3 ? index : 10)
			var value = content.substring(index + 1, content.length - 1)
	
			return should(context !== 2 ? key : key.replace(pseudofmt, '$1'), value, context)
		}
	
		/**
		 * Supports
		 *
		 * @param {string} match
		 * @param {string} group
		 * @return {string}
		 */
		function supports (match, group) {
			var out = property(group, group.charCodeAt(0), group.charCodeAt(1), group.charCodeAt(2))
	
			return out !== group+';' ? out.replace(propertyptn, ' or ($1)').substring(4) : '('+group+')'
		}
	
		/**
		 * Animation
		 *
		 * @param {string} input
		 * @return {string}
		 */
		function animation (input) {
			var length = input.length
			var index = input.indexOf(':', 9) + 1
			var declare = input.substring(0, index).trim()
			var out = input.substring(index, length-1).trim()
	
			switch (input.charCodeAt(9)*keyed) {
				case 0: {
					break
				}
				// animation-*, -
				case DASH: {
					// animation-name, n
					if (input.charCodeAt(10) !== 110) {
						break
					}
				}
				// animation/animation-name
				default: {
					// split in case of multiple animations
					var list = out.split((out = '', animationptn))
	
					for (var i = 0, index = 0, length = list.length; i < length; index = 0, ++i) {
						var value = list[i]
						var items = value.split(propertiesptn)
	
						while (value = items[index]) {
							var peak = value.charCodeAt(0)
	
							if (keyed === 1 && (
								// letters
								(peak > AT && peak < 90) || (peak > 96 && peak < 123) || peak === UNDERSCORE ||
								// dash but not in sequence i.e --
								(peak === DASH && value.charCodeAt(1) !== DASH)
							)) {
								// not a number/function
								switch (isNaN(parseFloat(value)) + (value.indexOf('(') !== -1)) {
									case 1: {
										switch (value) {
											// not a valid reserved keyword
											case 'infinite': case 'alternate': case 'backwards': case 'running':
											case 'normal': case 'forwards': case 'both': case 'none': case 'linear':
											case 'ease': case 'ease-in': case 'ease-out': case 'ease-in-out':
											case 'paused': case 'reverse': case 'alternate-reverse': case 'inherit':
											case 'initial': case 'unset': case 'step-start': case 'step-end': {
												break
											}
											default: {
												value += key
											}
										}
									}
								}
							}
	
							items[index++] = value
						}
	
						out += (i === 0 ? '' : ',') + items.join(' ')
					}
				}
			}
	
			out = declare + out + ';'
	
			if (prefix === 1 || (prefix === 2 && vendor(out, 1)))
				return webkit + out + out
	
			return out
		}
	
		/**
		 * Isolate
		 *
		 * @param {Array<string>} current
		 */
		function isolate (current) {
			for (var i = 0, length = current.length, selector = Array(length), padding, element; i < length; ++i) {
				// split individual elements in a selector i.e h1 h2 === [h1, h2]
				var elements = current[i].split(elementptn)
				var out = ''
	
				for (var j = 0, size = 0, tail = 0, code = 0, l = elements.length; j < l; ++j) {
					// empty element
					if ((size = (element = elements[j]).length) === 0 && l > 1) {
						continue
					}
	
					tail = out.charCodeAt(out.length-1)
					code = element.charCodeAt(0)
					padding = ''
	
					if (j !== 0) {
						// determine if we need padding
						switch (tail) {
							case STAR:
							case TILDE:
							case GREATERTHAN:
							case PLUS:
							case SPACE:
							case OPENPARENTHESES:  {
								break
							}
							default: {
								padding = ' '
							}
						}
					}
	
					switch (code) {
						case AND: {
							element = padding + nscopealt
						}
						case TILDE:
						case GREATERTHAN:
						case PLUS:
						case SPACE:
						case CLOSEPARENTHESES:
						case OPENPARENTHESES: {
							break
						}
						case OPENBRACKET: {
							element = padding + element + nscopealt
							break
						}
						case COLON: {
							switch (element.charCodeAt(1)*2 + element.charCodeAt(2)*3) {
								// :global
								case 530: {
									if (escape > 0) {
										element = padding + element.substring(8, size - 1)
										break
									}
								}
								// :hover, :nth-child(), ...
								default: {
									if (j < 1 || elements[j-1].length < 1) {
										element = padding + nscopealt + element
									}
								}
							}
							break
						}
						case COMMA: {
							padding = ''
						}
						default: {
							if (size > 1 && element.indexOf(':') > 0) {
								element = padding + element.replace(pseudoptn, '$1' + nscopealt + '$2')
							} else {
								element = padding + element + nscopealt
							}
						}
					}
	
					out += element
				}
	
				selector[i] = out.replace(formatptn, '').trim()
			}
	
			return selector
		}
	
		/**
		 * Proxy
		 *
		 * @param {number} context
		 * @param {string} content
		 * @param {Array<string>} selectors
		 * @param {Array<string>} parents
		 * @param {number} line
		 * @param {number} column
		 * @param {number} length
		 * @param {number} id
		 * @param {number} depth
		 * @param {number} at
		 * @return {(string|void|*)}
		 */
		function proxy (context, content, selectors, parents, line, column, length, id, depth, at) {
			for (var i = 0, out = content, next; i < plugged; ++i) {
				switch (next = plugins[i].call(stylis, context, out, selectors, parents, line, column, length, id, depth, at)) {
					case void 0:
					case false:
					case true:
					case null: {
						break
					}
					default: {
						out = next
					}
				}
			}
			if (out !== content) {
			  return out
			}
		}
	
		/**
		 * @param {number} code
		 * @param {number} index
		 * @param {number} length
		 * @param {string} body
		 * @return {number}
		 */
		function delimited (code, index, length, body) {
			for (var i = index + 1; i < length; ++i) {
				switch (body.charCodeAt(i)) {
					// /*
					case FOWARDSLASH: {
						if (code === STAR) {
							if (body.charCodeAt(i - 1) === STAR &&  index + 2 !== i) {
								return i + 1
							}
						}
						break
					}
					// //
					case NEWLINE: {
						if (code === FOWARDSLASH) {
							return i + 1
						}
					}
				}
			}
	
			return i
		}
	
		/**
		 * @param {number} type
		 * @param {number} index
		 * @param {number} length
		 * @param {number} find
		 * @param {string} body
		 * @return {number}
		 */
		function match (type, index, length, body) {
			for (var i = index + 1; i < length; ++i) {
				switch (body.charCodeAt(i)) {
					case type: {
						return i
					}
				}
			}
	
			return i
		}
	
		/**
		 * Minify
		 *
		 * @param {(string|*)} output
		 * @return {string}
		 */
		function minify (output) {
			return output
				.replace(formatptn, '')
				.replace(beforeptn, '')
				.replace(afterptn, '$1')
				.replace(tailptn, '$1')
				.replace(whiteptn, ' ')
		}
	
		/**
		 * Use
		 *
		 * @param {(Array<function(...?)>|function(...?)|number|void)?} plugin
		 */
		function use (plugin) {
			switch (plugin) {
				case void 0:
				case null: {
					plugged = plugins.length = 0
					break
				}
				default: {
					if (typeof plugin === 'function') {
						plugins[plugged++] = plugin
					}	else if (typeof plugin === 'object') {
						for (var i = 0, length = plugin.length; i < length; ++i) {
							use(plugin[i])
						}
					} else {
						unkwn = !!plugin|0
					}
				}
	 		}
	
	 		return use
		}
	
		/**
		 * Set
		 *
		 * @param {*} options
		 */
		function set (options) {
			for (var name in options) {
				var value = options[name]
				switch (name) {
					case 'keyframe': keyed = value|0; break
					case 'global': escape = value|0; break
					case 'cascade': cascade = value|0; break
					case 'compress': compress = value|0; break
					case 'semicolon': semicolon = value|0; break
					case 'preserve': preserve = value|0; break
					case 'prefix':
						should = null
	
						if (!value) {
							prefix = 0
						} else if (typeof value !== 'function') {
							prefix = 1
						} else {
							prefix = 2
							should = value
						}
				}
			}
	
			return set
		}
	
		/**
		 * Stylis
		 *
		 * @param {string} selector
		 * @param {string} input
		 * @return {*}
		 */
		function stylis (selector, input) {
			if (this !== void 0 && this.constructor === stylis) {
				return factory(selector)
			}
	
			// setup
			var ns = selector
			var code = ns.charCodeAt(0)
	
			// trim leading whitespace
			if (code < 33) {
				code = (ns = ns.trim()).charCodeAt(0)
			}
	
			// keyframe/animation namespace
			if (keyed > 0) {
				key = ns.replace(invalidptn, code === OPENBRACKET ? '' : '-')
			}
	
			// reset, used to assert if a plugin is moneky-patching the return value
			code = 1
	
			// cascade/isolate
			if (cascade === 1) {
				nscope = ns
			} else {
				nscopealt = ns
			}
	
			var selectors = [nscope]
			var result
	
			// execute plugins, pre-process context
			if (plugged > 0) {
				result = proxy(PREPS, input, selectors, selectors, line, column, 0, 0, 0, 0)
	
				if (result !== void 0 && typeof result === 'string') {
					input = result
				}
			}
	
			// build
			var output = compile(array, selectors, input, 0, 0)
	
			// execute plugins, post-process context
			if (plugged > 0) {
				result = proxy(POSTS, output, selectors, selectors, line, column, output.length, 0, 0, 0)
	
				// bypass minification
				if (result !== void 0 && typeof(output = result) !== 'string') {
					code = 0
				}
			}
	
			// reset
			key = ''
			nscope = ''
			nscopealt = ''
			pattern = 0
			line = 1
			column = 1
	
			return compress*code === 0 ? output : minify(output)
		}
	
		stylis['use'] = use
		stylis['set'] = set
	
		if (options !== void 0) {
			set(options)
		}
	
		return stylis
	}));
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(117)(module)))

/***/ }),
/* 450 */
/***/ (function(module, exports) {

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object'
	    && typeof arg.copy === 'function'
	    && typeof arg.fill === 'function'
	    && typeof arg.readUInt8 === 'function';
	}

/***/ }),
/* 451 */,
/* 452 */,
/* 453 */,
/* 454 */,
/* 455 */,
/* 456 */,
/* 457 */,
/* 458 */,
/* 459 */,
/* 460 */,
/* 461 */,
/* 462 */,
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = undefined;
	
	var _regenerator = __webpack_require__(94);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(93);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Initialize = __webpack_require__(202);
	
	var _Initialize2 = _interopRequireDefault(_Initialize);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Process = function (_Component) {
	  (0, _inherits3.default)(Process, _Component);
	
	  function Process() {
	    var _this2 = this;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Process);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
	      api: undefined
	    }, _this.handleProcess = function () {
	      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(fn) {
	        var _api, _data;
	
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _this.setState({
	                  data: undefined,
	                  error: undefined,
	                  loading: true
	                });
	
	                _context.prev = 1;
	                _api = _this.state.api;
	
	                if (_api) {
	                  _context.next = 5;
	                  break;
	                }
	
	                throw new Error('Facebook is not initialized. Wait for isReady');
	
	              case 5:
	                _context.next = 7;
	                return fn(_api);
	
	              case 7:
	                _data = _context.sent;
	
	
	                _this.setState({
	                  data: _data,
	                  loading: false
	                });
	
	                return _context.abrupt('return', _data);
	
	              case 12:
	                _context.prev = 12;
	                _context.t0 = _context['catch'](1);
	
	                _this.setState({
	                  error: _context.t0,
	                  loading: false
	                });
	
	                throw _context.t0;
	
	              case 16:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, _this2, [[1, 12]]);
	      }));
	
	      return function (_x) {
	        return _ref.apply(this, arguments);
	      };
	    }(), _this.handleReady = function (api) {
	      _this.setState({
	        api: api
	      });
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Process.prototype.render = function render() {
	    var children = this.props.children;
	    var _state = this.state,
	        api = _state.api,
	        loading = _state.loading,
	        data = _state.data,
	        error = _state.error;
	
	
	    return _react2.default.createElement(
	      _Initialize2.default,
	      { onReady: this.handleReady },
	      children({
	        loading: !api || loading,
	        handleProcess: this.handleProcess,
	        data: data,
	        error: error
	      })
	    );
	  };
	
	  return Process;
	}(_react.Component);
	
	exports.default = Process;
	//# sourceMappingURL=Process.js.map

/***/ }),
/* 464 */,
/* 465 */,
/* 466 */,
/* 467 */,
/* 468 */,
/* 469 */,
/* 470 */,
/* 471 */,
/* 472 */,
/* 473 */,
/* 474 */,
/* 475 */,
/* 476 */,
/* 477 */,
/* 478 */,
/* 479 */,
/* 480 */,
/* 481 */,
/* 482 */,
/* 483 */,
/* 484 */,
/* 485 */,
/* 486 */,
/* 487 */,
/* 488 */,
/* 489 */,
/* 490 */,
/* 491 */,
/* 492 */,
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = undefined;
	
	var _regenerator = __webpack_require__(94);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(93);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp2, _initialiseProps;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Initialize = __webpack_require__(202);
	
	var _Initialize2 = _interopRequireDefault(_Initialize);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var LoginStatus = (_temp2 = _class = function (_Component) {
	  (0, _inherits3.default)(LoginStatus, _Component);
	
	  function LoginStatus() {
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, LoginStatus);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  LoginStatus.prototype.componentWillUnmount = function componentWillUnmount() {
	    var api = this.state.api,
	        event = this.props.event;
	
	    if (api) {
	      api.unsubscribe(event, this.handleChange);
	    }
	  };
	
	  LoginStatus.prototype.render = function render() {
	    var children = this.props.children;
	
	
	    return _react2.default.createElement(
	      _Initialize2.default,
	      { onReady: this.handleReady },
	      children
	    );
	  };
	
	  return LoginStatus;
	}(_react.Component), _class.defaultProps = {
	  onChange: undefined
	}, _initialiseProps = function _initialiseProps() {
	  var _this2 = this;
	
	  this.state = {};
	
	  this.handleReady = function () {
	    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(api) {
	      var event;
	      return _regenerator2.default.wrap(function _callee$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              event = _this2.props.event;
	
	
	              _this2.setState({
	                api: api
	              });
	
	              _context.next = 4;
	              return api.subscribe(event, _this2.handleChange);
	
	            case 4:
	            case 'end':
	              return _context.stop();
	          }
	        }
	      }, _callee, _this2);
	    }));
	
	    return function (_x) {
	      return _ref.apply(this, arguments);
	    };
	  }();
	
	  this.handleChange = function () {
	    var onChange = _this2.props.onChange;
	
	
	    if (onChange) {
	      onChange.apply(undefined, arguments);
	    }
	  };
	}, _temp2);
	exports.default = LoginStatus;
	//# sourceMappingURL=Subscribe.js.map

/***/ }),
/* 494 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	
	// 3.0 fields without app review https://developers.facebook.com/docs/facebook-login/permissions/?locale=en_US#reference-default
	exports.default = ['id', 'first_name', 'last_name', 'middle_name', 'name', 'name_format', 'picture', 'short_name', 'email'];
	//# sourceMappingURL=Fields.js.map

/***/ }),
/* 495 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = {
	  CONNECTED: 'connected',
	  AUTHORIZATION_EXPIRED: 'authorization_expired',
	  NOT_AUTHORIZED: 'not_authorized',
	  UNKNOWN: 'unknown'
	};
	//# sourceMappingURL=LoginStatus.js.map

/***/ }),
/* 496 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = clearUndefinedProperties;
	function clearUndefinedProperties(obj) {
	  if (!obj) {
	    return obj;
	  }
	
	  var newObj = {};
	
	  Object.keys(obj).forEach(function (propertyName) {
	    var value = obj[propertyName];
	    if (value !== undefined) {
	      newObj[propertyName] = value;
	    }
	  });
	
	  return newObj;
	}
	//# sourceMappingURL=clearUndefinedProperties.js.map

/***/ }),
/* 497 */,
/* 498 */,
/* 499 */,
/* 500 */,
/* 501 */,
/* 502 */,
/* 503 */,
/* 504 */,
/* 505 */
/***/ (function(module, exports) {

	var canUseDOM = !!(
	  typeof window !== 'undefined' &&
	  window.document &&
	  window.document.createElement
	);
	
	module.exports = canUseDOM;

/***/ }),
/* 506 */,
/* 507 */,
/* 508 */,
/* 509 */,
/* 510 */,
/* 511 */,
/* 512 */,
/* 513 */,
/* 514 */,
/* 515 */,
/* 516 */,
/* 517 */,
/* 518 */,
/* 519 */,
/* 520 */,
/* 521 */,
/* 522 */,
/* 523 */,
/* 524 */,
/* 525 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.insertScript = insertScript;
	exports.removeScript = removeScript;
	exports.debounce = debounce;
	function insertScript(src, id, parentElement) {
	    var script = window.document.createElement('script');
	    script.async = true;
	    script.src = src;
	    script.id = id;
	    parentElement.appendChild(script);
	
	    return script;
	}
	
	function removeScript(id, parentElement) {
	    var script = window.document.getElementById(id);
	    if (script) parentElement.removeChild(script);
	}
	
	function debounce(func, wait, runOnFirstCall) {
	    var timeout = void 0;
	    return function () {
	        var context = this; // eslint-disable-line consistent-this
	        var args = arguments;
	
	        var deferredExecution = function deferredExecution() {
	            timeout = null;
	            if (!runOnFirstCall) func.apply(context, args);
	        };
	
	        var callNow = runOnFirstCall && !timeout;
	
	        window.clearTimeout(timeout);
	        timeout = setTimeout(deferredExecution, wait);
	
	        if (callNow) func.apply(context, args);
	    };
	}

/***/ }),
/* 526 */,
/* 527 */,
/* 528 */,
/* 529 */,
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = exports.FacebookContext = undefined;
	
	var _regenerator = __webpack_require__(94);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(93);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp2;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _canUseDom = __webpack_require__(505);
	
	var _canUseDom2 = _interopRequireDefault(_canUseDom);
	
	var _Facebook = __webpack_require__(1117);
	
	var _Facebook2 = _interopRequireDefault(_Facebook);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var FacebookContext = exports.FacebookContext = (0, _react.createContext)();
	var api = null;
	
	var Facebook = (_temp2 = _class = function (_Component) {
	  (0, _inherits3.default)(Facebook, _Component);
	
	  function Facebook() {
	    var _this2 = this;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Facebook);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
	      isReady: false
	    }, _this.handleInit = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
	      var isReady, _this$props, _domain, _version, _appId, _cookie, _status, _xfbml, _language, _frictionlessRequests, _wait;
	
	      return _regenerator2.default.wrap(function _callee$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              if (_canUseDom2.default) {
	                _context.next = 2;
	                break;
	              }
	
	              throw new Error('You can not use Facebook without DOM');
	
	            case 2:
	              isReady = _this.state.isReady;
	
	              if (!isReady) {
	                _context.next = 5;
	                break;
	              }
	
	              return _context.abrupt('return', api);
	
	            case 5:
	
	              if (!api) {
	                _this$props = _this.props, _domain = _this$props.domain, _version = _this$props.version, _appId = _this$props.appId, _cookie = _this$props.cookie, _status = _this$props.status, _xfbml = _this$props.xfbml, _language = _this$props.language, _frictionlessRequests = _this$props.frictionlessRequests, _wait = _this$props.wait;
	
	
	                api = new _Facebook2.default({
	                  domain: _domain,
	                  appId: _appId,
	                  version: _version,
	                  cookie: _cookie,
	                  status: _status,
	                  xfbml: _xfbml,
	                  language: _language,
	                  frictionlessRequests: _frictionlessRequests,
	                  wait: _wait
	                });
	              }
	
	              _context.next = 8;
	              return api.init();
	
	            case 8:
	
	              if (!_this.state.isReady) {
	                _this.setState({
	                  isReady: true
	                });
	              }
	
	              return _context.abrupt('return', api);
	
	            case 10:
	            case 'end':
	              return _context.stop();
	          }
	        }
	      }, _callee, _this2);
	    })), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Facebook.prototype.componentDidMount = function componentDidMount() {
	    var wait = this.props.wait;
	
	    if (!wait) {
	      this.handleInit();
	    }
	  };
	
	  Facebook.prototype.render = function render() {
	    var children = this.props.children;
	    var _state = this.state,
	        isReady = _state.isReady,
	        error = _state.error;
	    var handleInit = this.handleInit;
	
	
	    var value = {
	      isReady: isReady,
	      error: error,
	      handleInit: handleInit,
	      api: api
	    };
	
	    return _react2.default.createElement(
	      FacebookContext.Provider,
	      { value: value },
	      children
	    );
	  };
	
	  return Facebook;
	}(_react.Component), _class.defaultProps = {
	  version: 'v3.1',
	  cookie: false,
	  status: false,
	  xfbml: false,
	  language: 'en_US',
	  frictionlessRequests: false,
	  domain: 'connect.facebook.net',
	  children: undefined,
	  wait: false
	}, _temp2);
	exports.default = Facebook;
	//# sourceMappingURL=FacebookProvider.js.map

/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _regenerator = __webpack_require__(94);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _asyncToGenerator2 = __webpack_require__(93);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp2;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Process = __webpack_require__(463);
	
	var _Process2 = _interopRequireDefault(_Process);
	
	var _Fields = __webpack_require__(494);
	
	var _Fields2 = _interopRequireDefault(_Fields);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Login = (_temp2 = _class = function (_Component) {
	  (0, _inherits3.default)(Login, _Component);
	
	  function Login() {
	    var _this2 = this;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Login);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleClick = function () {
	      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(evn) {
	        var _this$props, handleProcess, onCompleted, onError;
	
	        return _regenerator2.default.wrap(function _callee2$(_context2) {
	          while (1) {
	            switch (_context2.prev = _context2.next) {
	              case 0:
	                evn.preventDefault();
	
	                _this$props = _this.props, handleProcess = _this$props.handleProcess, onCompleted = _this$props.onCompleted, onError = _this$props.onError;
	                _context2.prev = 2;
	                _context2.next = 5;
	                return handleProcess(function () {
	                  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(api) {
	                    var _this$props2, scope, fields, returnScopes, rerequest, reauthorize, eventKey, loginQpts, authType, response, data;
	
	                    return _regenerator2.default.wrap(function _callee$(_context) {
	                      while (1) {
	                        switch (_context.prev = _context.next) {
	                          case 0:
	                            _this$props2 = _this.props, scope = _this$props2.scope, fields = _this$props2.fields, returnScopes = _this$props2.returnScopes, rerequest = _this$props2.rerequest, reauthorize = _this$props2.reauthorize, eventKey = _this$props2.eventKey;
	                            loginQpts = { scope: scope };
	                            authType = [];
	
	
	                            if (returnScopes) {
	                              loginQpts.return_scopes = true;
	                            }
	
	                            if (rerequest) {
	                              authType.push('rerequest');
	                            }
	
	                            if (reauthorize) {
	                              authType.push('reauthenticate');
	                            }
	
	                            if (authType.length) {
	                              loginQpts.auth_type = authType.join(',');
	                            }
	
	                            _context.next = 9;
	                            return api.login(loginQpts);
	
	                          case 9:
	                            response = _context.sent;
	
	                            if (!(response.status !== 'connected')) {
	                              _context.next = 12;
	                              break;
	                            }
	
	                            throw new Error('Unauthorized user');
	
	                          case 12:
	                            _context.next = 14;
	                            return api.getTokenDetailWithProfile({ fields: fields });
	
	                          case 14:
	                            data = _context.sent;
	
	                            if (!onCompleted) {
	                              _context.next = 18;
	                              break;
	                            }
	
	                            _context.next = 18;
	                            return onCompleted((0, _extends3.default)({}, data, {
	                              eventKey: eventKey
	                            }));
	
	                          case 18:
	                            return _context.abrupt('return', data);
	
	                          case 19:
	                          case 'end':
	                            return _context.stop();
	                        }
	                      }
	                    }, _callee, _this2);
	                  }));
	
	                  return function (_x2) {
	                    return _ref2.apply(this, arguments);
	                  };
	                }());
	
	              case 5:
	                _context2.next = 10;
	                break;
	
	              case 7:
	                _context2.prev = 7;
	                _context2.t0 = _context2['catch'](2);
	
	                if (onError) {
	                  onError(_context2.t0);
	                }
	
	              case 10:
	              case 'end':
	                return _context2.stop();
	            }
	          }
	        }, _callee2, _this2, [[2, 7]]);
	      }));
	
	      return function (_x) {
	        return _ref.apply(this, arguments);
	      };
	    }(), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Login.prototype.render = function render() {
	    var _props = this.props,
	        children = _props.children,
	        loading = _props.loading,
	        error = _props.error,
	        data = _props.data;
	
	
	    return children({
	      loading: loading,
	      handleClick: this.handleClick,
	      error: error,
	      data: data
	    });
	  };
	
	  return Login;
	}(_react.Component), _class.defaultProps = {
	  scope: '',
	  fields: _Fields2.default,
	  returnScopes: false,
	  rerequest: false,
	  reauthorize: false,
	  onCompleted: undefined,
	  onError: undefined,
	  eventKey: undefined
	}, _temp2);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Process2.default,
	    null,
	    function (_ref3) {
	      var loading = _ref3.loading,
	          handleProcess = _ref3.handleProcess,
	          data = _ref3.data,
	          error = _ref3.error;
	      return _react2.default.createElement(Login, (0, _extends3.default)({}, props, {
	        loading: loading,
	        handleProcess: handleProcess,
	        data: data,
	        error: error,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=Login.js.map

/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _regenerator = __webpack_require__(94);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(93);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp2;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _getCurrentHref = __webpack_require__(176);
	
	var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);
	
	var _clearUndefinedProperties = __webpack_require__(496);
	
	var _clearUndefinedProperties2 = _interopRequireDefault(_clearUndefinedProperties);
	
	var _Process = __webpack_require__(463);
	
	var _Process2 = _interopRequireDefault(_Process);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Share = (_temp2 = _class = function (_Component) {
	  (0, _inherits3.default)(Share, _Component);
	
	  function Share() {
	    var _this2 = this;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Share);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleClick = function () {
	      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(evn) {
	        var handleProcess;
	        return _regenerator2.default.wrap(function _callee2$(_context2) {
	          while (1) {
	            switch (_context2.prev = _context2.next) {
	              case 0:
	                evn.preventDefault();
	
	                handleProcess = _this.props.handleProcess;
	                return _context2.abrupt('return', handleProcess(function () {
	                  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(api) {
	                    var _this$props, _this$props$href, href, display, _this$props$appId, appId, hashtag, redirectURI, quote, mobileIframe;
	
	                    return _regenerator2.default.wrap(function _callee$(_context) {
	                      while (1) {
	                        switch (_context.prev = _context.next) {
	                          case 0:
	                            _this$props = _this.props, _this$props$href = _this$props.href, href = _this$props$href === undefined ? (0, _getCurrentHref2.default)() : _this$props$href, display = _this$props.display, _this$props$appId = _this$props.appId, appId = _this$props$appId === undefined ? api.getAppId() : _this$props$appId, hashtag = _this$props.hashtag, redirectURI = _this$props.redirectURI, quote = _this$props.quote, mobileIframe = _this$props.mobileIframe;
	                            return _context.abrupt('return', api.ui((0, _clearUndefinedProperties2.default)({
	                              method: 'share',
	                              href: href,
	                              display: display,
	                              app_id: appId,
	                              hashtag: hashtag,
	                              redirect_uri: redirectURI,
	                              quote: quote,
	                              mobile_iframe: mobileIframe
	                            })));
	
	                          case 2:
	                          case 'end':
	                            return _context.stop();
	                        }
	                      }
	                    }, _callee, _this2);
	                  }));
	
	                  return function (_x2) {
	                    return _ref2.apply(this, arguments);
	                  };
	                }()));
	
	              case 3:
	              case 'end':
	                return _context2.stop();
	            }
	          }
	        }, _callee2, _this2);
	      }));
	
	      return function (_x) {
	        return _ref.apply(this, arguments);
	      };
	    }(), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Share.prototype.render = function render() {
	    var _props = this.props,
	        children = _props.children,
	        loading = _props.loading,
	        error = _props.error,
	        data = _props.data;
	
	
	    return children({
	      loading: loading,
	      handleClick: this.handleClick,
	      error: error,
	      data: data
	    });
	  };
	
	  return Share;
	}(_react.Component), _class.defaultProps = {
	  href: undefined,
	  hashtag: undefined,
	  quote: undefined,
	  mobileIframe: undefined,
	  display: undefined,
	  appId: undefined,
	  redirectURI: undefined
	}, _temp2);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Process2.default,
	    null,
	    function (_ref3) {
	      var loading = _ref3.loading,
	          handleProcess = _ref3.handleProcess,
	          data = _ref3.data,
	          error = _ref3.error;
	      return _react2.default.createElement(Share, (0, _extends3.default)({}, props, {
	        loading: loading,
	        handleProcess: handleProcess,
	        data: data,
	        error: error,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=Share.js.map

/***/ }),
/* 533 */,
/* 534 */,
/* 535 */,
/* 536 */,
/* 537 */,
/* 538 */,
/* 539 */,
/* 540 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isInternetExplorerBefore;
	/*
	 * This detection method identifies Internet Explorers up until version 11.
	 *
	 * Reference: https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx
	 */
	function isInternetExplorerBefore(version) {
	  var iematch = /MSIE ([0-9]+)/g.exec(window.navigator.userAgent);
	
	  return iematch ? +iematch[1] < version : false;
	}

/***/ }),
/* 541 */
/***/ (function(module, exports) {

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object'
	    && typeof arg.copy === 'function'
	    && typeof arg.fill === 'function'
	    && typeof arg.readUInt8 === 'function';
	}

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	var formatRegExp = /%[sdj%]/g;
	exports.format = function(f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }
	
	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function(x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s': return String(args[i++]);
	      case '%d': return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};
	
	
	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function(fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function() {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }
	
	  if (process.noDeprecation === true) {
	    return fn;
	  }
	
	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }
	
	  return deprecated;
	};
	
	
	var debugs = {};
	var debugEnviron;
	exports.debuglog = function(set) {
	  if (isUndefined(debugEnviron))
	    debugEnviron = ({"NODE_ENV":"production","PUBLIC_DIR":"/home/luubinhan/Documents/projects/blog/public","GATSBY_ALGOLIA_APP_ID":"68PEVEWLR7","GATSBY_ALGOLIA_SEARCH_KEY":"c3e0db897950a5f687e9d690d5fc9342"}).NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function() {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function() {};
	    }
	  }
	  return debugs[set];
	};
	
	
	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;
	
	
	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold' : [1, 22],
	  'italic' : [3, 23],
	  'underline' : [4, 24],
	  'inverse' : [7, 27],
	  'white' : [37, 39],
	  'grey' : [90, 39],
	  'black' : [30, 39],
	  'blue' : [34, 39],
	  'cyan' : [36, 39],
	  'green' : [32, 39],
	  'magenta' : [35, 39],
	  'red' : [31, 39],
	  'yellow' : [33, 39]
	};
	
	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};
	
	
	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];
	
	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
	           '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}
	
	
	function stylizeNoColor(str, styleType) {
	  return str;
	}
	
	
	function arrayToHash(array) {
	  var hash = {};
	
	  array.forEach(function(val, idx) {
	    hash[val] = true;
	  });
	
	  return hash;
	}
	
	
	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect &&
	      value &&
	      isFunction(value.inspect) &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }
	
	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }
	
	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);
	
	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }
	
	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value)
	      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }
	
	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }
	
	  var base = '', array = false, braces = ['{', '}'];
	
	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }
	
	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }
	
	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }
	
	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }
	
	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }
	
	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }
	
	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }
	
	  ctx.seen.push(value);
	
	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }
	
	  ctx.seen.pop();
	
	  return reduceToSingleString(output, base, braces);
	}
	
	
	function formatPrimitive(ctx, value) {
	  if (isUndefined(value))
	    return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                             .replace(/'/g, "\\'")
	                                             .replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value))
	    return ctx.stylize('' + value, 'number');
	  if (isBoolean(value))
	    return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value))
	    return ctx.stylize('null', 'null');
	}
	
	
	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}
	
	
	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}
	
	
	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }
	
	  return name + ': ' + str;
	}
	
	
	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);
	
	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }
	
	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}
	
	
	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;
	
	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;
	
	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;
	
	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;
	
	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;
	
	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;
	
	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;
	
	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;
	
	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;
	
	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;
	
	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;
	
	exports.isBuffer = __webpack_require__(541);
	
	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}
	
	
	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}
	
	
	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
	              'Oct', 'Nov', 'Dec'];
	
	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()),
	              pad(d.getMinutes()),
	              pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}
	
	
	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function() {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};
	
	
	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(89);
	
	exports._extend = function(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;
	
	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};
	
	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(90)))

/***/ }),
/* 543 */,
/* 544 */,
/* 545 */,
/* 546 */,
/* 547 */,
/* 548 */,
/* 549 */,
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = Bio;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _gatsbyLink = __webpack_require__(48);
	
	var _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);
	
	__webpack_require__(1104);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function Bio(_ref) {
	  var _ref$img = _ref.img,
	      img = _ref$img === undefined ? "" : _ref$img,
	      _ref$href = _ref.href,
	      href = _ref$href === undefined ? "" : _ref$href,
	      _ref$name = _ref.name,
	      name = _ref$name === undefined ? "" : _ref$name,
	      _ref$desc = _ref.desc,
	      desc = _ref$desc === undefined ? "" : _ref$desc;
	
	  return _react2.default.createElement(
	    "div",
	    { className: "bio" },
	    _react2.default.createElement(
	      _gatsbyLink2.default,
	      { to: href, className: "bio-wrapper" },
	      _react2.default.createElement(
	        "div",
	        { className: "bio-img" },
	        _react2.default.createElement("img", { src: "/blog/images/my-image.jpg", alt: name })
	      ),
	      _react2.default.createElement(
	        "div",
	        { className: "bio-content" },
	        _react2.default.createElement(
	          "div",
	          { className: "bio-name" },
	          name
	        ),
	        _react2.default.createElement(
	          "div",
	          { className: "bio-desc" },
	          desc
	        )
	      )
	    ),
	    _react2.default.createElement(
	      "a",
	      { className: "btn btn-primary mt-10", style: { color: '#fff', fontWeight: 'bold' }, href: "http://luubinhan.github.io/blog/donate", rel: "noopener noreferrer", target: "_blank" },
	      "H\u1ED7 tr\u1EE3 b\u1EB1ng Zalo Pay"
	    )
	  );
	}
	module.exports = exports["default"];

/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _Bio = __webpack_require__(550);
	
	var _Bio2 = _interopRequireDefault(_Bio);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Bio2.default;
	module.exports = exports['default'];

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _disqusReact = __webpack_require__(649);
	
	var _disqusReact2 = _interopRequireDefault(_disqusReact);
	
	var _SiteConfig = __webpack_require__(123);
	
	var _SiteConfig2 = _interopRequireDefault(_SiteConfig);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Disqus = function (_Component) {
	  _inherits(Disqus, _Component);
	
	  function Disqus(props) {
	    _classCallCheck(this, Disqus);
	
	    var _this = _possibleConstructorReturn(this, _Component.call(this, props));
	
	    _this.doNothing = function () {};
	
	    _this.state = {
	      toasts: []
	    };
	    _this.notifyAboutComment = _this.notifyAboutComment.bind(_this);
	    _this.onSnackbarDismiss = _this.onSnackbarDismiss.bind(_this);
	    return _this;
	  }
	
	  Disqus.prototype.onSnackbarDismiss = function onSnackbarDismiss() {
	    var _state$toasts = this.state.toasts,
	        toasts = _state$toasts.slice(1);
	
	    this.setState({ toasts: toasts });
	  };
	
	  Disqus.prototype.notifyAboutComment = function notifyAboutComment() {
	    var toasts = this.state.toasts.slice();
	    toasts.push({ text: "New comment available!" });
	    this.setState({ toasts: toasts });
	  };
	
	  Disqus.prototype.render = function render() {
	    var postNode = this.props.postNode;
	
	    var post = postNode.frontmatter;
	    var url = _SiteConfig2.default.siteUrl + _SiteConfig2.default.pathPrefix + postNode.fields.slug;
	    var disqusConfig = {
	      url: url,
	      identifier: post.id,
	      title: post.title
	    };
	    return _react2.default.createElement(_disqusReact2.default.DiscussionEmbed, { shortname: _SiteConfig2.default.disqusShortname, config: disqusConfig });
	  };
	
	  return Disqus;
	}(_react.Component);
	
	exports.default = Disqus;
	module.exports = exports["default"];

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.default = Link;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _gatsbyLink = __webpack_require__(48);
	
	var _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function Link(_ref) {
	  var children = _ref.children,
	      className = _ref.className,
	      to = _ref.to;
	
	  return _react2.default.createElement(
	    _gatsbyLink2.default,
	    { className: ["link"].concat(className || []).join(" "), to: to },
	    children
	  );
	}
	module.exports = exports["default"];

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactHelmet = __webpack_require__(196);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _SiteConfig = __webpack_require__(123);
	
	var _SiteConfig2 = _interopRequireDefault(_SiteConfig);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var SEO = function (_Component) {
	  _inherits(SEO, _Component);
	
	  function SEO() {
	    _classCallCheck(this, SEO);
	
	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }
	
	  SEO.prototype.render = function render() {
	    var _props = this.props,
	        postNode = _props.postNode,
	        postPath = _props.postPath,
	        postSEO = _props.postSEO;
	
	    var title = void 0;
	    var description = void 0;
	    var image = void 0;
	    var postURL = void 0;
	    if (postSEO) {
	      var postMeta = postNode.frontmatter;
	      title = postMeta.title;
	      description = postMeta.description ? postMeta.description : postNode.excerpt;
	      image = postMeta.cover;
	      postURL = _SiteConfig2.default.siteUrl + _SiteConfig2.default.pathPrefix + postPath;
	    } else {
	      title = _SiteConfig2.default.siteTitle;
	      description = _SiteConfig2.default.siteDescription;
	      image = _SiteConfig2.default.siteLogo;
	    }
	    var realPrefix = _SiteConfig2.default.pathPrefix === "/" ? "" : _SiteConfig2.default.pathPrefix;
	    image = _SiteConfig2.default.siteUrl + realPrefix + image;
	    var blogURL = _SiteConfig2.default.siteUrl + _SiteConfig2.default.pathPrefix;
	    var schemaOrgJSONLD = [{
	      "@context": "http://schema.org",
	      "@type": "WebSite",
	      url: blogURL,
	      name: title,
	      alternateName: _SiteConfig2.default.siteTitleAlt ? _SiteConfig2.default.siteTitleAlt : ""
	    }];
	    if (postSEO) {
	      schemaOrgJSONLD.push([{
	        "@context": "http://schema.org",
	        "@type": "BreadcrumbList",
	        itemListElement: [{
	          "@type": "ListItem",
	          position: 1,
	          item: {
	            "@id": postURL,
	            name: title,
	            image: image
	          }
	        }]
	      }, {
	        "@context": "http://schema.org",
	        "@type": "BlogPosting",
	        url: blogURL,
	        name: title,
	        alternateName: _SiteConfig2.default.siteTitleAlt ? _SiteConfig2.default.siteTitleAlt : "",
	        headline: title,
	        image: {
	          "@type": "ImageObject",
	          url: image
	        },
	        description: description
	      }]);
	    }
	    return _react2.default.createElement(
	      _reactHelmet2.default,
	      null,
	      _react2.default.createElement("meta", { name: "description", content: description }),
	      _react2.default.createElement("meta", { name: "image", content: image }),
	      _react2.default.createElement(
	        "script",
	        { type: "application/ld+json" },
	        JSON.stringify(schemaOrgJSONLD)
	      ),
	      _react2.default.createElement("meta", { property: "og:url", content: postSEO ? postURL : blogURL }),
	      postSEO ? _react2.default.createElement("meta", { property: "og:type", content: "article" }) : null,
	      _react2.default.createElement("meta", { property: "og:title", content: title }),
	      _react2.default.createElement("meta", { property: "og:description", content: description }),
	      _react2.default.createElement("meta", { property: "og:image", content: image }),
	      _react2.default.createElement("meta", {
	        property: "fb:app_id",
	        content: _SiteConfig2.default.siteFBAppID ? _SiteConfig2.default.siteFBAppID : ""
	      }),
	      _react2.default.createElement("meta", { name: "twitter:card", content: "summary_large_image" }),
	      _react2.default.createElement("meta", {
	        name: "twitter:creator",
	        content: _SiteConfig2.default.userTwitter ? _SiteConfig2.default.userTwitter : ""
	      }),
	      _react2.default.createElement("meta", { name: "twitter:title", content: title }),
	      _react2.default.createElement("meta", { name: "twitter:description", content: description }),
	      _react2.default.createElement("meta", { name: "twitter:image", content: image })
	    );
	  };
	
	  return SEO;
	}(_react.Component);
	
	exports.default = SEO;
	module.exports = exports["default"];

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactShare = __webpack_require__(1932);
	
	var _SiteConfig = __webpack_require__(123);
	
	var _SiteConfig2 = _interopRequireDefault(_SiteConfig);
	
	__webpack_require__(658);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var SocialLinks = function (_Component) {
	  _inherits(SocialLinks, _Component);
	
	  function SocialLinks() {
	    _classCallCheck(this, SocialLinks);
	
	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }
	
	  SocialLinks.prototype.render = function render() {
	    var _props = this.props,
	        postNode = _props.postNode,
	        postPath = _props.postPath,
	        mobile = _props.mobile;
	
	    var post = postNode.frontmatter;
	    var url = _SiteConfig2.default.siteUrl + _SiteConfig2.default.pathPrefix + postPath;
	
	    var iconSize = mobile ? 36 : 48;
	    var filter = function filter(count) {
	      return count > 0 ? count : "";
	    };
	    return _react2.default.createElement(
	      "div",
	      { className: "social-links" },
	      _react2.default.createElement(
	        _reactShare.TwitterShareButton,
	        { url: url, title: post.title },
	        _react2.default.createElement(_reactShare.TwitterIcon, { round: true, size: iconSize })
	      ),
	      _react2.default.createElement(
	        _reactShare.GooglePlusShareButton,
	        { url: url },
	        _react2.default.createElement(_reactShare.GooglePlusIcon, { round: true, size: iconSize }),
	        _react2.default.createElement(
	          _reactShare.GooglePlusShareCount,
	          { url: url },
	          function (count) {
	            return _react2.default.createElement(
	              "div",
	              { className: "share-count" },
	              filter(count)
	            );
	          }
	        )
	      ),
	      _react2.default.createElement(
	        _reactShare.FacebookShareButton,
	        { url: url, quote: post.title },
	        _react2.default.createElement(_reactShare.FacebookIcon, { round: true, size: iconSize }),
	        _react2.default.createElement(
	          _reactShare.FacebookShareCount,
	          { url: url },
	          function (count) {
	            return _react2.default.createElement(
	              "div",
	              { className: "share-count" },
	              filter(count)
	            );
	          }
	        )
	      )
	    );
	  };
	
	  return SocialLinks;
	}(_react.Component);
	
	exports.default = SocialLinks;
	module.exports = exports["default"];

/***/ }),
/* 556 */,
/* 557 */,
/* 558 */,
/* 559 */,
/* 560 */,
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	exports.pageQuery = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactHelmet = __webpack_require__(196);
	
	var _reactHelmet2 = _interopRequireDefault(_reactHelmet);
	
	var _reactFacebook = __webpack_require__(1137);
	
	var _Bio = __webpack_require__(551);
	
	var _Bio2 = _interopRequireDefault(_Bio);
	
	var _Link = __webpack_require__(553);
	
	var _Link2 = _interopRequireDefault(_Link);
	
	var _Disqus = __webpack_require__(552);
	
	var _Disqus2 = _interopRequireDefault(_Disqus);
	
	var _PostTags = __webpack_require__(197);
	
	var _PostTags2 = _interopRequireDefault(_PostTags);
	
	var _SocialLinks = __webpack_require__(555);
	
	var _SocialLinks2 = _interopRequireDefault(_SocialLinks);
	
	var _SEO = __webpack_require__(554);
	
	var _SEO2 = _interopRequireDefault(_SEO);
	
	var _SiteConfig = __webpack_require__(123);
	
	var _SiteConfig2 = _interopRequireDefault(_SiteConfig);
	
	var _Search = __webpack_require__(240);
	
	var _Search2 = _interopRequireDefault(_Search);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var PostTemplate = function (_React$Component) {
	  _inherits(PostTemplate, _React$Component);
	
	  function PostTemplate() {
	    _classCallCheck(this, PostTemplate);
	
	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }
	
	  PostTemplate.prototype.render = function render() {
	    var _props$pathContext = this.props.pathContext,
	        slug = _props$pathContext.slug,
	        next = _props$pathContext.next,
	        prev = _props$pathContext.prev;
	
	    var postNode = this.props.data.markdownRemark;
	    var post = postNode.frontmatter;
	    if (!post.id) {
	      post.id = slug;
	    }
	    if (!post.id) {
	      post.category_id = _SiteConfig2.default.postDefaultCategoryID;
	    }
	    return _react2.default.createElement(
	      "div",
	      { className: "master" },
	      _react2.default.createElement(
	        _reactHelmet2.default,
	        null,
	        _react2.default.createElement(
	          "title",
	          null,
	          post.title + " | " + _SiteConfig2.default.siteTitle + " | " + _SiteConfig2.default.siteDescription
	        ),
	        _react2.default.createElement("meta", { name: "description", content: post.desc + " || " + post.title + " || " + _SiteConfig2.default.siteDescription }),
	        _react2.default.createElement("meta", {
	          name: "keywords",
	          content: "frontend,developer,javascript,wordpress,react,hochiminh,web-developer"
	        })
	      ),
	      _react2.default.createElement(
	        "div",
	        { className: "inner" },
	        _react2.default.createElement(_Search2.default, { indices: [{ name: 'Posts', title: 'Tìm bài viết' }] }),
	        _react2.default.createElement(_SEO2.default, { postPath: slug, postNode: postNode, postSEO: true }),
	        _react2.default.createElement(
	          "div",
	          { className: "single-post" },
	          _react2.default.createElement(
	            "div",
	            { className: "single-post-container" },
	            _react2.default.createElement(
	              "article",
	              null,
	              _react2.default.createElement(
	                "header",
	                null,
	                _react2.default.createElement(
	                  "h1",
	                  { className: "single-post-title" },
	                  post.title
	                )
	              ),
	              _react2.default.createElement(
	                "div",
	                { className: "post-excert" },
	                post.desc
	              ),
	              post.cover && _react2.default.createElement(
	                "figure",
	                {
	                  className: "the-post-thumbnail",
	                  "aria-label": "media",
	                  role: "group",
	                  itemProp: "associatedMedia",
	                  itemID: post.cover,
	                  itemType: "http://schema.org/ImageObject"
	                },
	                _react2.default.createElement("img", {
	                  src: post.cover,
	                  alt: post.title,
	                  itemProp: "thumbnailUrl"
	                })
	              ),
	              _react2.default.createElement(
	                "div",
	                { className: "blog-post" },
	                _react2.default.createElement("div", {
	                  className: "post-content",
	                  dangerouslySetInnerHTML: { __html: postNode.html }
	                })
	              )
	            ),
	            _react2.default.createElement(_PostTags2.default, { list: post.tags || [] }),
	            _react2.default.createElement(_Bio2.default, {
	              name: _SiteConfig2.default.siteTitle,
	              desc: _SiteConfig2.default.siteTitleAlt,
	              href: "about"
	            }),
	            _react2.default.createElement(
	              "div",
	              { className: "post-meta" },
	              _react2.default.createElement(_SocialLinks2.default, { postPath: slug, postNode: postNode })
	            )
	          ),
	          _react2.default.createElement(
	            "div",
	            { id: "post-comments", className: "fb-comments" },
	            _react2.default.createElement(
	              _reactFacebook.FacebookProvider,
	              { appId: _SiteConfig2.default.siteFBAppID },
	              _react2.default.createElement(_reactFacebook.Comments, {
	                href: _SiteConfig2.default.siteUrl + "/blog" + slug,
	                width: "100%"
	              })
	            )
	          ),
	          _react2.default.createElement(_Disqus2.default, { postNode: postNode }),
	          _react2.default.createElement(
	            "div",
	            { className: "section section-below-post" },
	            _react2.default.createElement(
	              "div",
	              { className: "inner" },
	              _react2.default.createElement("div", { id: "disqus_thread" }),
	              _react2.default.createElement(
	                "div",
	                { className: "read-next" },
	                next && _react2.default.createElement(
	                  _Link2.default,
	                  { className: "read-next-story", to: next.fields.slug },
	                  _react2.default.createElement(
	                    "section",
	                    { className: "post" },
	                    _react2.default.createElement(
	                      "span",
	                      { className: "read-this-next" },
	                      "\u0110\u1ECDc Ti\u1EBFp"
	                    ),
	                    _react2.default.createElement(
	                      "h2",
	                      null,
	                      next.frontmatter.title
	                    )
	                  )
	                ),
	                prev && _react2.default.createElement(
	                  _Link2.default,
	                  {
	                    className: "read-next-story prev",
	                    to: prev.fields.slug
	                  },
	                  _react2.default.createElement(
	                    "section",
	                    { className: "post" },
	                    _react2.default.createElement(
	                      "span",
	                      { className: "you-might-enjoy" },
	                      "\u0110\u1ECDc Ti\u1EBFp"
	                    ),
	                    _react2.default.createElement(
	                      "h2",
	                      null,
	                      prev.frontmatter.title
	                    )
	                  )
	                )
	              )
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        "div",
	        { className: "aside" },
	        _react2.default.createElement(
	          "div",
	          { className: "beatiful-post-name", "data-text-shadow": post.title },
	          post.title
	        )
	      )
	    );
	  };
	
	  return PostTemplate;
	}(_react2.default.Component);
	
	/* eslint no-undef: "off" */
	
	
	exports.default = PostTemplate;
	var pageQuery = exports.pageQuery = "** extracted graphql fragment **";

/***/ }),
/* 562 */,
/* 563 */,
/* 564 */,
/* 565 */,
/* 566 */,
/* 567 */,
/* 568 */,
/* 569 */,
/* 570 */,
/* 571 */,
/* 572 */,
/* 573 */,
/* 574 */,
/* 575 */,
/* 576 */,
/* 577 */,
/* 578 */,
/* 579 */,
/* 580 */,
/* 581 */,
/* 582 */,
/* 583 */,
/* 584 */,
/* 585 */,
/* 586 */,
/* 587 */,
/* 588 */,
/* 589 */,
/* 590 */,
/* 591 */,
/* 592 */,
/* 593 */,
/* 594 */,
/* 595 */,
/* 596 */,
/* 597 */,
/* 598 */,
/* 599 */,
/* 600 */,
/* 601 */,
/* 602 */,
/* 603 */,
/* 604 */,
/* 605 */,
/* 606 */,
/* 607 */,
/* 608 */,
/* 609 */,
/* 610 */,
/* 611 */,
/* 612 */,
/* 613 */,
/* 614 */,
/* 615 */,
/* 616 */,
/* 617 */,
/* 618 */,
/* 619 */,
/* 620 */,
/* 621 */,
/* 622 */,
/* 623 */,
/* 624 */,
/* 625 */,
/* 626 */,
/* 627 */,
/* 628 */,
/* 629 */,
/* 630 */,
/* 631 */,
/* 632 */,
/* 633 */,
/* 634 */,
/* 635 */,
/* 636 */,
/* 637 */,
/* 638 */,
/* 639 */,
/* 640 */,
/* 641 */,
/* 642 */,
/* 643 */,
/* 644 */,
/* 645 */,
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.CommentCount = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _utils = __webpack_require__(525);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var queueResetCount = (0, _utils.debounce)(function () {
	    if (window.DISQUSWIDGETS) window.DISQUSWIDGETS.getCount({ reset: true });
	}, 300, false); // eslint-disable-line no-magic-numbers
	
	var CommentCount = exports.CommentCount = function (_React$Component) {
	    _inherits(CommentCount, _React$Component);
	
	    function CommentCount() {
	        _classCallCheck(this, CommentCount);
	
	        return _possibleConstructorReturn(this, (CommentCount.__proto__ || Object.getPrototypeOf(CommentCount)).apply(this, arguments));
	    }
	
	    _createClass(CommentCount, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.loadInstance();
	        }
	    }, {
	        key: 'shouldComponentUpdate',
	        value: function shouldComponentUpdate(nextProps) {
	            if (this.props.shortname !== nextProps.shortname) return true;
	
	            var nextConfig = nextProps.config;
	            var config = this.props.config;
	            if (nextConfig.url === config.url || nextConfig.identifier === config.identifier) return false;
	            return true;
	        }
	    }, {
	        key: 'componentWillUpdate',
	        value: function componentWillUpdate(nextProps) {
	            if (this.props.shortname !== nextProps.shortname) this.cleanInstance();
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	            this.loadInstance();
	        }
	    }, {
	        key: 'loadInstance',
	        value: function loadInstance() {
	            var doc = window.document;
	            if (doc.getElementById('dsq-count-scr')) queueResetCount();else (0, _utils.insertScript)('https://' + this.props.shortname + '.disqus.com/count.js', 'dsq-count-scr', doc.body);
	        }
	    }, {
	        key: 'cleanInstance',
	        value: function cleanInstance() {
	            var body = window.document.body;
	            (0, _utils.removeScript)('dsq-count-scr', body);
	
	            // count.js only reassigns this window object if it's undefined.
	            window.DISQUSWIDGETS = undefined;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'span',
	                {
	                    className: 'disqus-comment-count',
	                    'data-disqus-identifier': this.props.config.identifier,
	                    'data-disqus-url': this.props.config.url
	                },
	                this.props.children
	            );
	        }
	    }]);
	
	    return CommentCount;
	}(_react2.default.Component);

/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.CommentEmbed = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var RADIX_BASE = 36;
	
	var CommentEmbed = exports.CommentEmbed = function (_React$Component) {
	    _inherits(CommentEmbed, _React$Component);
	
	    function CommentEmbed() {
	        _classCallCheck(this, CommentEmbed);
	
	        return _possibleConstructorReturn(this, (CommentEmbed.__proto__ || Object.getPrototypeOf(CommentEmbed)).apply(this, arguments));
	    }
	
	    _createClass(CommentEmbed, [{
	        key: 'getSrc',
	        value: function getSrc() {
	            var post = Number(this.props.commentId).toString(RADIX_BASE);
	            var parentParam = this.props.showParentComment ? '1' : '0';
	            var mediaParam = this.props.showMedia ? '1' : '0';
	
	            return 'https://embed.disqus.com/p/' + post + '?p=' + parentParam + '&m=' + mediaParam;
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('iframe', {
	                src: this.getSrc(),
	                width: this.props.width,
	                height: this.props.height,
	                seamless: 'seamless',
	                scrolling: 'no',
	                frameBorder: '0'
	            });
	        }
	    }]);
	
	    return CommentEmbed;
	}(_react2.default.Component);
	
	CommentEmbed.defaultProps = {
	    showMedia: true,
	    showParentComment: true,
	    width: 420,
	    height: 320
	};

/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.DiscussionEmbed = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _utils = __webpack_require__(525);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DiscussionEmbed = exports.DiscussionEmbed = function (_React$Component) {
	    _inherits(DiscussionEmbed, _React$Component);
	
	    function DiscussionEmbed() {
	        _classCallCheck(this, DiscussionEmbed);
	
	        return _possibleConstructorReturn(this, (DiscussionEmbed.__proto__ || Object.getPrototypeOf(DiscussionEmbed)).apply(this, arguments));
	    }
	
	    _createClass(DiscussionEmbed, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            if (typeof window !== 'undefined' && window.disqus_shortname && window.disqus_shortname !== this.props.shortname) this.cleanInstance();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.loadInstance();
	        }
	    }, {
	        key: 'shouldComponentUpdate',
	        value: function shouldComponentUpdate(nextProps) {
	            if (this.props.shortname !== nextProps.shortname) return true;
	
	            var nextConfig = nextProps.config;
	            var config = this.props.config;
	            if (nextConfig.url === config.url || nextConfig.identifier === config.identifier) return false;
	            return true;
	        }
	    }, {
	        key: 'componentWillUpdate',
	        value: function componentWillUpdate(nextProps) {
	            if (this.props.shortname !== nextProps.shortname) this.cleanInstance();
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate() {
	            this.loadInstance();
	        }
	    }, {
	        key: 'loadInstance',
	        value: function loadInstance() {
	            var doc = window.document;
	            if (window && window.DISQUS && doc.getElementById('dsq-embed-scr')) {
	                window.DISQUS.reset({
	                    reload: true,
	                    config: this.getDisqusConfig(this.props.config)
	                });
	            } else {
	                window.disqus_config = this.getDisqusConfig(this.props.config);
	                window.disqus_shortname = this.props.shortname;
	                (0, _utils.insertScript)('https://' + this.props.shortname + '.disqus.com/embed.js', 'dsq-embed-scr', doc.body);
	            }
	        }
	    }, {
	        key: 'cleanInstance',
	        value: function cleanInstance() {
	            var doc = window.document;
	            (0, _utils.removeScript)('dsq-embed-scr', doc.body);
	            if (window && window.DISQUS) window.DISQUS.reset({});
	
	            try {
	                delete window.DISQUS;
	            } catch (error) {
	                window.DISQUS = undefined;
	            }
	            var disqusThread = doc.getElementById('disqus_thread');
	            if (disqusThread) {
	                while (disqusThread.hasChildNodes()) {
	                    disqusThread.removeChild(disqusThread.firstChild);
	                }
	            }
	        }
	    }, {
	        key: 'getDisqusConfig',
	        value: function getDisqusConfig(config) {
	            return function () {
	                this.page.identifier = config.identifier;
	                this.page.url = config.url;
	                this.page.title = config.title;
	                this.callbacks.onNewComment = [config.onNewComment];
	            };
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('div', { id: 'disqus_thread' });
	        }
	    }]);
	
	    return DiscussionEmbed;
	}(_react2.default.Component);

/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.DiscussionEmbed = exports.CommentEmbed = exports.CommentCount = undefined;
	
	var _CommentCount = __webpack_require__(646);
	
	var _CommentEmbed = __webpack_require__(647);
	
	var _DiscussionEmbed = __webpack_require__(648);
	
	exports.CommentCount = _CommentCount.CommentCount;
	exports.CommentEmbed = _CommentEmbed.CommentEmbed;
	exports.DiscussionEmbed = _DiscussionEmbed.DiscussionEmbed;
	
	
	var Disqus = {
	    CommentCount: _CommentCount.CommentCount,
	    CommentEmbed: _CommentEmbed.CommentEmbed,
	    DiscussionEmbed: _DiscussionEmbed.DiscussionEmbed
	};
	
	exports.default = Disqus;

/***/ }),
/* 650 */,
/* 651 */,
/* 652 */,
/* 653 */,
/* 654 */,
/* 655 */,
/* 656 */,
/* 657 */,
/* 658 */
/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ }),
/* 659 */,
/* 660 */,
/* 661 */,
/* 662 */,
/* 663 */,
/* 664 */,
/* 665 */,
/* 666 */,
/* 667 */,
/* 668 */,
/* 669 */,
/* 670 */,
/* 671 */,
/* 672 */,
/* 673 */,
/* 674 */,
/* 675 */,
/* 676 */,
/* 677 */,
/* 678 */,
/* 679 */,
/* 680 */,
/* 681 */,
/* 682 */,
/* 683 */,
/* 684 */,
/* 685 */,
/* 686 */,
/* 687 */,
/* 688 */,
/* 689 */,
/* 690 */,
/* 691 */,
/* 692 */,
/* 693 */,
/* 694 */,
/* 695 */,
/* 696 */,
/* 697 */,
/* 698 */,
/* 699 */,
/* 700 */,
/* 701 */,
/* 702 */,
/* 703 */,
/* 704 */,
/* 705 */,
/* 706 */,
/* 707 */,
/* 708 */,
/* 709 */,
/* 710 */,
/* 711 */,
/* 712 */,
/* 713 */,
/* 714 */,
/* 715 */,
/* 716 */,
/* 717 */,
/* 718 */,
/* 719 */,
/* 720 */,
/* 721 */,
/* 722 */,
/* 723 */,
/* 724 */,
/* 725 */,
/* 726 */,
/* 727 */,
/* 728 */,
/* 729 */,
/* 730 */,
/* 731 */,
/* 732 */,
/* 733 */,
/* 734 */,
/* 735 */,
/* 736 */,
/* 737 */,
/* 738 */,
/* 739 */,
/* 740 */,
/* 741 */,
/* 742 */,
/* 743 */,
/* 744 */,
/* 745 */,
/* 746 */,
/* 747 */,
/* 748 */,
/* 749 */,
/* 750 */,
/* 751 */,
/* 752 */,
/* 753 */,
/* 754 */,
/* 755 */,
/* 756 */,
/* 757 */,
/* 758 */,
/* 759 */,
/* 760 */,
/* 761 */,
/* 762 */,
/* 763 */,
/* 764 */,
/* 765 */,
/* 766 */,
/* 767 */,
/* 768 */,
/* 769 */,
/* 770 */,
/* 771 */,
/* 772 */,
/* 773 */,
/* 774 */,
/* 775 */,
/* 776 */,
/* 777 */,
/* 778 */,
/* 779 */,
/* 780 */,
/* 781 */,
/* 782 */,
/* 783 */,
/* 784 */,
/* 785 */,
/* 786 */,
/* 787 */,
/* 788 */,
/* 789 */,
/* 790 */,
/* 791 */,
/* 792 */,
/* 793 */,
/* 794 */,
/* 795 */,
/* 796 */,
/* 797 */,
/* 798 */,
/* 799 */,
/* 800 */,
/* 801 */,
/* 802 */,
/* 803 */,
/* 804 */,
/* 805 */,
/* 806 */,
/* 807 */,
/* 808 */,
/* 809 */,
/* 810 */,
/* 811 */,
/* 812 */,
/* 813 */,
/* 814 */,
/* 815 */,
/* 816 */,
/* 817 */,
/* 818 */,
/* 819 */,
/* 820 */,
/* 821 */,
/* 822 */,
/* 823 */,
/* 824 */,
/* 825 */,
/* 826 */,
/* 827 */,
/* 828 */,
/* 829 */,
/* 830 */,
/* 831 */,
/* 832 */,
/* 833 */,
/* 834 */,
/* 835 */,
/* 836 */,
/* 837 */,
/* 838 */,
/* 839 */,
/* 840 */,
/* 841 */,
/* 842 */,
/* 843 */,
/* 844 */,
/* 845 */,
/* 846 */,
/* 847 */,
/* 848 */,
/* 849 */,
/* 850 */,
/* 851 */,
/* 852 */,
/* 853 */,
/* 854 */,
/* 855 */,
/* 856 */,
/* 857 */,
/* 858 */,
/* 859 */,
/* 860 */,
/* 861 */,
/* 862 */,
/* 863 */,
/* 864 */,
/* 865 */,
/* 866 */,
/* 867 */,
/* 868 */,
/* 869 */,
/* 870 */,
/* 871 */,
/* 872 */,
/* 873 */,
/* 874 */,
/* 875 */,
/* 876 */,
/* 877 */,
/* 878 */,
/* 879 */,
/* 880 */,
/* 881 */,
/* 882 */,
/* 883 */,
/* 884 */,
/* 885 */,
/* 886 */,
/* 887 */,
/* 888 */,
/* 889 */,
/* 890 */,
/* 891 */,
/* 892 */,
/* 893 */,
/* 894 */,
/* 895 */,
/* 896 */,
/* 897 */,
/* 898 */,
/* 899 */,
/* 900 */,
/* 901 */,
/* 902 */,
/* 903 */,
/* 904 */,
/* 905 */,
/* 906 */,
/* 907 */,
/* 908 */,
/* 909 */,
/* 910 */,
/* 911 */,
/* 912 */,
/* 913 */,
/* 914 */,
/* 915 */,
/* 916 */,
/* 917 */,
/* 918 */,
/* 919 */,
/* 920 */,
/* 921 */,
/* 922 */,
/* 923 */,
/* 924 */,
/* 925 */,
/* 926 */,
/* 927 */,
/* 928 */,
/* 929 */,
/* 930 */,
/* 931 */,
/* 932 */,
/* 933 */,
/* 934 */,
/* 935 */,
/* 936 */,
/* 937 */,
/* 938 */,
/* 939 */,
/* 940 */,
/* 941 */,
/* 942 */,
/* 943 */,
/* 944 */,
/* 945 */,
/* 946 */,
/* 947 */,
/* 948 */,
/* 949 */,
/* 950 */,
/* 951 */,
/* 952 */,
/* 953 */,
/* 954 */,
/* 955 */,
/* 956 */,
/* 957 */,
/* 958 */,
/* 959 */,
/* 960 */,
/* 961 */,
/* 962 */,
/* 963 */,
/* 964 */,
/* 965 */,
/* 966 */,
/* 967 */,
/* 968 */,
/* 969 */,
/* 970 */,
/* 971 */,
/* 972 */,
/* 973 */,
/* 974 */,
/* 975 */,
/* 976 */,
/* 977 */,
/* 978 */,
/* 979 */,
/* 980 */,
/* 981 */,
/* 982 */,
/* 983 */,
/* 984 */,
/* 985 */,
/* 986 */,
/* 987 */,
/* 988 */,
/* 989 */,
/* 990 */,
/* 991 */,
/* 992 */,
/* 993 */,
/* 994 */,
/* 995 */,
/* 996 */,
/* 997 */,
/* 998 */,
/* 999 */,
/* 1000 */,
/* 1001 */,
/* 1002 */,
/* 1003 */,
/* 1004 */,
/* 1005 */,
/* 1006 */,
/* 1007 */,
/* 1008 */,
/* 1009 */,
/* 1010 */,
/* 1011 */,
/* 1012 */,
/* 1013 */,
/* 1014 */,
/* 1015 */,
/* 1016 */,
/* 1017 */,
/* 1018 */,
/* 1019 */,
/* 1020 */,
/* 1021 */,
/* 1022 */,
/* 1023 */,
/* 1024 */,
/* 1025 */,
/* 1026 */,
/* 1027 */,
/* 1028 */,
/* 1029 */,
/* 1030 */,
/* 1031 */,
/* 1032 */,
/* 1033 */,
/* 1034 */,
/* 1035 */,
/* 1036 */,
/* 1037 */,
/* 1038 */,
/* 1039 */,
/* 1040 */,
/* 1041 */,
/* 1042 */,
/* 1043 */,
/* 1044 */,
/* 1045 */,
/* 1046 */,
/* 1047 */,
/* 1048 */,
/* 1049 */,
/* 1050 */,
/* 1051 */,
/* 1052 */,
/* 1053 */,
/* 1054 */,
/* 1055 */,
/* 1056 */,
/* 1057 */,
/* 1058 */,
/* 1059 */,
/* 1060 */,
/* 1061 */,
/* 1062 */,
/* 1063 */,
/* 1064 */,
/* 1065 */,
/* 1066 */,
/* 1067 */,
/* 1068 */,
/* 1069 */,
/* 1070 */,
/* 1071 */,
/* 1072 */,
/* 1073 */,
/* 1074 */,
/* 1075 */,
/* 1076 */,
/* 1077 */,
/* 1078 */,
/* 1079 */,
/* 1080 */,
/* 1081 */,
/* 1082 */,
/* 1083 */,
/* 1084 */,
/* 1085 */,
/* 1086 */,
/* 1087 */,
/* 1088 */,
/* 1089 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * This is the web browser implementation of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */
	
	exports = module.exports = __webpack_require__(1090);
	exports.log = log;
	exports.formatArgs = formatArgs;
	exports.save = save;
	exports.load = load;
	exports.useColors = useColors;
	exports.storage = 'undefined' != typeof chrome
	               && 'undefined' != typeof chrome.storage
	                  ? chrome.storage.local
	                  : localstorage();
	
	/**
	 * Colors.
	 */
	
	exports.colors = [
	  'lightseagreen',
	  'forestgreen',
	  'goldenrod',
	  'dodgerblue',
	  'darkorchid',
	  'crimson'
	];
	
	/**
	 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
	 * and the Firebug extension (any Firefox version) are known
	 * to support "%c" CSS customizations.
	 *
	 * TODO: add a `localStorage` variable to explicitly enable/disable colors
	 */
	
	function useColors() {
	  // NB: In an Electron preload script, document will be defined but not fully
	  // initialized. Since we know we're in Chrome, we'll just detect this case
	  // explicitly
	  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
	    return true;
	  }
	
	  // is webkit? http://stackoverflow.com/a/16459606/376773
	  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
	    // is firebug? http://stackoverflow.com/a/398120/376773
	    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
	    // is firefox >= v31?
	    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
	    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
	    // double check webkit in userAgent just in case we are in a worker
	    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
	}
	
	/**
	 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
	 */
	
	exports.formatters.j = function(v) {
	  try {
	    return JSON.stringify(v);
	  } catch (err) {
	    return '[UnexpectedJSONParseError]: ' + err.message;
	  }
	};
	
	
	/**
	 * Colorize log arguments if enabled.
	 *
	 * @api public
	 */
	
	function formatArgs(args) {
	  var useColors = this.useColors;
	
	  args[0] = (useColors ? '%c' : '')
	    + this.namespace
	    + (useColors ? ' %c' : ' ')
	    + args[0]
	    + (useColors ? '%c ' : ' ')
	    + '+' + exports.humanize(this.diff);
	
	  if (!useColors) return;
	
	  var c = 'color: ' + this.color;
	  args.splice(1, 0, c, 'color: inherit')
	
	  // the final "%c" is somewhat tricky, because there could be other
	  // arguments passed either before or after the %c, so we need to
	  // figure out the correct index to insert the CSS into
	  var index = 0;
	  var lastC = 0;
	  args[0].replace(/%[a-zA-Z%]/g, function(match) {
	    if ('%%' === match) return;
	    index++;
	    if ('%c' === match) {
	      // we only are interested in the *last* %c
	      // (the user may have provided their own)
	      lastC = index;
	    }
	  });
	
	  args.splice(lastC, 0, c);
	}
	
	/**
	 * Invokes `console.log()` when available.
	 * No-op when `console.log` is not a "function".
	 *
	 * @api public
	 */
	
	function log() {
	  // this hackery is required for IE8/9, where
	  // the `console.log` function doesn't have 'apply'
	  return 'object' === typeof console
	    && console.log
	    && Function.prototype.apply.call(console.log, console, arguments);
	}
	
	/**
	 * Save `namespaces`.
	 *
	 * @param {String} namespaces
	 * @api private
	 */
	
	function save(namespaces) {
	  try {
	    if (null == namespaces) {
	      exports.storage.removeItem('debug');
	    } else {
	      exports.storage.debug = namespaces;
	    }
	  } catch(e) {}
	}
	
	/**
	 * Load `namespaces`.
	 *
	 * @return {String} returns the previously persisted debug modes
	 * @api private
	 */
	
	function load() {
	  var r;
	  try {
	    r = exports.storage.debug;
	  } catch(e) {}
	
	  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	  if (!r && typeof process !== 'undefined' && 'env' in process) {
	    r = ({"NODE_ENV":"production","PUBLIC_DIR":"/home/luubinhan/Documents/projects/blog/public","GATSBY_ALGOLIA_APP_ID":"68PEVEWLR7","GATSBY_ALGOLIA_SEARCH_KEY":"c3e0db897950a5f687e9d690d5fc9342"}).DEBUG;
	  }
	
	  return r;
	}
	
	/**
	 * Enable namespaces listed in `localStorage.debug` initially.
	 */
	
	exports.enable(load());
	
	/**
	 * Localstorage attempts to return the localstorage.
	 *
	 * This is necessary because safari throws
	 * when a user disables cookies/localstorage
	 * and you attempt to access it.
	 *
	 * @return {LocalStorage}
	 * @api private
	 */
	
	function localstorage() {
	  try {
	    return window.localStorage;
	  } catch (e) {}
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(90)))

/***/ }),
/* 1090 */
/***/ (function(module, exports, __webpack_require__) {

	
	/**
	 * This is the common logic for both the Node.js and web browser
	 * implementations of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */
	
	exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
	exports.coerce = coerce;
	exports.disable = disable;
	exports.enable = enable;
	exports.enabled = enabled;
	exports.humanize = __webpack_require__(201);
	
	/**
	 * The currently active debug mode names, and names to skip.
	 */
	
	exports.names = [];
	exports.skips = [];
	
	/**
	 * Map of special "%n" handling functions, for the debug "format" argument.
	 *
	 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	 */
	
	exports.formatters = {};
	
	/**
	 * Previous log timestamp.
	 */
	
	var prevTime;
	
	/**
	 * Select a color.
	 * @param {String} namespace
	 * @return {Number}
	 * @api private
	 */
	
	function selectColor(namespace) {
	  var hash = 0, i;
	
	  for (i in namespace) {
	    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
	    hash |= 0; // Convert to 32bit integer
	  }
	
	  return exports.colors[Math.abs(hash) % exports.colors.length];
	}
	
	/**
	 * Create a debugger with the given `namespace`.
	 *
	 * @param {String} namespace
	 * @return {Function}
	 * @api public
	 */
	
	function createDebug(namespace) {
	
	  function debug() {
	    // disabled?
	    if (!debug.enabled) return;
	
	    var self = debug;
	
	    // set `diff` timestamp
	    var curr = +new Date();
	    var ms = curr - (prevTime || curr);
	    self.diff = ms;
	    self.prev = prevTime;
	    self.curr = curr;
	    prevTime = curr;
	
	    // turn the `arguments` into a proper Array
	    var args = new Array(arguments.length);
	    for (var i = 0; i < args.length; i++) {
	      args[i] = arguments[i];
	    }
	
	    args[0] = exports.coerce(args[0]);
	
	    if ('string' !== typeof args[0]) {
	      // anything else let's inspect with %O
	      args.unshift('%O');
	    }
	
	    // apply any `formatters` transformations
	    var index = 0;
	    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
	      // if we encounter an escaped % then don't increase the array index
	      if (match === '%%') return match;
	      index++;
	      var formatter = exports.formatters[format];
	      if ('function' === typeof formatter) {
	        var val = args[index];
	        match = formatter.call(self, val);
	
	        // now we need to remove `args[index]` since it's inlined in the `format`
	        args.splice(index, 1);
	        index--;
	      }
	      return match;
	    });
	
	    // apply env-specific formatting (colors, etc.)
	    exports.formatArgs.call(self, args);
	
	    var logFn = debug.log || exports.log || console.log.bind(console);
	    logFn.apply(self, args);
	  }
	
	  debug.namespace = namespace;
	  debug.enabled = exports.enabled(namespace);
	  debug.useColors = exports.useColors();
	  debug.color = selectColor(namespace);
	
	  // env-specific initialization logic for debug instances
	  if ('function' === typeof exports.init) {
	    exports.init(debug);
	  }
	
	  return debug;
	}
	
	/**
	 * Enables a debug mode by namespaces. This can include modes
	 * separated by a colon and wildcards.
	 *
	 * @param {String} namespaces
	 * @api public
	 */
	
	function enable(namespaces) {
	  exports.save(namespaces);
	
	  exports.names = [];
	  exports.skips = [];
	
	  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
	  var len = split.length;
	
	  for (var i = 0; i < len; i++) {
	    if (!split[i]) continue; // ignore empty strings
	    namespaces = split[i].replace(/\*/g, '.*?');
	    if (namespaces[0] === '-') {
	      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
	    } else {
	      exports.names.push(new RegExp('^' + namespaces + '$'));
	    }
	  }
	}
	
	/**
	 * Disable debug output.
	 *
	 * @api public
	 */
	
	function disable() {
	  exports.enable('');
	}
	
	/**
	 * Returns true if the given mode name is enabled, false otherwise.
	 *
	 * @param {String} name
	 * @return {Boolean}
	 * @api public
	 */
	
	function enabled(name) {
	  var i, len;
	  for (i = 0, len = exports.skips.length; i < len; i++) {
	    if (exports.skips[i].test(name)) {
	      return false;
	    }
	  }
	  for (i = 0, len = exports.names.length; i < len; i++) {
	    if (exports.names[i].test(name)) {
	      return true;
	    }
	  }
	  return false;
	}
	
	/**
	 * Coerce `val`.
	 *
	 * @param {Mixed} val
	 * @return {Mixed}
	 * @api private
	 */
	
	function coerce(val) {
	  if (val instanceof Error) return val.stack || val.message;
	  return val;
	}


/***/ }),
/* 1091 */,
/* 1092 */,
/* 1093 */,
/* 1094 */,
/* 1095 */,
/* 1096 */,
/* 1097 */,
/* 1098 */,
/* 1099 */,
/* 1100 */,
/* 1101 */,
/* 1102 */,
/* 1103 */,
/* 1104 */
/***/ (function(module, exports) {

	// empty (null-loader)

/***/ }),
/* 1105 */,
/* 1106 */,
/* 1107 */,
/* 1108 */,
/* 1109 */,
/* 1110 */,
/* 1111 */,
/* 1112 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Parser = __webpack_require__(91);
	
	var _Parser2 = _interopRequireDefault(_Parser);
	
	var _getCurrentHref = __webpack_require__(176);
	
	var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Comments = (_temp = _class = function (_PureComponent) {
	  (0, _inherits3.default)(Comments, _PureComponent);
	
	  function Comments() {
	    (0, _classCallCheck3.default)(this, Comments);
	    return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
	  }
	
	  Comments.prototype.componentDidUpdate = function componentDidUpdate() {
	    var handleParse = this.props.handleParse;
	
	    handleParse();
	  };
	
	  Comments.prototype.render = function render() {
	    var _props = this.props,
	        colorScheme = _props.colorScheme,
	        _props$href = _props.href,
	        href = _props$href === undefined ? (0, _getCurrentHref2.default)() : _props$href,
	        numPosts = _props.numPosts,
	        orderBy = _props.orderBy,
	        width = _props.width,
	        children = _props.children,
	        mobile = _props.mobile;
	
	
	    return _react2.default.createElement(
	      'div',
	      {
	        className: 'fb-comments',
	        'data-colorscheme': colorScheme,
	        'data-numposts': numPosts,
	        'data-href': href,
	        'data-order-by': orderBy,
	        'data-width': width,
	        'data-skin': colorScheme,
	        'data-mobile': mobile
	      },
	      children
	    );
	  };
	
	  return Comments;
	}(_react.PureComponent), _class.defaultProps = {
	  href: undefined,
	  numPosts: undefined,
	  orderBy: undefined,
	  width: undefined,
	  colorScheme: undefined,
	  children: undefined,
	  mobile: undefined
	}, _temp);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Parser2.default,
	    null,
	    function (_ref) {
	      var handleParse = _ref.handleParse;
	      return _react2.default.createElement(Comments, (0, _extends3.default)({}, props, {
	        handleParse: handleParse,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=Comments.js.map

/***/ }),
/* 1113 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Parser = __webpack_require__(91);
	
	var _Parser2 = _interopRequireDefault(_Parser);
	
	var _getCurrentHref = __webpack_require__(176);
	
	var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CommentsCount = (_temp = _class = function (_PureComponent) {
	  (0, _inherits3.default)(CommentsCount, _PureComponent);
	
	  function CommentsCount() {
	    (0, _classCallCheck3.default)(this, CommentsCount);
	    return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
	  }
	
	  CommentsCount.prototype.componentDidUpdate = function componentDidUpdate() {
	    var handleParse = this.props.handleParse;
	
	    handleParse();
	  };
	
	  CommentsCount.prototype.render = function render() {
	    var _props = this.props,
	        _props$href = _props.href,
	        href = _props$href === undefined ? (0, _getCurrentHref2.default)() : _props$href,
	        children = _props.children;
	
	
	    return _react2.default.createElement(
	      'span',
	      {
	        className: 'fb-comments-count',
	        'data-href': href
	      },
	      children
	    );
	  };
	
	  return CommentsCount;
	}(_react.PureComponent), _class.defaultProps = {
	  href: undefined,
	  children: undefined
	}, _temp);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Parser2.default,
	    null,
	    function (_ref) {
	      var handleParse = _ref.handleParse;
	      return _react2.default.createElement(CommentsCount, (0, _extends3.default)({}, props, {
	        handleParse: handleParse,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=CommentsCount.js.map

/***/ }),
/* 1114 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Parser = __webpack_require__(91);
	
	var _Parser2 = _interopRequireDefault(_Parser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CustomChat = (_temp = _class = function (_PureComponent) {
	  (0, _inherits3.default)(CustomChat, _PureComponent);
	
	  function CustomChat() {
	    (0, _classCallCheck3.default)(this, CustomChat);
	    return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
	  }
	
	  CustomChat.prototype.componentDidUpdate = function componentDidUpdate() {
	    var handleParse = this.props.handleParse;
	
	    handleParse();
	  };
	
	  CustomChat.prototype.render = function render() {
	    var _props = this.props,
	        minimized = _props.minimized,
	        children = _props.children,
	        pageId = _props.pageId,
	        themeColor = _props.themeColor,
	        loggedInGreeting = _props.loggedInGreeting,
	        loggedOutGreeting = _props.loggedOutGreeting,
	        dataRef = _props.dataRef;
	
	
	    return _react2.default.createElement(
	      'div',
	      {
	        className: 'fb-customerchat',
	        page_id: pageId,
	        minimized: minimized,
	        theme_color: themeColor,
	        logged_in_greeting: loggedInGreeting,
	        logged_out_greeting: loggedOutGreeting,
	        'data-ref': dataRef
	      },
	      children
	    );
	  };
	
	  return CustomChat;
	}(_react.PureComponent), _class.defaultProps = {
	  minimized: undefined,
	  children: undefined,
	  themeColor: undefined,
	  loggedInGreeting: undefined,
	  loggedOutGreeting: undefined,
	  dataRef: undefined
	}, _temp);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Parser2.default,
	    null,
	    function (_ref) {
	      var handleParse = _ref.handleParse;
	      return _react2.default.createElement(CustomChat, (0, _extends3.default)({}, props, {
	        handleParse: handleParse,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=CustomChat.js.map

/***/ }),
/* 1115 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Parser = __webpack_require__(91);
	
	var _Parser2 = _interopRequireDefault(_Parser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var EmbeddedPost = (_temp = _class = function (_PureComponent) {
	  (0, _inherits3.default)(EmbeddedPost, _PureComponent);
	
	  function EmbeddedPost() {
	    (0, _classCallCheck3.default)(this, EmbeddedPost);
	    return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
	  }
	
	  EmbeddedPost.prototype.componentDidUpdate = function componentDidUpdate() {
	    var handleParse = this.props.handleParse;
	
	    handleParse();
	  };
	
	  EmbeddedPost.prototype.render = function render() {
	    var _props = this.props,
	        href = _props.href,
	        width = _props.width,
	        showText = _props.showText,
	        children = _props.children;
	
	
	    return _react2.default.createElement(
	      'div',
	      {
	        className: 'fb-post',
	        'data-href': href,
	        'data-width': width,
	        'data-show-text': showText
	      },
	      children
	    );
	  };
	
	  return EmbeddedPost;
	}(_react.PureComponent), _class.defaultProps = {
	  width: undefined,
	  showText: undefined,
	  children: undefined
	}, _temp);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Parser2.default,
	    null,
	    function (_ref) {
	      var handleParse = _ref.handleParse;
	      return _react2.default.createElement(EmbeddedPost, (0, _extends3.default)({}, props, {
	        handleParse: handleParse,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=EmbeddedPost.js.map

/***/ }),
/* 1116 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Parser = __webpack_require__(91);
	
	var _Parser2 = _interopRequireDefault(_Parser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var EmbeddedVideo = (_temp = _class = function (_PureComponent) {
	  (0, _inherits3.default)(EmbeddedVideo, _PureComponent);
	
	  function EmbeddedVideo() {
	    (0, _classCallCheck3.default)(this, EmbeddedVideo);
	    return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
	  }
	
	  EmbeddedVideo.prototype.componentDidUpdate = function componentDidUpdate() {
	    var handleParse = this.props.handleParse;
	
	    handleParse();
	  };
	
	  EmbeddedVideo.prototype.render = function render() {
	    var _props = this.props,
	        href = _props.href,
	        width = _props.width,
	        showText = _props.showText,
	        allowFullScreen = _props.allowFullScreen,
	        autoPlay = _props.autoPlay,
	        showCaptions = _props.showCaptions,
	        children = _props.children;
	
	
	    return _react2.default.createElement(
	      'div',
	      {
	        className: 'fb-video',
	        'data-href': href,
	        'data-width': width,
	        'data-show-text': showText,
	        'data-show-captions': showCaptions,
	        'data-autoplay': autoPlay,
	        'data-allowfullscreen': allowFullScreen
	      },
	      children
	    );
	  };
	
	  return EmbeddedVideo;
	}(_react.PureComponent), _class.defaultProps = {
	  width: undefined,
	  showText: undefined,
	  allowFullScreen: undefined,
	  autoPlay: undefined,
	  showCaptions: undefined,
	  children: undefined
	}, _temp);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Parser2.default,
	    null,
	    function (_ref) {
	      var handleParse = _ref.handleParse;
	      return _react2.default.createElement(EmbeddedVideo, (0, _extends3.default)({}, props, {
	        handleParse: handleParse,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=EmbeddedVideo.js.map

/***/ }),
/* 1117 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = exports.Method = undefined;
	
	var _regenerator = __webpack_require__(94);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(93);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _LoginStatus = __webpack_require__(495);
	
	var _LoginStatus2 = _interopRequireDefault(_LoginStatus);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Method = exports.Method = {
	  GET: 'get',
	  POST: 'post',
	  DELETE: 'delete'
	};
	
	var Facebook = function () {
	  function Facebook() {
	    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    (0, _classCallCheck3.default)(this, Facebook);
	
	    this.options = (0, _extends3.default)({
	      domain: 'connect.facebook.net',
	      version: 'v3.1',
	      cookie: false,
	      status: false,
	      xfbml: false,
	      language: 'en_US',
	      frictionlessRequests: false
	    }, options);
	
	    if (!this.options.appId) {
	      throw new Error('You need to set appId');
	    }
	
	    if (!this.options.wait) {
	      this.init();
	    }
	  }
	
	  Facebook.prototype.getAppId = function getAppId() {
	    return this.options.appId;
	  };
	
	  Facebook.prototype.init = function () {
	    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
	      var _this = this;
	
	      return _regenerator2.default.wrap(function _callee$(_context) {
	        while (1) {
	          switch (_context.prev = _context.next) {
	            case 0:
	              if (!this.loadingPromise) {
	                _context.next = 2;
	                break;
	              }
	
	              return _context.abrupt('return', this.loadingPromise);
	
	            case 2:
	
	              this.loadingPromise = new Promise(function (resolve) {
	                var options = _this.options;
	
	
	                window.fbAsyncInit = function () {
	                  window.FB.init({
	                    appId: options.appId,
	                    version: options.version,
	                    cookie: options.cookie,
	                    status: options.status,
	                    xfbml: options.xfbml,
	                    frictionlessRequests: _this.frictionlessRequests
	                  });
	
	                  resolve(window.FB);
	                };
	
	                var fjs = window.document.getElementsByTagName('script')[0];
	                if (!fjs) {
	                  return;
	                }
	
	                if (window.document.getElementById('facebook-jssdk')) {
	                  return;
	                }
	
	                var js = window.document.createElement('script');
	                js.id = 'facebook-jssdk';
	                js.async = true;
	                js.src = 'https://' + options.domain + '/' + options.language + '/sdk.js';
	
	                fjs.parentNode.insertBefore(js, fjs);
	              });
	
	              return _context.abrupt('return', this.loadingPromise);
	
	            case 4:
	            case 'end':
	              return _context.stop();
	          }
	        }
	      }, _callee, this);
	    }));
	
	    function init() {
	      return _ref.apply(this, arguments);
	    }
	
	    return init;
	  }();
	
	  Facebook.prototype.process = function () {
	    var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(method) {
	      var before = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
	      var after = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
	      var fb;
	      return _regenerator2.default.wrap(function _callee2$(_context2) {
	        while (1) {
	          switch (_context2.prev = _context2.next) {
	            case 0:
	              _context2.next = 2;
	              return this.init();
	
	            case 2:
	              fb = _context2.sent;
	              return _context2.abrupt('return', new Promise(function (resolve, reject) {
	                fb[method].apply(fb, before.concat([function (response) {
	                  if (!response) {
	                    reject(new Error('Response is undefined'));
	                  } else if (response.error) {
	                    var _response$error = response.error,
	                        code = _response$error.code,
	                        type = _response$error.type,
	                        message = _response$error.message;
	
	
	                    var error = new Error(message);
	                    error.code = code;
	                    error.type = type;
	
	                    reject(error);
	                  } else {
	                    resolve(response);
	                  }
	                }], after));
	              }));
	
	            case 4:
	            case 'end':
	              return _context2.stop();
	          }
	        }
	      }, _callee2, this);
	    }));
	
	    function process(_x2) {
	      return _ref2.apply(this, arguments);
	    }
	
	    return process;
	  }();
	
	  Facebook.prototype.ui = function () {
	    var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(options) {
	      return _regenerator2.default.wrap(function _callee3$(_context3) {
	        while (1) {
	          switch (_context3.prev = _context3.next) {
	            case 0:
	              return _context3.abrupt('return', this.process('ui', [options]));
	
	            case 1:
	            case 'end':
	              return _context3.stop();
	          }
	        }
	      }, _callee3, this);
	    }));
	
	    function ui(_x5) {
	      return _ref3.apply(this, arguments);
	    }
	
	    return ui;
	  }();
	
	  Facebook.prototype.api = function () {
	    var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4(path) {
	      var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Method.GET;
	      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	      return _regenerator2.default.wrap(function _callee4$(_context4) {
	        while (1) {
	          switch (_context4.prev = _context4.next) {
	            case 0:
	              return _context4.abrupt('return', this.process('api', [path, method, params]));
	
	            case 1:
	            case 'end':
	              return _context4.stop();
	          }
	        }
	      }, _callee4, this);
	    }));
	
	    function api(_x6) {
	      return _ref4.apply(this, arguments);
	    }
	
	    return api;
	  }();
	
	  Facebook.prototype.login = function () {
	    var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5() {
	      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
	      return _regenerator2.default.wrap(function _callee5$(_context5) {
	        while (1) {
	          switch (_context5.prev = _context5.next) {
	            case 0:
	              return _context5.abrupt('return', this.process('login', [], [opts]));
	
	            case 1:
	            case 'end':
	              return _context5.stop();
	          }
	        }
	      }, _callee5, this);
	    }));
	
	    function login() {
	      return _ref5.apply(this, arguments);
	    }
	
	    return login;
	  }();
	
	  Facebook.prototype.logout = function () {
	    var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee6() {
	      return _regenerator2.default.wrap(function _callee6$(_context6) {
	        while (1) {
	          switch (_context6.prev = _context6.next) {
	            case 0:
	              return _context6.abrupt('return', this.process('logout'));
	
	            case 1:
	            case 'end':
	              return _context6.stop();
	          }
	        }
	      }, _callee6, this);
	    }));
	
	    function logout() {
	      return _ref6.apply(this, arguments);
	    }
	
	    return logout;
	  }();
	
	  Facebook.prototype.getLoginStatus = function () {
	    var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee7() {
	      return _regenerator2.default.wrap(function _callee7$(_context7) {
	        while (1) {
	          switch (_context7.prev = _context7.next) {
	            case 0:
	              return _context7.abrupt('return', this.process('getLoginStatus'));
	
	            case 1:
	            case 'end':
	              return _context7.stop();
	          }
	        }
	      }, _callee7, this);
	    }));
	
	    function getLoginStatus() {
	      return _ref7.apply(this, arguments);
	    }
	
	    return getLoginStatus;
	  }();
	
	  Facebook.prototype.getAuthResponse = function () {
	    var _ref8 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee8() {
	      return _regenerator2.default.wrap(function _callee8$(_context8) {
	        while (1) {
	          switch (_context8.prev = _context8.next) {
	            case 0:
	              return _context8.abrupt('return', this.process('getAuthResponse'));
	
	            case 1:
	            case 'end':
	              return _context8.stop();
	          }
	        }
	      }, _callee8, this);
	    }));
	
	    function getAuthResponse() {
	      return _ref8.apply(this, arguments);
	    }
	
	    return getAuthResponse;
	  }();
	
	  Facebook.prototype.getTokenDetail = function () {
	    var _ref9 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee9() {
	      var response;
	      return _regenerator2.default.wrap(function _callee9$(_context9) {
	        while (1) {
	          switch (_context9.prev = _context9.next) {
	            case 0:
	              _context9.next = 2;
	              return this.getLoginStatus();
	
	            case 2:
	              response = _context9.sent;
	
	              if (!(response.status === _LoginStatus2.default.CONNECTED && response.authResponse)) {
	                _context9.next = 5;
	                break;
	              }
	
	              return _context9.abrupt('return', response.authResponse);
	
	            case 5:
	              throw new Error('Token is undefined');
	
	            case 6:
	            case 'end':
	              return _context9.stop();
	          }
	        }
	      }, _callee9, this);
	    }));
	
	    function getTokenDetail() {
	      return _ref9.apply(this, arguments);
	    }
	
	    return getTokenDetail;
	  }();
	
	  Facebook.prototype.getProfile = function () {
	    var _ref10 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee10(params) {
	      return _regenerator2.default.wrap(function _callee10$(_context10) {
	        while (1) {
	          switch (_context10.prev = _context10.next) {
	            case 0:
	              return _context10.abrupt('return', this.api('/me', Method.GET, params));
	
	            case 1:
	            case 'end':
	              return _context10.stop();
	          }
	        }
	      }, _callee10, this);
	    }));
	
	    function getProfile(_x10) {
	      return _ref10.apply(this, arguments);
	    }
	
	    return getProfile;
	  }();
	
	  Facebook.prototype.getTokenDetailWithProfile = function () {
	    var _ref11 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee11(params) {
	      var tokenDetail, profile;
	      return _regenerator2.default.wrap(function _callee11$(_context11) {
	        while (1) {
	          switch (_context11.prev = _context11.next) {
	            case 0:
	              _context11.next = 2;
	              return this.getTokenDetail();
	
	            case 2:
	              tokenDetail = _context11.sent;
	              _context11.next = 5;
	              return this.getProfile(params);
	
	            case 5:
	              profile = _context11.sent;
	              return _context11.abrupt('return', {
	                profile: profile,
	                tokenDetail: tokenDetail
	              });
	
	            case 7:
	            case 'end':
	              return _context11.stop();
	          }
	        }
	      }, _callee11, this);
	    }));
	
	    function getTokenDetailWithProfile(_x11) {
	      return _ref11.apply(this, arguments);
	    }
	
	    return getTokenDetailWithProfile;
	  }();
	
	  Facebook.prototype.getToken = function () {
	    var _ref12 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee12() {
	      var authResponse;
	      return _regenerator2.default.wrap(function _callee12$(_context12) {
	        while (1) {
	          switch (_context12.prev = _context12.next) {
	            case 0:
	              _context12.next = 2;
	              return this.getTokenDetail();
	
	            case 2:
	              authResponse = _context12.sent;
	              return _context12.abrupt('return', authResponse.accessToken);
	
	            case 4:
	            case 'end':
	              return _context12.stop();
	          }
	        }
	      }, _callee12, this);
	    }));
	
	    function getToken() {
	      return _ref12.apply(this, arguments);
	    }
	
	    return getToken;
	  }();
	
	  Facebook.prototype.getUserId = function () {
	    var _ref13 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee13() {
	      var authResponse;
	      return _regenerator2.default.wrap(function _callee13$(_context13) {
	        while (1) {
	          switch (_context13.prev = _context13.next) {
	            case 0:
	              _context13.next = 2;
	              return this.getTokenDetail();
	
	            case 2:
	              authResponse = _context13.sent;
	              return _context13.abrupt('return', authResponse.userID);
	
	            case 4:
	            case 'end':
	              return _context13.stop();
	          }
	        }
	      }, _callee13, this);
	    }));
	
	    function getUserId() {
	      return _ref13.apply(this, arguments);
	    }
	
	    return getUserId;
	  }();
	
	  Facebook.prototype.sendInvite = function () {
	    var _ref14 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee14(to, options) {
	      return _regenerator2.default.wrap(function _callee14$(_context14) {
	        while (1) {
	          switch (_context14.prev = _context14.next) {
	            case 0:
	              return _context14.abrupt('return', this.ui((0, _extends3.default)({
	                to: to,
	                method: 'apprequests'
	              }, options)));
	
	            case 1:
	            case 'end':
	              return _context14.stop();
	          }
	        }
	      }, _callee14, this);
	    }));
	
	    function sendInvite(_x12, _x13) {
	      return _ref14.apply(this, arguments);
	    }
	
	    return sendInvite;
	  }();
	
	  Facebook.prototype.postAction = function () {
	    var _ref15 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee15(ogNamespace, ogAction, ogObject, ogObjectUrl, noFeedStory) {
	      var url;
	      return _regenerator2.default.wrap(function _callee15$(_context15) {
	        while (1) {
	          switch (_context15.prev = _context15.next) {
	            case 0:
	              url = '/me/' + ogNamespace + ':' + ogAction + '?' + ogObject + '=' + encodeURIComponent(ogObjectUrl);
	
	
	              if (noFeedStory === true) {
	                url += '&no_feed_story=true';
	              }
	
	              return _context15.abrupt('return', this.api(url, Method.POST));
	
	            case 3:
	            case 'end':
	              return _context15.stop();
	          }
	        }
	      }, _callee15, this);
	    }));
	
	    function postAction(_x14, _x15, _x16, _x17, _x18) {
	      return _ref15.apply(this, arguments);
	    }
	
	    return postAction;
	  }();
	
	  Facebook.prototype.getPermissions = function () {
	    var _ref16 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee16() {
	      var response;
	      return _regenerator2.default.wrap(function _callee16$(_context16) {
	        while (1) {
	          switch (_context16.prev = _context16.next) {
	            case 0:
	              _context16.next = 2;
	              return this.api('/me/permissions');
	
	            case 2:
	              response = _context16.sent;
	              return _context16.abrupt('return', response.data);
	
	            case 4:
	            case 'end':
	              return _context16.stop();
	          }
	        }
	      }, _callee16, this);
	    }));
	
	    function getPermissions() {
	      return _ref16.apply(this, arguments);
	    }
	
	    return getPermissions;
	  }();
	
	  Facebook.prototype.hasPermissions = function () {
	    var _ref17 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee17(permissions) {
	      var usersPermissions, findedPermissions;
	      return _regenerator2.default.wrap(function _callee17$(_context17) {
	        while (1) {
	          switch (_context17.prev = _context17.next) {
	            case 0:
	              _context17.next = 2;
	              return this.getPermissions();
	
	            case 2:
	              usersPermissions = _context17.sent;
	              findedPermissions = permissions.filter(function (p) {
	                var currentPermission = usersPermissions.find(function (row) {
	                  var permission = row.permission,
	                      status = row.status;
	
	                  return status === 'granted' && permission === p;
	                });
	
	                return !!currentPermission;
	              });
	              return _context17.abrupt('return', findedPermissions.length === permissions.length);
	
	            case 5:
	            case 'end':
	              return _context17.stop();
	          }
	        }
	      }, _callee17, this);
	    }));
	
	    function hasPermissions(_x19) {
	      return _ref17.apply(this, arguments);
	    }
	
	    return hasPermissions;
	  }();
	
	  Facebook.prototype.subscribe = function () {
	    var _ref18 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee18(eventName, callback) {
	      var fb;
	      return _regenerator2.default.wrap(function _callee18$(_context18) {
	        while (1) {
	          switch (_context18.prev = _context18.next) {
	            case 0:
	              _context18.next = 2;
	              return this.init();
	
	            case 2:
	              fb = _context18.sent;
	
	              fb.Event.subscribe(eventName, callback);
	
	            case 4:
	            case 'end':
	              return _context18.stop();
	          }
	        }
	      }, _callee18, this);
	    }));
	
	    function subscribe(_x20, _x21) {
	      return _ref18.apply(this, arguments);
	    }
	
	    return subscribe;
	  }();
	
	  Facebook.prototype.unsubscribe = function () {
	    var _ref19 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee19(eventName, callback) {
	      var fb;
	      return _regenerator2.default.wrap(function _callee19$(_context19) {
	        while (1) {
	          switch (_context19.prev = _context19.next) {
	            case 0:
	              _context19.next = 2;
	              return this.init();
	
	            case 2:
	              fb = _context19.sent;
	
	              fb.Event.unsubscribe(eventName, callback);
	
	            case 4:
	            case 'end':
	              return _context19.stop();
	          }
	        }
	      }, _callee19, this);
	    }));
	
	    function unsubscribe(_x22, _x23) {
	      return _ref19.apply(this, arguments);
	    }
	
	    return unsubscribe;
	  }();
	
	  Facebook.prototype.parse = function () {
	    var _ref20 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee20(parentNode) {
	      var fb;
	      return _regenerator2.default.wrap(function _callee20$(_context20) {
	        while (1) {
	          switch (_context20.prev = _context20.next) {
	            case 0:
	              _context20.next = 2;
	              return this.init();
	
	            case 2:
	              fb = _context20.sent;
	
	
	              if (typeof parentNode === 'undefined') {
	                fb.XFBML.parse();
	              } else {
	                fb.XFBML.parse(parentNode);
	              }
	
	            case 4:
	            case 'end':
	              return _context20.stop();
	          }
	        }
	      }, _callee20, this);
	    }));
	
	    function parse(_x24) {
	      return _ref20.apply(this, arguments);
	    }
	
	    return parse;
	  }();
	
	  Facebook.prototype.getRequests = function () {
	    var _ref21 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee21() {
	      return _regenerator2.default.wrap(function _callee21$(_context21) {
	        while (1) {
	          switch (_context21.prev = _context21.next) {
	            case 0:
	              return _context21.abrupt('return', this.api('/me/apprequests'));
	
	            case 1:
	            case 'end':
	              return _context21.stop();
	          }
	        }
	      }, _callee21, this);
	    }));
	
	    function getRequests() {
	      return _ref21.apply(this, arguments);
	    }
	
	    return getRequests;
	  }();
	
	  Facebook.prototype.removeRequest = function () {
	    var _ref22 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee22(requestID) {
	      return _regenerator2.default.wrap(function _callee22$(_context22) {
	        while (1) {
	          switch (_context22.prev = _context22.next) {
	            case 0:
	              return _context22.abrupt('return', this.api(requestID, Method.DELETE));
	
	            case 1:
	            case 'end':
	              return _context22.stop();
	          }
	        }
	      }, _callee22, this);
	    }));
	
	    function removeRequest(_x25) {
	      return _ref22.apply(this, arguments);
	    }
	
	    return removeRequest;
	  }();
	
	  Facebook.prototype.setAutoGrow = function () {
	    var _ref23 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee23() {
	      var fb;
	      return _regenerator2.default.wrap(function _callee23$(_context23) {
	        while (1) {
	          switch (_context23.prev = _context23.next) {
	            case 0:
	              _context23.next = 2;
	              return this.init();
	
	            case 2:
	              fb = _context23.sent;
	
	              fb.Canvas.setAutoGrow();
	
	            case 4:
	            case 'end':
	              return _context23.stop();
	          }
	        }
	      }, _callee23, this);
	    }));
	
	    function setAutoGrow() {
	      return _ref23.apply(this, arguments);
	    }
	
	    return setAutoGrow;
	  }();
	
	  Facebook.prototype.paySimple = function () {
	    var _ref24 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee24(product) {
	      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
	      return _regenerator2.default.wrap(function _callee24$(_context24) {
	        while (1) {
	          switch (_context24.prev = _context24.next) {
	            case 0:
	              return _context24.abrupt('return', this.ui({
	                method: 'pay',
	                action: 'purchaseitem',
	                product: product,
	                quantity: quantity
	              }));
	
	            case 1:
	            case 'end':
	              return _context24.stop();
	          }
	        }
	      }, _callee24, this);
	    }));
	
	    function paySimple(_x26) {
	      return _ref24.apply(this, arguments);
	    }
	
	    return paySimple;
	  }();
	
	  Facebook.prototype.pay = function () {
	    var _ref25 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee25(product, options) {
	      return _regenerator2.default.wrap(function _callee25$(_context25) {
	        while (1) {
	          switch (_context25.prev = _context25.next) {
	            case 0:
	              return _context25.abrupt('return', this.ui((0, _extends3.default)({
	                method: 'pay',
	                action: 'purchaseitem',
	                product: product
	              }, options)));
	
	            case 1:
	            case 'end':
	              return _context25.stop();
	          }
	        }
	      }, _callee25, this);
	    }));
	
	    function pay(_x28, _x29) {
	      return _ref25.apply(this, arguments);
	    }
	
	    return pay;
	  }();
	
	  return Facebook;
	}();
	
	/*
	  sendToFriends: function(options, callback) {
	    if(!options) {
	      options = {};
	    }
	
	    options.method = 'send';
	
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      FB.ui(options, function(response) {
	        fbApi._callCallbackByResponse(callback, response);
	      });
	    });
	  },
	
	  sendMessage: function(message, name, caption, description, url, imgUrl, callback) {
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      FB.ui({
	        method: 'stream.publish',
	        message: message,
	        attachment: {
	          name: name,
	          caption: caption,
	          description: description,
	          href: url,
	          media:[{
	            type: 'image',
	            src:  imgUrl,
	            href: url
	          }]
	        },
	        action_links: [{
	          text: 'Code',
	          href: url
	        }],
	        user_prompt_message: message
	      },
	      function(response) {
	        fbApi._callCallbackByResponse(callback, response);
	      });
	    });
	  },
	
	  sendInviteForm: function(options, callback) {
	    if(typeof options === 'function') {
	      callback = options;
	      options = {};
	    }
	
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      options.method = options.method || 'apprequests';
	
	
	      FB.ui(options, function(response) {
	        fbApi._callCallbackByResponse(callback, response);
	      });
	    });
	  },
	
	  checkPageLike: function(pageID, callback) {
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      fbApi.getUserID(function(err, userID) {
	        if(err) {
	          return callback(err);
	        }
	
	        var fqlQuery = `SELECT uid FROM page_fan WHERE page_id = ${pageID} and uid = ${userID}`;
	        var query = FB.Data.query(fqlQuery);
	
	        query.wait(function(rows) {
	          if (rows.length === 1 && rows[0].uid === userID) {
	            callback(null, true, query);
	          }
	          else {
	            callback(null, false, query);
	          }
	        });
	      });
	    });
	  },
	
	  sendMessageToFriend: function (friendID, link, callback) {
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      FB.ui({
	        to: friendID,
	        method: 'send',
	        link: link
	      }, function(response) {
	        fbApi._callCallbackByResponse(callback, response);
	      });
	    });
	  },
	
	  _prepareUsers: function(data) {
	    var users=[];
	
	    for(var index in data) {
	      var userData=data[index];
	
	      var user = {
	        provider_uid: 'facebook'+'_'+userData.uid,
	        provider: 'facebook',
	        id: userData.uid,
	        name: userData.name,
	        first_name: userData.first_name,
	        last_name: userData.last_name,
	        status: (userData.status!==null) ? userData.status : null,
	        image: '//graph.facebook.com/'+userData.uid+'/picture?'
	      };
	
	      users.push(user);
	    }
	
	    return users;
	  },
	
	  getUserList: function(callback) {
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      FB.api('fql', {
	        q: `
	          SELECT uid, name, first_name, last_name, online_presence, status
	          FROM user
	          WHERE uid IN
	            ( SELECT uid2 FROM friend WHERE uid1 = me()) ORDER BY name
	        `,
	      }, function (response)
	      {
	        var users = fbApi._prepareUsers(response.data);
	        callback(null, users, response);
	      });
	    });
	  },
	
	  postFeed: function(options, callback) {
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      options.method='feed';
	
	      FB.ui(options, function(response) {
	        fbApi._callCallbackByResponse(callback, response);
	      });
	    });
	  },
	
	  //need publish_stream
	  createAlbum: function(name, description, callback) {
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      FB.api('/me/albums', 'post', {
	        name: name,
	        description: description
	      },function(response) {
	        fbApi._callCallbackByResponse(callback, response);
	      });
	    });
	  },
	
	  //need publish_stream
	  addImageToAlbum: function(albumID, imageURL, message, callback) {
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      FB.api('/'+albumID+'/photos', 'post', {
	        message: message,
	        url: imageURL
	      }, function(response) {
	        fbApi._callCallbackByResponse(callback, response);
	      });
	    });
	  },
	
	  //'user_photos'
	  getAlbums: function(callback) {
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      FB.api('/me/albums', function(response) {
	        fbApi._callCallbackByResponse(callback, response);
	      });
	    });
	  },
	
	  //'user_photos'
	  getAlbumPhotos: function(albumID, callback) {
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      FB.api('/'+albumID+'/photos', function(response) {
	        fbApi._callCallbackByResponse(callback, response);
	      });
	    });
	  },
	
	  //'user_photos'
	  getAlbumCoverPicture: function(albumID, callback) {
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      FB.api('/'+albumID+'/picture', function(response) {
	        fbApi._callCallbackByResponse(callback, response);
	      });
	    });
	  },
	
	  //'publish_stream'
	  postPhoto: function(photoUrl, message, callback) {
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      FB.api('/me/photos', 'post', {
	        message: message,
	        url: photoUrl
	      },function(response) {
	        fbApi._callCallbackByResponse(callback, response);
	      });
	    });
	  },
	
	  getPageInfo: function(callback) {
	    this.afterLoad(function(err, fbApi) {
	      if(err) {
	        return callback(err);
	      }
	
	      FB.Canvas.getPageInfo(function(response) {
	        fbApi._callCallbackByResponse(callback, response);
	      });
	    });
	  }
	*/
	
	
	exports.default = Facebook;
	//# sourceMappingURL=Facebook.js.map

/***/ }),
/* 1118 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _regenerator = __webpack_require__(94);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(93);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp2;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _getCurrentHref = __webpack_require__(176);
	
	var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);
	
	var _clearUndefinedProperties = __webpack_require__(496);
	
	var _clearUndefinedProperties2 = _interopRequireDefault(_clearUndefinedProperties);
	
	var _Process = __webpack_require__(463);
	
	var _Process2 = _interopRequireDefault(_Process);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Feed = (_temp2 = _class = function (_Component) {
	  (0, _inherits3.default)(Feed, _Component);
	
	  function Feed() {
	    var _this2 = this;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Feed);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleClick = function () {
	      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(evn) {
	        var handleProcess;
	        return _regenerator2.default.wrap(function _callee2$(_context2) {
	          while (1) {
	            switch (_context2.prev = _context2.next) {
	              case 0:
	                evn.preventDefault();
	
	                handleProcess = _this.props.handleProcess;
	                return _context2.abrupt('return', handleProcess(function () {
	                  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(api) {
	                    var _this$props, _this$props$link, link, display, _this$props$appId, appId, redirectURI, from, to, picture, source, name, caption, description, dataRef;
	
	                    return _regenerator2.default.wrap(function _callee$(_context) {
	                      while (1) {
	                        switch (_context.prev = _context.next) {
	                          case 0:
	                            _this$props = _this.props, _this$props$link = _this$props.link, link = _this$props$link === undefined ? (0, _getCurrentHref2.default)() : _this$props$link, display = _this$props.display, _this$props$appId = _this$props.appId, appId = _this$props$appId === undefined ? api.getAppId() : _this$props$appId, redirectURI = _this$props.redirectURI, from = _this$props.from, to = _this$props.to, picture = _this$props.picture, source = _this$props.source, name = _this$props.name, caption = _this$props.caption, description = _this$props.description, dataRef = _this$props.dataRef;
	                            return _context.abrupt('return', api.ui((0, _clearUndefinedProperties2.default)({
	                              method: 'feed',
	                              link: link,
	                              display: display,
	                              app_id: appId,
	                              redirect_uri: redirectURI,
	                              from: from,
	                              to: to,
	                              picture: picture,
	                              source: source,
	                              name: name,
	                              caption: caption,
	                              description: description,
	                              ref: dataRef
	                            })));
	
	                          case 2:
	                          case 'end':
	                            return _context.stop();
	                        }
	                      }
	                    }, _callee, _this2);
	                  }));
	
	                  return function (_x2) {
	                    return _ref2.apply(this, arguments);
	                  };
	                }()));
	
	              case 3:
	              case 'end':
	                return _context2.stop();
	            }
	          }
	        }, _callee2, _this2);
	      }));
	
	      return function (_x) {
	        return _ref.apply(this, arguments);
	      };
	    }(), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Feed.prototype.render = function render() {
	    var _props = this.props,
	        children = _props.children,
	        loading = _props.loading,
	        error = _props.error,
	        data = _props.data;
	
	
	    return children({
	      loading: loading,
	      handleClick: this.handleClick,
	      error: error,
	      data: data
	    });
	  };
	
	  return Feed;
	}(_react.Component), _class.defaultProps = {
	  link: undefined,
	  display: undefined,
	  appId: undefined,
	  redirectURI: undefined,
	  from: undefined,
	  to: undefined,
	  source: undefined,
	  picture: undefined,
	  name: undefined,
	  caption: undefined,
	  description: undefined,
	  dataRef: undefined
	}, _temp2);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Process2.default,
	    null,
	    function (_ref3) {
	      var loading = _ref3.loading,
	          handleProcess = _ref3.handleProcess,
	          error = _ref3.error,
	          data = _ref3.data;
	      return _react2.default.createElement(Feed, (0, _extends3.default)({}, props, {
	        loading: loading,
	        handleProcess: handleProcess,
	        data: data,
	        error: error,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=Feed.js.map

/***/ }),
/* 1119 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Parser = __webpack_require__(91);
	
	var _Parser2 = _interopRequireDefault(_Parser);
	
	var _getCurrentHref = __webpack_require__(176);
	
	var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Group = (_temp = _class = function (_PureComponent) {
	  (0, _inherits3.default)(Group, _PureComponent);
	
	  function Group() {
	    (0, _classCallCheck3.default)(this, Group);
	    return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
	  }
	
	  Group.prototype.componentDidUpdate = function componentDidUpdate() {
	    var handleParse = this.props.handleParse;
	
	    handleParse();
	  };
	
	  Group.prototype.render = function render() {
	    var _props = this.props,
	        style = _props.style,
	        _props$href = _props.href,
	        href = _props$href === undefined ? (0, _getCurrentHref2.default)() : _props$href,
	        width = _props.width,
	        showSocialContext = _props.showSocialContext,
	        showMetaData = _props.showMetaData,
	        children = _props.children,
	        skin = _props.skin;
	
	
	    return _react2.default.createElement(
	      'div',
	      {
	        className: 'fb-group',
	        style: style,
	        'data-href': href,
	        'data-width': width,
	        'data-show-social-context': showSocialContext,
	        'data-show-metadata': showMetaData,
	        'data-skin': skin
	      },
	      children
	    );
	  };
	
	  return Group;
	}(_react.PureComponent), _class.defaultProps = {
	  showSocialContext: undefined,
	  showMetaData: undefined,
	  width: undefined,
	  children: undefined,
	  style: undefined,
	  href: undefined,
	  skin: undefined
	}, _temp);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Parser2.default,
	    null,
	    function (_ref) {
	      var handleParse = _ref.handleParse;
	      return _react2.default.createElement(Group, (0, _extends3.default)({}, props, {
	        handleParse: handleParse,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=Group.js.map

/***/ }),
/* 1120 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Parser = __webpack_require__(91);
	
	var _Parser2 = _interopRequireDefault(_Parser);
	
	var _getCurrentHref = __webpack_require__(176);
	
	var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Like = (_temp = _class = function (_PureComponent) {
	  (0, _inherits3.default)(Like, _PureComponent);
	
	  function Like() {
	    (0, _classCallCheck3.default)(this, Like);
	    return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
	  }
	
	  Like.prototype.componentDidUpdate = function componentDidUpdate() {
	    var handleParse = this.props.handleParse;
	
	    handleParse();
	  };
	
	  Like.prototype.render = function render() {
	    var _props = this.props,
	        _props$href = _props.href,
	        href = _props$href === undefined ? (0, _getCurrentHref2.default)() : _props$href,
	        layout = _props.layout,
	        colorScheme = _props.colorScheme,
	        action = _props.action,
	        showFaces = _props.showFaces,
	        share = _props.share,
	        children = _props.children,
	        width = _props.width,
	        size = _props.size,
	        kidDirectedSite = _props.kidDirectedSite,
	        referral = _props.referral;
	
	
	    return _react2.default.createElement(
	      'div',
	      {
	        className: 'fb-like',
	        'data-ref': referral,
	        'data-href': href,
	        'data-layout': layout,
	        'data-colorscheme': colorScheme,
	        'data-action': action,
	        'data-show-faces': showFaces,
	        'data-share': share,
	        'data-width': width,
	        'data-size': size,
	        'data-kid-directed-site': kidDirectedSite
	      },
	      children
	    );
	  };
	
	  return Like;
	}(_react.PureComponent), _class.defaultProps = {
	  layout: undefined,
	  showFaces: undefined,
	  colorScheme: undefined,
	  action: undefined,
	  share: undefined,
	  size: undefined,
	  kidDirectedSite: undefined,
	  children: undefined,
	  href: undefined,
	  referral: undefined,
	  width: undefined
	}, _temp);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Parser2.default,
	    null,
	    function (_ref) {
	      var handleParse = _ref.handleParse;
	      return _react2.default.createElement(Like, (0, _extends3.default)({}, props, {
	        handleParse: handleParse,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=Like.js.map

/***/ }),
/* 1121 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _objectWithoutProperties2 = __webpack_require__(472);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	exports.default = LoginButton;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSpinnerChildren = __webpack_require__(1934);
	
	var _reactSpinnerChildren2 = _interopRequireDefault(_reactSpinnerChildren);
	
	var _Login = __webpack_require__(531);
	
	var _Login2 = _interopRequireDefault(_Login);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function LoginButton(props) {
	  var children = props.children,
	      className = props.className,
	      spinner = props.spinner,
	      spinnerConfig = props.spinnerConfig,
	      rest = (0, _objectWithoutProperties3.default)(props, ['children', 'className', 'spinner', 'spinnerConfig']);
	
	
	  return _react2.default.createElement(
	    _Login2.default,
	    rest,
	    function (_ref) {
	      var loading = _ref.loading,
	          handleClick = _ref.handleClick;
	      return _react2.default.createElement(
	        'button',
	        {
	          type: 'button',
	          className: className,
	          onClick: handleClick,
	          disabled: loading
	        },
	        children,
	        spinner && loading && _react2.default.createElement(_reactSpinnerChildren2.default, {
	          config: spinnerConfig
	        })
	      );
	    }
	  );
	}
	
	LoginButton.defaultProps = (0, _extends3.default)({}, _Login2.default.defaultProps, {
	  className: undefined,
	  spinnerConfig: {},
	  spinner: true
	});
	//# sourceMappingURL=LoginButton.js.map

/***/ }),
/* 1122 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Parser = __webpack_require__(91);
	
	var _Parser2 = _interopRequireDefault(_Parser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var MessageUs = (_temp = _class = function (_PureComponent) {
	  (0, _inherits3.default)(MessageUs, _PureComponent);
	
	  function MessageUs() {
	    (0, _classCallCheck3.default)(this, MessageUs);
	    return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
	  }
	
	  MessageUs.prototype.componentDidUpdate = function componentDidUpdate() {
	    var handleParse = this.props.handleParse;
	
	    handleParse();
	  };
	
	  MessageUs.prototype.render = function render() {
	    var _props = this.props,
	        color = _props.color,
	        messengerAppId = _props.messengerAppId,
	        pageId = _props.pageId,
	        children = _props.children,
	        size = _props.size;
	
	
	    return _react2.default.createElement(
	      'div',
	      {
	        className: 'fb-messengermessageus',
	        messenger_app_id: messengerAppId,
	        page_id: pageId,
	        color: color,
	        size: size
	      },
	      children
	    );
	  };
	
	  return MessageUs;
	}(_react.PureComponent), _class.defaultProps = {
	  color: undefined,
	  size: undefined,
	  children: undefined
	}, _temp);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Parser2.default,
	    null,
	    function (_ref) {
	      var handleParse = _ref.handleParse;
	      return _react2.default.createElement(MessageUs, (0, _extends3.default)({}, props, {
	        handleParse: handleParse,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=MessageUs.js.map

/***/ }),
/* 1123 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Parser = __webpack_require__(91);
	
	var _Parser2 = _interopRequireDefault(_Parser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var MessengerCheckbox = (_temp = _class = function (_PureComponent) {
	  (0, _inherits3.default)(MessengerCheckbox, _PureComponent);
	
	  function MessengerCheckbox() {
	    (0, _classCallCheck3.default)(this, MessengerCheckbox);
	    return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
	  }
	
	  MessengerCheckbox.prototype.componentDidUpdate = function componentDidUpdate() {
	    var handleParse = this.props.handleParse;
	
	    handleParse();
	  };
	
	  MessengerCheckbox.prototype.render = function render() {
	    var _props = this.props,
	        origin = _props.origin,
	        prechecked = _props.prechecked,
	        allowLogin = _props.allowLogin,
	        userRef = _props.userRef,
	        messengerAppId = _props.messengerAppId,
	        pageId = _props.pageId,
	        children = _props.children,
	        size = _props.size,
	        centerAlign = _props.centerAlign,
	        skin = _props.skin;
	
	
	    return _react2.default.createElement(
	      'div',
	      {
	        className: 'fb-messenger-checkbox',
	        messenger_app_id: messengerAppId,
	        page_id: pageId,
	        size: size,
	        origin: origin,
	        user_ref: userRef,
	        prechecked: prechecked,
	        allow_login: allowLogin,
	        skin: skin,
	        center_align: centerAlign
	      },
	      children
	    );
	  };
	
	  return MessengerCheckbox;
	}(_react.PureComponent), _class.defaultProps = {
	  size: undefined,
	  allowLogin: undefined,
	  prechecked: undefined,
	  userRef: undefined,
	  children: undefined,
	  origin: undefined,
	  skin: undefined,
	  centerAlign: undefined
	}, _temp);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Parser2.default,
	    null,
	    function (_ref) {
	      var handleParse = _ref.handleParse;
	      return _react2.default.createElement(MessengerCheckbox, (0, _extends3.default)({}, props, {
	        handleParse: handleParse,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=MessengerCheckbox.js.map

/***/ }),
/* 1124 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Parser = __webpack_require__(91);
	
	var _Parser2 = _interopRequireDefault(_Parser);
	
	var _getCurrentHref = __webpack_require__(176);
	
	var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Page = (_temp = _class = function (_PureComponent) {
	  (0, _inherits3.default)(Page, _PureComponent);
	
	  function Page() {
	    (0, _classCallCheck3.default)(this, Page);
	    return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
	  }
	
	  Page.prototype.componentDidUpdate = function componentDidUpdate() {
	    var handleParse = this.props.handleParse;
	
	    handleParse();
	  };
	
	  Page.prototype.render = function render() {
	    var _props = this.props,
	        style = _props.style,
	        _props$href = _props.href,
	        href = _props$href === undefined ? (0, _getCurrentHref2.default)() : _props$href,
	        tabs = _props.tabs,
	        hideCover = _props.hideCover,
	        width = _props.width,
	        height = _props.height,
	        showFacepile = _props.showFacepile,
	        hideCTA = _props.hideCTA,
	        smallHeader = _props.smallHeader,
	        adaptContainerWidth = _props.adaptContainerWidth,
	        children = _props.children;
	
	
	    return _react2.default.createElement(
	      'div',
	      {
	        className: 'fb-page',
	        style: style,
	        'data-tabs': tabs,
	        'data-hide-cover': hideCover,
	        'data-show-facepile': showFacepile,
	        'data-hide-cta': hideCTA,
	        'data-href': href,
	        'data-small-header': smallHeader,
	        'data-adapt-container-width': adaptContainerWidth,
	        'data-height': height,
	        'data-width': width
	      },
	      children
	    );
	  };
	
	  return Page;
	}(_react.PureComponent), _class.defaultProps = {
	  width: undefined,
	  height: undefined,
	  tabs: undefined,
	  hideCover: undefined,
	  showFacepile: undefined,
	  hideCTA: undefined,
	  smallHeader: undefined,
	  adaptContainerWidth: undefined,
	  children: undefined,
	  style: undefined,
	  href: undefined
	}, _temp);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Parser2.default,
	    null,
	    function (_ref) {
	      var handleParse = _ref.handleParse;
	      return _react2.default.createElement(Page, (0, _extends3.default)({}, props, {
	        handleParse: handleParse,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=Page.js.map

/***/ }),
/* 1125 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = undefined;
	
	var _regenerator = __webpack_require__(94);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(93);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp2;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Initialize = __webpack_require__(202);
	
	var _Initialize2 = _interopRequireDefault(_Initialize);
	
	var _Subscribe = __webpack_require__(493);
	
	var _Subscribe2 = _interopRequireDefault(_Subscribe);
	
	var _Fields = __webpack_require__(494);
	
	var _Fields2 = _interopRequireDefault(_Fields);
	
	var _LoginStatus = __webpack_require__(495);
	
	var _LoginStatus2 = _interopRequireDefault(_LoginStatus);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Profile = (_temp2 = _class = function (_Component) {
	  (0, _inherits3.default)(Profile, _Component);
	
	  function Profile() {
	    var _this2 = this;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Profile);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
	      loading: true
	    }, _this.handleReady = function () {
	      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(api) {
	        return _regenerator2.default.wrap(function _callee$(_context) {
	          while (1) {
	            switch (_context.prev = _context.next) {
	              case 0:
	                _this.api = api;
	
	                _this.updateProfile();
	
	              case 2:
	              case 'end':
	                return _context.stop();
	            }
	          }
	        }, _callee, _this2);
	      }));
	
	      return function (_x) {
	        return _ref.apply(this, arguments);
	      };
	    }(), _this.handleStatusChange = function () {
	      _this.updateProfile();
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Profile.prototype.updateProfile = function () {
	    var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
	      var api, fields, response, _profile;
	
	      return _regenerator2.default.wrap(function _callee2$(_context2) {
	        while (1) {
	          switch (_context2.prev = _context2.next) {
	            case 0:
	              api = this.api, fields = this.props.fields;
	
	              if (api) {
	                _context2.next = 3;
	                break;
	              }
	
	              return _context2.abrupt('return');
	
	            case 3:
	              _context2.prev = 3;
	              _context2.next = 6;
	              return api.getLoginStatus();
	
	            case 6:
	              response = _context2.sent;
	
	              if (!(response.status !== _LoginStatus2.default.CONNECTED)) {
	                _context2.next = 10;
	                break;
	              }
	
	              this.setState({
	                profile: undefined,
	                loading: false,
	                error: undefined
	              });
	
	              return _context2.abrupt('return');
	
	            case 10:
	              _context2.next = 12;
	              return api.getProfile({
	                fields: fields
	              });
	
	            case 12:
	              _profile = _context2.sent;
	
	
	              this.setState({
	                profile: _profile,
	                loading: false,
	                error: undefined
	              });
	              _context2.next = 19;
	              break;
	
	            case 16:
	              _context2.prev = 16;
	              _context2.t0 = _context2['catch'](3);
	
	              this.setState({
	                profile: undefined,
	                loading: false,
	                error: _context2.t0
	              });
	
	            case 19:
	            case 'end':
	              return _context2.stop();
	          }
	        }
	      }, _callee2, this, [[3, 16]]);
	    }));
	
	    function updateProfile() {
	      return _ref2.apply(this, arguments);
	    }
	
	    return updateProfile;
	  }();
	
	  Profile.prototype.render = function render() {
	    var children = this.props.children;
	    var _state = this.state,
	        profile = _state.profile,
	        loading = _state.loading,
	        error = _state.error;
	
	
	    return _react2.default.createElement(
	      _Initialize2.default,
	      { onReady: this.handleReady },
	      _react2.default.createElement(
	        _Subscribe2.default,
	        { event: 'auth.statusChange', onChange: this.handleStatusChange },
	        children({
	          profile: profile,
	          loading: loading,
	          error: error
	        })
	      )
	    );
	  };
	
	  return Profile;
	}(_react.Component), _class.defaultProps = {
	  fields: _Fields2.default
	}, _temp2);
	exports.default = Profile;
	//# sourceMappingURL=Profile.js.map

/***/ }),
/* 1126 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _regenerator = __webpack_require__(94);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(93);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp2;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _getCurrentHref = __webpack_require__(176);
	
	var _getCurrentHref2 = _interopRequireDefault(_getCurrentHref);
	
	var _clearUndefinedProperties = __webpack_require__(496);
	
	var _clearUndefinedProperties2 = _interopRequireDefault(_clearUndefinedProperties);
	
	var _Process = __webpack_require__(463);
	
	var _Process2 = _interopRequireDefault(_Process);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Send = (_temp2 = _class = function (_Component) {
	  (0, _inherits3.default)(Send, _Component);
	
	  function Send() {
	    var _this2 = this;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Send);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleClick = function () {
	      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(evn) {
	        var handleProcess;
	        return _regenerator2.default.wrap(function _callee2$(_context2) {
	          while (1) {
	            switch (_context2.prev = _context2.next) {
	              case 0:
	                evn.preventDefault();
	
	                handleProcess = _this.props.handleProcess;
	                return _context2.abrupt('return', handleProcess(function () {
	                  var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(api) {
	                    var _this$props, _this$props$link, link, display, _this$props$appId, appId, to, redirectURI;
	
	                    return _regenerator2.default.wrap(function _callee$(_context) {
	                      while (1) {
	                        switch (_context.prev = _context.next) {
	                          case 0:
	                            _this$props = _this.props, _this$props$link = _this$props.link, link = _this$props$link === undefined ? (0, _getCurrentHref2.default)() : _this$props$link, display = _this$props.display, _this$props$appId = _this$props.appId, appId = _this$props$appId === undefined ? api.getAppId() : _this$props$appId, to = _this$props.to, redirectURI = _this$props.redirectURI;
	                            return _context.abrupt('return', api.ui((0, _clearUndefinedProperties2.default)({
	                              method: 'send',
	                              link: link,
	                              display: display,
	                              app_id: appId,
	                              to: to,
	                              redirect_uri: redirectURI
	                            })));
	
	                          case 2:
	                          case 'end':
	                            return _context.stop();
	                        }
	                      }
	                    }, _callee, _this2);
	                  }));
	
	                  return function (_x2) {
	                    return _ref2.apply(this, arguments);
	                  };
	                }()));
	
	              case 3:
	              case 'end':
	                return _context2.stop();
	            }
	          }
	        }, _callee2, _this2);
	      }));
	
	      return function (_x) {
	        return _ref.apply(this, arguments);
	      };
	    }(), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Send.prototype.render = function render() {
	    var _props = this.props,
	        children = _props.children,
	        loading = _props.loading;
	
	
	    return children({
	      loading: loading,
	      handleClick: this.handleClick
	    });
	  };
	
	  return Send;
	}(_react.Component), _class.defaultProps = {
	  to: undefined,
	  display: undefined,
	  appId: undefined,
	  redirectURI: undefined
	}, _temp2);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Process2.default,
	    null,
	    function (_ref3) {
	      var loading = _ref3.loading,
	          handleProcess = _ref3.handleProcess;
	      return _react2.default.createElement(Send, (0, _extends3.default)({}, props, {
	        loading: loading,
	        handleProcess: handleProcess,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=Send.js.map

/***/ }),
/* 1127 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _class, _temp;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Parser = __webpack_require__(91);
	
	var _Parser2 = _interopRequireDefault(_Parser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// import MessengerSize from './constants/MessengerSize';
	// import MessengerColor from './constants/MessengerColor';
	
	var SendToMessenger = (_temp = _class = function (_PureComponent) {
	  (0, _inherits3.default)(SendToMessenger, _PureComponent);
	
	  function SendToMessenger() {
	    (0, _classCallCheck3.default)(this, SendToMessenger);
	    return (0, _possibleConstructorReturn3.default)(this, _PureComponent.apply(this, arguments));
	  }
	
	  SendToMessenger.prototype.componentDidUpdate = function componentDidUpdate() {
	    var handleParse = this.props.handleParse;
	
	    handleParse();
	  };
	
	  SendToMessenger.prototype.render = function render() {
	    var _props = this.props,
	        color = _props.color,
	        messengerAppId = _props.messengerAppId,
	        pageId = _props.pageId,
	        children = _props.children,
	        dataRef = _props.dataRef,
	        size = _props.size;
	
	
	    return _react2.default.createElement(
	      'div',
	      {
	        className: 'fb-send-to-messenger',
	        messenger_app_id: messengerAppId,
	        page_id: pageId,
	        'data-color': color,
	        'data-size': size,
	        'data-ref': dataRef
	      },
	      children
	    );
	  };
	
	  return SendToMessenger;
	}(_react.PureComponent), _class.defaultProps = {
	  color: undefined,
	  size: undefined,
	  dataRef: undefined,
	  children: undefined
	}, _temp);
	exports.default = (0, _react.forwardRef)(function (props, ref) {
	  return _react2.default.createElement(
	    _Parser2.default,
	    null,
	    function (_ref) {
	      var handleParse = _ref.handleParse;
	      return _react2.default.createElement(SendToMessenger, (0, _extends3.default)({}, props, {
	        handleParse: handleParse,
	        ref: ref
	      }));
	    }
	  );
	});
	//# sourceMappingURL=SendToMessenger.js.map

/***/ }),
/* 1128 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(33);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _objectWithoutProperties2 = __webpack_require__(472);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	exports.default = ShareButton;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Share = __webpack_require__(532);
	
	var _Share2 = _interopRequireDefault(_Share);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function ShareButton(props) {
	  var className = props.className,
	      children = props.children,
	      rest = (0, _objectWithoutProperties3.default)(props, ['className', 'children']);
	
	
	  return _react2.default.createElement(
	    _Share2.default,
	    rest,
	    function (_ref) {
	      var loading = _ref.loading,
	          handleClick = _ref.handleClick;
	      return _react2.default.createElement(
	        'button',
	        {
	          type: 'button',
	          disabled: loading,
	          className: className,
	          onClick: handleClick
	        },
	        children
	      );
	    }
	  );
	}
	
	ShareButton.defaultProps = (0, _extends3.default)({}, _Share2.default.defaultProps, {
	  className: undefined
	});
	//# sourceMappingURL=ShareButton.js.map

/***/ }),
/* 1129 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = undefined;
	
	var _classCallCheck2 = __webpack_require__(25);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(29);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(28);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _regenerator = __webpack_require__(94);
	
	var _regenerator2 = _interopRequireDefault(_regenerator);
	
	var _asyncToGenerator2 = __webpack_require__(93);
	
	var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);
	
	var getLoginStatus = function () {
	  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(api) {
	    var response;
	    return _regenerator2.default.wrap(function _callee$(_context) {
	      while (1) {
	        switch (_context.prev = _context.next) {
	          case 0:
	            _context.next = 2;
	            return api.getLoginStatus();
	
	          case 2:
	            response = _context.sent;
	            return _context.abrupt('return', response.status);
	
	          case 4:
	          case 'end':
	            return _context.stop();
	        }
	      }
	    }, _callee, this);
	  }));
	
	  return function getLoginStatus(_x) {
	    return _ref.apply(this, arguments);
	  };
	}();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Initialize = __webpack_require__(202);
	
	var _Initialize2 = _interopRequireDefault(_Initialize);
	
	var _Subscribe = __webpack_require__(493);
	
	var _Subscribe2 = _interopRequireDefault(_Subscribe);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var Status = function (_Component) {
	  (0, _inherits3.default)(Status, _Component);
	
	  function Status() {
	    var _this2 = this;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3.default)(this, Status);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
	      loading: true
	    }, _this.handleReady = function () {
	      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(api) {
	        return _regenerator2.default.wrap(function _callee2$(_context2) {
	          while (1) {
	            switch (_context2.prev = _context2.next) {
	              case 0:
	                _context2.t0 = _this;
	                _context2.next = 3;
	                return getLoginStatus(api);
	
	              case 3:
	                _context2.t1 = _context2.sent;
	                _context2.t2 = {
	                  status: _context2.t1,
	                  loading: false
	                };
	
	                _context2.t0.setState.call(_context2.t0, _context2.t2);
	
	              case 6:
	              case 'end':
	                return _context2.stop();
	            }
	          }
	        }, _callee2, _this2);
	      }));
	
	      return function (_x2) {
	        return _ref2.apply(this, arguments);
	      };
	    }(), _this.handleStatusChange = function (response) {
	      _this.setState({
	        status: response.status,
	        loading: false
	      });
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }
	
	  Status.prototype.render = function render() {
	    var children = this.props.children;
	    var _state = this.state,
	        status = _state.status,
	        loading = _state.loading;
	
	
	    return _react2.default.createElement(
	      _Initialize2.default,
	      { onReady: this.handleReady },
	      _react2.default.createElement(
	        _Subscribe2.default,
	        { event: 'auth.statusChange', onChange: this.handleStatusChange },
	        children({
	          status: status,
	          loading: loading
	        })
	      )
	    );
	  };
	
	  return Status;
	}(_react.Component);
	
	exports.default = Status;
	//# sourceMappingURL=Status.js.map

/***/ }),
/* 1130 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = {
	  LIGHT: 'light',
	  DARK: 'dark'
	};
	//# sourceMappingURL=ColorScheme.js.map

/***/ }),
/* 1131 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = {
	  SOCIAL: 'social',
	  REVERSE_TIME: 'reverse_time',
	  TIME: 'time'
	};
	//# sourceMappingURL=CommentsOrderBy.js.map

/***/ }),
/* 1132 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = {
	  LIKE: 'like',
	  RECOMMEND: 'recommend'
	};
	//# sourceMappingURL=LikeAction.js.map

/***/ }),
/* 1133 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = {
	  STANDARD: 'standard',
	  BUTTON_COUNT: 'button_count',
	  BUTTON: 'button',
	  BOX_COUNT: 'box_count'
	};
	//# sourceMappingURL=LikeLayout.js.map

/***/ }),
/* 1134 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = {
	  SMALL: 'small',
	  LARGE: 'large'
	};
	//# sourceMappingURL=LikeSize.js.map

/***/ }),
/* 1135 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = {
	  BLUE: 'blue',
	  WHITE: 'white'
	};
	//# sourceMappingURL=MessengerColor.js.map

/***/ }),
/* 1136 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.default = {
	  SMALL: 'small',
	  MEDIUM: 'medium',
	  STANDARD: 'standard',
	  LARGE: 'large',
	  XLARGE: 'xlarge'
	};
	//# sourceMappingURL=MessengerSize.js.map

/***/ }),
/* 1137 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.Fields = exports.LoginStatus = exports.MessengerColor = exports.MessengerSize = exports.CommentsOrderBy = exports.LikeAction = exports.ColorScheme = exports.LikeLayout = exports.LikeSize = exports.SendToMessenger = exports.MessengerCheckbox = exports.MessageUs = exports.CustomChat = exports.Profile = exports.Status = exports.Subscribe = exports.Group = exports.Feed = exports.CommentsCount = exports.Comments = exports.EmbeddedVideo = exports.EmbeddedPost = exports.LoginButton = exports.Login = exports.Page = exports.ShareButton = exports.Share = exports.Send = exports.Like = exports.Initialize = exports.Parser = exports.FacebookProvider = undefined;
	
	var _FacebookProvider2 = __webpack_require__(530);
	
	var _FacebookProvider3 = _interopRequireDefault(_FacebookProvider2);
	
	var _Parser2 = __webpack_require__(91);
	
	var _Parser3 = _interopRequireDefault(_Parser2);
	
	var _Initialize2 = __webpack_require__(202);
	
	var _Initialize3 = _interopRequireDefault(_Initialize2);
	
	var _Like2 = __webpack_require__(1120);
	
	var _Like3 = _interopRequireDefault(_Like2);
	
	var _Send2 = __webpack_require__(1126);
	
	var _Send3 = _interopRequireDefault(_Send2);
	
	var _Share2 = __webpack_require__(532);
	
	var _Share3 = _interopRequireDefault(_Share2);
	
	var _ShareButton2 = __webpack_require__(1128);
	
	var _ShareButton3 = _interopRequireDefault(_ShareButton2);
	
	var _Page2 = __webpack_require__(1124);
	
	var _Page3 = _interopRequireDefault(_Page2);
	
	var _Login2 = __webpack_require__(531);
	
	var _Login3 = _interopRequireDefault(_Login2);
	
	var _LoginButton2 = __webpack_require__(1121);
	
	var _LoginButton3 = _interopRequireDefault(_LoginButton2);
	
	var _EmbeddedPost2 = __webpack_require__(1115);
	
	var _EmbeddedPost3 = _interopRequireDefault(_EmbeddedPost2);
	
	var _EmbeddedVideo2 = __webpack_require__(1116);
	
	var _EmbeddedVideo3 = _interopRequireDefault(_EmbeddedVideo2);
	
	var _Comments2 = __webpack_require__(1112);
	
	var _Comments3 = _interopRequireDefault(_Comments2);
	
	var _CommentsCount2 = __webpack_require__(1113);
	
	var _CommentsCount3 = _interopRequireDefault(_CommentsCount2);
	
	var _Feed2 = __webpack_require__(1118);
	
	var _Feed3 = _interopRequireDefault(_Feed2);
	
	var _Group2 = __webpack_require__(1119);
	
	var _Group3 = _interopRequireDefault(_Group2);
	
	var _Subscribe2 = __webpack_require__(493);
	
	var _Subscribe3 = _interopRequireDefault(_Subscribe2);
	
	var _Status2 = __webpack_require__(1129);
	
	var _Status3 = _interopRequireDefault(_Status2);
	
	var _Profile2 = __webpack_require__(1125);
	
	var _Profile3 = _interopRequireDefault(_Profile2);
	
	var _CustomChat2 = __webpack_require__(1114);
	
	var _CustomChat3 = _interopRequireDefault(_CustomChat2);
	
	var _MessageUs2 = __webpack_require__(1122);
	
	var _MessageUs3 = _interopRequireDefault(_MessageUs2);
	
	var _MessengerCheckbox2 = __webpack_require__(1123);
	
	var _MessengerCheckbox3 = _interopRequireDefault(_MessengerCheckbox2);
	
	var _SendToMessenger2 = __webpack_require__(1127);
	
	var _SendToMessenger3 = _interopRequireDefault(_SendToMessenger2);
	
	var _LikeSize2 = __webpack_require__(1134);
	
	var _LikeSize3 = _interopRequireDefault(_LikeSize2);
	
	var _LikeLayout2 = __webpack_require__(1133);
	
	var _LikeLayout3 = _interopRequireDefault(_LikeLayout2);
	
	var _ColorScheme2 = __webpack_require__(1130);
	
	var _ColorScheme3 = _interopRequireDefault(_ColorScheme2);
	
	var _LikeAction2 = __webpack_require__(1132);
	
	var _LikeAction3 = _interopRequireDefault(_LikeAction2);
	
	var _CommentsOrderBy2 = __webpack_require__(1131);
	
	var _CommentsOrderBy3 = _interopRequireDefault(_CommentsOrderBy2);
	
	var _MessengerSize2 = __webpack_require__(1136);
	
	var _MessengerSize3 = _interopRequireDefault(_MessengerSize2);
	
	var _MessengerColor2 = __webpack_require__(1135);
	
	var _MessengerColor3 = _interopRequireDefault(_MessengerColor2);
	
	var _LoginStatus2 = __webpack_require__(495);
	
	var _LoginStatus3 = _interopRequireDefault(_LoginStatus2);
	
	var _Fields2 = __webpack_require__(494);
	
	var _Fields3 = _interopRequireDefault(_Fields2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.FacebookProvider = _FacebookProvider3.default;
	exports.Parser = _Parser3.default;
	exports.Initialize = _Initialize3.default;
	exports.Like = _Like3.default;
	exports.Send = _Send3.default;
	exports.Share = _Share3.default;
	exports.ShareButton = _ShareButton3.default;
	exports.Page = _Page3.default;
	exports.Login = _Login3.default;
	exports.LoginButton = _LoginButton3.default;
	exports.EmbeddedPost = _EmbeddedPost3.default;
	exports.EmbeddedVideo = _EmbeddedVideo3.default;
	exports.Comments = _Comments3.default;
	exports.CommentsCount = _CommentsCount3.default;
	exports.Feed = _Feed3.default;
	exports.Group = _Group3.default;
	exports.Subscribe = _Subscribe3.default;
	exports.Status = _Status3.default;
	exports.Profile = _Profile3.default;
	exports.CustomChat = _CustomChat3.default;
	exports.MessageUs = _MessageUs3.default;
	exports.MessengerCheckbox = _MessengerCheckbox3.default;
	exports.SendToMessenger = _SendToMessenger3.default;
	exports.LikeSize = _LikeSize3.default;
	exports.LikeLayout = _LikeLayout3.default;
	exports.ColorScheme = _ColorScheme3.default;
	exports.LikeAction = _LikeAction3.default;
	exports.CommentsOrderBy = _CommentsOrderBy3.default;
	exports.MessengerSize = _MessengerSize3.default;
	exports.MessengerColor = _MessengerColor3.default;
	exports.LoginStatus = _LoginStatus3.default;
	exports.Fields = _Fields3.default;
	//# sourceMappingURL=index.js.map

/***/ }),
/* 1138 */,
/* 1139 */,
/* 1140 */,
/* 1141 */,
/* 1142 */,
/* 1143 */,
/* 1144 */,
/* 1145 */,
/* 1146 */,
/* 1147 */,
/* 1148 */,
/* 1149 */,
/* 1150 */,
/* 1151 */,
/* 1152 */,
/* 1153 */,
/* 1154 */,
/* 1155 */,
/* 1156 */,
/* 1157 */,
/* 1158 */,
/* 1159 */,
/* 1160 */,
/* 1161 */,
/* 1162 */,
/* 1163 */,
/* 1164 */,
/* 1165 */,
/* 1166 */,
/* 1167 */,
/* 1168 */,
/* 1169 */,
/* 1170 */,
/* 1171 */,
/* 1172 */,
/* 1173 */,
/* 1174 */,
/* 1175 */,
/* 1176 */,
/* 1177 */,
/* 1178 */,
/* 1179 */,
/* 1180 */,
/* 1181 */,
/* 1182 */,
/* 1183 */,
/* 1184 */,
/* 1185 */,
/* 1186 */,
/* 1187 */,
/* 1188 */,
/* 1189 */,
/* 1190 */,
/* 1191 */,
/* 1192 */,
/* 1193 */,
/* 1194 */,
/* 1195 */,
/* 1196 */,
/* 1197 */,
/* 1198 */,
/* 1199 */,
/* 1200 */,
/* 1201 */,
/* 1202 */,
/* 1203 */,
/* 1204 */,
/* 1205 */,
/* 1206 */,
/* 1207 */,
/* 1208 */,
/* 1209 */,
/* 1210 */,
/* 1211 */,
/* 1212 */,
/* 1213 */,
/* 1214 */,
/* 1215 */,
/* 1216 */,
/* 1217 */,
/* 1218 */,
/* 1219 */,
/* 1220 */,
/* 1221 */,
/* 1222 */,
/* 1223 */,
/* 1224 */,
/* 1225 */,
/* 1226 */,
/* 1227 */,
/* 1228 */,
/* 1229 */,
/* 1230 */,
/* 1231 */,
/* 1232 */,
/* 1233 */,
/* 1234 */,
/* 1235 */,
/* 1236 */,
/* 1237 */,
/* 1238 */,
/* 1239 */,
/* 1240 */,
/* 1241 */,
/* 1242 */,
/* 1243 */,
/* 1244 */,
/* 1245 */,
/* 1246 */,
/* 1247 */,
/* 1248 */,
/* 1249 */,
/* 1250 */,
/* 1251 */,
/* 1252 */,
/* 1253 */,
/* 1254 */,
/* 1255 */,
/* 1256 */,
/* 1257 */,
/* 1258 */,
/* 1259 */,
/* 1260 */,
/* 1261 */,
/* 1262 */,
/* 1263 */,
/* 1264 */,
/* 1265 */,
/* 1266 */,
/* 1267 */,
/* 1268 */,
/* 1269 */,
/* 1270 */,
/* 1271 */,
/* 1272 */,
/* 1273 */,
/* 1274 */,
/* 1275 */,
/* 1276 */,
/* 1277 */,
/* 1278 */,
/* 1279 */,
/* 1280 */,
/* 1281 */,
/* 1282 */,
/* 1283 */,
/* 1284 */,
/* 1285 */,
/* 1286 */,
/* 1287 */,
/* 1288 */,
/* 1289 */,
/* 1290 */,
/* 1291 */,
/* 1292 */,
/* 1293 */,
/* 1294 */,
/* 1295 */,
/* 1296 */,
/* 1297 */,
/* 1298 */,
/* 1299 */,
/* 1300 */,
/* 1301 */,
/* 1302 */,
/* 1303 */,
/* 1304 */,
/* 1305 */,
/* 1306 */,
/* 1307 */,
/* 1308 */,
/* 1309 */,
/* 1310 */,
/* 1311 */,
/* 1312 */,
/* 1313 */,
/* 1314 */,
/* 1315 */,
/* 1316 */,
/* 1317 */,
/* 1318 */,
/* 1319 */,
/* 1320 */,
/* 1321 */,
/* 1322 */,
/* 1323 */,
/* 1324 */,
/* 1325 */,
/* 1326 */,
/* 1327 */,
/* 1328 */,
/* 1329 */,
/* 1330 */,
/* 1331 */,
/* 1332 */,
/* 1333 */,
/* 1334 */,
/* 1335 */,
/* 1336 */,
/* 1337 */,
/* 1338 */,
/* 1339 */,
/* 1340 */,
/* 1341 */,
/* 1342 */,
/* 1343 */,
/* 1344 */,
/* 1345 */,
/* 1346 */,
/* 1347 */,
/* 1348 */,
/* 1349 */,
/* 1350 */,
/* 1351 */,
/* 1352 */,
/* 1353 */,
/* 1354 */,
/* 1355 */,
/* 1356 */,
/* 1357 */,
/* 1358 */,
/* 1359 */,
/* 1360 */,
/* 1361 */,
/* 1362 */,
/* 1363 */,
/* 1364 */,
/* 1365 */,
/* 1366 */,
/* 1367 */,
/* 1368 */,
/* 1369 */,
/* 1370 */,
/* 1371 */,
/* 1372 */,
/* 1373 */,
/* 1374 */,
/* 1375 */,
/* 1376 */,
/* 1377 */,
/* 1378 */,
/* 1379 */,
/* 1380 */,
/* 1381 */,
/* 1382 */,
/* 1383 */,
/* 1384 */,
/* 1385 */,
/* 1386 */,
/* 1387 */,
/* 1388 */,
/* 1389 */,
/* 1390 */,
/* 1391 */,
/* 1392 */,
/* 1393 */,
/* 1394 */,
/* 1395 */,
/* 1396 */,
/* 1397 */,
/* 1398 */,
/* 1399 */,
/* 1400 */,
/* 1401 */,
/* 1402 */,
/* 1403 */,
/* 1404 */,
/* 1405 */,
/* 1406 */,
/* 1407 */,
/* 1408 */,
/* 1409 */,
/* 1410 */,
/* 1411 */,
/* 1412 */,
/* 1413 */,
/* 1414 */,
/* 1415 */,
/* 1416 */,
/* 1417 */,
/* 1418 */,
/* 1419 */,
/* 1420 */,
/* 1421 */,
/* 1422 */,
/* 1423 */,
/* 1424 */,
/* 1425 */,
/* 1426 */,
/* 1427 */,
/* 1428 */,
/* 1429 */,
/* 1430 */,
/* 1431 */,
/* 1432 */,
/* 1433 */,
/* 1434 */,
/* 1435 */,
/* 1436 */,
/* 1437 */,
/* 1438 */,
/* 1439 */,
/* 1440 */,
/* 1441 */,
/* 1442 */,
/* 1443 */,
/* 1444 */,
/* 1445 */,
/* 1446 */,
/* 1447 */,
/* 1448 */,
/* 1449 */,
/* 1450 */,
/* 1451 */,
/* 1452 */,
/* 1453 */,
/* 1454 */,
/* 1455 */,
/* 1456 */,
/* 1457 */,
/* 1458 */,
/* 1459 */,
/* 1460 */,
/* 1461 */,
/* 1462 */,
/* 1463 */,
/* 1464 */,
/* 1465 */,
/* 1466 */,
/* 1467 */,
/* 1468 */,
/* 1469 */,
/* 1470 */,
/* 1471 */,
/* 1472 */,
/* 1473 */,
/* 1474 */,
/* 1475 */,
/* 1476 */,
/* 1477 */,
/* 1478 */,
/* 1479 */,
/* 1480 */,
/* 1481 */,
/* 1482 */,
/* 1483 */,
/* 1484 */,
/* 1485 */,
/* 1486 */,
/* 1487 */,
/* 1488 */,
/* 1489 */,
/* 1490 */,
/* 1491 */,
/* 1492 */,
/* 1493 */,
/* 1494 */,
/* 1495 */,
/* 1496 */,
/* 1497 */,
/* 1498 */,
/* 1499 */,
/* 1500 */,
/* 1501 */,
/* 1502 */,
/* 1503 */,
/* 1504 */,
/* 1505 */,
/* 1506 */,
/* 1507 */,
/* 1508 */,
/* 1509 */,
/* 1510 */,
/* 1511 */,
/* 1512 */,
/* 1513 */,
/* 1514 */,
/* 1515 */,
/* 1516 */,
/* 1517 */,
/* 1518 */,
/* 1519 */,
/* 1520 */,
/* 1521 */,
/* 1522 */,
/* 1523 */,
/* 1524 */,
/* 1525 */,
/* 1526 */,
/* 1527 */,
/* 1528 */,
/* 1529 */,
/* 1530 */,
/* 1531 */,
/* 1532 */,
/* 1533 */,
/* 1534 */,
/* 1535 */,
/* 1536 */,
/* 1537 */,
/* 1538 */,
/* 1539 */,
/* 1540 */,
/* 1541 */,
/* 1542 */,
/* 1543 */,
/* 1544 */,
/* 1545 */,
/* 1546 */,
/* 1547 */,
/* 1548 */,
/* 1549 */,
/* 1550 */,
/* 1551 */,
/* 1552 */,
/* 1553 */,
/* 1554 */,
/* 1555 */,
/* 1556 */,
/* 1557 */,
/* 1558 */,
/* 1559 */,
/* 1560 */,
/* 1561 */,
/* 1562 */,
/* 1563 */,
/* 1564 */,
/* 1565 */,
/* 1566 */,
/* 1567 */,
/* 1568 */,
/* 1569 */,
/* 1570 */,
/* 1571 */,
/* 1572 */,
/* 1573 */,
/* 1574 */,
/* 1575 */,
/* 1576 */,
/* 1577 */,
/* 1578 */,
/* 1579 */,
/* 1580 */,
/* 1581 */,
/* 1582 */,
/* 1583 */,
/* 1584 */,
/* 1585 */,
/* 1586 */,
/* 1587 */,
/* 1588 */,
/* 1589 */,
/* 1590 */,
/* 1591 */,
/* 1592 */,
/* 1593 */,
/* 1594 */,
/* 1595 */,
/* 1596 */,
/* 1597 */,
/* 1598 */,
/* 1599 */,
/* 1600 */,
/* 1601 */,
/* 1602 */,
/* 1603 */,
/* 1604 */,
/* 1605 */,
/* 1606 */,
/* 1607 */,
/* 1608 */,
/* 1609 */,
/* 1610 */,
/* 1611 */,
/* 1612 */,
/* 1613 */,
/* 1614 */,
/* 1615 */,
/* 1616 */,
/* 1617 */,
/* 1618 */,
/* 1619 */,
/* 1620 */,
/* 1621 */,
/* 1622 */,
/* 1623 */,
/* 1624 */,
/* 1625 */,
/* 1626 */,
/* 1627 */,
/* 1628 */,
/* 1629 */,
/* 1630 */,
/* 1631 */,
/* 1632 */,
/* 1633 */,
/* 1634 */,
/* 1635 */,
/* 1636 */,
/* 1637 */,
/* 1638 */,
/* 1639 */,
/* 1640 */,
/* 1641 */,
/* 1642 */,
/* 1643 */,
/* 1644 */,
/* 1645 */,
/* 1646 */,
/* 1647 */,
/* 1648 */,
/* 1649 */,
/* 1650 */,
/* 1651 */,
/* 1652 */,
/* 1653 */,
/* 1654 */,
/* 1655 */,
/* 1656 */,
/* 1657 */,
/* 1658 */,
/* 1659 */,
/* 1660 */,
/* 1661 */,
/* 1662 */,
/* 1663 */,
/* 1664 */,
/* 1665 */,
/* 1666 */,
/* 1667 */,
/* 1668 */,
/* 1669 */,
/* 1670 */,
/* 1671 */,
/* 1672 */,
/* 1673 */,
/* 1674 */,
/* 1675 */,
/* 1676 */,
/* 1677 */,
/* 1678 */,
/* 1679 */,
/* 1680 */,
/* 1681 */,
/* 1682 */,
/* 1683 */,
/* 1684 */,
/* 1685 */,
/* 1686 */,
/* 1687 */,
/* 1688 */,
/* 1689 */,
/* 1690 */,
/* 1691 */,
/* 1692 */,
/* 1693 */,
/* 1694 */,
/* 1695 */,
/* 1696 */,
/* 1697 */,
/* 1698 */,
/* 1699 */,
/* 1700 */,
/* 1701 */,
/* 1702 */,
/* 1703 */,
/* 1704 */,
/* 1705 */,
/* 1706 */,
/* 1707 */,
/* 1708 */,
/* 1709 */,
/* 1710 */,
/* 1711 */,
/* 1712 */,
/* 1713 */,
/* 1714 */,
/* 1715 */,
/* 1716 */,
/* 1717 */,
/* 1718 */,
/* 1719 */,
/* 1720 */,
/* 1721 */,
/* 1722 */,
/* 1723 */,
/* 1724 */,
/* 1725 */,
/* 1726 */,
/* 1727 */,
/* 1728 */,
/* 1729 */,
/* 1730 */,
/* 1731 */,
/* 1732 */,
/* 1733 */,
/* 1734 */,
/* 1735 */,
/* 1736 */,
/* 1737 */,
/* 1738 */,
/* 1739 */,
/* 1740 */,
/* 1741 */,
/* 1742 */,
/* 1743 */,
/* 1744 */,
/* 1745 */,
/* 1746 */,
/* 1747 */,
/* 1748 */,
/* 1749 */,
/* 1750 */,
/* 1751 */,
/* 1752 */,
/* 1753 */,
/* 1754 */,
/* 1755 */,
/* 1756 */,
/* 1757 */,
/* 1758 */,
/* 1759 */,
/* 1760 */,
/* 1761 */,
/* 1762 */,
/* 1763 */,
/* 1764 */,
/* 1765 */,
/* 1766 */,
/* 1767 */,
/* 1768 */,
/* 1769 */,
/* 1770 */,
/* 1771 */,
/* 1772 */,
/* 1773 */,
/* 1774 */,
/* 1775 */,
/* 1776 */,
/* 1777 */,
/* 1778 */,
/* 1779 */,
/* 1780 */,
/* 1781 */,
/* 1782 */,
/* 1783 */,
/* 1784 */,
/* 1785 */,
/* 1786 */,
/* 1787 */,
/* 1788 */,
/* 1789 */,
/* 1790 */,
/* 1791 */,
/* 1792 */,
/* 1793 */,
/* 1794 */,
/* 1795 */,
/* 1796 */,
/* 1797 */,
/* 1798 */,
/* 1799 */,
/* 1800 */,
/* 1801 */,
/* 1802 */,
/* 1803 */,
/* 1804 */,
/* 1805 */,
/* 1806 */,
/* 1807 */,
/* 1808 */,
/* 1809 */,
/* 1810 */,
/* 1811 */,
/* 1812 */,
/* 1813 */,
/* 1814 */,
/* 1815 */,
/* 1816 */,
/* 1817 */,
/* 1818 */,
/* 1819 */,
/* 1820 */,
/* 1821 */,
/* 1822 */,
/* 1823 */,
/* 1824 */,
/* 1825 */,
/* 1826 */,
/* 1827 */,
/* 1828 */,
/* 1829 */,
/* 1830 */,
/* 1831 */,
/* 1832 */,
/* 1833 */,
/* 1834 */,
/* 1835 */,
/* 1836 */,
/* 1837 */,
/* 1838 */,
/* 1839 */,
/* 1840 */,
/* 1841 */,
/* 1842 */,
/* 1843 */,
/* 1844 */,
/* 1845 */,
/* 1846 */,
/* 1847 */,
/* 1848 */,
/* 1849 */,
/* 1850 */,
/* 1851 */,
/* 1852 */,
/* 1853 */,
/* 1854 */,
/* 1855 */,
/* 1856 */,
/* 1857 */,
/* 1858 */,
/* 1859 */,
/* 1860 */,
/* 1861 */,
/* 1862 */,
/* 1863 */,
/* 1864 */,
/* 1865 */,
/* 1866 */,
/* 1867 */,
/* 1868 */,
/* 1869 */,
/* 1870 */,
/* 1871 */,
/* 1872 */,
/* 1873 */,
/* 1874 */,
/* 1875 */,
/* 1876 */,
/* 1877 */,
/* 1878 */,
/* 1879 */,
/* 1880 */,
/* 1881 */,
/* 1882 */,
/* 1883 */,
/* 1884 */,
/* 1885 */,
/* 1886 */,
/* 1887 */,
/* 1888 */,
/* 1889 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var EmailIcon = (0, _iconFactory2.default)('email', {
	  icon: 'M17,22v20h30V22H17z M41.1,25L32,32.1L22.9,25H41.1z M20,39V26.6l12,9.3l12-9.3V39H20z',
	  mask: 'M41.1,25H22.9l9.1,7.1L41.1,25z M44,26.6l-12,9.3l-12-9.3V39h24V26.6z M0,0v64h64V0H0z M47,42H17V22h30V42z',
	  color: '#7f7f7f'
	});
	
	exports.default = EmailIcon;

/***/ }),
/* 1890 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function emailLink(url, _ref) {
	  var subject = _ref.subject,
	      body = _ref.body;
	
	  return 'mailto:' + (0, _objectToGetParams2.default)({ subject: subject, body: body || url });
	}
	
	var EmailShareButton = (0, _createShareButton2.default)('email', emailLink, function (props) {
	  return {
	    subject: props.subject,
	    body: props.body
	  };
	}, {
	  subject: _propTypes2.default.string,
	  body: _propTypes2.default.string
	}, {
	  openWindow: false,
	  onClick: function onClick(link) {
	    window.location.href = link;
	  }
	});
	
	exports.default = EmailShareButton;

/***/ }),
/* 1891 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var FacebookIcon = (0, _iconFactory2.default)('facebook', {
	  icon: 'M34.1,47V33.3h4.6l0.7-5.3h-5.3v-3.4c0-1.5,0.4-2.6,2.6-2.6l2.8,0v-4.8c-0.5-0.1-2.2-0.2-4.1-0.2 c-4.1,0-6.9,2.5-6.9,7V28H24v5.3h4.6V47H34.1z',
	  mask: 'M0,0v64h64V0H0z M39.6,22l-2.8,0c-2.2,0-2.6,1.1-2.6,2.6V28h5.3l-0.7,5.3h-4.6V47h-5.5V33.3H24V28h4.6V24 c0-4.6,2.8-7,6.9-7c2,0,3.6,0.1,4.1,0.2V22z',
	  color: '#3b5998'
	});
	
	exports.default = FacebookIcon;

/***/ }),
/* 1892 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function facebookLink(url, _ref) {
	  var quote = _ref.quote,
	      hashtag = _ref.hashtag;
	
	  (0, _assert2.default)(url, 'facebook.url');
	
	  return 'https://www.facebook.com/sharer/sharer.php' + (0, _objectToGetParams2.default)({
	    u: url,
	    quote: quote,
	    hashtag: hashtag
	  });
	}
	
	var FacebookShareButton = (0, _createShareButton2.default)('facebook', facebookLink, function (props) {
	  /* eslint-disable no-console */
	  if (props.picture) {
	    console.warn('FacebookShareButton warning: picture is a deprecated prop.');
	  }
	
	  if (props.title) {
	    console.warn('FacebookShareButton warning: title is a deprecated prop. Use "quote" instead.');
	  }
	
	  if (props.description) {
	    console.warn('FacebookShareButton warning: description is a deprecated prop.\n      Use "quote" instead.');
	  }
	  /* eslint-enable no-console */
	
	  return {
	    quote: props.quote,
	    hashtag: props.hashtag
	  };
	}, {
	  quote: _propTypes2.default.string,
	  hashtag: _propTypes2.default.string
	}, {
	  windowWidth: 550,
	  windowHeight: 400
	});
	
	exports.default = FacebookShareButton;

/***/ }),
/* 1893 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsonp = __webpack_require__(190);
	
	var _jsonp2 = _interopRequireDefault(_jsonp);
	
	var _shareCountFactory = __webpack_require__(182);
	
	var _shareCountFactory2 = _interopRequireDefault(_shareCountFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getFacebookShareCount(shareUrl, callback) {
	  var endpoint = 'https://graph.facebook.com/?id=' + shareUrl;
	
	  (0, _jsonp2.default)(endpoint, function (err, data) {
	    callback(!err && data && data.share && data.share.share_count ? data.share.share_count : undefined);
	  });
	}
	
	exports.default = (0, _shareCountFactory2.default)(getFacebookShareCount);

/***/ }),
/* 1894 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var GooglePlusIcon = (0, _iconFactory2.default)('google', {
	  icon: 'M25.3,30.1v3.8h6.3c-0.3,1.6-1.9,4.8-6.3,4.8c-3.8,0-6.9-3.1-6.9-7s3.1-7,6.9-7c2.2,0,3.6,0.9,4.4,1.7l3-2.9c-1.9-1.8-4.4-2.9-7.4-2.9c-6.1,0-11.1,5-11.1,11.1s5,11.1,11.1,11.1c6.4,0,10.7-4.5,10.7-10.9c0-0.7-0.1-1.3-0.2-1.8H25.3L25.3,30.1z M49.8,28.9h-3.2v-3.2h-3.2v3.2h-3.2v3.2h3.2v3.2h3.2v-3.2h3.2',
	  mask: 'M0,0v64h64V0H0z M31.3,19.1c0.3,0.3,0.6,0.7,0.9,1.2c0.3,0.4,0.5,0.9,0.7,1.5c0.2,0.6,0.3,1.3,0.3,2.1 c0,1.4-0.3,2.6-0.9,3.4c-0.3,0.4-0.6,0.8-0.9,1.2c-0.4,0.4-0.8,0.7-1.2,1.1c-0.2,0.2-0.5,0.5-0.7,0.8c-0.2,0.3-0.4,0.7-0.4,1.1 c0,0.4,0.1,0.8,0.4,1c0.2,0.3,0.4,0.5,0.6,0.7l1.4,1.1c0.8,0.7,1.6,1.5,2.2,2.3c0.6,0.8,0.9,2,0.9,3.3c0,1.9-0.9,3.7-2.6,5.2 c-1.8,1.6-4.3,2.4-7.7,2.4c-2.8,0-4.9-0.6-6.3-1.8c-1.4-1.1-2.1-2.4-2.1-3.9c0-0.7,0.2-1.6,0.7-2.5c0.4-0.9,1.2-1.7,2.4-2.4 c1.3-0.7,2.7-1.2,4.1-1.5c1.4-0.2,2.6-0.3,3.5-0.4c-0.3-0.4-0.5-0.8-0.8-1.2c-0.3-0.4-0.4-0.9-0.4-1.5c0-0.4,0-0.6,0.2-0.9 c0.1-0.2,0.2-0.5,0.2-0.7c-0.5,0.1-0.9,0.1-1.3,0.1c-2.1,0-3.8-0.7-4.9-2c-1.2-1.2-1.8-2.7-1.8-4.3c0-2,0.8-3.8,2.5-5.4 c1.1-0.9,2.3-1.6,3.5-1.8c1.2-0.2,2.3-0.4,3.4-0.4h8L33,18.4h-2.5C30.7,18.6,31,18.8,31.3,19.1z M48,32h-4.3v4.2h-2.5V32H37v-2.5 h4.2v-4.3h2.5v4.3H48V32z M27.1,19.1c-0.6-0.5-1.4-0.7-2.2-0.7c-1.1,0-2,0.5-2.7,1.3c-0.6,0.9-0.9,1.9-0.9,3c0,1.5,0.4,3,1.3,4.5 c0.4,0.7,0.9,1.4,1.6,1.9c0.6,0.5,1.4,0.8,2.2,0.8c1.1,0,1.9-0.4,2.6-1.1c0.3-0.5,0.6-1,0.7-1.6c0.1-0.5,0.1-1,0.1-1.4 c0-1.6-0.4-3.2-1.2-4.8C28.2,20.2,27.7,19.5,27.1,19.1z M26.9,36.2c-0.2,0-0.7,0-1.6,0.1c-0.8,0.1-1.7,0.3-2.5,0.6 c-0.2,0.1-0.5,0.2-0.9,0.4c-0.4,0.2-0.7,0.4-1.1,0.7c-0.4,0.3-0.7,0.7-0.9,1.2c-0.3,0.5-0.4,1.1-0.4,1.8c0,1.4,0.6,2.6,1.9,3.5 c1.2,0.9,2.9,1.4,5,1.4c1.9,0,3.3-0.4,4.3-1.3c1-0.8,1.5-1.8,1.5-3.1c0-1-0.3-1.9-1-2.7c-0.7-0.7-1.8-1.6-3.3-2.6 C27.5,36.2,27.2,36.2,26.9,36.2z',
	  color: '#dd4b39'
	});
	
	exports.default = GooglePlusIcon;

/***/ }),
/* 1895 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function googlePlusLink(url) {
	  (0, _assert2.default)(url, 'googlePlus.url');
	
	  return 'https://plus.google.com/share' + (0, _objectToGetParams2.default)({ url: url });
	}
	
	var GooglePlusShareButton = (0, _createShareButton2.default)('googlePlus', googlePlusLink, undefined, undefined, {
	  windowWidth: 550,
	  windowHeight: 400
	});
	
	exports.default = GooglePlusShareButton;

/***/ }),
/* 1896 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _stringify = __webpack_require__(502);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _ieDetection = __webpack_require__(540);
	
	var _ieDetection2 = _interopRequireDefault(_ieDetection);
	
	var _shareCountFactory = __webpack_require__(182);
	
	var _shareCountFactory2 = _interopRequireDefault(_shareCountFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getGooglePlusShareCount(shareUrl, callback) {
	  if ((0, _ieDetection2.default)(11)) {
	    /* eslint-disable no-console */
	    console.error('Google plus share count is not supported in <=IE10!');
	    /* eslint-enable no-console */
	    return;
	  }
	
	  var xhr = new XMLHttpRequest();
	
	  xhr.open('POST', 'https://clients6.google.com/rpc');
	  xhr.setRequestHeader('Accept', 'application/json');
	  xhr.setRequestHeader('Content-type', 'application/json;charset=UTF-8');
	
	  xhr.send((0, _stringify2.default)({
	    method: 'pos.plusones.get',
	    id: 'p',
	    params: {
	      nolog: true,
	      id: shareUrl,
	      source: 'widget',
	      userId: '@viewer',
	      groupId: '@self'
	    },
	    jsonrpc: '2.0',
	    key: 'p',
	    apiVersion: 'v1'
	  }));
	
	  xhr.onload = function onSuccessdata() {
	    var data = JSON.parse(this.responseText);
	    callback(data ? data.result.metadata.globalCounts.count : undefined);
	  };
	
	  xhr.onerror = function onErrordata() {};
	}
	
	exports.default = (0, _shareCountFactory2.default)(getGooglePlusShareCount);

/***/ }),
/* 1897 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var LineIcon = (0, _iconFactory2.default)('line', {
	  icon: 'M52.62 30.138c0 3.693-1.432 7.019-4.42 10.296h.001c-4.326 4.979-14 11.044-16.201 11.972-2.2.927-1.876-.591-1.786-1.112l.294-1.765c.069-.527.142-1.343-.066-1.865-.232-.574-1.146-.872-1.817-1.016-9.909-1.31-17.245-8.238-17.245-16.51 0-9.226 9.251-16.733 20.62-16.733 11.37 0 20.62 7.507 20.62 16.733zM27.81 25.68h-1.446a.402.402 0 0 0-.402.401v8.985c0 .221.18.4.402.4h1.446a.401.401 0 0 0 .402-.4v-8.985a.402.402 0 0 0-.402-.401zm9.956 0H36.32a.402.402 0 0 0-.402.401v5.338L31.8 25.858a.39.39 0 0 0-.031-.04l-.002-.003-.024-.025-.008-.007a.313.313 0 0 0-.032-.026.255.255 0 0 1-.021-.014l-.012-.007-.021-.012-.013-.006-.023-.01-.013-.005-.024-.008-.014-.003-.023-.005-.017-.002-.021-.003-.021-.002h-1.46a.402.402 0 0 0-.402.401v8.985c0 .221.18.4.402.4h1.446a.401.401 0 0 0 .402-.4v-5.337l4.123 5.568c.028.04.063.072.101.099l.004.003a.236.236 0 0 0 .025.015l.012.006.019.01a.154.154 0 0 1 .019.008l.012.004.028.01.005.001a.442.442 0 0 0 .104.013h1.446a.4.4 0 0 0 .401-.4v-8.985a.402.402 0 0 0-.401-.401zm-13.442 7.537h-3.93v-7.136a.401.401 0 0 0-.401-.401h-1.447a.4.4 0 0 0-.401.401v8.984a.392.392 0 0 0 .123.29c.072.068.17.111.278.111h5.778a.4.4 0 0 0 .401-.401v-1.447a.401.401 0 0 0-.401-.401zm21.429-5.287c.222 0 .401-.18.401-.402v-1.446a.401.401 0 0 0-.401-.402h-5.778a.398.398 0 0 0-.279.113l-.005.004-.006.008a.397.397 0 0 0-.111.276v8.984c0 .108.043.206.112.278l.005.006a.401.401 0 0 0 .284.117h5.778a.4.4 0 0 0 .401-.401v-1.447a.401.401 0 0 0-.401-.401h-3.93v-1.519h3.93c.222 0 .401-.18.401-.402V29.85a.401.401 0 0 0-.401-.402h-3.93V27.93h3.93z',
	  mask: '',
	  color: '#00b800'
	});
	
	exports.default = LineIcon;

/***/ }),
/* 1898 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function lineLink(url, _ref) {
	  var title = _ref.title;
	
	  (0, _assert2.default)(url, 'line.url');
	
	  return 'https://social-plugins.line.me/lineit/share' + (0, _objectToGetParams2.default)({
	    url: url,
	    text: title
	  });
	}
	
	var LineShareButton = (0, _createShareButton2.default)('line', lineLink, function (props) {
	  return {
	    title: props.title
	  };
	}, {
	  title: _propTypes2.default.string
	}, {
	  windowWidth: 500,
	  windowHeight: 500
	});
	
	exports.default = LineShareButton;

/***/ }),
/* 1899 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var LinkedinIcon = (0, _iconFactory2.default)('linkedin', {
	  icon: 'M20.4,44h5.4V26.6h-5.4V44z M23.1,18c-1.7,0-3.1,1.4-3.1,3.1c0,1.7,1.4,3.1,3.1,3.1 c1.7,0,3.1-1.4,3.1-3.1C26.2,19.4,24.8,18,23.1,18z M39.5,26.2c-2.6,0-4.4,1.4-5.1,2.8h-0.1v-2.4h-5.2V44h5.4v-8.6 c0-2.3,0.4-4.5,3.2-4.5c2.8,0,2.8,2.6,2.8,4.6V44H46v-9.5C46,29.8,45,26.2,39.5,26.2z',
	  mask: 'M0,0v64h64V0H0z M25.8,44h-5.4V26.6h5.4V44z M23.1,24.3c-1.7,0-3.1-1.4-3.1-3.1c0-1.7,1.4-3.1,3.1-3.1 c1.7,0,3.1,1.4,3.1,3.1C26.2,22.9,24.8,24.3,23.1,24.3z M46,44h-5.4v-8.4c0-2,0-4.6-2.8-4.6c-2.8,0-3.2,2.2-3.2,4.5V44h-5.4V26.6 h5.2V29h0.1c0.7-1.4,2.5-2.8,5.1-2.8c5.5,0,6.5,3.6,6.5,8.3V44z',
	  color: '#007fb1'
	});
	
	exports.default = LinkedinIcon;

/***/ }),
/* 1900 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function linkedinLink(url, _ref) {
	  var title = _ref.title,
	      description = _ref.description;
	
	  (0, _assert2.default)(url, 'linkedin.url');
	
	  return 'https://linkedin.com/shareArticle' + (0, _objectToGetParams2.default)({
	    url: url,
	    title: title,
	    summary: description
	  });
	}
	
	var LinkedinShareButton = (0, _createShareButton2.default)('linkedin', linkedinLink, function (props) {
	  return {
	    title: props.title,
	    description: props.description
	  };
	}, {
	  title: _propTypes2.default.string,
	  description: _propTypes2.default.string
	}, {
	  windowWidth: 750,
	  windowHeight: 600
	});
	
	exports.default = LinkedinShareButton;

/***/ }),
/* 1901 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsonp = __webpack_require__(190);
	
	var _jsonp2 = _interopRequireDefault(_jsonp);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _shareCountFactory = __webpack_require__(182);
	
	var _shareCountFactory2 = _interopRequireDefault(_shareCountFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getLinkedinShareCount(shareUrl, callback) {
	  var url = 'https://www.linkedin.com/countserv/count/share';
	
	  return (0, _jsonp2.default)(url + (0, _objectToGetParams2.default)({
	    url: shareUrl,
	    format: 'jsonp'
	  }), function (err, data) {
	    callback(data ? data.count : undefined);
	  });
	}
	
	exports.default = (0, _shareCountFactory2.default)(getLinkedinShareCount);

/***/ }),
/* 1902 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var LivejournalIcon = (0, _iconFactory2.default)('livejournal', {
	  icon: 'M18.3407821,28.1764706 L21.9441341,31.789916 L33.0055865,42.882353 C33.0055865,42.882353 33.0893855,42.9663866 33.0893855,42.9663866 L46.6648046,47 C46.6648046,47 46.6648046,47 46.7486034,47 C46.8324022,47 46.8324022,47 46.9162012,46.9159664 C47,46.8319327 47,46.8319327 47,46.7478991 L42.9776536,33.1344537 C42.9776536,33.1344537 42.9776536,33.1344537 42.8938548,33.0504202 L31.1620111,21.3697479 L31.1620111,21.3697479 L28.1452514,18.2605042 C27.3072626,17.4201681 26.5530726,17 25.7150838,17 C24.2905028,17 23.0335195,18.3445378 21.5251397,19.8571429 C21.273743,20.1092437 20.9385475,20.4453781 20.6871508,20.697479 C20.3519553,21.0336134 20.1005586,21.2857143 19.849162,21.5378151 C18.3407821,22.9663866 17.0837989,24.2268908 17,25.7394958 C17.0837989,26.4957983 17.5027933,27.3361345 18.3407821,28.1764706 Z M39.9012319,39.6134454 C39.7336341,39.4453781 39.4822374,37.6806724 40.2364275,36.8403362 C40.9906174,36.0840337 41.6610084,36 42.1638017,36 C42.3313995,36 42.4989973,36 42.5827961,36 L44.8453659,43.5630253 L43.5883828,44.8235295 L36.0464833,42.5546218 C35.9626843,42.2184874 35.8788855,41.2100841 36.8844722,40.2016807 C37.2196676,39.8655463 37.8900587,39.6134454 38.5604498,39.6134454 C39.147042,39.6134454 39.5660364,39.7815126 39.5660364,39.7815126 C39.6498353,39.8655463 39.8174331,39.8655463 39.8174331,39.7815126 C39.9850307,39.7815126 39.9850307,39.697479 39.9012319,39.6134454 Z',
	  mask: 'M0,0v64h64V0H0z M35.4,47c-6.5,0.1-9-4.7-9-8v-9.8h-3v-3.9c4.6-1.6,5.6-5.7,5.9-8.1c0-0.2,0.1-0.2,0.2-0.2 c0.1,0,4.4,0,4.4,0v7.6h6v4.5h-6v9.3c0,1.3,0.5,3,2.9,3c0.8,0,1.9-0.3,2.4-0.5l1.4,4.3C40.1,46,37.6,47,35.4,47z',
	  color: '#21A5D8'
	});
	
	exports.default = LivejournalIcon;

/***/ }),
/* 1903 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function livejournalLink(url, _ref) {
	  var title = _ref.title,
	      description = _ref.description;
	
	  (0, _assert2.default)(url, 'livejournal.url');
	
	  return 'https://www.livejournal.com/update.bml' + (0, _objectToGetParams2.default)({
	    subject: title,
	    event: description
	  });
	}
	
	var LivejournalShareButton = (0, _createShareButton2.default)('livejournal', livejournalLink, function (props) {
	  return {
	    title: props.title,
	    description: props.description
	  };
	}, {
	  title: _propTypes2.default.string,
	  description: _propTypes2.default.string
	}, {
	  windowWidth: 660,
	  windowHeight: 460
	});
	
	exports.default = LivejournalShareButton;

/***/ }),
/* 1904 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var MailruIcon = (0, _iconFactory2.default)('mailru', {
	  icon: 'M39.7107745,17 C41.6619755,17 43.3204965,18.732852 43.3204965,21.0072202 C43.3204965,23.2815885 41.7595357,25.0144404 39.7107745,25.0144404 C37.7595732,25.0144404 36.1010522,23.2815885 36.1010522,21.0072202 C36.1010522,18.732852 37.7595732,17 39.7107745,17 Z M24.3938451,17 C26.3450463,17 28.0035672,18.732852 28.0035672,21.0072202 C28.0035672,23.2815885 26.4426063,25.0144404 24.3938451,25.0144404 C22.4426439,25.0144404 20.7841229,23.2815885 20.7841229,21.0072202 C20.7841229,18.732852 22.4426439,17 24.3938451,17 Z M51.9057817,43.4259928 C51.7106617,44.0758123 51.4179815,44.6173285 50.9301812,44.9422383 C50.637501,45.1588448 50.2472607,45.267148 49.8570205,45.267148 C49.07654,45.267148 48.3936197,44.833935 48.0033795,44.0758123 L46.2472985,40.7184115 L45.759498,41.2599278 C42.5400162,44.9422383 37.466893,47 32.0035297,47 C26.5401664,47 21.5646034,44.9422383 18.2475614,41.2599278 L17.7597611,40.7184115 L16.00368,44.0758123 C15.6134398,44.833935 14.9305194,45.267148 14.1500389,45.267148 C13.7597986,45.267148 13.3695584,45.1588448 13.0768782,44.9422383 C12.0037176,44.2924187 11.7110374,42.7761733 12.2963978,41.5848375 L16.7841605,33.0288807 C17.1744007,32.270758 17.8573211,31.8375453 18.6378016,31.8375453 C19.0280418,31.8375453 19.4182821,31.9458485 19.7109623,32.1624548 C20.7841229,32.8122743 21.0768031,34.3285197 20.4914427,35.5198555 L20.1012025,36.2779783 L20.2963226,36.602888 C22.4426439,39.9602888 27.0279667,42.234657 31.9059697,42.234657 C36.7839727,42.234657 41.3692955,40.068592 43.5156167,36.602888 L43.7107367,36.2779783 L43.3204965,35.6281587 C43.0278165,35.0866425 42.9302562,34.436823 43.1253765,33.7870035 C43.3204965,33.137184 43.6131767,32.5956678 44.100977,32.270758 C44.3936572,32.0541515 44.7838975,31.9458485 45.1741377,31.9458485 C45.9546182,31.9458485 46.6375385,32.3790613 47.0277787,33.137184 L51.5155415,41.6931408 C52.003342,42.234657 52.100902,42.8844765 51.9057817,43.4259928 Z',
	  mask: 'M0,0v64h64V0H0z M35.4,47c-6.5,0.1-9-4.7-9-8v-9.8h-3v-3.9c4.6-1.6,5.6-5.7,5.9-8.1c0-0.2,0.1-0.2,0.2-0.2 c0.1,0,4.4,0,4.4,0v7.6h6v4.5h-6v9.3c0,1.3,0.5,3,2.9,3c0.8,0,1.9-0.3,2.4-0.5l1.4,4.3C40.1,46,37.6,47,35.4,47z',
	  color: '#168DE2'
	});
	
	exports.default = MailruIcon;

/***/ }),
/* 1905 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function mailruLink(url, _ref) {
	  var title = _ref.title,
	      description = _ref.description,
	      image = _ref.image;
	
	  (0, _assert2.default)(url, 'mailru.url');
	
	  return 'https://connect.mail.ru/share' + (0, _objectToGetParams2.default)({
	    url: url,
	    title: title,
	    description: description,
	    imageurl: image
	  });
	}
	
	var MailruShareButton = (0, _createShareButton2.default)('mailru', mailruLink, function (props) {
	  return {
	    title: props.title,
	    description: props.description,
	    image: props.image
	  };
	}, {
	  title: _propTypes2.default.string,
	  description: _propTypes2.default.string,
	  image: _propTypes2.default.string
	}, {
	  windowWidth: 660,
	  windowHeight: 460
	});
	
	exports.default = MailruShareButton;

/***/ }),
/* 1906 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var OKIcon = (0, _iconFactory2.default)('ok', {
	  icon: 'M39,30c-1,0-3,2-7,2s-6-2-7-2c-1.1,0-2,0.9-2,2c0,1,0.6,1.5,1,1.7c1.2,0.7,5,2.3,5,2.3l-4.3,5.4   c0,0-0.8,0.9-0.8,1.6c0,1.1,0.9,2,2,2c1,0,1.5-0.7,1.5-0.7S32,39,32,39c0,0,4.5,5.3,4.5,5.3S37,45,38,45c1.1,0,2-0.9,2-2   c0-0.6-0.8-1.6-0.8-1.6L35,36c0,0,3.8-1.6,5-2.3c0.4-0.3,1-0.7,1-1.7C41,30.9,40.1,30,39,30z M32,15c-3.9,0-7,3.1-7,7s3.1,7,7,7c3.9,0,7-3.1,7-7S35.9,15,32,15z M32,25.5   c-1.9,0-3.5-1.6-3.5-3.5c0-1.9,1.6-3.5,3.5-3.5c1.9,0,3.5,1.6,3.5,3.5C35.5,23.9,33.9,22.5,35,22.5z ',
	  mask: 'M45,1H5C2.8,1,1,2.8,1,5v40c0,2.2,1.8,4,4,4h40c2.2,0,4-1.8,4-4V5C49,2.8,47.2,1,45,1z',
	  color: '#f2720c'
	});
	
	exports.default = OKIcon;

/***/ }),
/* 1907 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function okLink(url, _ref) {
	  var title = _ref.title,
	      description = _ref.description,
	      image = _ref.image;
	
	  (0, _assert2.default)(url, 'ok.url');
	
	  return 'https://connect.ok.ru/offer' + (0, _objectToGetParams2.default)({
	    url: url,
	    title: title,
	    description: description,
	    imageUrl: image
	  });
	}
	
	var OKShareButton = (0, _createShareButton2.default)('ok', okLink, function (props) {
	  return {
	    title: props.title,
	    description: props.description,
	    image: props.image
	  };
	}, {
	  title: _propTypes2.default.string,
	  description: _propTypes2.default.string,
	  image: _propTypes2.default.string
	}, {
	  windowWidth: 660,
	  windowHeight: 460
	});
	
	exports.default = OKShareButton;

/***/ }),
/* 1908 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsonp = __webpack_require__(190);
	
	var _jsonp2 = _interopRequireDefault(_jsonp);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _shareCountFactory = __webpack_require__(182);
	
	var _shareCountFactory2 = _interopRequireDefault(_shareCountFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getOKShareCount(shareUrl, callback) {
	  if (!window.OK) {
	    window.OK = {
	      Share: {
	        count: function count(index, _count) {
	          return window.OK.callbacks[index](_count);
	        }
	      },
	      callbacks: []
	    };
	  }
	
	  var url = 'https://connect.ok.ru/dk';
	  var index = window.OK.callbacks.length;
	
	  window.ODKL = {
	    updateCount: function updateCount(a, b) {
	      window.OK.callbacks[index](b);
	    }
	  };
	  window.OK.callbacks.push(callback);
	
	  return (0, _jsonp2.default)(url + (0, _objectToGetParams2.default)({
	    'st.cmd': 'extLike',
	    uid: 'odklcnt0',
	    ref: shareUrl
	  }));
	}
	
	exports.default = (0, _shareCountFactory2.default)(getOKShareCount);

/***/ }),
/* 1909 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PinterestIcon = (0, _iconFactory2.default)('pinterest', {
	  icon: 'M32,16c-8.8,0-16,7.2-16,16c0,6.6,3.9,12.2,9.6,14.7c0-1.1,0-2.5,0.3-3.7 c0.3-1.3,2.1-8.7,2.1-8.7s-0.5-1-0.5-2.5c0-2.4,1.4-4.1,3.1-4.1c1.5,0,2.2,1.1,2.2,2.4c0,1.5-0.9,3.7-1.4,5.7 c-0.4,1.7,0.9,3.1,2.5,3.1c3,0,5.1-3.9,5.1-8.5c0-3.5-2.4-6.1-6.7-6.1c-4.9,0-7.9,3.6-7.9,7.7c0,1.4,0.4,2.4,1.1,3.1 c0.3,0.3,0.3,0.5,0.2,0.9c-0.1,0.3-0.3,1-0.3,1.3c-0.1,0.4-0.4,0.6-0.8,0.4c-2.2-0.9-3.3-3.4-3.3-6.1c0-4.5,3.8-10,11.4-10 c6.1,0,10.1,4.4,10.1,9.2c0,6.3-3.5,11-8.6,11c-1.7,0-3.4-0.9-3.9-2c0,0-0.9,3.7-1.1,4.4c-0.3,1.2-1,2.5-1.6,3.4 c1.4,0.4,3,0.7,4.5,0.7c8.8,0,16-7.2,16-16C48,23.2,40.8,16,32,16z',
	  mask: 'M0,0v64h64V0H0z M32,48c-1.6,0-3.1-0.2-4.5-0.7c0.6-1,1.3-2.2,1.6-3.4c0.2-0.7,1.1-4.4,1.1-4.4 c0.6,1.1,2.2,2,3.9,2c5.1,0,8.6-4.7,8.6-11c0-4.7-4-9.2-10.1-9.2c-7.6,0-11.4,5.5-11.4,10c0,2.8,1,5.2,3.3,6.1 c0.4,0.1,0.7,0,0.8-0.4c0.1-0.3,0.2-1,0.3-1.3c0.1-0.4,0.1-0.5-0.2-0.9c-0.6-0.8-1.1-1.7-1.1-3.1c0-4,3-7.7,7.9-7.7 c4.3,0,6.7,2.6,6.7,6.1c0,4.6-2,8.5-5.1,8.5c-1.7,0-2.9-1.4-2.5-3.1c0.5-2,1.4-4.2,1.4-5.7c0-1.3-0.7-2.4-2.2-2.4 c-1.7,0-3.1,1.8-3.1,4.1c0,1.5,0.5,2.5,0.5,2.5s-1.8,7.4-2.1,8.7c-0.3,1.2-0.3,2.6-0.3,3.7C19.9,44.2,16,38.6,16,32 c0-8.8,7.2-16,16-16c8.8,0,16,7.2,16,16C48,40.8,40.8,48,32,48z',
	  color: '#cb2128'
	});
	
	exports.default = PinterestIcon;

/***/ }),
/* 1910 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function pinterestLink(url, _ref) {
	  var media = _ref.media,
	      description = _ref.description;
	
	  (0, _assert2.default)(url, 'pinterest.url');
	  (0, _assert2.default)(media, 'pinterest.media');
	
	  return 'https://pinterest.com/pin/create/button/' + (0, _objectToGetParams2.default)({
	    url: url,
	    media: media,
	    description: description
	  });
	}
	
	var PinterestShareButton = (0, _createShareButton2.default)('pinterest', pinterestLink, function (props) {
	  return {
	    media: props.media,
	    description: props.description
	  };
	}, {
	  media: _propTypes2.default.string.isRequired,
	  description: _propTypes2.default.string
	}, {
	  windowWidth: 1000,
	  windowHeight: 730
	});
	
	exports.default = PinterestShareButton;

/***/ }),
/* 1911 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsonp = __webpack_require__(190);
	
	var _jsonp2 = _interopRequireDefault(_jsonp);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _shareCountFactory = __webpack_require__(182);
	
	var _shareCountFactory2 = _interopRequireDefault(_shareCountFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getPinterestShareCount(shareUrl, callback) {
	  var url = 'https://api.pinterest.com/v1/urls/count.json';
	
	  return (0, _jsonp2.default)(url + (0, _objectToGetParams2.default)({
	    url: shareUrl
	  }), function (err, data) {
	    callback(data ? data.count : undefined);
	  });
	}
	
	exports.default = (0, _shareCountFactory2.default)(getPinterestShareCount);

/***/ }),
/* 1912 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var RedditIcon = (0, _iconFactory2.default)('reddit', {
	  icon: 'm 52.8165,31.942362 c 0,-2.4803 -2.0264,-4.4965 -4.5169,-4.4965 -1.2155,0 -2.3171,0.4862 -3.128,1.2682 -3.077,-2.0247 -7.2403,-3.3133 -11.8507,-3.4782 l 2.5211,-7.9373 6.8272,1.5997 -0.0102,0.0986 c 0,2.0281 1.6575,3.6771 3.6958,3.6771 2.0366,0 3.6924,-1.649 3.6924,-3.6771 0,-2.0281 -1.6575,-3.6788 -3.6924,-3.6788 -1.564,0 -2.8968,0.9758 -3.4357,2.3443 l -7.3593,-1.7255 c -0.3213,-0.0782 -0.6477,0.1071 -0.748,0.4233 L 32,25.212062 c -4.8246,0.0578 -9.1953,1.3566 -12.41,3.4425 -0.8058,-0.7446 -1.8751,-1.2104 -3.0583,-1.2104 -2.4905,0 -4.5152,2.0179 -4.5152,4.4982 0,1.649 0.9061,3.0787 2.2389,3.8607 -0.0884,0.4794 -0.1462,0.9639 -0.1462,1.4569 0,6.6487 8.1736,12.0581 18.2223,12.0581 10.0487,0 18.224,-5.4094 18.224,-12.0581 0,-0.4658 -0.0493,-0.9248 -0.1275,-1.377 1.4144,-0.7599 2.3885,-2.2304 2.3885,-3.9406 z m -29.2808,3.0872 c 0,-1.4756 1.207,-2.6775 2.6894,-2.6775 1.4824,0 2.6877,1.2019 2.6877,2.6775 0,1.4756 -1.2053,2.6758 -2.6877,2.6758 -1.4824,0 -2.6894,-1.2002 -2.6894,-2.6758 z m 15.4037,7.9373 c -1.3549,1.3481 -3.4816,2.0043 -6.5008,2.0043 l -0.0221,-0.0051 -0.0221,0.0051 c -3.0209,0 -5.1476,-0.6562 -6.5008,-2.0043 -0.2465,-0.2448 -0.2465,-0.6443 0,-0.8891 0.2465,-0.2465 0.6477,-0.2465 0.8942,0 1.105,1.0999 2.9393,1.6337 5.6066,1.6337 l 0.0221,0.0051 0.0221,-0.0051 c 2.6673,0 4.5016,-0.5355 5.6066,-1.6354 0.2465,-0.2465 0.6477,-0.2448 0.8942,0 0.2465,0.2465 0.2465,0.6443 0,0.8908 z m -0.3213,-5.2615 c -1.4824,0 -2.6877,-1.2002 -2.6877,-2.6758 0,-1.4756 1.2053,-2.6775 2.6877,-2.6775 1.4824,0 2.6877,1.2019 2.6877,2.6775 0,1.4756 -1.2053,2.6758 -2.6877,2.6758 z',
	  color: '#5f99cf'
	});
	
	exports.default = RedditIcon;

/***/ }),
/* 1913 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function redditLink(url, _ref) {
	  var title = _ref.title;
	
	  (0, _assert2.default)(url, 'reddit.url');
	
	  return 'https://www.reddit.com/submit' + (0, _objectToGetParams2.default)({
	    url: url,
	    title: title
	  });
	}
	
	var RedditShareButton = (0, _createShareButton2.default)('reddit', redditLink, function (props) {
	  return {
	    title: props.title
	  };
	}, {
	  title: _propTypes2.default.string
	}, {
	  windowWidth: 660,
	  windowHeight: 460
	});
	
	exports.default = RedditShareButton;

/***/ }),
/* 1914 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsonp = __webpack_require__(190);
	
	var _jsonp2 = _interopRequireDefault(_jsonp);
	
	var _shareCountFactory = __webpack_require__(182);
	
	var _shareCountFactory2 = _interopRequireDefault(_shareCountFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getRedditShareCount(shareUrl, callback) {
	  var endpoint = 'https://www.reddit.com/api/info.json?limit=1&url=' + shareUrl;
	
	  (0, _jsonp2.default)(endpoint, { param: 'jsonp' }, function (err, response) {
	    callback(!err && response && response.data && response.data.children.length > 0 && response.data.children[0].data.score ? response.data.children[0].data.score : undefined);
	  });
	}
	
	exports.default = (0, _shareCountFactory2.default)(getRedditShareCount);

/***/ }),
/* 1915 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TelegramIcon = (0, _iconFactory2.default)('telegram', {
	  icon: 'm45.90873,15.44335c-0.6901,-0.0281 -1.37668,0.14048 -1.96142,0.41265c-0.84989,0.32661 -8.63939,3.33986 -16.5237,6.39174c-3.9685,1.53296 -7.93349,3.06593 -10.98537,4.24067c-3.05012,1.1765 -5.34694,2.05098 -5.4681,2.09312c-0.80775,0.28096 -1.89996,0.63566 -2.82712,1.72788c-0.23354,0.27218 -0.46884,0.62161 -0.58825,1.10275c-0.11941,0.48114 -0.06673,1.09222 0.16682,1.5716c0.46533,0.96052 1.25376,1.35737 2.18443,1.71383c3.09051,0.99037 6.28638,1.93508 8.93263,2.8236c0.97632,3.44171 1.91401,6.89571 2.84116,10.34268c0.30554,0.69185 0.97105,0.94823 1.65764,0.95525l-0.00351,0.03512c0,0 0.53908,0.05268 1.06412,-0.07375c0.52679,-0.12292 1.18879,-0.42846 1.79109,-0.99212c0.662,-0.62161 2.45836,-2.38812 3.47683,-3.38552l7.6736,5.66477l0.06146,0.03512c0,0 0.84989,0.59703 2.09312,0.68132c0.62161,0.04214 1.4399,-0.07726 2.14229,-0.59176c0.70766,-0.51626 1.1765,-1.34683 1.396,-2.29506c0.65673,-2.86224 5.00979,-23.57745 5.75257,-27.00686l-0.02107,0.08077c0.51977,-1.93157 0.32837,-3.70159 -0.87096,-4.74991c-0.60054,-0.52152 -1.2924,-0.7498 -1.98425,-0.77965l0,0.00176zm-0.2072,3.29069c0.04741,0.0439 0.0439,0.0439 0.00351,0.04741c-0.01229,-0.00351 0.14048,0.2072 -0.15804,1.32576l-0.01229,0.04214l-0.00878,0.03863c-0.75858,3.50668 -5.15554,24.40802 -5.74203,26.96472c-0.08077,0.34417 -0.11414,0.31959 -0.09482,0.29852c-0.1756,-0.02634 -0.50045,-0.16506 -0.52679,-0.1756l-13.13468,-9.70175c4.4988,-4.33199 9.09945,-8.25307 13.744,-12.43229c0.8218,-0.41265 0.68483,-1.68573 -0.29852,-1.70681c-1.04305,0.24584 -1.92279,0.99564 -2.8798,1.47502c-5.49971,3.2626 -11.11882,6.13186 -16.55882,9.49279c-2.792,-0.97105 -5.57873,-1.77704 -8.15298,-2.57601c2.2336,-0.89555 4.00889,-1.55579 5.75608,-2.23009c3.05188,-1.1765 7.01687,-2.7042 10.98537,-4.24067c7.94051,-3.06944 15.92667,-6.16346 16.62028,-6.43037l0.05619,-0.02283l0.05268,-0.02283c0.19316,-0.0878 0.30378,-0.09658 0.35471,-0.10009c0,0 -0.01756,-0.05795 -0.00351,-0.04566l-0.00176,0zm-20.91715,22.0638l2.16687,1.60145c-0.93418,0.91311 -1.81743,1.77353 -2.45485,2.38812l0.28798,-3.98957',
	  mask: 'M0,0v64h64V0H0z M32,48c-1.6,0-3.1-0.2-4.5-0.7c0.6-1,1.3-2.2,1.6-3.4c0.2-0.7,1.1-4.4,1.1-4.4 c0.6,1.1,2.2,2,3.9,2c5.1,0,8.6-4.7,8.6-11c0-4.7-4-9.2-10.1-9.2c-7.6,0-11.4,5.5-11.4,10c0,2.8,1,5.2,3.3,6.1 c0.4,0.1,0.7,0,0.8-0.4c0.1-0.3,0.2-1,0.3-1.3c0.1-0.4,0.1-0.5-0.2-0.9c-0.6-0.8-1.1-1.7-1.1-3.1c0-4,3-7.7,7.9-7.7 c4.3,0,6.7,2.6,6.7,6.1c0,4.6-2,8.5-5.1,8.5c-1.7,0-2.9-1.4-2.5-3.1c0.5-2,1.4-4.2,1.4-5.7c0-1.3-0.7-2.4-2.2-2.4 c-1.7,0-3.1,1.8-3.1,4.1c0,1.5,0.5,2.5,0.5,2.5s-1.8,7.4-2.1,8.7c-0.3,1.2-0.3,2.6-0.3,3.7C19.9,44.2,16,38.6,16,32 c0-8.8,7.2-16,16-16c8.8,0,16,7.2,16,16C48,40.8,40.8,48,32,48z',
	  color: '#37aee2'
	});
	
	exports.default = TelegramIcon;

/***/ }),
/* 1916 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function telegramLink(url, _ref) {
	  var title = _ref.title;
	
	  (0, _assert2.default)(url, 'telegram.url');
	
	  return 'https://telegram.me/share/' + (0, _objectToGetParams2.default)({
	    url: url,
	    text: title
	  });
	}
	
	var TelegramShareButton = (0, _createShareButton2.default)('telegram', telegramLink, function (props) {
	  return {
	    title: props.title,
	    via: props.via
	  };
	}, {
	  title: _propTypes2.default.string,
	  via: _propTypes2.default.string
	}, {
	  windowWidth: 550,
	  windowHeight: 400
	});
	
	exports.default = TelegramShareButton;

/***/ }),
/* 1917 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TumblrIcon = (0, _iconFactory2.default)('tumblr', {
	  icon: 'M39.2,41c-0.6,0.3-1.6,0.5-2.4,0.5c-2.4,0.1-2.9-1.7-2.9-3v-9.3h6v-4.5h-6V17c0,0-4.3,0-4.4,0 c-0.1,0-0.2,0.1-0.2,0.2c-0.3,2.3-1.4,6.4-5.9,8.1v3.9h3V39c0,3.4,2.5,8.1,9,8c2.2,0,4.7-1,5.2-1.8L39.2,41z',
	  mask: 'M0,0v64h64V0H0z M35.4,47c-6.5,0.1-9-4.7-9-8v-9.8h-3v-3.9c4.6-1.6,5.6-5.7,5.9-8.1c0-0.2,0.1-0.2,0.2-0.2 c0.1,0,4.4,0,4.4,0v7.6h6v4.5h-6v9.3c0,1.3,0.5,3,2.9,3c0.8,0,1.9-0.3,2.4-0.5l1.4,4.3C40.1,46,37.6,47,35.4,47z',
	  color: '#2c4762'
	});
	
	exports.default = TumblrIcon;

/***/ }),
/* 1918 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function tumblrLink(url, _ref) {
	  var title = _ref.title,
	      caption = _ref.caption,
	      tags = _ref.tags,
	      posttype = _ref.posttype;
	
	  (0, _assert2.default)(url, 'tumblr.url');
	
	  return 'https://www.tumblr.com/widgets/share/tool' + (0, _objectToGetParams2.default)({
	    canonicalUrl: url,
	    title: title,
	    caption: caption,
	    tags: tags,
	    posttype: posttype
	  });
	}
	
	var TumblrShareButton = (0, _createShareButton2.default)('tumblr', tumblrLink, function (props) {
	  return {
	    title: props.title,
	    tags: props.tags.join(','),
	    caption: props.caption,
	    posttype: props.posttype
	  };
	}, {
	  title: _propTypes2.default.string,
	  caption: _propTypes2.default.string,
	  posttype: _propTypes2.default.string,
	  tags: _propTypes2.default.arrayOf(_propTypes2.default.string)
	}, {
	  tags: [],
	  posttype: 'link',
	  windowWidth: 660,
	  windowHeight: 460
	});
	
	exports.default = TumblrShareButton;

/***/ }),
/* 1919 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsonp = __webpack_require__(190);
	
	var _jsonp2 = _interopRequireDefault(_jsonp);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _shareCountFactory = __webpack_require__(182);
	
	var _shareCountFactory2 = _interopRequireDefault(_shareCountFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getTumblrShareCount(shareUrl, callback) {
	  var endpoint = 'https://api.tumblr.com/v2/share/stats';
	
	  return (0, _jsonp2.default)(endpoint + (0, _objectToGetParams2.default)({
	    url: shareUrl
	  }), function (err, data) {
	    callback(data ? data.note_count : undefined);
	  });
	}
	
	exports.default = (0, _shareCountFactory2.default)(getTumblrShareCount);

/***/ }),
/* 1920 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var TwitterIcon = (0, _iconFactory2.default)('twitter', {
	  icon: 'M48,22.1c-1.2,0.5-2.4,0.9-3.8,1c1.4-0.8,2.4-2.1,2.9-3.6c-1.3,0.8-2.7,1.3-4.2,1.6 C41.7,19.8,40,19,38.2,19c-3.6,0-6.6,2.9-6.6,6.6c0,0.5,0.1,1,0.2,1.5c-5.5-0.3-10.3-2.9-13.5-6.9c-0.6,1-0.9,2.1-0.9,3.3 c0,2.3,1.2,4.3,2.9,5.5c-1.1,0-2.1-0.3-3-0.8c0,0,0,0.1,0,0.1c0,3.2,2.3,5.8,5.3,6.4c-0.6,0.1-1.1,0.2-1.7,0.2c-0.4,0-0.8,0-1.2-0.1 c0.8,2.6,3.3,4.5,6.1,4.6c-2.2,1.8-5.1,2.8-8.2,2.8c-0.5,0-1.1,0-1.6-0.1c2.9,1.9,6.4,2.9,10.1,2.9c12.1,0,18.7-10,18.7-18.7 c0-0.3,0-0.6,0-0.8C46,24.5,47.1,23.4,48,22.1z',
	  mask: 'M0,0v64h64V0H0z M44.7,25.5c0,0.3,0,0.6,0,0.8C44.7,35,38.1,45,26.1,45c-3.7,0-7.2-1.1-10.1-2.9 c0.5,0.1,1,0.1,1.6,0.1c3.1,0,5.9-1,8.2-2.8c-2.9-0.1-5.3-2-6.1-4.6c0.4,0.1,0.8,0.1,1.2,0.1c0.6,0,1.2-0.1,1.7-0.2 c-3-0.6-5.3-3.3-5.3-6.4c0,0,0-0.1,0-0.1c0.9,0.5,1.9,0.8,3,0.8c-1.8-1.2-2.9-3.2-2.9-5.5c0-1.2,0.3-2.3,0.9-3.3 c3.2,4,8.1,6.6,13.5,6.9c-0.1-0.5-0.2-1-0.2-1.5c0-3.6,2.9-6.6,6.6-6.6c1.9,0,3.6,0.8,4.8,2.1c1.5-0.3,2.9-0.8,4.2-1.6 c-0.5,1.5-1.5,2.8-2.9,3.6c1.3-0.2,2.6-0.5,3.8-1C47.1,23.4,46,24.5,44.7,25.5z',
	  color: '#00aced'
	});
	
	exports.default = TwitterIcon;

/***/ }),
/* 1921 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function twitterLink(url, _ref) {
	  var title = _ref.title,
	      via = _ref.via,
	      _ref$hashtags = _ref.hashtags,
	      hashtags = _ref$hashtags === undefined ? [] : _ref$hashtags;
	
	  (0, _assert2.default)(url, 'twitter.url');
	  (0, _assert2.default)(Array.isArray(hashtags), 'twitter.hashtags is not an array');
	
	  return 'https://twitter.com/share' + (0, _objectToGetParams2.default)({
	    url: url,
	    text: title,
	    via: via,
	    hashtags: hashtags.join(',')
	  });
	}
	
	var TwitterShareButton = (0, _createShareButton2.default)('twitter', twitterLink, function (props) {
	  return {
	    hashtags: props.hashtags,
	    title: props.title,
	    via: props.via
	  };
	}, {
	  hashtags: _propTypes2.default.arrayOf(_propTypes2.default.string),
	  title: _propTypes2.default.string,
	  via: _propTypes2.default.string
	}, {
	  windowWidth: 550,
	  windowHeight: 400
	});
	
	exports.default = TwitterShareButton;

/***/ }),
/* 1922 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var VKIcon = (0, _iconFactory2.default)('vk', {
	  icon: 'M44.94,44.84h-0.2c-2.17-.36-3.66-1.92-4.92-3.37C39.1,40.66,38,38.81,36.7,39c-1.85.3-.93,3.52-1.71,4.9-0.62,1.11-3.29.91-5.12,0.71-5.79-.62-8.75-3.77-11.35-7.14A64.13,64.13,0,0,1,11.6,26a10.59,10.59,0,0,1-1.51-4.49C11,20.7,12.56,21,14.11,21c1.31,0,3.36-.29,4.32.2C19,21.46,19.57,23,20,24a37.18,37.18,0,0,0,3.31,5.82c0.56,0.81,1.41,2.35,2.41,2.14s1.06-2.63,1.1-4.18c0-1.77,0-4-.5-4.9S25,22,24.15,21.47c0.73-1.49,2.72-1.63,5.12-1.63,2,0,4.84-.23,5.62,1.12s0.25,3.85.2,5.71c-0.06,2.09-.41,4.25,1,5.21,1.09-.12,1.68-1.2,2.31-2A28,28,0,0,0,41.72,24c0.44-1,.91-2.65,1.71-3,1.21-.47,3.15-0.1,4.92-0.1,1.46,0,4.05-.41,4.52.61,0.39,0.85-.75,3-1.1,3.57a61.88,61.88,0,0,1-4.12,5.61c-0.58.78-1.78,2-1.71,3.27,0.05,0.94,1,1.67,1.71,2.35a33.12,33.12,0,0,1,3.92,4.18c0.47,0.62,1.5,2,1.4,2.76C52.66,45.81,46.88,44.24,44.94,44.84Z',
	  mask: 'M0,0v64h64V0H0z M44.94,44.84h-0.2c-2.17-.36-3.66-1.92-4.92-3.37C39.1,40.66,38,38.81,36.7,39c-1.85.3-.93,3.52-1.71,4.9-0.62,1.11-3.29.91-5.12,0.71-5.79-.62-8.75-3.77-11.35-7.14A64.13,64.13,0,0,1,11.6,26a10.59,10.59,0,0,1-1.51-4.49C11,20.7,12.56,21,14.11,21c1.31,0,3.36-.29,4.32.2C19,21.46,19.57,23,20,24a37.18,37.18,0,0,0,3.31,5.82c0.56,0.81,1.41,2.35,2.41,2.14s1.06-2.63,1.1-4.18c0-1.77,0-4-.5-4.9S25,22,24.15,21.47c0.73-1.49,2.72-1.63,5.12-1.63,2,0,4.84-.23,5.62,1.12s0.25,3.85.2,5.71c-0.06,2.09-.41,4.25,1,5.21,1.09-.12,1.68-1.2,2.31-2A28,28,0,0,0,41.72,24c0.44-1,.91-2.65,1.71-3,1.21-.47,3.15-0.1,4.92-0.1,1.46,0,4.05-.41,4.52.61,0.39,0.85-.75,3-1.1,3.57a61.88,61.88,0,0,1-4.12,5.61c-0.58.78-1.78,2-1.71,3.27,0.05,0.94,1,1.67,1.71,2.35a33.12,33.12,0,0,1,3.92,4.18c0.47,0.62,1.5,2,1.4,2.76C52.66,45.81,46.88,44.24,44.94,44.84Z',
	  color: '#45668e'
	});
	
	exports.default = VKIcon;

/***/ }),
/* 1923 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function vkLink(url, _ref) {
	  var title = _ref.title,
	      description = _ref.description,
	      image = _ref.image;
	
	  (0, _assert2.default)(url, 'vk.url');
	
	  return 'https://vk.com/share.php' + (0, _objectToGetParams2.default)({
	    url: url,
	    title: title,
	    description: description,
	    image: image
	  });
	}
	
	var VKShareButton = (0, _createShareButton2.default)('vk', vkLink, function (props) {
	  return {
	    title: props.title,
	    description: props.description,
	    image: props.image
	  };
	}, {
	  title: _propTypes2.default.string,
	  description: _propTypes2.default.string,
	  image: _propTypes2.default.string
	}, {
	  windowWidth: 660,
	  windowHeight: 460
	});
	
	exports.default = VKShareButton;

/***/ }),
/* 1924 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _jsonp = __webpack_require__(190);
	
	var _jsonp2 = _interopRequireDefault(_jsonp);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _shareCountFactory = __webpack_require__(182);
	
	var _shareCountFactory2 = _interopRequireDefault(_shareCountFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getVKShareCount(shareUrl, callback) {
	  if (!window.VK) {
	    window.VK = {
	      Share: {
	        count: function count(index, _count) {
	          return window.VK.callbacks[index](_count);
	        }
	      },
	      callbacks: []
	    };
	  }
	
	  var url = 'https://vk.com/share.php';
	  var index = window.VK.callbacks.length;
	
	  window.VK.callbacks.push(callback);
	
	  return (0, _jsonp2.default)(url + (0, _objectToGetParams2.default)({
	    act: 'count',
	    index: index,
	    url: shareUrl
	  }));
	}
	
	exports.default = (0, _shareCountFactory2.default)(getVKShareCount);

/***/ }),
/* 1925 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ViberIcon = (0, _iconFactory2.default)('viber', {
	  icon: 'm31.0,12.3c9.0,0.2 16.4,6.2 18.0,15.2c0.2,1.5 0.3,3.0 0.4,4.6a1.0,1.0 0 0 1 -0.8,1.2l-0.1,0a1.1,1.1 0 0 1 -1.0,-1.2l0,0c-0.0,-1.2 -0.1,-2.5 -0.3,-3.8a16.1,16.1 0 0 0 -13.0,-13.5c-1.0,-0.1 -2.0,-0.2 -3.0,-0.3c-0.6,-0.0 -1.4,-0.1 -1.6,-0.8a1.1,1.1 0 0 1 0.9,-1.2l0.6,0l0.0,-0.0zm10.6,39.2a19.9,19.9 0 0 1 -2.1,-0.6c-6.9,-2.9 -13.2,-6.6 -18.3,-12.2a47.5,47.5 0 0 1 -7.0,-10.7c-0.8,-1.8 -1.6,-3.7 -2.4,-5.6c-0.6,-1.7 0.3,-3.4 1.4,-4.7a11.3,11.3 0 0 1 3.7,-2.8a2.4,2.4 0 0 1 3.0,0.7a39.0,39.0 0 0 1 4.7,6.5a3.1,3.1 0 0 1 -0.8,4.2c-0.3,0.2 -0.6,0.5 -1.0,0.8a3.3,3.3 0 0 0 -0.7,0.7a2.1,2.1 0 0 0 -0.1,1.9c1.7,4.9 4.7,8.7 9.7,10.8a5.0,5.0 0 0 0 2.5,0.6c1.5,-0.1 2.0,-1.8 3.1,-2.7a2.9,2.9 0 0 1 3.5,-0.1c1.1,0.7 2.2,1.4 3.3,2.2a37.8,37.8 0 0 1 3.1,2.4a2.4,2.4 0 0 1 0.7,3.0a10.4,10.4 0 0 1 -4.4,4.8a10.8,10.8 0 0 1 -1.9,0.6c-0.7,-0.2 0.6,-0.2 0,0l0.0,0l0,-0.0zm3.1,-21.4a4.2,4.2 0 0 1 -0.0,0.6a1.0,1.0 0 0 1 -1.9,0.1a2.7,2.7 0 0 1 -0.1,-0.8a10.9,10.9 0 0 0 -1.4,-5.5a10.2,10.2 0 0 0 -4.2,-4.0a12.3,12.3 0 0 0 -3.4,-1.0c-0.5,-0.0 -1.0,-0.1 -1.5,-0.2a0.9,0.9 0 0 1 -0.9,-1.0l0,-0.1a0.9,0.9 0 0 1 0.9,-0.9l0.1,0a14.1,14.1 0 0 1 5.9,1.5a11.9,11.9 0 0 1 6.5,9.3c0,0.1 0.0,0.3 0.0,0.5c0,0.4 0.0,0.9 0.0,1.5l0,0l0.0,0.0zm-5.6,-0.2a1.1,1.1 0 0 1 -1.2,-0.9l0,-0.1a11.3,11.3 0 0 0 -0.2,-1.4a4.0,4.0 0 0 0 -1.5,-2.3a3.9,3.9 0 0 0 -1.2,-0.5c-0.5,-0.1 -1.1,-0.1 -1.6,-0.2a1.0,1.0 0 0 1 -0.8,-1.1l0,0l0,0a1.0,1.0 0 0 1 1.1,-0.8c3.4,0.2 6.0,2.0 6.3,6.2a2.8,2.8 0 0 1 0,0.8a0.8,0.8 0 0 1 -0.8,0.7l0,0l0.0,-0.0z',
	  mask: '',
	  color: '#7C529E'
	});
	
	exports.default = ViberIcon;

/***/ }),
/* 1926 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function viberLink(url, _ref) {
	  var title = _ref.title;
	
	  (0, _assert2.default)(url, 'viber.url');
	  return 'viber://forward' + (0, _objectToGetParams2.default)({
	    text: (title || '') + ' ' + url
	  });
	}
	
	var ViberShareButton = (0, _createShareButton2.default)('viber', viberLink, function (props) {
	  return {
	    title: props.title
	  };
	}, {
	  title: _propTypes2.default.string
	}, {
	  windowWidth: 660,
	  windowHeight: 460
	});
	
	exports.default = ViberShareButton;

/***/ }),
/* 1927 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function weiboLink(url, _ref) {
	  var title = _ref.title,
	      image = _ref.image;
	
	  (0, _assert2.default)(url, 'weibo.url');
	  (0, _assert2.default)(image, 'weibo.image');
	
	  return 'http://service.weibo.com/share/share.php?' + (0, _objectToGetParams2.default)({
	    url: url,
	    title: title,
	    pic: image
	  });
	}
	
	var WeiboShareButton = (0, _createShareButton2.default)('weibo', weiboLink, function (props) {
	  return {
	    title: props.title,
	    image: props.image
	  };
	}, {
	  title: _propTypes2.default.string,
	  image: _propTypes2.default.string
	}, {
	  windowWidth: 550,
	  windowHeight: 400
	});
	
	exports.default = WeiboShareButton;

/***/ }),
/* 1928 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var WhatsappIcon = (0, _iconFactory2.default)('whatsapp', {
	  icon: 'm42.32286,33.93287c-0.5178,-0.2589 -3.04726,-1.49644 -3.52105,-1.66732c-0.4712,-0.17346 -0.81554,-0.2589 -1.15987,0.2589c-0.34175,0.51004 -1.33075,1.66474 -1.63108,2.00648c-0.30032,0.33658 -0.60064,0.36247 -1.11327,0.12945c-0.5178,-0.2589 -2.17994,-0.80259 -4.14759,-2.56312c-1.53269,-1.37217 -2.56312,-3.05503 -2.86603,-3.57283c-0.30033,-0.5178 -0.03366,-0.80259 0.22524,-1.06149c0.23301,-0.23301 0.5178,-0.59547 0.7767,-0.90616c0.25372,-0.31068 0.33657,-0.5178 0.51262,-0.85437c0.17088,-0.36246 0.08544,-0.64725 -0.04402,-0.90615c-0.12945,-0.2589 -1.15987,-2.79613 -1.58964,-3.80584c-0.41424,-1.00971 -0.84142,-0.88027 -1.15987,-0.88027c-0.29773,-0.02588 -0.64208,-0.02588 -0.98382,-0.02588c-0.34693,0 -0.90616,0.12945 -1.37736,0.62136c-0.4712,0.5178 -1.80194,1.76053 -1.80194,4.27186c0,2.51134 1.84596,4.945 2.10227,5.30747c0.2589,0.33657 3.63497,5.51458 8.80262,7.74113c1.23237,0.5178 2.1903,0.82848 2.94111,1.08738c1.23237,0.38836 2.35599,0.33657 3.24402,0.20712c0.99159,-0.15534 3.04985,-1.24272 3.47963,-2.45956c0.44013,-1.21683 0.44013,-2.22654 0.31068,-2.45955c-0.12945,-0.23301 -0.46601,-0.36247 -0.98382,-0.59548m-9.40068,12.84407l-0.02589,0c-3.05503,0 -6.08417,-0.82849 -8.72495,-2.38189l-0.62136,-0.37023l-6.47252,1.68286l1.73463,-6.29129l-0.41424,-0.64725c-1.70875,-2.71846 -2.6149,-5.85116 -2.6149,-9.07706c0,-9.39809 7.68934,-17.06155 17.15993,-17.06155c4.58253,0 8.88029,1.78642 12.11655,5.02268c3.23625,3.21036 5.02267,7.50812 5.02267,12.06476c-0.0078,9.3981 -7.69712,17.06155 -17.14699,17.06155m14.58906,-31.58846c-3.93529,-3.80584 -9.1133,-5.95471 -14.62789,-5.95471c-11.36055,0 -20.60848,9.2065 -20.61625,20.52564c0,3.61684 0.94757,7.14565 2.75211,10.26282l-2.92557,10.63564l10.93337,-2.85309c3.0136,1.63108 6.4052,2.4958 9.85634,2.49839l0.01037,0c11.36574,0 20.61884,-9.2091 20.62403,-20.53082c0,-5.48093 -2.14111,-10.64081 -6.03239,-14.51915',
	  mask: 'M0,0v64h64V0H0z M32,48c-1.6,0-3.1-0.2-4.5-0.7c0.6-1,1.3-2.2,1.6-3.4c0.2-0.7,1.1-4.4,1.1-4.4 c0.6,1.1,2.2,2,3.9,2c5.1,0,8.6-4.7,8.6-11c0-4.7-4-9.2-10.1-9.2c-7.6,0-11.4,5.5-11.4,10c0,2.8,1,5.2,3.3,6.1 c0.4,0.1,0.7,0,0.8-0.4c0.1-0.3,0.2-1,0.3-1.3c0.1-0.4,0.1-0.5-0.2-0.9c-0.6-0.8-1.1-1.7-1.1-3.1c0-4,3-7.7,7.9-7.7 c4.3,0,6.7,2.6,6.7,6.1c0,4.6-2,8.5-5.1,8.5c-1.7,0-2.9-1.4-2.5-3.1c0.5-2,1.4-4.2,1.4-5.7c0-1.3-0.7-2.4-2.2-2.4 c-1.7,0-3.1,1.8-3.1,4.1c0,1.5,0.5,2.5,0.5,2.5s-1.8,7.4-2.1,8.7c-0.3,1.2-0.3,2.6-0.3,3.7C19.9,44.2,16,38.6,16,32 c0-8.8,7.2-16,16-16c8.8,0,16,7.2,16,16C48,40.8,40.8,48,32,48z',
	  color: '#2cb742'
	});
	
	exports.default = WhatsappIcon;

/***/ }),
/* 1929 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function whatsappLink(url, _ref) {
	  var title = _ref.title,
	      separator = _ref.separator;
	
	  (0, _assert2.default)(url, 'whatsapp.url');
	  return 'https://api.whatsapp.com/send' + (0, _objectToGetParams2.default)({
	    text: title ? title + separator + url : url
	  });
	}
	
	var WhatsappShareButton = (0, _createShareButton2.default)('whatsapp', whatsappLink, function (props) {
	  return {
	    title: props.title,
	    separator: props.separator
	  };
	}, {
	  title: _propTypes2.default.string,
	  separator: _propTypes2.default.string
	}, {
	  separator: ' ',
	  windowWidth: 550,
	  windowHeight: 400
	});
	
	exports.default = WhatsappShareButton;

/***/ }),
/* 1930 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _iconFactory = __webpack_require__(57);
	
	var _iconFactory2 = _interopRequireDefault(_iconFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var WorkplaceIcon = (0, _iconFactory2.default)('workplace', {
	  icon: 'M34.019,10.292c0.21,0.017,0.423,0.034,0.636,0.049 c3.657,0.262,6.976,1.464,9.929,3.635c3.331,2.448,5.635,5.65,6.914,9.584c0.699,2.152,0.983,4.365,0.885,6.623 c-0.136,3.171-1.008,6.13-2.619,8.867c-0.442,0.75-0.908,1.492-1.495,2.141c-0.588,0.651-1.29,1.141-2.146,1.383 c-1.496,0.426-3.247-0.283-3.961-1.642c-0.26-0.494-0.442-1.028-0.654-1.548c-1.156-2.838-2.311-5.679-3.465-8.519 c-0.017-0.042-0.037-0.082-0.065-0.145c-0.101,0.245-0.192,0.472-0.284,0.698c-1.237,3.051-2.475,6.103-3.711,9.155 c-0.466,1.153-1.351,1.815-2.538,2.045c-1.391,0.267-2.577-0.154-3.496-1.247c-0.174-0.209-0.31-0.464-0.415-0.717 c-2.128-5.22-4.248-10.442-6.37-15.665c-0.012-0.029-0.021-0.059-0.036-0.104c0.054-0.003,0.103-0.006,0.15-0.006 c1.498-0.001,2.997,0,4.495-0.004c0.12-0.001,0.176,0.03,0.222,0.146c1.557,3.846,3.117,7.691,4.679,11.536 c0.018,0.046,0.039,0.091,0.067,0.159c0.273-0.673,0.536-1.32,0.797-1.968c1.064-2.627,2.137-5.25,3.19-7.883 c0.482-1.208,1.376-1.917,2.621-2.135c1.454-0.255,2.644,0.257,3.522,1.449c0.133,0.18,0.229,0.393,0.313,0.603 c1.425,3.495,2.848,6.991,4.269,10.488c0.02,0.047,0.04,0.093,0.073,0.172c0.196-0.327,0.385-0.625,0.559-0.935 c0.783-1.397,1.323-2.886,1.614-4.461c0.242-1.312,0.304-2.634,0.187-3.962c-0.242-2.721-1.16-5.192-2.792-7.38 c-2.193-2.939-5.086-4.824-8.673-5.625c-1.553-0.346-3.124-0.405-4.705-0.257c-3.162,0.298-6.036,1.366-8.585,3.258 c-3.414,2.534-5.638,5.871-6.623,10.016c-0.417,1.76-0.546,3.547-0.384,5.348c0.417,4.601,2.359,8.444,5.804,11.517 c2.325,2.073,5.037,3.393,8.094,3.989c1.617,0.317,3.247,0.395,4.889,0.242c1-0.094,1.982-0.268,2.952-0.529 c0.04-0.01,0.081-0.018,0.128-0.028c0,1.526,0,3.047,0,4.586c-0.402,0.074-0.805,0.154-1.21,0.221 c-0.861,0.14-1.728,0.231-2.601,0.258c-0.035,0.002-0.071,0.013-0.108,0.021c-0.493,0-0.983,0-1.476,0 c-0.049-0.007-0.1-0.018-0.149-0.022c-0.315-0.019-0.629-0.033-0.945-0.058c-1.362-0.105-2.702-0.346-4.017-0.716 c-3.254-0.914-6.145-2.495-8.66-4.752c-2.195-1.971-3.926-4.29-5.176-6.963c-1.152-2.466-1.822-5.057-1.993-7.774 c-0.014-0.226-0.033-0.451-0.05-0.676c0-0.502,0-1.003,0-1.504c0.008-0.049,0.02-0.099,0.022-0.148 c0.036-1.025,0.152-2.043,0.338-3.052c0.481-2.616,1.409-5.066,2.8-7.331c2.226-3.625,5.25-6.386,9.074-8.254 c2.536-1.24,5.217-1.947,8.037-2.126c0.23-0.015,0.461-0.034,0.691-0.051C33.052,10.292,33.535,10.292,34.019,10.292z',
	  color: '#3b3d4a'
	});
	
	exports.default = WorkplaceIcon;

/***/ }),
/* 1931 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _assert = __webpack_require__(47);
	
	var _assert2 = _interopRequireDefault(_assert);
	
	var _objectToGetParams = __webpack_require__(38);
	
	var _objectToGetParams2 = _interopRequireDefault(_objectToGetParams);
	
	var _createShareButton = __webpack_require__(46);
	
	var _createShareButton2 = _interopRequireDefault(_createShareButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function workplaceLink(url, _ref) {
	  var quote = _ref.quote,
	      hashtag = _ref.hashtag;
	
	  (0, _assert2.default)(url, 'workplace.url');
	
	  return 'https://work.facebook.com/sharer.php' + (0, _objectToGetParams2.default)({
	    u: url,
	    quote: quote,
	    hashtag: hashtag
	  });
	}
	
	var WorkplaceShareButton = (0, _createShareButton2.default)('workplace', workplaceLink, function (props) {
	  return {
	    quote: props.quote,
	    hashtag: props.hashtag
	  };
	}, {
	  quote: _propTypes2.default.string,
	  hashtag: _propTypes2.default.string
	}, {
	  windowWidth: 550,
	  windowHeight: 400
	});
	
	exports.default = WorkplaceShareButton;

/***/ }),
/* 1932 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _FacebookShareCount = __webpack_require__(1893);
	
	Object.defineProperty(exports, 'FacebookShareCount', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FacebookShareCount).default;
	  }
	});
	
	var _GooglePlusShareCount = __webpack_require__(1896);
	
	Object.defineProperty(exports, 'GooglePlusShareCount', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_GooglePlusShareCount).default;
	  }
	});
	
	var _LinkedinShareCount = __webpack_require__(1901);
	
	Object.defineProperty(exports, 'LinkedinShareCount', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LinkedinShareCount).default;
	  }
	});
	
	var _PinterestShareCount = __webpack_require__(1911);
	
	Object.defineProperty(exports, 'PinterestShareCount', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PinterestShareCount).default;
	  }
	});
	
	var _VKShareCount = __webpack_require__(1924);
	
	Object.defineProperty(exports, 'VKShareCount', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_VKShareCount).default;
	  }
	});
	
	var _OKShareCount = __webpack_require__(1908);
	
	Object.defineProperty(exports, 'OKShareCount', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_OKShareCount).default;
	  }
	});
	
	var _RedditShareCount = __webpack_require__(1914);
	
	Object.defineProperty(exports, 'RedditShareCount', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_RedditShareCount).default;
	  }
	});
	
	var _TumblrShareCount = __webpack_require__(1919);
	
	Object.defineProperty(exports, 'TumblrShareCount', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TumblrShareCount).default;
	  }
	});
	
	var _FacebookShareButton = __webpack_require__(1892);
	
	Object.defineProperty(exports, 'FacebookShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FacebookShareButton).default;
	  }
	});
	
	var _GooglePlusShareButton = __webpack_require__(1895);
	
	Object.defineProperty(exports, 'GooglePlusShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_GooglePlusShareButton).default;
	  }
	});
	
	var _LinkedinShareButton = __webpack_require__(1900);
	
	Object.defineProperty(exports, 'LinkedinShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LinkedinShareButton).default;
	  }
	});
	
	var _TwitterShareButton = __webpack_require__(1921);
	
	Object.defineProperty(exports, 'TwitterShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TwitterShareButton).default;
	  }
	});
	
	var _PinterestShareButton = __webpack_require__(1910);
	
	Object.defineProperty(exports, 'PinterestShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PinterestShareButton).default;
	  }
	});
	
	var _VKShareButton = __webpack_require__(1923);
	
	Object.defineProperty(exports, 'VKShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_VKShareButton).default;
	  }
	});
	
	var _OKShareButton = __webpack_require__(1907);
	
	Object.defineProperty(exports, 'OKShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_OKShareButton).default;
	  }
	});
	
	var _TelegramShareButton = __webpack_require__(1916);
	
	Object.defineProperty(exports, 'TelegramShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TelegramShareButton).default;
	  }
	});
	
	var _WhatsappShareButton = __webpack_require__(1929);
	
	Object.defineProperty(exports, 'WhatsappShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_WhatsappShareButton).default;
	  }
	});
	
	var _RedditShareButton = __webpack_require__(1913);
	
	Object.defineProperty(exports, 'RedditShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_RedditShareButton).default;
	  }
	});
	
	var _EmailShareButton = __webpack_require__(1890);
	
	Object.defineProperty(exports, 'EmailShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_EmailShareButton).default;
	  }
	});
	
	var _TumblrShareButton = __webpack_require__(1918);
	
	Object.defineProperty(exports, 'TumblrShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TumblrShareButton).default;
	  }
	});
	
	var _LivejournalShareButton = __webpack_require__(1903);
	
	Object.defineProperty(exports, 'LivejournalShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LivejournalShareButton).default;
	  }
	});
	
	var _MailruShareButton = __webpack_require__(1905);
	
	Object.defineProperty(exports, 'MailruShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MailruShareButton).default;
	  }
	});
	
	var _ViberShareButton = __webpack_require__(1926);
	
	Object.defineProperty(exports, 'ViberShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ViberShareButton).default;
	  }
	});
	
	var _WorkplaceShareButton = __webpack_require__(1931);
	
	Object.defineProperty(exports, 'WorkplaceShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_WorkplaceShareButton).default;
	  }
	});
	
	var _LineShareButton = __webpack_require__(1898);
	
	Object.defineProperty(exports, 'LineShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LineShareButton).default;
	  }
	});
	
	var _WeiboShareButton = __webpack_require__(1927);
	
	Object.defineProperty(exports, 'WeiboShareButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_WeiboShareButton).default;
	  }
	});
	
	var _FacebookIcon = __webpack_require__(1891);
	
	Object.defineProperty(exports, 'FacebookIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FacebookIcon).default;
	  }
	});
	
	var _TwitterIcon = __webpack_require__(1920);
	
	Object.defineProperty(exports, 'TwitterIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TwitterIcon).default;
	  }
	});
	
	var _GooglePlusIcon = __webpack_require__(1894);
	
	Object.defineProperty(exports, 'GooglePlusIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_GooglePlusIcon).default;
	  }
	});
	
	var _LinkedinIcon = __webpack_require__(1899);
	
	Object.defineProperty(exports, 'LinkedinIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LinkedinIcon).default;
	  }
	});
	
	var _PinterestIcon = __webpack_require__(1909);
	
	Object.defineProperty(exports, 'PinterestIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PinterestIcon).default;
	  }
	});
	
	var _VKIcon = __webpack_require__(1922);
	
	Object.defineProperty(exports, 'VKIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_VKIcon).default;
	  }
	});
	
	var _OKIcon = __webpack_require__(1906);
	
	Object.defineProperty(exports, 'OKIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_OKIcon).default;
	  }
	});
	
	var _TelegramIcon = __webpack_require__(1915);
	
	Object.defineProperty(exports, 'TelegramIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TelegramIcon).default;
	  }
	});
	
	var _WhatsappIcon = __webpack_require__(1928);
	
	Object.defineProperty(exports, 'WhatsappIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_WhatsappIcon).default;
	  }
	});
	
	var _RedditIcon = __webpack_require__(1912);
	
	Object.defineProperty(exports, 'RedditIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_RedditIcon).default;
	  }
	});
	
	var _TumblrIcon = __webpack_require__(1917);
	
	Object.defineProperty(exports, 'TumblrIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TumblrIcon).default;
	  }
	});
	
	var _MailruIcon = __webpack_require__(1904);
	
	Object.defineProperty(exports, 'MailruIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MailruIcon).default;
	  }
	});
	
	var _EmailIcon = __webpack_require__(1889);
	
	Object.defineProperty(exports, 'EmailIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_EmailIcon).default;
	  }
	});
	
	var _LivejournalIcon = __webpack_require__(1902);
	
	Object.defineProperty(exports, 'LivejournalIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LivejournalIcon).default;
	  }
	});
	
	var _ViberIcon = __webpack_require__(1925);
	
	Object.defineProperty(exports, 'ViberIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ViberIcon).default;
	  }
	});
	
	var _WorkplaceIcon = __webpack_require__(1930);
	
	Object.defineProperty(exports, 'WorkplaceIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_WorkplaceIcon).default;
	  }
	});
	
	var _LineIcon = __webpack_require__(1897);
	
	Object.defineProperty(exports, 'LineIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LineIcon).default;
	  }
	});
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 1933 */,
/* 1934 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(3);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _spin = __webpack_require__(1945);
	
	var _spin2 = _interopRequireDefault(_spin);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Spinner = function (_Component) {
	  _inherits(Spinner, _Component);
	
	  function Spinner() {
	    _classCallCheck(this, Spinner);
	
	    return _possibleConstructorReturn(this, (Spinner.__proto__ || Object.getPrototypeOf(Spinner)).apply(this, arguments));
	  }
	
	  _createClass(Spinner, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.updateSpinner();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.updateSpinner();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      if (this.spinner) {
	        this.spinner.stop();
	        this.spinner = null;
	      }
	    }
	  }, {
	    key: 'updateSpinner',
	    value: function updateSpinner() {
	      var loaded = this.props.loaded;
	
	      if (!loaded && !this.spinner) {
	        this.spinner = new _spin2.default(this.props.config);
	        this.spinner.spin(this.refs.loader);
	      } else if (loaded && this.spinner) {
	        this.spinner.stop();
	        this.spinner = null;
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          loaded = _props.loaded,
	          className = _props.className;
	
	
	      if (loaded) {
	        return this.props.children ? _react.Children.only(this.props.children) : null;
	      }
	
	      return _react2.default.createElement('div', { className: className, ref: 'loader' });
	    }
	  }]);
	
	  return Spinner;
	}(_react.Component);
	
	Spinner.propTypes = {
	  className: _propTypes2.default.string,
	  config: _propTypes2.default.object.isRequired,
	  loaded: _propTypes2.default.bool.isRequired,
	  children: _propTypes2.default.node
	};
	Spinner.defaultProps = {
	  config: {},
	  loaded: false,
	  className: 'loader'
	};
	exports.default = Spinner;

/***/ }),
/* 1935 */,
/* 1936 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	// This method of obtaining a reference to the global object needs to be
	// kept identical to the way it is obtained in runtime.js
	var g = (function() { return this })() || Function("return this")();
	
	// Use `getOwnPropertyNames` because not all browsers support calling
	// `hasOwnProperty` on the global `self` object in a worker. See #183.
	var hadRuntime = g.regeneratorRuntime &&
	  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;
	
	// Save the old regeneratorRuntime in case it needs to be restored later.
	var oldRuntime = hadRuntime && g.regeneratorRuntime;
	
	// Force reevalutation of runtime.js.
	g.regeneratorRuntime = undefined;
	
	module.exports = __webpack_require__(1937);
	
	if (hadRuntime) {
	  // Restore the original runtime.
	  g.regeneratorRuntime = oldRuntime;
	} else {
	  // Remove the global property added by runtime.js.
	  try {
	    delete g.regeneratorRuntime;
	  } catch(e) {
	    g.regeneratorRuntime = undefined;
	  }
	}


/***/ }),
/* 1937 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	!(function(global) {
	  "use strict";
	
	  var Op = Object.prototype;
	  var hasOwn = Op.hasOwnProperty;
	  var undefined; // More compressible than void 0.
	  var $Symbol = typeof Symbol === "function" ? Symbol : {};
	  var iteratorSymbol = $Symbol.iterator || "@@iterator";
	  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
	  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
	
	  var inModule = typeof module === "object";
	  var runtime = global.regeneratorRuntime;
	  if (runtime) {
	    if (inModule) {
	      // If regeneratorRuntime is defined globally and we're in a module,
	      // make the exports object identical to regeneratorRuntime.
	      module.exports = runtime;
	    }
	    // Don't bother evaluating the rest of this file if the runtime was
	    // already defined globally.
	    return;
	  }
	
	  // Define the runtime globally (as expected by generated code) as either
	  // module.exports (if we're in a module) or a new, empty object.
	  runtime = global.regeneratorRuntime = inModule ? module.exports : {};
	
	  function wrap(innerFn, outerFn, self, tryLocsList) {
	    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
	    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
	    var generator = Object.create(protoGenerator.prototype);
	    var context = new Context(tryLocsList || []);
	
	    // The ._invoke method unifies the implementations of the .next,
	    // .throw, and .return methods.
	    generator._invoke = makeInvokeMethod(innerFn, self, context);
	
	    return generator;
	  }
	  runtime.wrap = wrap;
	
	  // Try/catch helper to minimize deoptimizations. Returns a completion
	  // record like context.tryEntries[i].completion. This interface could
	  // have been (and was previously) designed to take a closure to be
	  // invoked without arguments, but in all the cases we care about we
	  // already have an existing method we want to call, so there's no need
	  // to create a new function object. We can even get away with assuming
	  // the method takes exactly one argument, since that happens to be true
	  // in every case, so we don't have to touch the arguments object. The
	  // only additional allocation required is the completion record, which
	  // has a stable shape and so hopefully should be cheap to allocate.
	  function tryCatch(fn, obj, arg) {
	    try {
	      return { type: "normal", arg: fn.call(obj, arg) };
	    } catch (err) {
	      return { type: "throw", arg: err };
	    }
	  }
	
	  var GenStateSuspendedStart = "suspendedStart";
	  var GenStateSuspendedYield = "suspendedYield";
	  var GenStateExecuting = "executing";
	  var GenStateCompleted = "completed";
	
	  // Returning this object from the innerFn has the same effect as
	  // breaking out of the dispatch switch statement.
	  var ContinueSentinel = {};
	
	  // Dummy constructor functions that we use as the .constructor and
	  // .constructor.prototype properties for functions that return Generator
	  // objects. For full spec compliance, you may wish to configure your
	  // minifier not to mangle the names of these two functions.
	  function Generator() {}
	  function GeneratorFunction() {}
	  function GeneratorFunctionPrototype() {}
	
	  // This is a polyfill for %IteratorPrototype% for environments that
	  // don't natively support it.
	  var IteratorPrototype = {};
	  IteratorPrototype[iteratorSymbol] = function () {
	    return this;
	  };
	
	  var getProto = Object.getPrototypeOf;
	  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
	  if (NativeIteratorPrototype &&
	      NativeIteratorPrototype !== Op &&
	      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
	    // This environment has a native %IteratorPrototype%; use it instead
	    // of the polyfill.
	    IteratorPrototype = NativeIteratorPrototype;
	  }
	
	  var Gp = GeneratorFunctionPrototype.prototype =
	    Generator.prototype = Object.create(IteratorPrototype);
	  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
	  GeneratorFunctionPrototype.constructor = GeneratorFunction;
	  GeneratorFunctionPrototype[toStringTagSymbol] =
	    GeneratorFunction.displayName = "GeneratorFunction";
	
	  // Helper for defining the .next, .throw, and .return methods of the
	  // Iterator interface in terms of a single ._invoke method.
	  function defineIteratorMethods(prototype) {
	    ["next", "throw", "return"].forEach(function(method) {
	      prototype[method] = function(arg) {
	        return this._invoke(method, arg);
	      };
	    });
	  }
	
	  runtime.isGeneratorFunction = function(genFun) {
	    var ctor = typeof genFun === "function" && genFun.constructor;
	    return ctor
	      ? ctor === GeneratorFunction ||
	        // For the native GeneratorFunction constructor, the best we can
	        // do is to check its .name property.
	        (ctor.displayName || ctor.name) === "GeneratorFunction"
	      : false;
	  };
	
	  runtime.mark = function(genFun) {
	    if (Object.setPrototypeOf) {
	      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
	    } else {
	      genFun.__proto__ = GeneratorFunctionPrototype;
	      if (!(toStringTagSymbol in genFun)) {
	        genFun[toStringTagSymbol] = "GeneratorFunction";
	      }
	    }
	    genFun.prototype = Object.create(Gp);
	    return genFun;
	  };
	
	  // Within the body of any async function, `await x` is transformed to
	  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
	  // `hasOwn.call(value, "__await")` to determine if the yielded value is
	  // meant to be awaited.
	  runtime.awrap = function(arg) {
	    return { __await: arg };
	  };
	
	  function AsyncIterator(generator) {
	    function invoke(method, arg, resolve, reject) {
	      var record = tryCatch(generator[method], generator, arg);
	      if (record.type === "throw") {
	        reject(record.arg);
	      } else {
	        var result = record.arg;
	        var value = result.value;
	        if (value &&
	            typeof value === "object" &&
	            hasOwn.call(value, "__await")) {
	          return Promise.resolve(value.__await).then(function(value) {
	            invoke("next", value, resolve, reject);
	          }, function(err) {
	            invoke("throw", err, resolve, reject);
	          });
	        }
	
	        return Promise.resolve(value).then(function(unwrapped) {
	          // When a yielded Promise is resolved, its final value becomes
	          // the .value of the Promise<{value,done}> result for the
	          // current iteration. If the Promise is rejected, however, the
	          // result for this iteration will be rejected with the same
	          // reason. Note that rejections of yielded Promises are not
	          // thrown back into the generator function, as is the case
	          // when an awaited Promise is rejected. This difference in
	          // behavior between yield and await is important, because it
	          // allows the consumer to decide what to do with the yielded
	          // rejection (swallow it and continue, manually .throw it back
	          // into the generator, abandon iteration, whatever). With
	          // await, by contrast, there is no opportunity to examine the
	          // rejection reason outside the generator function, so the
	          // only option is to throw it from the await expression, and
	          // let the generator function handle the exception.
	          result.value = unwrapped;
	          resolve(result);
	        }, reject);
	      }
	    }
	
	    var previousPromise;
	
	    function enqueue(method, arg) {
	      function callInvokeWithMethodAndArg() {
	        return new Promise(function(resolve, reject) {
	          invoke(method, arg, resolve, reject);
	        });
	      }
	
	      return previousPromise =
	        // If enqueue has been called before, then we want to wait until
	        // all previous Promises have been resolved before calling invoke,
	        // so that results are always delivered in the correct order. If
	        // enqueue has not been called before, then it is important to
	        // call invoke immediately, without waiting on a callback to fire,
	        // so that the async generator function has the opportunity to do
	        // any necessary setup in a predictable way. This predictability
	        // is why the Promise constructor synchronously invokes its
	        // executor callback, and why async functions synchronously
	        // execute code before the first await. Since we implement simple
	        // async functions in terms of async generators, it is especially
	        // important to get this right, even though it requires care.
	        previousPromise ? previousPromise.then(
	          callInvokeWithMethodAndArg,
	          // Avoid propagating failures to Promises returned by later
	          // invocations of the iterator.
	          callInvokeWithMethodAndArg
	        ) : callInvokeWithMethodAndArg();
	    }
	
	    // Define the unified helper method that is used to implement .next,
	    // .throw, and .return (see defineIteratorMethods).
	    this._invoke = enqueue;
	  }
	
	  defineIteratorMethods(AsyncIterator.prototype);
	  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
	    return this;
	  };
	  runtime.AsyncIterator = AsyncIterator;
	
	  // Note that simple async functions are implemented on top of
	  // AsyncIterator objects; they just return a Promise for the value of
	  // the final result produced by the iterator.
	  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
	    var iter = new AsyncIterator(
	      wrap(innerFn, outerFn, self, tryLocsList)
	    );
	
	    return runtime.isGeneratorFunction(outerFn)
	      ? iter // If outerFn is a generator, return the full iterator.
	      : iter.next().then(function(result) {
	          return result.done ? result.value : iter.next();
	        });
	  };
	
	  function makeInvokeMethod(innerFn, self, context) {
	    var state = GenStateSuspendedStart;
	
	    return function invoke(method, arg) {
	      if (state === GenStateExecuting) {
	        throw new Error("Generator is already running");
	      }
	
	      if (state === GenStateCompleted) {
	        if (method === "throw") {
	          throw arg;
	        }
	
	        // Be forgiving, per 25.3.3.3.3 of the spec:
	        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
	        return doneResult();
	      }
	
	      context.method = method;
	      context.arg = arg;
	
	      while (true) {
	        var delegate = context.delegate;
	        if (delegate) {
	          var delegateResult = maybeInvokeDelegate(delegate, context);
	          if (delegateResult) {
	            if (delegateResult === ContinueSentinel) continue;
	            return delegateResult;
	          }
	        }
	
	        if (context.method === "next") {
	          // Setting context._sent for legacy support of Babel's
	          // function.sent implementation.
	          context.sent = context._sent = context.arg;
	
	        } else if (context.method === "throw") {
	          if (state === GenStateSuspendedStart) {
	            state = GenStateCompleted;
	            throw context.arg;
	          }
	
	          context.dispatchException(context.arg);
	
	        } else if (context.method === "return") {
	          context.abrupt("return", context.arg);
	        }
	
	        state = GenStateExecuting;
	
	        var record = tryCatch(innerFn, self, context);
	        if (record.type === "normal") {
	          // If an exception is thrown from innerFn, we leave state ===
	          // GenStateExecuting and loop back for another invocation.
	          state = context.done
	            ? GenStateCompleted
	            : GenStateSuspendedYield;
	
	          if (record.arg === ContinueSentinel) {
	            continue;
	          }
	
	          return {
	            value: record.arg,
	            done: context.done
	          };
	
	        } else if (record.type === "throw") {
	          state = GenStateCompleted;
	          // Dispatch the exception by looping back around to the
	          // context.dispatchException(context.arg) call above.
	          context.method = "throw";
	          context.arg = record.arg;
	        }
	      }
	    };
	  }
	
	  // Call delegate.iterator[context.method](context.arg) and handle the
	  // result, either by returning a { value, done } result from the
	  // delegate iterator, or by modifying context.method and context.arg,
	  // setting context.delegate to null, and returning the ContinueSentinel.
	  function maybeInvokeDelegate(delegate, context) {
	    var method = delegate.iterator[context.method];
	    if (method === undefined) {
	      // A .throw or .return when the delegate iterator has no .throw
	      // method always terminates the yield* loop.
	      context.delegate = null;
	
	      if (context.method === "throw") {
	        if (delegate.iterator.return) {
	          // If the delegate iterator has a return method, give it a
	          // chance to clean up.
	          context.method = "return";
	          context.arg = undefined;
	          maybeInvokeDelegate(delegate, context);
	
	          if (context.method === "throw") {
	            // If maybeInvokeDelegate(context) changed context.method from
	            // "return" to "throw", let that override the TypeError below.
	            return ContinueSentinel;
	          }
	        }
	
	        context.method = "throw";
	        context.arg = new TypeError(
	          "The iterator does not provide a 'throw' method");
	      }
	
	      return ContinueSentinel;
	    }
	
	    var record = tryCatch(method, delegate.iterator, context.arg);
	
	    if (record.type === "throw") {
	      context.method = "throw";
	      context.arg = record.arg;
	      context.delegate = null;
	      return ContinueSentinel;
	    }
	
	    var info = record.arg;
	
	    if (! info) {
	      context.method = "throw";
	      context.arg = new TypeError("iterator result is not an object");
	      context.delegate = null;
	      return ContinueSentinel;
	    }
	
	    if (info.done) {
	      // Assign the result of the finished delegate to the temporary
	      // variable specified by delegate.resultName (see delegateYield).
	      context[delegate.resultName] = info.value;
	
	      // Resume execution at the desired location (see delegateYield).
	      context.next = delegate.nextLoc;
	
	      // If context.method was "throw" but the delegate handled the
	      // exception, let the outer generator proceed normally. If
	      // context.method was "next", forget context.arg since it has been
	      // "consumed" by the delegate iterator. If context.method was
	      // "return", allow the original .return call to continue in the
	      // outer generator.
	      if (context.method !== "return") {
	        context.method = "next";
	        context.arg = undefined;
	      }
	
	    } else {
	      // Re-yield the result returned by the delegate method.
	      return info;
	    }
	
	    // The delegate iterator is finished, so forget it and continue with
	    // the outer generator.
	    context.delegate = null;
	    return ContinueSentinel;
	  }
	
	  // Define Generator.prototype.{next,throw,return} in terms of the
	  // unified ._invoke helper method.
	  defineIteratorMethods(Gp);
	
	  Gp[toStringTagSymbol] = "Generator";
	
	  // A Generator should always return itself as the iterator object when the
	  // @@iterator function is called on it. Some browsers' implementations of the
	  // iterator prototype chain incorrectly implement this, causing the Generator
	  // object to not be returned from this call. This ensures that doesn't happen.
	  // See https://github.com/facebook/regenerator/issues/274 for more details.
	  Gp[iteratorSymbol] = function() {
	    return this;
	  };
	
	  Gp.toString = function() {
	    return "[object Generator]";
	  };
	
	  function pushTryEntry(locs) {
	    var entry = { tryLoc: locs[0] };
	
	    if (1 in locs) {
	      entry.catchLoc = locs[1];
	    }
	
	    if (2 in locs) {
	      entry.finallyLoc = locs[2];
	      entry.afterLoc = locs[3];
	    }
	
	    this.tryEntries.push(entry);
	  }
	
	  function resetTryEntry(entry) {
	    var record = entry.completion || {};
	    record.type = "normal";
	    delete record.arg;
	    entry.completion = record;
	  }
	
	  function Context(tryLocsList) {
	    // The root entry object (effectively a try statement without a catch
	    // or a finally block) gives us a place to store values thrown from
	    // locations where there is no enclosing try statement.
	    this.tryEntries = [{ tryLoc: "root" }];
	    tryLocsList.forEach(pushTryEntry, this);
	    this.reset(true);
	  }
	
	  runtime.keys = function(object) {
	    var keys = [];
	    for (var key in object) {
	      keys.push(key);
	    }
	    keys.reverse();
	
	    // Rather than returning an object with a next method, we keep
	    // things simple and return the next function itself.
	    return function next() {
	      while (keys.length) {
	        var key = keys.pop();
	        if (key in object) {
	          next.value = key;
	          next.done = false;
	          return next;
	        }
	      }
	
	      // To avoid creating an additional object, we just hang the .value
	      // and .done properties off the next function object itself. This
	      // also ensures that the minifier will not anonymize the function.
	      next.done = true;
	      return next;
	    };
	  };
	
	  function values(iterable) {
	    if (iterable) {
	      var iteratorMethod = iterable[iteratorSymbol];
	      if (iteratorMethod) {
	        return iteratorMethod.call(iterable);
	      }
	
	      if (typeof iterable.next === "function") {
	        return iterable;
	      }
	
	      if (!isNaN(iterable.length)) {
	        var i = -1, next = function next() {
	          while (++i < iterable.length) {
	            if (hasOwn.call(iterable, i)) {
	              next.value = iterable[i];
	              next.done = false;
	              return next;
	            }
	          }
	
	          next.value = undefined;
	          next.done = true;
	
	          return next;
	        };
	
	        return next.next = next;
	      }
	    }
	
	    // Return an iterator with no values.
	    return { next: doneResult };
	  }
	  runtime.values = values;
	
	  function doneResult() {
	    return { value: undefined, done: true };
	  }
	
	  Context.prototype = {
	    constructor: Context,
	
	    reset: function(skipTempReset) {
	      this.prev = 0;
	      this.next = 0;
	      // Resetting context._sent for legacy support of Babel's
	      // function.sent implementation.
	      this.sent = this._sent = undefined;
	      this.done = false;
	      this.delegate = null;
	
	      this.method = "next";
	      this.arg = undefined;
	
	      this.tryEntries.forEach(resetTryEntry);
	
	      if (!skipTempReset) {
	        for (var name in this) {
	          // Not sure about the optimal order of these conditions:
	          if (name.charAt(0) === "t" &&
	              hasOwn.call(this, name) &&
	              !isNaN(+name.slice(1))) {
	            this[name] = undefined;
	          }
	        }
	      }
	    },
	
	    stop: function() {
	      this.done = true;
	
	      var rootEntry = this.tryEntries[0];
	      var rootRecord = rootEntry.completion;
	      if (rootRecord.type === "throw") {
	        throw rootRecord.arg;
	      }
	
	      return this.rval;
	    },
	
	    dispatchException: function(exception) {
	      if (this.done) {
	        throw exception;
	      }
	
	      var context = this;
	      function handle(loc, caught) {
	        record.type = "throw";
	        record.arg = exception;
	        context.next = loc;
	
	        if (caught) {
	          // If the dispatched exception was caught by a catch block,
	          // then let that catch block handle the exception normally.
	          context.method = "next";
	          context.arg = undefined;
	        }
	
	        return !! caught;
	      }
	
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        var record = entry.completion;
	
	        if (entry.tryLoc === "root") {
	          // Exception thrown outside of any try block that could handle
	          // it, so set the completion value of the entire function to
	          // throw the exception.
	          return handle("end");
	        }
	
	        if (entry.tryLoc <= this.prev) {
	          var hasCatch = hasOwn.call(entry, "catchLoc");
	          var hasFinally = hasOwn.call(entry, "finallyLoc");
	
	          if (hasCatch && hasFinally) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            } else if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else if (hasCatch) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            }
	
	          } else if (hasFinally) {
	            if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else {
	            throw new Error("try statement without catch or finally");
	          }
	        }
	      }
	    },
	
	    abrupt: function(type, arg) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc <= this.prev &&
	            hasOwn.call(entry, "finallyLoc") &&
	            this.prev < entry.finallyLoc) {
	          var finallyEntry = entry;
	          break;
	        }
	      }
	
	      if (finallyEntry &&
	          (type === "break" ||
	           type === "continue") &&
	          finallyEntry.tryLoc <= arg &&
	          arg <= finallyEntry.finallyLoc) {
	        // Ignore the finally entry if control is not jumping to a
	        // location outside the try/catch block.
	        finallyEntry = null;
	      }
	
	      var record = finallyEntry ? finallyEntry.completion : {};
	      record.type = type;
	      record.arg = arg;
	
	      if (finallyEntry) {
	        this.method = "next";
	        this.next = finallyEntry.finallyLoc;
	        return ContinueSentinel;
	      }
	
	      return this.complete(record);
	    },
	
	    complete: function(record, afterLoc) {
	      if (record.type === "throw") {
	        throw record.arg;
	      }
	
	      if (record.type === "break" ||
	          record.type === "continue") {
	        this.next = record.arg;
	      } else if (record.type === "return") {
	        this.rval = this.arg = record.arg;
	        this.method = "return";
	        this.next = "end";
	      } else if (record.type === "normal" && afterLoc) {
	        this.next = afterLoc;
	      }
	
	      return ContinueSentinel;
	    },
	
	    finish: function(finallyLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.finallyLoc === finallyLoc) {
	          this.complete(entry.completion, entry.afterLoc);
	          resetTryEntry(entry);
	          return ContinueSentinel;
	        }
	      }
	    },
	
	    "catch": function(tryLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc === tryLoc) {
	          var record = entry.completion;
	          if (record.type === "throw") {
	            var thrown = record.arg;
	            resetTryEntry(entry);
	          }
	          return thrown;
	        }
	      }
	
	      // The context.catch method must only be called with a location
	      // argument that corresponds to a known catch block.
	      throw new Error("illegal catch attempt");
	    },
	
	    delegateYield: function(iterable, resultName, nextLoc) {
	      this.delegate = {
	        iterator: values(iterable),
	        resultName: resultName,
	        nextLoc: nextLoc
	      };
	
	      if (this.method === "next") {
	        // Deliberately forget the last sent value so that we don't
	        // accidentally pass it on to the delegate.
	        this.arg = undefined;
	      }
	
	      return ContinueSentinel;
	    }
	  };
	})(
	  // In sloppy mode, unbound `this` refers to the global object, fallback to
	  // Function constructor if we're in global strict mode. That is sadly a form
	  // of indirect eval which violates Content Security Policy.
	  (function() { return this })() || Function("return this")()
	);


/***/ }),
/* 1938 */,
/* 1939 */,
/* 1940 */,
/* 1941 */,
/* 1942 */,
/* 1943 */,
/* 1944 */,
/* 1945 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
	 * Copyright (c) 2011-2014 Felix Gnass
	 * Licensed under the MIT license
	 * http://spin.js.org/
	 *
	 * Example:
	    var opts = {
	      lines: 12             // The number of lines to draw
	    , length: 7             // The length of each line
	    , width: 5              // The line thickness
	    , radius: 10            // The radius of the inner circle
	    , scale: 1.0            // Scales overall size of the spinner
	    , corners: 1            // Roundness (0..1)
	    , color: '#000'         // #rgb or #rrggbb
	    , opacity: 1/4          // Opacity of the lines
	    , rotate: 0             // Rotation offset
	    , direction: 1          // 1: clockwise, -1: counterclockwise
	    , speed: 1              // Rounds per second
	    , trail: 100            // Afterglow percentage
	    , fps: 20               // Frames per second when using setTimeout()
	    , zIndex: 2e9           // Use a high z-index by default
	    , className: 'spinner'  // CSS class to assign to the element
	    , top: '50%'            // center vertically
	    , left: '50%'           // center horizontally
	    , shadow: false         // Whether to render a shadow
	    , hwaccel: false        // Whether to use hardware acceleration (might be buggy)
	    , position: 'absolute'  // Element positioning
	    }
	    var target = document.getElementById('foo')
	    var spinner = new Spinner(opts).spin(target)
	 */
	;(function (root, factory) {
	
	  /* CommonJS */
	  if (typeof module == 'object' && module.exports) module.exports = factory()
	
	  /* AMD module */
	  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
	
	  /* Browser global */
	  else root.Spinner = factory()
	}(this, function () {
	  "use strict"
	
	  var prefixes = ['webkit', 'Moz', 'ms', 'O'] /* Vendor prefixes */
	    , animations = {} /* Animation rules keyed by their name */
	    , useCssAnimations /* Whether to use CSS animations or setTimeout */
	    , sheet /* A stylesheet to hold the @keyframe or VML rules. */
	
	  /**
	   * Utility function to create elements. If no tag name is given,
	   * a DIV is created. Optionally properties can be passed.
	   */
	  function createEl (tag, prop) {
	    var el = document.createElement(tag || 'div')
	      , n
	
	    for (n in prop) el[n] = prop[n]
	    return el
	  }
	
	  /**
	   * Appends children and returns the parent.
	   */
	  function ins (parent /* child1, child2, ...*/) {
	    for (var i = 1, n = arguments.length; i < n; i++) {
	      parent.appendChild(arguments[i])
	    }
	
	    return parent
	  }
	
	  /**
	   * Creates an opacity keyframe animation rule and returns its name.
	   * Since most mobile Webkits have timing issues with animation-delay,
	   * we create separate rules for each line/segment.
	   */
	  function addAnimation (alpha, trail, i, lines) {
	    var name = ['opacity', trail, ~~(alpha * 100), i, lines].join('-')
	      , start = 0.01 + i/lines * 100
	      , z = Math.max(1 - (1-alpha) / trail * (100-start), alpha)
	      , prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase()
	      , pre = prefix && '-' + prefix + '-' || ''
	
	    if (!animations[name]) {
	      sheet.insertRule(
	        '@' + pre + 'keyframes ' + name + '{' +
	        '0%{opacity:' + z + '}' +
	        start + '%{opacity:' + alpha + '}' +
	        (start+0.01) + '%{opacity:1}' +
	        (start+trail) % 100 + '%{opacity:' + alpha + '}' +
	        '100%{opacity:' + z + '}' +
	        '}', sheet.cssRules.length)
	
	      animations[name] = 1
	    }
	
	    return name
	  }
	
	  /**
	   * Tries various vendor prefixes and returns the first supported property.
	   */
	  function vendor (el, prop) {
	    var s = el.style
	      , pp
	      , i
	
	    prop = prop.charAt(0).toUpperCase() + prop.slice(1)
	    if (s[prop] !== undefined) return prop
	    for (i = 0; i < prefixes.length; i++) {
	      pp = prefixes[i]+prop
	      if (s[pp] !== undefined) return pp
	    }
	  }
	
	  /**
	   * Sets multiple style properties at once.
	   */
	  function css (el, prop) {
	    for (var n in prop) {
	      el.style[vendor(el, n) || n] = prop[n]
	    }
	
	    return el
	  }
	
	  /**
	   * Fills in default values.
	   */
	  function merge (obj) {
	    for (var i = 1; i < arguments.length; i++) {
	      var def = arguments[i]
	      for (var n in def) {
	        if (obj[n] === undefined) obj[n] = def[n]
	      }
	    }
	    return obj
	  }
	
	  /**
	   * Returns the line color from the given string or array.
	   */
	  function getColor (color, idx) {
	    return typeof color == 'string' ? color : color[idx % color.length]
	  }
	
	  // Built-in defaults
	
	  var defaults = {
	    lines: 12             // The number of lines to draw
	  , length: 7             // The length of each line
	  , width: 5              // The line thickness
	  , radius: 10            // The radius of the inner circle
	  , scale: 1.0            // Scales overall size of the spinner
	  , corners: 1            // Roundness (0..1)
	  , color: '#000'         // #rgb or #rrggbb
	  , opacity: 1/4          // Opacity of the lines
	  , rotate: 0             // Rotation offset
	  , direction: 1          // 1: clockwise, -1: counterclockwise
	  , speed: 1              // Rounds per second
	  , trail: 100            // Afterglow percentage
	  , fps: 20               // Frames per second when using setTimeout()
	  , zIndex: 2e9           // Use a high z-index by default
	  , className: 'spinner'  // CSS class to assign to the element
	  , top: '50%'            // center vertically
	  , left: '50%'           // center horizontally
	  , shadow: false         // Whether to render a shadow
	  , hwaccel: false        // Whether to use hardware acceleration (might be buggy)
	  , position: 'absolute'  // Element positioning
	  }
	
	  /** The constructor */
	  function Spinner (o) {
	    this.opts = merge(o || {}, Spinner.defaults, defaults)
	  }
	
	  // Global defaults that override the built-ins:
	  Spinner.defaults = {}
	
	  merge(Spinner.prototype, {
	    /**
	     * Adds the spinner to the given target element. If this instance is already
	     * spinning, it is automatically removed from its previous target b calling
	     * stop() internally.
	     */
	    spin: function (target) {
	      this.stop()
	
	      var self = this
	        , o = self.opts
	        , el = self.el = createEl(null, {className: o.className})
	
	      css(el, {
	        position: o.position
	      , width: 0
	      , zIndex: o.zIndex
	      , left: o.left
	      , top: o.top
	      })
	
	      if (target) {
	        target.insertBefore(el, target.firstChild || null)
	      }
	
	      el.setAttribute('role', 'progressbar')
	      self.lines(el, self.opts)
	
	      if (!useCssAnimations) {
	        // No CSS animation support, use setTimeout() instead
	        var i = 0
	          , start = (o.lines - 1) * (1 - o.direction) / 2
	          , alpha
	          , fps = o.fps
	          , f = fps / o.speed
	          , ostep = (1 - o.opacity) / (f * o.trail / 100)
	          , astep = f / o.lines
	
	        ;(function anim () {
	          i++
	          for (var j = 0; j < o.lines; j++) {
	            alpha = Math.max(1 - (i + (o.lines - j) * astep) % f * ostep, o.opacity)
	
	            self.opacity(el, j * o.direction + start, alpha, o)
	          }
	          self.timeout = self.el && setTimeout(anim, ~~(1000 / fps))
	        })()
	      }
	      return self
	    }
	
	    /**
	     * Stops and removes the Spinner.
	     */
	  , stop: function () {
	      var el = this.el
	      if (el) {
	        clearTimeout(this.timeout)
	        if (el.parentNode) el.parentNode.removeChild(el)
	        this.el = undefined
	      }
	      return this
	    }
	
	    /**
	     * Internal method that draws the individual lines. Will be overwritten
	     * in VML fallback mode below.
	     */
	  , lines: function (el, o) {
	      var i = 0
	        , start = (o.lines - 1) * (1 - o.direction) / 2
	        , seg
	
	      function fill (color, shadow) {
	        return css(createEl(), {
	          position: 'absolute'
	        , width: o.scale * (o.length + o.width) + 'px'
	        , height: o.scale * o.width + 'px'
	        , background: color
	        , boxShadow: shadow
	        , transformOrigin: 'left'
	        , transform: 'rotate(' + ~~(360/o.lines*i + o.rotate) + 'deg) translate(' + o.scale*o.radius + 'px' + ',0)'
	        , borderRadius: (o.corners * o.scale * o.width >> 1) + 'px'
	        })
	      }
	
	      for (; i < o.lines; i++) {
	        seg = css(createEl(), {
	          position: 'absolute'
	        , top: 1 + ~(o.scale * o.width / 2) + 'px'
	        , transform: o.hwaccel ? 'translate3d(0,0,0)' : ''
	        , opacity: o.opacity
	        , animation: useCssAnimations && addAnimation(o.opacity, o.trail, start + i * o.direction, o.lines) + ' ' + 1 / o.speed + 's linear infinite'
	        })
	
	        if (o.shadow) ins(seg, css(fill('#000', '0 0 4px #000'), {top: '2px'}))
	        ins(el, ins(seg, fill(getColor(o.color, i), '0 0 1px rgba(0,0,0,.1)')))
	      }
	      return el
	    }
	
	    /**
	     * Internal method that adjusts the opacity of a single line.
	     * Will be overwritten in VML fallback mode below.
	     */
	  , opacity: function (el, i, val) {
	      if (i < el.childNodes.length) el.childNodes[i].style.opacity = val
	    }
	
	  })
	
	
	  function initVML () {
	
	    /* Utility function to create a VML tag */
	    function vml (tag, attr) {
	      return createEl('<' + tag + ' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">', attr)
	    }
	
	    // No CSS transforms but VML support, add a CSS rule for VML elements:
	    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)')
	
	    Spinner.prototype.lines = function (el, o) {
	      var r = o.scale * (o.length + o.width)
	        , s = o.scale * 2 * r
	
	      function grp () {
	        return css(
	          vml('group', {
	            coordsize: s + ' ' + s
	          , coordorigin: -r + ' ' + -r
	          })
	        , { width: s, height: s }
	        )
	      }
	
	      var margin = -(o.width + o.length) * o.scale * 2 + 'px'
	        , g = css(grp(), {position: 'absolute', top: margin, left: margin})
	        , i
	
	      function seg (i, dx, filter) {
	        ins(
	          g
	        , ins(
	            css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx})
	          , ins(
	              css(
	                vml('roundrect', {arcsize: o.corners})
	              , { width: r
	                , height: o.scale * o.width
	                , left: o.scale * o.radius
	                , top: -o.scale * o.width >> 1
	                , filter: filter
	                }
	              )
	            , vml('fill', {color: getColor(o.color, i), opacity: o.opacity})
	            , vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change
	            )
	          )
	        )
	      }
	
	      if (o.shadow)
	        for (i = 1; i <= o.lines; i++) {
	          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)')
	        }
	
	      for (i = 1; i <= o.lines; i++) seg(i)
	      return ins(el, g)
	    }
	
	    Spinner.prototype.opacity = function (el, i, val, o) {
	      var c = el.firstChild
	      o = o.shadow && o.lines || 0
	      if (c && i + o < c.childNodes.length) {
	        c = c.childNodes[i + o]; c = c && c.firstChild; c = c && c.firstChild
	        if (c) c.opacity = val
	      }
	    }
	  }
	
	  if (typeof document !== 'undefined') {
	    sheet = (function () {
	      var el = createEl('style', {type : 'text/css'})
	      ins(document.getElementsByTagName('head')[0], el)
	      return el.sheet || el.styleSheet
	    }())
	
	    var probe = css(createEl('group'), {behavior: 'url(#default#VML)'})
	
	    if (!vendor(probe, 'transform') && probe.adj) initVML()
	    else useCssAnimations = vendor(probe, 'animation')
	  }
	
	  return Spinner
	
	}));


/***/ })
]);
//# sourceMappingURL=component---src-templates-post-jsx-6a6ed408fcff80876c55.js.map