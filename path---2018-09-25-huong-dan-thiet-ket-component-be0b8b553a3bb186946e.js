webpackJsonp([0xd1cc7850afcb],{1357:function(n,a){n.exports={data:{markdownRemark:{html:'<blockquote>\n<p>Đây là tổng hợp những quan điểm thiết kế component sao cho tốt, chứ không phải là chuẩn mực gì hết, mang tính cá nhân người viết, không hề là chuẩn mực công nghiệp gì cả.</p>\n</blockquote>\n<p>Thử hình dung chúng ta có một component với khoảng một chục <code class="language-text">prop</code>, dựa trên các <code class="language-text">prop</code> truyền vào, component sẽ cho ra kết quả khác nhau, một nhu cầu tất yếu, tuy nhiên nếu hạn chế được ít chừng nào thì tốt chừng ấy, gần như số lượng <code class="language-text">prop</code> của component quá nhiều thì chúng ta sẽ không nhớ nổi cần những gì cho component đó, lúc nào chúng ta cũng phải mở ra đọc docs, đôi khi mở source ra để check logic bên trong nó.</p>\n<p>Nếu 1 component nào đây mà đang có quá nhiều <code class="language-text">prop</code> có thể truyền vào, thì nó đang có vẻ ôm đồm quá nhiều công việc, hãy nhớ đến nguyên tắc Single Responsibility Principle (SRP), tạm dịch là ai làm việc nấy, chia component đó ra thành các component nhỏ hơn, từng component giải quyết từng vấn đề.</p>\n<p>Gợi ý, thay vì tạo một component <code class="language-text">&lt;TableRow/&gt;</code>, <code class="language-text">&lt;TableCell/&gt;</code>, dùng kiểu export để ta có component dạng <code class="language-text">&lt;Table.Row/&gt;</code>, <code class="language-text">&lt;Table.Cell/&gt;</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> Table <span class="token keyword">from</span> <span class="token string">\'./Table\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> TableRow <span class="token keyword">from</span> <span class="token string">\'./TableRow\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> TableCell <span class="token keyword">from</span> <span class="token string">\'./TableCell\'</span><span class="token punctuation">;</span>\n\nTable<span class="token punctuation">.</span>Cell <span class="token operator">=</span> TableCell<span class="token punctuation">;</span>\nTable<span class="token punctuation">.</span>Row <span class="token operator">=</span> TableRow<span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span>\n  TableCell<span class="token punctuation">,</span>\n  TableRow\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Table<span class="token punctuation">;</span></code></pre>\n      </div>\n<p>Luôn dùng type check cho component, thời điểm hiện tại mình luôn khuyến khích dùng <code class="language-text">Flow</code>, nó đảm bảo rằng component sẽ được truyền đúng giá trị <code class="language-text">prop</code> nó cần, đồng thời lúc gõ ra mình cũng sẽ thấy được danh sách các prop của component đó trên editor</p>\n<p><img src="https://cdn-images-1.medium.com/max/800/1*cT7C0Tk53cilIYNWNo8KfA.gif" alt="Chỉ dẫn để thiết kế React Component"></p>\n<p>Luôn thống nhất trong hệ thống component đang build, không thể lúc vui bạn dùng prop tên <code class="language-text">disable</code> chổ khác dùng <code class="language-text">enable</code>, nếu được thì chỉ chọn 1 trong 2 thôi.</p>\n<p>Ví dụ khác, nếu component cho phép truyền vào biến màu sắc, chổ này bạn dùng <code class="language-text">variant=&quot;primary|secondary|danger&quot;</code>, chổ kia bạn lại dùng <code class="language-text">color=&quot;blue|grey|red&quot;</code> thì hết sức khó chịu cho người khác.</p>\n<p>Về cách đặt tên <code class="language-text">prop</code>, luôn đặt tên cho dễ hình dung được công dụng của component đó làm nhiệm vụ gì, ảnh hưởng gì đến component</p>\n<p>Giờ lấy ví dụ một component rất phổ biến <code class="language-text">&lt;Alert /&gt;</code></p>\n<p><img src="https://cdn-images-1.medium.com/max/1600/0*xkEnUeapJT4ut5r1.png" alt="Chỉ dẫn để thiết kế React Component"></p>\n<p>Thường chúng ta sẽ tạo ra component có các prop kiểu này</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Alert</span><span class="token punctuation">></span></span>Just <span class="token constant">FYI</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Alert</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Alert</span> <span class="token attr-name">success</span><span class="token punctuation">></span></span>It worked<span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Alert</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Alert</span> <span class="token attr-name">warning</span><span class="token punctuation">></span></span>Head\'s up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Alert</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Alert</span> <span class="token attr-name">danger</span><span class="token punctuation">></span></span>Watch out<span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Alert</span><span class="token punctuation">></span></span></code></pre>\n      </div>\n<p>Rất rõ ràng sạch sẽ, súc tích. Tuy nhiên nếu chúng ta dùng theo kiểu sau</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Alert</span> <span class="token attr-name">success</span> <span class="token attr-name">warning</span><span class="token punctuation">></span></span>It worked<span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Alert</span><span class="token punctuation">></span></span></code></pre>\n      </div>\n<p>Sẽ có những anh developer ngu ngu ngơ ngơ dùng như vậy thật đấy. Tất nhiên nếu chúng ta là người viết cái <code class="language-text">&lt;Alert/&gt;</code> chúng ta sẽ không đời nào truyền vào kiểu vậy. Một giải pháp được khuyến khích</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AlertBetter</span><span class="token punctuation">></span></span>Just <span class="token constant">FYI</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AlertBetter</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AlertBetter</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>It worked<span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AlertBetter</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AlertBetter</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Head\'s up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AlertBetter</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AlertBetter</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Watch out<span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AlertBetter</span><span class="token punctuation">></span></span></code></pre>\n      </div>\n<p>Nguồn tham khảo</p>\n<ul>\n<li>\n<p><a href="https://blog.kentcdodds.com/make-impossible-states-impossible-cf85b97795c1">https://blog.kentcdodds.com/make-impossible-states-impossible-cf85b97795c1</a></p>\n</li>\n<li>\n<p><a href="https://hackernoon.com/principles-of-component-api-prop-design-bb20cd58da54">https://hackernoon.com/principles-of-component-api-prop-design-bb20cd58da54</a></p>\n</li>\n</ul>',timeToRead:3,excerpt:"Đây là tổng hợp những quan điểm thiết kế component sao cho tốt, chứ không phải là chuẩn mực gì hết, mang tính cá nhân người viết, không hề…",frontmatter:{title:"Chỉ dẫn để thiết kế React Component",cover:"",date:"2018-09-25",category:null,tags:["javascript","react"],desc:"Tốt hơn, tốt nữa tốt mãi luôn là điều mình muốn, ngoài chuyện viết cho nó chạy đúng, viết thế nào tốt nhất luôn là mục tiêu khi dựng component của riêng mình"},fields:{slug:"/2018-09-25-huong-dan-thiet-ket-component"}}},pathContext:{slug:"/2018-09-25-huong-dan-thiet-ket-component",prev:!1,next:{frontmatter:{title:"Tạo slider component trong React Native bằng PanResponder",desc:"Tuts này sẽ hướng dẫn các bạn tạo một slider component đơn giản trong React Native bằng PanResponder",type:"post",category:null,tags:["javascript","react-native"],date:"2018-09-21",cover:""},fields:{slug:"/2018-09-21-huong-dan-react-native-dung-mot-slider-dung-voi-react-native"}}}}}});
//# sourceMappingURL=path---2018-09-25-huong-dan-thiet-ket-component-be0b8b553a3bb186946e.js.map