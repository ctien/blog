webpackJsonp([55],{"./node_modules/json-loader/index.js!./.cache/json/2018-03-19-react-patterns-can-ban.json":function(n,s){n.exports={data:{markdownRemark:{html:'<h2>Container/View</h2>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">class</span> <span class="token class-name">PlanetView</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">renderLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Loading<span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">renderError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>I\'m sorry<span class="token operator">!</span> Please <span class="token keyword">try</span> again<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">renderPlanet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span>name<span class="token punctuation">,</span> climate<span class="token punctuation">,</span> terrain<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>planet<span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Climate<span class="token punctuation">:</span> <span class="token punctuation">{</span>climate<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Terrain<span class="token punctuation">:</span> <span class="token punctuation">{</span>terrain<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>loading<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>planet<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderPlanet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">PlanetContainer</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    state <span class="token operator">=</span> <span class="token punctuation">{</span>loading<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">\'www.api.com/planet/5\'</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>\n                planet <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> planet<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                error <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> error<span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token operator">&lt;</span>PlanetView <span class="token punctuation">{</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Cách chia container và view thế này đang được sử dụng khá nhiều vì khả năng mở rộng sau này tốt, cái view chỉ cần quan tâm hiển thị dữ liệu như thế nào, phần xử lý logic sẽ do container đảm nhiệm.</p>\n<h2>Container / Branch / View</h2>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">const</span> LoadingView <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Loading<span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token keyword">const</span> ErrorView <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>I\'m sorry<span class="token operator">!</span> Please <span class="token keyword">try</span> again<span class="token punctuation">.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> PlanetView <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">,</span> climate<span class="token punctuation">,</span> terrain <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Climate<span class="token punctuation">:</span> <span class="token punctuation">{</span>climate<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Terrain<span class="token punctuation">:</span> <span class="token punctuation">{</span>terrain<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> PlanetBranch <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token punctuation">,</span> planet <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>loading<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LoadingView</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>planet<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>PlanetView <span class="token punctuation">{</span><span class="token operator">...</span>planet<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ErrorView</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">PlanetContainer</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span> loading<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"https://swapi.co/api/planets/5"</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>\n        planet <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> planet <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        error <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> error <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>PlanetBranch <span class="token punctuation">{</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> PlanetContainer<span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Chia cái View ra nhỏ hơn nữa thành Branch > View, việc quyết định chia nhỏ xuống bao nhiêu là vừa thì tùy theo trường hợp cụ thể để tính toán, với nguyên tắc bất di bất dịch anh ơi viết cho nó đơn giản dể hiểu chừng nào tốt chừng đấy, không phải ai cũng đủ trình thông minh để đọc hết code của anh.</p>\n<h2>Higher Order Components</h2>\n<p>Cái này có bài viết rồi, đọc lại bài cũ <a href="https://luubinhan.github.io/blog/2018-03-02-gioi-thieu-higher-order-component-trong-react">ở đây</a></p>\n<h2>Stateless function</h2>\n<p>Khuyến khích sử dụng vì có thể tái sử dụng component rất nhiều lần, trong component không được chứa <code>state</code>, chỉ nhận <code>prop</code> rồi return</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">const</span> Greeting <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Hi There<span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>Với <code>props</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">const</span> Greeting <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> \n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>color<span class="token punctuation">:</span> context<span class="token punctuation">.</span>color<span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Hi <span class="token punctuation">{</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>Có thể khai báo biến</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">const</span> Greeting <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span>\n    fontWeight<span class="token punctuation">:</span> <span class="token string">"bold"</span><span class="token punctuation">,</span>\n    color<span class="token punctuation">:</span> context<span class="token punctuation">.</span>color<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Có thể khai báo <code>defaultProps</code>, <code>propTypes</code>, <code>contextTypes</code> như thường</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code>Greeting<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired\n<span class="token punctuation">}</span>\nGreeting<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">"An.Luu"</span>\n<span class="token punctuation">}</span>\nGreeting<span class="token punctuation">.</span>contextTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n  color<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h2>JSX spread attributes</h2>\n<p>Giống như cách viết <code>...</code> để spread object, 2 Cách viết sau sẽ cho cùng kết quả</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n\n<span class="token comment" spellcheck="true">// dùng spread attributes</span>\n<span class="token operator">&lt;</span>main <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">{</span>className<span class="token punctuation">:</span> <span class="token string">"main"</span><span class="token punctuation">,</span> role<span class="token punctuation">:</span> <span class="token string">"main"</span><span class="token punctuation">,</span> children<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n</code></pre>\n      </div>\n<p>Cái đoạn trên chắc sẽ ít thấy ai viết, thường gặp như thế này nhiều hơn</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">const</span> FancyDiv <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"fancy"</span> <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n</code></pre>\n      </div>\n<p>Lưu ý thứ tự sẽ ảnh hưởng đến chuyện override, thí dụ nếu truyền <code>className</code> như sau sẽ override lại cái class <em>fancy</em></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FancyDiv</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>my-fancy-div<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token comment" spellcheck="true">// kết quả &lt;div class=\'my-fancy-div\'/></span>\n</code></pre>\n      </div>\n<p>Nhưng nếu khai báo <code>FancyDiv</code> như vầy thì sẽ ko bị override</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">const</span> FancyDiv <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> className<span class="token operator">=</span><span class="token string">"fancy"</span> <span class="token operator">/</span><span class="token operator">></span>\n</code></pre>\n      </div>\n<h2>render theo điều kiện đúng sai</h2>\n<p>Render khi điều kiện === true</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token punctuation">{</span>condition <span class="token operator">&amp;&amp;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Got it<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Render khi điều kiện === false</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token punctuation">{</span>condition <span class="token operator">||</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Got it<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Render với cập điều kiện đúng sai</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token punctuation">{</span> condition\n    <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Got it<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Not really<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p><a href="https://luubinhan.github.io/blog/2018-03-05-8-cach-render-component-trong-react">Một số kiểu viết với rendẻ theo điều kiện</a></p>\n<h2>Style component</h2>\n<p>Tên này tự chế cái tên này thôi, cũng rất hay sử dụng nên viết ra nếu bạn nào chưa biết có thể tham khảo. Nếu sử dụng qua Bootstrap bạn sẽ biết nó viết CSS theo kiểu inherite, một button có thể có nhiều style </p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>Để implement kiểu viết này, ta sử dụng thêm một thư viện <code>classnames</code>, viết thường cũng được mà dùng <code>classnames</code> tiện hơn</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">import</span> classnames <span class="token keyword">from</span> <span class="token string">\'classnames\'</span>\n\n<span class="token keyword">const</span> PrimaryBtn <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span>Btn <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> primary <span class="token operator">/</span><span class="token operator">></span>\n\n<span class="token keyword">const</span> Btn <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> className<span class="token punctuation">,</span> primary<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n    <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">classnames</span><span class="token punctuation">(</span>\n      <span class="token string">"btn"</span><span class="token punctuation">,</span>\n      primary <span class="token operator">&amp;&amp;</span> <span class="token string">"btn-primary"</span><span class="token punctuation">,</span>\n      className\n    <span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n    <span class="token attr-name">{...props}</span>\n  <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<h2>Event switch</h2>\n<p>Với component cần handle nhiều kiểu event khác nhau, tạo một hàm và dùng câu <code>switch</code> trong đó sẽ trực quan hơn</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token comment" spellcheck="true">// Thay vì</span>\n<span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./actions/doStuff"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">/* action stuff */</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>\n<span class="token function">handleMouseEnter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> hovered<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>\n<span class="token function">handleMouseLeave</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> hovered<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// Thì viết</span>\n<span class="token function">handleEvent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>type<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">switch</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token string">"click"</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./actions/doStuff"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">/* action dates */</span><span class="token punctuation">)</span>\n    <span class="token keyword">case</span> <span class="token string">"mouseenter"</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> hovered<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">case</span> <span class="token string">"mouseleave"</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> hovered<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">default</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`No case for event type "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">"`</span></span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>',
frontmatter:{date:"March 19, 2018",path:"/2018-03-19-react-patterns-can-ban",tags:["javascript","react"],title:"React Pattern căn bản",desc:"Một số Pattern hay sử dụng trong React"}}},pathContext:{prev:{excerpt:"Bài toán cần giải quyết Cái Popup Modal chúng ta có cái nút  , cái modal chắc chắn là ta phải set   để cố định nó với window, cái nội dung bên trong cái modal có thể scroll được Nút close này chúng ta sẽ set   cho nó lên góc phải đúng không Nhưng mà...",html:'<h2>Bài toán cần giải quyết</h2>\n<p>Cái Popup Modal chúng ta có cái nút <code>close</code>, cái modal chắc chắn là ta phải set <code>position: fixed</code> để cố định nó với window, cái nội dung bên trong cái modal có thể scroll được</p>\n<p><img src="https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1521121189/modal_unnmdd.png"></p>\n<p>Nút close này chúng ta sẽ set <code>position: absolute</code> cho nó lên góc phải đúng không</p>\n<p><img src="https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1521121253/hidden-close-button_p4cj3m.png"></p>\n<p>Nhưng mà khi scroll thì ta sẽ bị mất nút <code>close</code>, ta không thể set <code>position: fixed</code> cho cái nút close được, vì fixe position nghĩa là ta bắt nó định vị trí theo window.</p>\n<p>Nếu cái modal mà ta có set <code>transform</code> bất kỳ giá trị nào, thì nút <code>close</code> sẽ trở về với body</p>\n<p><img src="https://cdn.css-tricks.com/wp-content/uploads/2018/03/fixed.gif"></p>\n<h2>Giải pháp</h2>\n<p><code>position: sticky</code> cho nút close là xong, đơn giản quá.</p>\n<p><img src="https://cdn.css-tricks.com/wp-content/uploads/2018/03/sticky-scroll.gif"></p>',id:"E:/anluu/luckyluu/posts/2018-03-27-css-sticky-de-fixed-element/index.md absPath of file >>> MarkdownRemark",timeToRead:1,frontmatter:{date:"2018-03-27T13:35:13.234Z",path:"/2018-03-27-css-sticky-de-fixed-element",tags:["css"],title:"Trick Sử dụng Sticky trong CSS"}},next:{excerpt:"Trong demo chúng ta sẽ sử dụng Create React App Glamor React Router Amazon Cognito để authentication AWS amplify để tương tác với AWS Services Setup Khởi tạo project và các thư viện sẽ sử dụng Cài AWSMobile CLI Khởi tạo config AWS IAM Nó sẽ tạo...",html:'<p>Trong demo chúng ta sẽ sử dụng</p>\n<ul>\n<li>Create React App</li>\n<li>Glamor</li>\n<li>React Router</li>\n<li>Amazon Cognito để authentication</li>\n<li>AWS amplify để tương tác với AWS Services</li>\n</ul>\n<h2>Setup</h2>\n<p>Khởi tạo project và các thư viện sẽ sử dụng</p>\n<div class="gatsby-highlight">\n      <pre class="language-vim"><code>create<span class="token operator">-</span>react<span class="token operator">-</span>app react<span class="token operator">-</span>auth\n<span class="token keyword">cd</span> react<span class="token operator">-</span>auth\n\nnpm i react<span class="token operator">-</span>router<span class="token operator">-</span>dom glamor <span class="token operator">-</span><span class="token operator">-</span>save\n</code></pre>\n      </div>\n<p>Cài AWSMobile CLI</p>\n<div class="gatsby-highlight">\n      <pre class="language-vim"><code>npm i <span class="token operator">-</span>g awsmobile<span class="token operator">-</span>cli\n</code></pre>\n      </div>\n<p>Khởi tạo config AWS IAM</p>\n<div class="gatsby-highlight">\n      <pre class="language-vim"><code>awsmobile configure\nawsmobile init\n</code></pre>\n      </div>\n<p>Nó sẽ tạo project Mobile Hub và file aws-exports.js trong thư mục src. Tiếp theo, thêm user-signin và deploy các config mới</p>\n<div class="gatsby-highlight">\n      <pre class="language-vim"><code>awsmobile user<span class="token operator">-</span>signin enable\nawsmobile push\n</code></pre>\n      </div>\n<p><code>awsmobile user-signin enable</code> sẽ bật Amazon Congito trong project với các thiết đặt mặc định, bao gồm 2 factor authentication với SMS (sẽ thêm TOTP sau). Nếu muôn can thiệp các thiệt đặt, vào trực tiếp <a href="https://signin.aws.amazon.com/signin?redirect_uri=https%253A%252F%252Fconsole.aws.amazon.com%252Fcognito%252Fhome%253Fregion%253Dus-east-1%2526state%253DhashArgs%2523%2526isauthcode%253Dtrue&#x26;client_id=arn%253Aaws%253Aiam%253A%253A015428540659%253Auser%252Fcognito&#x26;forceMobileApp=0">Amazon Cognito</a> để chỉnh</p>\n<h1>Màn hình đăng ký</h1>\n<p><img src="https://cdn-images-1.medium.com/max/800/1*U_Oa4dWFeIqJ9TPJFx9lmQ.jpeg"></p>\n<p>Để tương tác với Amazon Cognito, chúng ta sẽ sử các hàm trong class <code>Auth</code> từ thư viện <code>aws-amplify</code>:</p>\n<p><code>signUp</code> - tạo user mới</p>\n<div class="gatsby-highlight">\n      <pre class="language-typescript"><code><span class="token function">signUp</span><span class="token punctuation">(</span>username<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">,</span> attributes<span class="token operator">?</span><span class="token punctuation">:</span> object<span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<p><code>confirmSignUp</code> - để xác nhận đăng ký thành công</p>\n<div class="gatsby-highlight">\n      <pre class="language-typescript"><code><span class="token function">confirmSignUp</span><span class="token punctuation">(</span>username<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">,</span> authenticationCode<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<p><code>signIn</code> - đăng nhập</p>\n<div class="gatsby-highlight">\n      <pre class="language-typescript"><code><span class="token function">signIn</span><span class="token punctuation">(</span>username<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<p><code>confirmSignIn</code> - xác nhận đăng nhập</p>\n<div class="gatsby-highlight">\n      <pre class="language-typescript"><code><span class="token function">confirmSignIn</span><span class="token punctuation">(</span>user<span class="token punctuation">:</span> object<span class="token punctuation">,</span> authenticationCode<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span>\n</code></pre>\n      </div>\n<p>Trong file root của project, thường là <code>index.js</code> </p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token comment" spellcheck="true">// một số import khác</span>\n<span class="token comment" spellcheck="true">// </span>\n<span class="token keyword">import</span> config <span class="token keyword">from</span> <span class="token string">\'./aws-exports\'</span>\n<span class="token keyword">import</span> Amplify <span class="token keyword">from</span> <span class="token string">\'aws-amplify\'</span>\n\nAmplify<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'root\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token function">registerServiceWorker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Screen <code>SignUp.js</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'glamor\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SignUp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    username<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    password<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    email<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    phone_number<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    authCode<span class="token punctuation">:</span> <span class="token string">\'\'</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>SignUp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>\n  container<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    display<span class="token punctuation">:</span> <span class="token string">\'flex\'</span><span class="token punctuation">,</span>\n    flexDirection<span class="token punctuation">:</span> <span class="token string">\'column\'</span><span class="token punctuation">,</span>\n    alignItems<span class="token punctuation">:</span> <span class="token string">\'center\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Flow sẽ như thế này, sau khi user cung cấp các thông tin trong form signup, chúng ta gọi đến phương thức <code>signUp</code>, user sẽ nhận được một mã code để verify quá SMS, user điền mã code này vào form verify, chúng ta verify cái mã code này bằng phương thức \'confirmSignUp\'</p>\n<p><img src="https://cdn-images-1.medium.com/max/1000/1*Z1sFmf-KG7iiHG_-VMieQw.jpeg"></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'glamor\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SignUp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    username<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    password<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    email<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    phone_number<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    authCode<span class="token punctuation">:</span> <span class="token string">\'\'</span>\n  <span class="token punctuation">}</span>\n  onChange <span class="token operator">=</span> <span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>Sign Up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>input\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">\'Username\'</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'username\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">\'Password\'</span>\n          type<span class="token operator">=</span><span class="token string">\'password\'</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">\'Email\'</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'email\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">\'Phone Number\'</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'phone_number\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Sign Up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        \n        <span class="token operator">&lt;</span>input\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">\'Authentication Code\'</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'authCode\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Confirm Sign Up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        \n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>\n  container<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    display<span class="token punctuation">:</span> <span class="token string">\'flex\'</span><span class="token punctuation">,</span>\n    flexDirection<span class="token punctuation">:</span> <span class="token string">\'column\'</span><span class="token punctuation">,</span>\n    alignItems<span class="token punctuation">:</span> <span class="token string">\'center\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  button<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    width<span class="token punctuation">:</span> <span class="token string">\'170px\'</span><span class="token punctuation">,</span>\n    padding<span class="token punctuation">:</span> <span class="token string">\'10px 0px\'</span><span class="token punctuation">,</span>\n    backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#ddd\'</span><span class="token punctuation">,</span>\n    cursor<span class="token punctuation">:</span> <span class="token string">\'pointer\'</span><span class="token punctuation">,</span>\n    borderRadius<span class="token punctuation">:</span> <span class="token string">\'3px\'</span><span class="token punctuation">,</span>\n    <span class="token string">\':hover\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#ededed\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  input<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>\n    marginBottom<span class="token punctuation">:</span> <span class="token string">\'10px\'</span><span class="token punctuation">,</span>\n    border<span class="token punctuation">:</span> <span class="token string">\'none\'</span><span class="token punctuation">,</span>\n    outline<span class="token punctuation">:</span> <span class="token string">\'none\'</span><span class="token punctuation">,</span>\n    borderBottom<span class="token punctuation">:</span> <span class="token string">\'2px solid #4CAF50\'</span><span class="token punctuation">,</span>\n    fontSize<span class="token punctuation">:</span> <span class="token string">\'16px\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'::placeholder\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      color<span class="token punctuation">:</span> <span class="token string">\'rgba(0, 0, 0, .3)\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> SignUp\n</code></pre>\n      </div>\n<p>Xong cái UI, giờ ta sử dụng 2 phương thức class <code>Auth</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token comment" spellcheck="true">// previous imports omitted</span>\n\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> Auth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'aws-amplify\'</span>\n\n  <span class="token comment" spellcheck="true">// previously shown code omitted</span>\n  signUp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> email<span class="token punctuation">,</span> phone_number <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state\n    Auth<span class="token punctuation">.</span><span class="token function">signUp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      username<span class="token punctuation">,</span>\n      password<span class="token punctuation">,</span>\n      attributes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        email<span class="token punctuation">,</span>\n        phone_number\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'successful sign up!\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error signing up: \'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  confirmSignUp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    Auth<span class="token punctuation">.</span><span class="token function">confirmSignUp</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>username<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>authCode<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'successful confirm sign up!\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error confirming signing up: \'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// </span>\n    <span class="token comment" spellcheck="true">// here we need to update the buttons to attach class methods to onClick event</span>\n    <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>signUp<span class="token punctuation">}</span><span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Sign Up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token operator">&lt;</span>input\n      <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n      placeholder<span class="token operator">=</span><span class="token string">\'Authentication Code\'</span>\n      onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'authCode\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n    <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>confirmSignUp<span class="token punctuation">}</span><span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Confirm Sign Up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Cuối cùng import và sử dụng component trong <code>App.js</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> logo <span class="token keyword">from</span> <span class="token string">\'./logo.svg\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./App.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> SignUp <span class="token keyword">from</span> <span class="token string">\'./SignUp\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>logo<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App-logo<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Welcome to React<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SignUp</span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Các thông tin của user sẽ được lại trong \'Manage your User Pools\', vào Amazon Coginito dashboard, chọn ứng dụng đã setup, chọn mục \'Users and Settings\'</p>\n<p><img src="https://cdn-images-1.medium.com/max/1000/1*XQfNfYhaGlkD0wxEPtr8bQ.jpeg"></p>\n<h1>Sign In</h1>\n<p>Sign in thì cũng tương tự như signup, chúng ta sử dụng <code>Auth.signIn(username, password)</code>, trả về object nếu thành công, sau đó nó sẽ gởi SMS tới user với code xác nhận lần nữa, verify bằng <code>confirmSignIn</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token function">signIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  Auth<span class="token punctuation">.</span><span class="token function">signIn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>username<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>password<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>user <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> user <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error signing in! :\'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">confirmSignIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  Auth<span class="token punctuation">.</span><span class="token function">confirmSignIn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>authCode<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>userData <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'userdata: \'</span><span class="token punctuation">,</span> userData<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error confirming sign in!: \'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>User data nằm trong cục dữ liệu trả về sau khi gọi hàm <code>confirmSignIn</code></p>\n<p><img src="https://cdn-images-1.medium.com/max/800/1*yBT-_MdRPCIj5KN3PnyFmw.png"></p>\n<p>Có rất nhiều cách để lấy thông tin user đang đăng nhập, có thể dùng <code>Auth.currentAuthenticatedUser()</code> là dễ nhất, toàn bộ API có thể tham khảo <a href="https://aws.github.io/aws-amplify/api/classes/authclass.html">ở đây</a></p>\n<p>Kết thúc phần 1 ở đây, phần 2 tiếp tục với Routing và TOTP để có thể làm Google Authenticator.</p>\n<hr>\n<p>Bài dịch từ tác giả Nader Dabit trên HackerNoon</p>',
id:"E:/anluu/luckyluu/posts/2018-03-16-react-authentication-phan-1/index.md absPath of file >>> MarkdownRemark",timeToRead:5,frontmatter:{date:"2018-03-16T13:35:13.234Z",path:"/2018-03-16-react-authentication-phan-1",tags:["javascript","react"],title:"React Authentication với Amazon Cognito - Phần 1"}}}}}});
//# sourceMappingURL=path---2018-03-19-react-patterns-can-ban-3b566152f8f85aaca313.js.map