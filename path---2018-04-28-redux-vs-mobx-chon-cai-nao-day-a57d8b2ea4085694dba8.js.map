{"version":3,"sources":["webpack:///path---2018-04-28-redux-vs-mobx-chon-cai-nao-day-a57d8b2ea4085694dba8.js","webpack:///./.cache/json/2018-04-28-redux-vs-mobx-chon-cai-nao-day.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/2018-04-28-redux-vs-mobx-chon-cai-nao-day.json","module","exports","data","markdownRemark","html","frontmatter","date","path","tags","title","desc","pathContext","prev","excerpt","id","timeToRead","next"],"mappings":"AAAAA,cAAc,KAERC,mGACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,+tFAAAC,aAAyvFC,KAAA,iBAAAC,KAAA,6CAAAC,MAAA,sBAAAC,MAAA,iCAAAC,KAAA,yHAAkRC,aAAgBC,MAAQC,QAAA,8PAAAT,KAAA,y0sBAAkwtBU,GAAA,iHAAAC,WAAA,EAAAV,aAAkyBC,KAAA,2BAAAC,KAAA,8CAAAC,MAAA,sBAAAC,MAAA,wCAAoKO,MAASH,QAAA,4PAAAT,KAAA;AAAk5dU,GAAA,sGAAAC,WAAA,EAAAV,aAAuqBC,KAAA,2BAAAC,KAAA,mCAAAC,MAAA,sBAAAC,MAAA","file":"path---2018-04-28-redux-vs-mobx-chon-cai-nao-day-a57d8b2ea4085694dba8.js","sourcesContent":["webpackJsonp([48],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/2018-04-28-redux-vs-mobx-chon-cai-nao-day.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Nói một cách ngắn gọn: MobX dành project tầm 1 - 3 người làm, các app nhỏ. Redux dành cho tất cả những yêu cầu cao hơn.</p>\\n<p>Nếu bạn chỉ quan tâm đến thể thì có thể ko cần đọc tiếp phần sau, còn nếu tò mó thì cứ đọc tiếp.</p>\\n<h2>Redux</h2>\\n<h3>Ưu</h3>\\n<ul>\\n<li>Dễ test</li>\\n<li>Có thể đoán được những state nào bị ảnh hương -> dễ debug</li>\\n<li>Mở rộng tốt, phù hợp team bự</li>\\n<li>Kiên định, data flow một chiều duy nhất</li>\\n</ul>\\n<h3>Nhược</h3>\\n<ul>\\n<li>Quá cứng nhắc, chúng ta phải tuân thủ các pattern của nó, quá trình code sẽ mất nhiều thời gian hơn cho một chuyện hết sức đơn giản</li>\\n<li>Học hơi khó khăn, cần nắm rõ kỹ thuật của Flux, thuần thục ES6, ES7 để sử dụng hiệu quả nhất.</li>\\n</ul>\\n<h2>MobX</h2>\\n<h3>Ưu</h3>\\n<ul>\\n<li>Code nhanh, tự đọng bind dữ liệu 2 chiều luôn</li>\\n<li>Không cần quan tâm đến Flux</li>\\n<li>Linh động trong việc cho phép tự quản lý state</li>\\n</ul>\\n<h3>Nhược</h3>\\n<ul>\\n<li>Khi team phình ra, dự án bự lên <strong>CHỈ</strong> có thể maintain nổi nếu từ đầu tổ chức tốt, ý là thằng code trước mà để lại sh*t thì coi như ăn cho hết</li>\\n<li>Quá tự do cũng mệt, dễ dẫn đến chuyện viết theo kiểu hơi chuối, muốn thích viết sau viết mà</li>\\n</ul>\\n<h2>Một vài nhận định từ các đồng môn</h2>\\n<p>Phần lớn người nào học và sử dụng Redux điều cảm thấy, ôi trời ơi sao phải setup lắm thứ thế này, nào action, nào reducer, nào store, nào connect, dispatch. Có những bạn đã từng làm nhiều Angular thường xuyên phàn nàn chuyện rất ghét việc binding dữ liệu 2 chiều (đọc-ghi) trong Angular, với những dự án lớn việc này làm chuyện debug hết sức khó khăn khi có lỗi. Đó là lý do Flux được giới thiệu, rồi khi Redux được giới thiệu, cộng đồng js dev chuyển qua xài nó. Với những dự án nhỏ, sử dụng dao to búa lớn như Redux để giết kiến thì ko cần thiết, hãy cứ đơn giản <code class=\\\"language-text\\\">setState</code> thôi.</p>\\n<p>MobX là một sự lựa chọn khác, một option để quản lý state cho dự án nhỏ. Nó sang mang đến những lợi ích thấy rõ khi kick off các dự án không quá bự. Thực sự mình chưa xài MobX nhiều nên việc lợi ích thấy rõ thì mình mong bạn nào đã dùng nhiều chỉ giáo.</p>\\n<p>DHTML -> JQuery -> Backbone vs. Knockout vs. Ember -> Meteor -> Angular vs React. Quá trình <em>thăng tiến</em> của front-end dev là thế. MobX là một công cụ tốt ở thời điểm hiện tại, hy vọng nó không như Knockout JS và các thư viện MVVM trước đây, mọi thứ mới bắt đầu vận hành mượt mà như một phép màu, 6-12 tháng sau, phép màu và tự do trở thành thảm họa cho những người dev kế thừa</p>\\n<p>Tác Giả: Sooraj Chandran\\nLink bài gốc: <a href=\\\"https://codeburst.io/mobx-vs-redux-with-react-a-noobs-comparison-and-questions-382ba340be09\\\">https://codeburst.io/mobx-vs-redux-with-react-a-noobs-comparison-and-questions-382ba340be09</a></p>\",\"frontmatter\":{\"date\":\"April 28, 2018\",\"path\":\"/2018-04-28-redux-vs-mobx-chon-cai-nao-day\",\"tags\":[\"javascript\",\"react\"],\"title\":\"Redux vs Mobx chọn cái nào đây\",\"desc\":\"Khi nhắc tới thư viện để quản lý state cho một app js, thì chúng sẽ hay rất phân vân giữa 2 lựa chọn Redux hay Mobx\"}}},\"pathContext\":{\"prev\":{\"excerpt\":\"Chúng ta sẽ lượt qua các vấn đề sau Cách viết   không hợp lý và tại sao   không phải vị cứu tinh Thay đổi  DOM  quá nhiều lần Sử dụng  events  và  calbacks  và PureComponent Để ngăn việc  render  không cần thiết chúng ta sẽ can thiệp bên trong hook...\",\"html\":\"<p>Chúng ta sẽ lượt qua các vấn đề sau</p>\\n<ol>\\n<li>Cách viết <code class=\\\"language-text\\\">shouldComponentUpdate</code> không hợp lý và tại sao <code class=\\\"language-text\\\">PureComponent</code> không phải vị cứu tinh</li>\\n<li>Thay đổi <strong>DOM</strong> quá nhiều lần</li>\\n<li>Sử dụng <strong>events</strong> và <strong>calbacks</strong></li>\\n</ol>\\n<h2><code class=\\\"language-text\\\">shouldComponentUpdate</code> và PureComponent</h2>\\n<p>Để ngăn việc <em>render</em> không cần thiết chúng ta sẽ can thiệp bên trong hook <code class=\\\"language-text\\\">shouldComponentUpdate</code>, nó nhận vào <code class=\\\"language-text\\\">props</code> sẽ thay đổi và <code class=\\\"language-text\\\">state</code> mới, nếu hàm này return <code class=\\\"language-text\\\">true</code>, hàm <code class=\\\"language-text\\\">render</code> sẽ được gọi, và ngược lại.</p>\\n<h3>Vấn đề</h3>\\n<p>Hãy thử xem xét cách viết <code class=\\\"language-text\\\">shouldComponentUpdate</code> thường thấy </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ShouldNotUpdate</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  \\n  <span class=\\\"token function\\\">shouldComponentUpdate</span><span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">,</span> nextState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">!==</span> nextProps<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">;</span>    \\n  <span class=\\\"token punctuation\\\">}</span>\\n  \\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`I should be rendered only 1 time. actual times rendered: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token operator\\\">++</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Kết quả trả về sẽ không phải counter = 1, nghĩa là hàm render thực sự sẽ chạy rất nhiều lần, tại sao lại vậy? bởi vì <code class=\\\"language-text\\\">this.props.children !== nextProps.children</code> sẽ luôn luôn trả về <code class=\\\"language-text\\\">true</code>, React sẽ tạo ra một instance mới, 1 <strong>ReactElement mới</strong> mỗi khi render</p>\\n<p>Còn PureComponent thì sao, thay vì return boolean value trong <code class=\\\"language-text\\\">shouldComponentUpdate</code>, nó sẽ return kết quả của so sánh <code class=\\\"language-text\\\">props</code> và <code class=\\\"language-text\\\">state</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ShouldNotUpdate</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>PureComponent</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  \\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`I should be rendered only 1 time. actual times rendered: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token operator\\\">++</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Trong thực tế cho thấy PureComponent không mấy hữu dụng, không biết là tính năng hay là bug mà PureComponent sẽ không chặn việc render ở đây.</p>\\n<h3>Giải pháp</h3>\\n<p>Một giải pháp có thể nghĩ ngay tới là thực hiện một phép so sánh toàn diện, cái này thật ra là chạy, nhưng sẽ vướng 2 khuyết điểm</p>\\n<ol>\\n<li>So sánh toàn diện thì tốn nhiều thời gian code, ì ạch, thậm chí còn làm performance tệ hơn</li>\\n<li>Phụ thuộc vào phiên bản React hiện tại đang sử dụng, nếu có release mới, khả năng là ko còn sử dụng được</li>\\n</ol>\\n<p>Theo quan điểm cá nhân, so sánh toàn diện không nên áp dụng.</p>\\n<p>Evan You tác giả của Vue.js trong <a href=\\\"https://github.com/vuejs/vue/issues/4255#issuecomment-274143903\\\">trả lời này</a> có đề cập việc sử dụng <code class=\\\"language-text\\\">shouldComponentUpdate</code> có thể bỏ qua vì nó không mấy thực tế, có rất nhiều trường hợp có thể bị bỏ xót nếu để mặc cho React Element tự xác định state nào đã change trong component.</p>\\n<p>Thay vì kiểm tra <code class=\\\"language-text\\\">this.props.children !== nextProps.children</code>, sử dụng các <code class=\\\"language-text\\\">props</code> khác nhau để xác định state change, khuyến khích dùng <em>string/numeric</em> để so sánh cho lẹ</p>\\n<h2>Thay đổi DOM quá nhiều lần</h2>\\n<p>Có bao giờ bạn từng sử dụng một <em>component</em> nhiều lần trong app, cảm thấy app hơi lag? Animation cảm giác chạy hơi khực khực?</p>\\n<h3>Vấn đề</h3>\\n<p>Khi xây các component phức tạp, bạn sẽ phải xào nấo DOM một chút, khả năng sẽ vướng vào 2 issue sau</p>\\n<ol>\\n<li><a href=\\\"https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing\\\">Trigger layout</a></li>\\n<li><a href=\\\"https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing#avoid_layout_thrashing\\\">Layout Thrashing</a></li>\\n</ol>\\n<p>Hãy chạy thử hiệu ứng đang làm cho một component <strong>Collapse</strong> với khoản vài chục cái instance, sau đó chọn 6x slowdown trên dev tool để thấy sự khác biệt, 6x slowdown là giá trị tương ứng với tốc độ khi xem trên điện thoại</p>\\n<p><a href=\\\"https://cdn-images-1.medium.com/max/800/1*2xOju9iTPGs22U0joILHmQ.png\\\"></a></p>\\n<h3>Giải pháp</h3>\\n<p>Mỗ sẽ một component <strong>Collapse</strong>, ta thường sẽ làm là thay đổi độ cao của nó</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token function\\\">updateHeight</span><span class=\\\"token punctuation\\\">(</span>isOpen<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isOpen<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>contentEl<span class=\\\"token punctuation\\\">.</span>scrollHeight<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">px`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'0px'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Có 2 điểm cần lưu ý</p>\\n<ol>\\n<li>Chúng ta thay đổi <em>height</em>, là chúng ta trigger chuyện sắp xếp lại Layout. Nếu chúng ta thay đổi <code class=\\\"language-text\\\">transform</code>, chúng ta chỉ sẽ trigger <strong>Composite</strong> và nhìn nó sẽ smooth hơn.</li>\\n<li>Dòng <code class=\\\"language-text\\\">this.containerEl.style.height = ${this.contentEl.scrollHeight}px;</code> là một ví dụ điển hình của <strong>Layout Thrashing</strong>, chúng ta đọc giá trị độ cao hiện tại, rồi lấy giá trị đó update cho một đối tượng DOM, nhân số lần này lên với số lượng component <strong>Collapse</strong> sẽ là một số lần đáng quan tâm. Sẽ tốt hơn nếu chúng ta chỉ đọc một lần rồi gán giá trị một lượt luôn.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token function\\\">updateHeight</span><span class=\\\"token punctuation\\\">(</span>isOpen<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token function\\\">cancelAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isOpen<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">requestAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// đọc</span>\\n      <span class=\\\"token keyword\\\">const</span> height <span class=\\\"token operator\\\">=</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>contentEl<span class=\\\"token punctuation\\\">.</span>scrollHeight<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">px`</span></span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">requestAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">requestAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token comment\\\">// gán giá trị</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> height<span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'0px'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Có thể sử dụng thư viện <a href=\\\"https://github.com/wilsonpage/fastdom\\\">Fastdom</a> thay vì tự viết</p>\\n<h2>Callback</h2>\\n<p>Khi attact một function vào bất kỳ event nào trên DOM, nếu có thêm <code class=\\\"language-text\\\">debounced</code> hoặc <code class=\\\"language-text\\\">throttled</code> sẽ tốt hơn, giảm tải số lần gọi đến function này đến mức thấp nhất.</p>\\n<p>Cách viết rất thường thấy</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'resize'</span><span class=\\\"token punctuation\\\">,</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">throttle</span><span class=\\\"token punctuation\\\">(</span>callback<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>Nhưng tại sao không sử dụng nó trong component callback</p>\\n<h3>Vấn đề</h3>\\n<p>Xét component sau</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">UnleashedOne</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Chúng ta đang lắng nghe tất tần tật mỗi khi có thay đổi trên <code class=\\\"language-text\\\">input</code>, như vậy thực sự có cần thiết không?</p>\\n<h3>Giải pháp</h3>\\n<p>Để giải quyết vấn đề trên, có thểm viết lại component</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">LeashedOne</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChangeDebounce <span class=\\\"token operator\\\">=</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">debounce</span><span class=\\\"token punctuation\\\">(</span>value <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChangeDebounce</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Đợi user nhập xong đi rồi xử lý sự kiện, ở đây sử dụng <code class=\\\"language-text\\\">_.debounce</code>, <code class=\\\"language-text\\\">_.throttle</code> từ thư viện <strong>lodash</strong>, sự khác nhau của 2 thằng này thì đọc thểm trên docs của nó.</p>\\n<p>Nếu bị nghiện performance, bạn có thể chia sẽ thêm một số tip với mình. Thanks You</p>\\n<p>Tác Giả: Noam Elboim\\nLink bài gốc: <a href=\\\"https://medium.com/myheritage-engineering/how-to-greatly-improve-your-react-app-performance-e70f7cbbb5f6\\\">https://medium.com/myheritage-engineering/how-to-greatly-improve-your-react-app-performance-e70f7cbbb5f6</a></p>\",\"id\":\"E:/anluu/luckyluu/posts/2018-05-01-cai-thien-performance-react-app/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":5,\"frontmatter\":{\"date\":\"2018-05-01T13:35:13.234Z\",\"path\":\"/2018-05-01-cai-thien-performance-react-app\",\"tags\":[\"javascript\",\"react\"],\"title\":\"Cải thiện performance của React App\"}},\"next\":{\"excerpt\":\"Nhúng Google Maps vào web site bình thường thì quá sức đơn giản, để sử dụng với React Js thì hơi vụng công một chút. Để sử dụng Google Maps API, ta chỉ cần load đoạn js từ googleapis, chèn thêm một cái   với id là  map  chằng hạn. Đoạn script của...\",\"html\":\"<p>Nhúng Google Maps vào web site bình thường thì quá sức đơn giản, để sử dụng với React Js thì hơi vụng công một chút.</p>\\n<p>Để sử dụng Google Maps API, ta chỉ cần load đoạn js từ googleapis, chèn thêm một cái <code class=\\\"language-text\\\">div</code> với id là <em>map</em> chằng hạn.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token doctype\\\">&lt;!DOCTYPE html></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>title</span><span class=\\\"token punctuation\\\">></span></span>Basic Google Map on a web page<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>title</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>map<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&amp;<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>html</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>Đoạn script của google sẽ được load <strong>sau khi</strong> có static DOM, cái <code class=\\\"language-text\\\">&lt;div id=&#39;map&#39; /&gt;</code> lúc đó đã tồn tại và có thể được sử dụng thoải mái bởi google maps api.</p>\\n<p>Nhưng mà trong React JS thì DOM được render và re-render từ <strong>virtual DOM</strong>, một file html của app React JS thường là chỉ có thế này</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token doctype\\\">&lt;!DOCTYPE html></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>title</span><span class=\\\"token punctuation\\\">></span></span>Simple React app<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>title</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>app<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>js/app.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>html</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>Tức là nếu làm như cách bình thường ở trên thì cái <code class=\\\"language-text\\\">&lt;div id=&#39;map&#39; /&gt;</code> chưa hề tồn tại trên xã hội.</p>\\n<h2>Load bất đồng bộ (Asynchronous Loading)</h2>\\n<p>Cả hai đoạn script React và Google maps đều phải tốn thời gian để load, chúng ta phải đảm bảo Google Map chỉ được tạo ra <strong>sau khi</strong> React app đã khởi tạo và render DOM xong. Thoạt nhìn thì dùng asyn google map sẽ là một giải pháp.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&amp;callback=initMap<span class=\\\"token punctuation\\\">\\\"</span></span>\\n        <span class=\\\"token attr-name\\\">async</span> <span class=\\\"token attr-name\\\">defer</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>Chúng ta thêm <code class=\\\"language-text\\\">asyn</code> và <code class=\\\"language-text\\\">defer</code> để load đoạn googleapis này sau cùng, đồng thời thêm hàm <em>callback</em> sau khi load xong. Nếu <code class=\\\"language-text\\\">initMap</code> là một <em>global function</em> thì ta có thể gọi nó bên trong React Component</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">initMap</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  map <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">google<span class=\\\"token punctuation\\\">.</span>maps<span class=\\\"token punctuation\\\">.</span>Map</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'map'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Buồn thay! Không chạy đâu các bạn ạ. Ngay cả khi Google Maps chỉ được load sau khi React được load, không có nghĩa là toàn bộ cây DOM đã được <em>mount</em> và <em>render</em> khi thực thi hàm <em>callback</em>.</p>\\n<p>Ok, chúng ta cần giải pháp tốt hơn. Về cơ bản </p>\\n<blockquote>\\n<p>chúng ta muốn load đoạn script của google ngay khi <em>component</em> có sử dụng đến google api được <strong>mounted</strong></p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">componentDidMount <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// trỏ global function window.initMap này vào hàm initMap của component để thằng google có thể  gọi trong hàm callback</span>\\n    window<span class=\\\"token punctuation\\\">.</span>initMap <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>initMap<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// chèn ngay đoạn js của googleapis cho anh xài ngay.</span>\\n    <span class=\\\"token function\\\">loadJS</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&amp;callback=initMap'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function-variable function\\\">initMap</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    map <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">google<span class=\\\"token punctuation\\\">.</span>maps<span class=\\\"token punctuation\\\">.</span>Map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>refs<span class=\\\"token punctuation\\\">.</span>map<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getDOMNode</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">/* các options khác*/</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nrender <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">ref</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>map<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token style-attr language-css\\\"><span class=\\\"token attr-name\\\"> <span class=\\\"token attr-name\\\">style</span></span><span class=\\\"token punctuation\\\">=\\\"</span><span class=\\\"token attr-value\\\"><span class=\\\"token property\\\">height</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'500px'</span>, <span class=\\\"token property\\\">width</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'500px'</span></span><span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token operator\\\">&lt;</span>⁄div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>⁄div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// hàm này để chèn thêm &lt;script /> sau khi gọi</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">loadJS</span><span class=\\\"token punctuation\\\">(</span>src<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> ref <span class=\\\"token operator\\\">=</span> window<span class=\\\"token punctuation\\\">.</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementsByTagName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"script\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">var</span> script <span class=\\\"token operator\\\">=</span> window<span class=\\\"token punctuation\\\">.</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createElement</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"script\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    script<span class=\\\"token punctuation\\\">.</span>src <span class=\\\"token operator\\\">=</span> src<span class=\\\"token punctuation\\\">;</span>\\n    script<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">async</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n    ref<span class=\\\"token punctuation\\\">.</span>parentNode<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">insertBefore</span><span class=\\\"token punctuation\\\">(</span>script<span class=\\\"token punctuation\\\">,</span> ref<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Để ý là ta thêm <code class=\\\"language-text\\\">ref=&#39;map&#39;</code> để trỏ tới đúng cái <code class=\\\"language-text\\\">div</code> sử dụng để đưa vào cho Google Map constructor bằng hàm <code class=\\\"language-text\\\">this.refs.map.getDOMNode()</code> ngay khi DOM đã render.</p>\\n<p>Vậy là xong. Google Map đã có thể hoạt động trơn tru với React Component, đúng hơn là với Virtual DOM.</p>\\n<p>Tác giả: klaasnotfound\\nLink bài gốc: <a href=\\\"http://www.klaasnotfound.com/2016/11/06/making-google-maps-work-with-react/\\\">http://www.klaasnotfound.com/2016/11/06/making-google-maps-work-with-react/</a></p>\",\"id\":\"E:/anluu/luckyluu/posts/2018-04-27-google-maps-va-react/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":3,\"frontmatter\":{\"date\":\"2018-04-27T13:35:13.234Z\",\"path\":\"/2018-04-27-google-maps-va-react\",\"tags\":[\"javascript\",\"react\"],\"title\":\"Google Maps và React\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2018-04-28-redux-vs-mobx-chon-cai-nao-day-a57d8b2ea4085694dba8.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Nói một cách ngắn gọn: MobX dành project tầm 1 - 3 người làm, các app nhỏ. Redux dành cho tất cả những yêu cầu cao hơn.</p>\\n<p>Nếu bạn chỉ quan tâm đến thể thì có thể ko cần đọc tiếp phần sau, còn nếu tò mó thì cứ đọc tiếp.</p>\\n<h2>Redux</h2>\\n<h3>Ưu</h3>\\n<ul>\\n<li>Dễ test</li>\\n<li>Có thể đoán được những state nào bị ảnh hương -> dễ debug</li>\\n<li>Mở rộng tốt, phù hợp team bự</li>\\n<li>Kiên định, data flow một chiều duy nhất</li>\\n</ul>\\n<h3>Nhược</h3>\\n<ul>\\n<li>Quá cứng nhắc, chúng ta phải tuân thủ các pattern của nó, quá trình code sẽ mất nhiều thời gian hơn cho một chuyện hết sức đơn giản</li>\\n<li>Học hơi khó khăn, cần nắm rõ kỹ thuật của Flux, thuần thục ES6, ES7 để sử dụng hiệu quả nhất.</li>\\n</ul>\\n<h2>MobX</h2>\\n<h3>Ưu</h3>\\n<ul>\\n<li>Code nhanh, tự đọng bind dữ liệu 2 chiều luôn</li>\\n<li>Không cần quan tâm đến Flux</li>\\n<li>Linh động trong việc cho phép tự quản lý state</li>\\n</ul>\\n<h3>Nhược</h3>\\n<ul>\\n<li>Khi team phình ra, dự án bự lên <strong>CHỈ</strong> có thể maintain nổi nếu từ đầu tổ chức tốt, ý là thằng code trước mà để lại sh*t thì coi như ăn cho hết</li>\\n<li>Quá tự do cũng mệt, dễ dẫn đến chuyện viết theo kiểu hơi chuối, muốn thích viết sau viết mà</li>\\n</ul>\\n<h2>Một vài nhận định từ các đồng môn</h2>\\n<p>Phần lớn người nào học và sử dụng Redux điều cảm thấy, ôi trời ơi sao phải setup lắm thứ thế này, nào action, nào reducer, nào store, nào connect, dispatch. Có những bạn đã từng làm nhiều Angular thường xuyên phàn nàn chuyện rất ghét việc binding dữ liệu 2 chiều (đọc-ghi) trong Angular, với những dự án lớn việc này làm chuyện debug hết sức khó khăn khi có lỗi. Đó là lý do Flux được giới thiệu, rồi khi Redux được giới thiệu, cộng đồng js dev chuyển qua xài nó. Với những dự án nhỏ, sử dụng dao to búa lớn như Redux để giết kiến thì ko cần thiết, hãy cứ đơn giản <code class=\\\"language-text\\\">setState</code> thôi.</p>\\n<p>MobX là một sự lựa chọn khác, một option để quản lý state cho dự án nhỏ. Nó sang mang đến những lợi ích thấy rõ khi kick off các dự án không quá bự. Thực sự mình chưa xài MobX nhiều nên việc lợi ích thấy rõ thì mình mong bạn nào đã dùng nhiều chỉ giáo.</p>\\n<p>DHTML -> JQuery -> Backbone vs. Knockout vs. Ember -> Meteor -> Angular vs React. Quá trình <em>thăng tiến</em> của front-end dev là thế. MobX là một công cụ tốt ở thời điểm hiện tại, hy vọng nó không như Knockout JS và các thư viện MVVM trước đây, mọi thứ mới bắt đầu vận hành mượt mà như một phép màu, 6-12 tháng sau, phép màu và tự do trở thành thảm họa cho những người dev kế thừa</p>\\n<p>Tác Giả: Sooraj Chandran\\nLink bài gốc: <a href=\\\"https://codeburst.io/mobx-vs-redux-with-react-a-noobs-comparison-and-questions-382ba340be09\\\">https://codeburst.io/mobx-vs-redux-with-react-a-noobs-comparison-and-questions-382ba340be09</a></p>\",\"frontmatter\":{\"date\":\"April 28, 2018\",\"path\":\"/2018-04-28-redux-vs-mobx-chon-cai-nao-day\",\"tags\":[\"javascript\",\"react\"],\"title\":\"Redux vs Mobx chọn cái nào đây\",\"desc\":\"Khi nhắc tới thư viện để quản lý state cho một app js, thì chúng sẽ hay rất phân vân giữa 2 lựa chọn Redux hay Mobx\"}}},\"pathContext\":{\"prev\":{\"excerpt\":\"Chúng ta sẽ lượt qua các vấn đề sau Cách viết   không hợp lý và tại sao   không phải vị cứu tinh Thay đổi  DOM  quá nhiều lần Sử dụng  events  và  calbacks  và PureComponent Để ngăn việc  render  không cần thiết chúng ta sẽ can thiệp bên trong hook...\",\"html\":\"<p>Chúng ta sẽ lượt qua các vấn đề sau</p>\\n<ol>\\n<li>Cách viết <code class=\\\"language-text\\\">shouldComponentUpdate</code> không hợp lý và tại sao <code class=\\\"language-text\\\">PureComponent</code> không phải vị cứu tinh</li>\\n<li>Thay đổi <strong>DOM</strong> quá nhiều lần</li>\\n<li>Sử dụng <strong>events</strong> và <strong>calbacks</strong></li>\\n</ol>\\n<h2><code class=\\\"language-text\\\">shouldComponentUpdate</code> và PureComponent</h2>\\n<p>Để ngăn việc <em>render</em> không cần thiết chúng ta sẽ can thiệp bên trong hook <code class=\\\"language-text\\\">shouldComponentUpdate</code>, nó nhận vào <code class=\\\"language-text\\\">props</code> sẽ thay đổi và <code class=\\\"language-text\\\">state</code> mới, nếu hàm này return <code class=\\\"language-text\\\">true</code>, hàm <code class=\\\"language-text\\\">render</code> sẽ được gọi, và ngược lại.</p>\\n<h3>Vấn đề</h3>\\n<p>Hãy thử xem xét cách viết <code class=\\\"language-text\\\">shouldComponentUpdate</code> thường thấy </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ShouldNotUpdate</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  \\n  <span class=\\\"token function\\\">shouldComponentUpdate</span><span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">,</span> nextState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">!==</span> nextProps<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">;</span>    \\n  <span class=\\\"token punctuation\\\">}</span>\\n  \\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`I should be rendered only 1 time. actual times rendered: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token operator\\\">++</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Kết quả trả về sẽ không phải counter = 1, nghĩa là hàm render thực sự sẽ chạy rất nhiều lần, tại sao lại vậy? bởi vì <code class=\\\"language-text\\\">this.props.children !== nextProps.children</code> sẽ luôn luôn trả về <code class=\\\"language-text\\\">true</code>, React sẽ tạo ra một instance mới, 1 <strong>ReactElement mới</strong> mỗi khi render</p>\\n<p>Còn PureComponent thì sao, thay vì return boolean value trong <code class=\\\"language-text\\\">shouldComponentUpdate</code>, nó sẽ return kết quả của so sánh <code class=\\\"language-text\\\">props</code> và <code class=\\\"language-text\\\">state</code></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ShouldNotUpdate</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>PureComponent</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  \\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`I should be rendered only 1 time. actual times rendered: </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token operator\\\">++</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>counter<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Trong thực tế cho thấy PureComponent không mấy hữu dụng, không biết là tính năng hay là bug mà PureComponent sẽ không chặn việc render ở đây.</p>\\n<h3>Giải pháp</h3>\\n<p>Một giải pháp có thể nghĩ ngay tới là thực hiện một phép so sánh toàn diện, cái này thật ra là chạy, nhưng sẽ vướng 2 khuyết điểm</p>\\n<ol>\\n<li>So sánh toàn diện thì tốn nhiều thời gian code, ì ạch, thậm chí còn làm performance tệ hơn</li>\\n<li>Phụ thuộc vào phiên bản React hiện tại đang sử dụng, nếu có release mới, khả năng là ko còn sử dụng được</li>\\n</ol>\\n<p>Theo quan điểm cá nhân, so sánh toàn diện không nên áp dụng.</p>\\n<p>Evan You tác giả của Vue.js trong <a href=\\\"https://github.com/vuejs/vue/issues/4255#issuecomment-274143903\\\">trả lời này</a> có đề cập việc sử dụng <code class=\\\"language-text\\\">shouldComponentUpdate</code> có thể bỏ qua vì nó không mấy thực tế, có rất nhiều trường hợp có thể bị bỏ xót nếu để mặc cho React Element tự xác định state nào đã change trong component.</p>\\n<p>Thay vì kiểm tra <code class=\\\"language-text\\\">this.props.children !== nextProps.children</code>, sử dụng các <code class=\\\"language-text\\\">props</code> khác nhau để xác định state change, khuyến khích dùng <em>string/numeric</em> để so sánh cho lẹ</p>\\n<h2>Thay đổi DOM quá nhiều lần</h2>\\n<p>Có bao giờ bạn từng sử dụng một <em>component</em> nhiều lần trong app, cảm thấy app hơi lag? Animation cảm giác chạy hơi khực khực?</p>\\n<h3>Vấn đề</h3>\\n<p>Khi xây các component phức tạp, bạn sẽ phải xào nấo DOM một chút, khả năng sẽ vướng vào 2 issue sau</p>\\n<ol>\\n<li><a href=\\\"https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing\\\">Trigger layout</a></li>\\n<li><a href=\\\"https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing#avoid_layout_thrashing\\\">Layout Thrashing</a></li>\\n</ol>\\n<p>Hãy chạy thử hiệu ứng đang làm cho một component <strong>Collapse</strong> với khoản vài chục cái instance, sau đó chọn 6x slowdown trên dev tool để thấy sự khác biệt, 6x slowdown là giá trị tương ứng với tốc độ khi xem trên điện thoại</p>\\n<p><a href=\\\"https://cdn-images-1.medium.com/max/800/1*2xOju9iTPGs22U0joILHmQ.png\\\"></a></p>\\n<h3>Giải pháp</h3>\\n<p>Mỗ sẽ một component <strong>Collapse</strong>, ta thường sẽ làm là thay đổi độ cao của nó</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token function\\\">updateHeight</span><span class=\\\"token punctuation\\\">(</span>isOpen<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isOpen<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>contentEl<span class=\\\"token punctuation\\\">.</span>scrollHeight<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">px`</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'0px'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Có 2 điểm cần lưu ý</p>\\n<ol>\\n<li>Chúng ta thay đổi <em>height</em>, là chúng ta trigger chuyện sắp xếp lại Layout. Nếu chúng ta thay đổi <code class=\\\"language-text\\\">transform</code>, chúng ta chỉ sẽ trigger <strong>Composite</strong> và nhìn nó sẽ smooth hơn.</li>\\n<li>Dòng <code class=\\\"language-text\\\">this.containerEl.style.height = ${this.contentEl.scrollHeight}px;</code> là một ví dụ điển hình của <strong>Layout Thrashing</strong>, chúng ta đọc giá trị độ cao hiện tại, rồi lấy giá trị đó update cho một đối tượng DOM, nhân số lần này lên với số lượng component <strong>Collapse</strong> sẽ là một số lần đáng quan tâm. Sẽ tốt hơn nếu chúng ta chỉ đọc một lần rồi gán giá trị một lượt luôn.</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token function\\\">updateHeight</span><span class=\\\"token punctuation\\\">(</span>isOpen<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token function\\\">cancelAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isOpen<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">requestAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// đọc</span>\\n      <span class=\\\"token keyword\\\">const</span> height <span class=\\\"token operator\\\">=</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>contentEl<span class=\\\"token punctuation\\\">.</span>scrollHeight<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">px`</span></span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">requestAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">requestAnimationFrame</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token comment\\\">// gán giá trị</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> height<span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>lastRAF <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>containerEl<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>height <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'0px'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Có thể sử dụng thư viện <a href=\\\"https://github.com/wilsonpage/fastdom\\\">Fastdom</a> thay vì tự viết</p>\\n<h2>Callback</h2>\\n<p>Khi attact một function vào bất kỳ event nào trên DOM, nếu có thêm <code class=\\\"language-text\\\">debounced</code> hoặc <code class=\\\"language-text\\\">throttled</code> sẽ tốt hơn, giảm tải số lần gọi đến function này đến mức thấp nhất.</p>\\n<p>Cách viết rất thường thấy</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'resize'</span><span class=\\\"token punctuation\\\">,</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">throttle</span><span class=\\\"token punctuation\\\">(</span>callback<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>Nhưng tại sao không sử dụng nó trong component callback</p>\\n<h3>Vấn đề</h3>\\n<p>Xét component sau</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">UnleashedOne</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Chúng ta đang lắng nghe tất tần tật mỗi khi có thay đổi trên <code class=\\\"language-text\\\">input</code>, như vậy thực sự có cần thiết không?</p>\\n<h3>Giải pháp</h3>\\n<p>Để giải quyết vấn đề trên, có thểm viết lại component</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">LeashedOne</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChangeDebounce <span class=\\\"token operator\\\">=</span> _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">debounce</span><span class=\\\"token punctuation\\\">(</span>value <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">onChange</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onChangeDebounce</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Đợi user nhập xong đi rồi xử lý sự kiện, ở đây sử dụng <code class=\\\"language-text\\\">_.debounce</code>, <code class=\\\"language-text\\\">_.throttle</code> từ thư viện <strong>lodash</strong>, sự khác nhau của 2 thằng này thì đọc thểm trên docs của nó.</p>\\n<p>Nếu bị nghiện performance, bạn có thể chia sẽ thêm một số tip với mình. Thanks You</p>\\n<p>Tác Giả: Noam Elboim\\nLink bài gốc: <a href=\\\"https://medium.com/myheritage-engineering/how-to-greatly-improve-your-react-app-performance-e70f7cbbb5f6\\\">https://medium.com/myheritage-engineering/how-to-greatly-improve-your-react-app-performance-e70f7cbbb5f6</a></p>\",\"id\":\"E:/anluu/luckyluu/posts/2018-05-01-cai-thien-performance-react-app/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":5,\"frontmatter\":{\"date\":\"2018-05-01T13:35:13.234Z\",\"path\":\"/2018-05-01-cai-thien-performance-react-app\",\"tags\":[\"javascript\",\"react\"],\"title\":\"Cải thiện performance của React App\"}},\"next\":{\"excerpt\":\"Nhúng Google Maps vào web site bình thường thì quá sức đơn giản, để sử dụng với React Js thì hơi vụng công một chút. Để sử dụng Google Maps API, ta chỉ cần load đoạn js từ googleapis, chèn thêm một cái   với id là  map  chằng hạn. Đoạn script của...\",\"html\":\"<p>Nhúng Google Maps vào web site bình thường thì quá sức đơn giản, để sử dụng với React Js thì hơi vụng công một chút.</p>\\n<p>Để sử dụng Google Maps API, ta chỉ cần load đoạn js từ googleapis, chèn thêm một cái <code class=\\\"language-text\\\">div</code> với id là <em>map</em> chằng hạn.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token doctype\\\">&lt;!DOCTYPE html></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>title</span><span class=\\\"token punctuation\\\">></span></span>Basic Google Map on a web page<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>title</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>map<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&amp;<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>html</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>Đoạn script của google sẽ được load <strong>sau khi</strong> có static DOM, cái <code class=\\\"language-text\\\">&lt;div id=&#39;map&#39; /&gt;</code> lúc đó đã tồn tại và có thể được sử dụng thoải mái bởi google maps api.</p>\\n<p>Nhưng mà trong React JS thì DOM được render và re-render từ <strong>virtual DOM</strong>, một file html của app React JS thường là chỉ có thế này</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token doctype\\\">&lt;!DOCTYPE html></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>title</span><span class=\\\"token punctuation\\\">></span></span>Simple React app<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>title</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>app<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>js/app.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>html</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>Tức là nếu làm như cách bình thường ở trên thì cái <code class=\\\"language-text\\\">&lt;div id=&#39;map&#39; /&gt;</code> chưa hề tồn tại trên xã hội.</p>\\n<h2>Load bất đồng bộ (Asynchronous Loading)</h2>\\n<p>Cả hai đoạn script React và Google maps đều phải tốn thời gian để load, chúng ta phải đảm bảo Google Map chỉ được tạo ra <strong>sau khi</strong> React app đã khởi tạo và render DOM xong. Thoạt nhìn thì dùng asyn google map sẽ là một giải pháp.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&amp;callback=initMap<span class=\\\"token punctuation\\\">\\\"</span></span>\\n        <span class=\\\"token attr-name\\\">async</span> <span class=\\\"token attr-name\\\">defer</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script language-javascript\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span></code></pre>\\n      </div>\\n<p>Chúng ta thêm <code class=\\\"language-text\\\">asyn</code> và <code class=\\\"language-text\\\">defer</code> để load đoạn googleapis này sau cùng, đồng thời thêm hàm <em>callback</em> sau khi load xong. Nếu <code class=\\\"language-text\\\">initMap</code> là một <em>global function</em> thì ta có thể gọi nó bên trong React Component</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">initMap</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  map <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">google<span class=\\\"token punctuation\\\">.</span>maps<span class=\\\"token punctuation\\\">.</span>Map</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'map'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Buồn thay! Không chạy đâu các bạn ạ. Ngay cả khi Google Maps chỉ được load sau khi React được load, không có nghĩa là toàn bộ cây DOM đã được <em>mount</em> và <em>render</em> khi thực thi hàm <em>callback</em>.</p>\\n<p>Ok, chúng ta cần giải pháp tốt hơn. Về cơ bản </p>\\n<blockquote>\\n<p>chúng ta muốn load đoạn script của google ngay khi <em>component</em> có sử dụng đến google api được <strong>mounted</strong></p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\">componentDidMount <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// trỏ global function window.initMap này vào hàm initMap của component để thằng google có thể  gọi trong hàm callback</span>\\n    window<span class=\\\"token punctuation\\\">.</span>initMap <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>initMap<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// chèn ngay đoạn js của googleapis cho anh xài ngay.</span>\\n    <span class=\\\"token function\\\">loadJS</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&amp;callback=initMap'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function-variable function\\\">initMap</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    map <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">google<span class=\\\"token punctuation\\\">.</span>maps<span class=\\\"token punctuation\\\">.</span>Map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>refs<span class=\\\"token punctuation\\\">.</span>map<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getDOMNode</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">/* các options khác*/</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nrender <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">ref</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>map<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token style-attr language-css\\\"><span class=\\\"token attr-name\\\"> <span class=\\\"token attr-name\\\">style</span></span><span class=\\\"token punctuation\\\">=\\\"</span><span class=\\\"token attr-value\\\"><span class=\\\"token property\\\">height</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'500px'</span>, <span class=\\\"token property\\\">width</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'500px'</span></span><span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token operator\\\">&lt;</span>⁄div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>⁄div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// hàm này để chèn thêm &lt;script /> sau khi gọi</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">loadJS</span><span class=\\\"token punctuation\\\">(</span>src<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> ref <span class=\\\"token operator\\\">=</span> window<span class=\\\"token punctuation\\\">.</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementsByTagName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"script\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">var</span> script <span class=\\\"token operator\\\">=</span> window<span class=\\\"token punctuation\\\">.</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createElement</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"script\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    script<span class=\\\"token punctuation\\\">.</span>src <span class=\\\"token operator\\\">=</span> src<span class=\\\"token punctuation\\\">;</span>\\n    script<span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">async</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n    ref<span class=\\\"token punctuation\\\">.</span>parentNode<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">insertBefore</span><span class=\\\"token punctuation\\\">(</span>script<span class=\\\"token punctuation\\\">,</span> ref<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Để ý là ta thêm <code class=\\\"language-text\\\">ref=&#39;map&#39;</code> để trỏ tới đúng cái <code class=\\\"language-text\\\">div</code> sử dụng để đưa vào cho Google Map constructor bằng hàm <code class=\\\"language-text\\\">this.refs.map.getDOMNode()</code> ngay khi DOM đã render.</p>\\n<p>Vậy là xong. Google Map đã có thể hoạt động trơn tru với React Component, đúng hơn là với Virtual DOM.</p>\\n<p>Tác giả: klaasnotfound\\nLink bài gốc: <a href=\\\"http://www.klaasnotfound.com/2016/11/06/making-google-maps-work-with-react/\\\">http://www.klaasnotfound.com/2016/11/06/making-google-maps-work-with-react/</a></p>\",\"id\":\"E:/anluu/luckyluu/posts/2018-04-27-google-maps-va-react/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":3,\"frontmatter\":{\"date\":\"2018-04-27T13:35:13.234Z\",\"path\":\"/2018-04-27-google-maps-va-react\",\"tags\":[\"javascript\",\"react\"],\"title\":\"Google Maps và React\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2018-04-28-redux-vs-mobx-chon-cai-nao-day.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/2018-04-28-redux-vs-mobx-chon-cai-nao-day.json\n// module chunks = 48"],"sourceRoot":""}