webpackJsonp([31],{"./node_modules/json-loader/index.js!./.cache/json/2018-07-01-huong-dan-cai-dat-ten-mien-cho-githubpage-su-dung-godady.json":function(n,s){n.exports={data:{markdownRemark:{html:'<p>Đăng nhập vào Goddady, mở tab My Products, chọn nút <strong>Manage</strong></p>\n<p><img src="https://cdn-images-1.medium.com/max/800/1*Y9e7HtJvVv7jshINs46mTA.png"></p>\n<p>Cuộn xuống ở dưới cuối trang, click link <strong>Manage DNS</strong></p>\n<ul>\n<li>Hàng type <strong>A</strong>, nhập vào IP của Github Server: 185.199.108.153, lên đây xem <a href="https://help.github.com/articles/setting-up-an-apex-domain/">https://help.github.com/articles/setting-up-an-apex-domain/</a></li>\n<li>Hàng CNAME với Name "www" nhập địa chỉ url trang github page muốn trỏ tới, ví dụ như luubinhan.github.io/blog/</li>\n</ul>\n<p><img src="https://cdn-images-1.medium.com/max/800/1*vL7RX_AyXRsSfO27NYF5iA.png"></p>\n<p>Bên trong thư mục public của site, tạo thêm file tên CNAME, mở file này lên, nhập nội dung là tên miền</p>\n<p><img src="https://cdn-images-1.medium.com/max/800/1*zJsdMXE8aiHEuu6ObDu7ow.png"></p>\n<p>Xong, dễ cực. Cảm ơn bạn đã đọc hết bài viết</p>',frontmatter:{date:"July 01, 2018",path:"/2018-07-01-huong-dan-cai-dat-ten-mien-cho-githubpage-su-dung-godady",tags:["web","dns","githubpage"],title:"Hướng dẫn setup tên miền GoDaddy với Github Page",desc:"Hướng dẫn cầu hình tên miền trên GoDaddy để sử dụng với Github page"}}},pathContext:{prev:{excerpt:"Lưu ý quan trọng JS modules được hổ trợ bởi các trình duyệt XỊN, hàng cùi mía của Microsoft thì chưa support JS Modules là gì JS modules hay còn gọi là ES modules, ECMAcript modules là một tính năng quan trọng mới của của javascript, trước đây chúng...",html:'<p>Lưu ý quan trọng JS modules được hổ trợ bởi các trình duyệt XỊN, hàng cùi mía của Microsoft thì chưa support</p>\n<h2>JS Modules là gì</h2>\n<p>JS modules hay còn gọi là ES modules, ECMAcript modules là một tính năng quan trọng mới của của javascript, trước đây chúng ta sử dụng CommonJS trong Node.js hay AMD để có thể sử dụng tính năng này trước thời đại. Các thư viện này nó làm gì? nó cho phép chúng ta <code>import</code> và <code>export</code> cái chúng ta muốn</p>\n<p>Và giờ javascript trong tương lai không xa chúng ta sẽ không cần những thư viện này nữa vì có hổ trợ sẵn.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token comment" spellcheck="true">// file lib.mjs</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> repeat <span class="token operator">=</span> string <span class="token operator">=</span><span class="token operator">></span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>string<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>string<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">shout</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>string<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!`</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Chúng ta <code>import</code> nó từ file khác</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token comment" spellcheck="true">// file main.mjs</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>repeat<span class="token punctuation">,</span> shout<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./lib.mjs\'</span><span class="token punctuation">;</span>\n<span class="token function">repeat</span><span class="token punctuation">(</span><span class="token string">\'hello\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// -> \'hello hello\'</span>\n\n<span class="token function">shout</span><span class="token punctuation">(</span><span class="token string">\'Modules in action\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// -> \'MODULES IN ACTIONS!\'</span>\n</code></pre>\n      </div>\n<p>Module file như vậy sẽ có một vài điểm cần lưu ý</p>\n<ul>\n<li><code>strict mode</code> bật mặt định</li>\n<li>Kiểu viết comment như trong HTML không sử dụng được</li>\n</ul>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token comment" spellcheck="true">// Không sử dụng được đâu</span>\n<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> TODO<span class="token punctuation">:</span> Rename x to y<span class="token punctuation">.</span>\n<span class="token comment" spellcheck="true">// Viêt comment bình thường thôi</span>\n<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// TODO: Rename x to y.</span>\n</code></pre>\n      </div>\n<ul>\n<li>lexical top-level scope, nghĩa là nếu khởi tạo biến <code>var foo = 28</code> bên trong module không tạo một biến global tên <code>foo</code>, chúng ta không access được <code>window.foo</code></li>\n<li>Chỉ có thể sử dụng <code>import</code> và <code>export</code> trong file <code>.mjs</code>, file thường ko xài được.</li>\n</ul>\n<h2>Sử dụng trên trình duyệt</h2>\n<p>Để <strong>báo</strong> với trình duyệt chúng ta đang load 1 file module js</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span> <span class="token attr-name">scr</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main.mjs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">nomodule</span> <span class="token attr-name">scr</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fallback.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>Ở đây ngoài việc biết được trình duyệt đang mở có hổ trợ module ko, chúng ta cũng có thể đoán được là nó có hổ trợ js mới không như arrow function, async - await</p>\n<p>Một điều tuyệt vời khác của <code>type="module"</code> là mặc dù chúng ta add thêm bao nhiêu tag tùy thích nhưng nó sẽ chỉ load 1 file nếu giống nhau, ngược lại với js thường</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classic.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classic.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token comment" spellcheck="true">&lt;!-- classic.js executes multiple times. --></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>module.mjs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>module.mjs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">import</span> <span class="token string">\'./module.mjs\'</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token comment" spellcheck="true">&lt;!-- module.mjs executes only once. --></span>\n</code></pre>\n      </div>\n<h2>Lưu ý về extention</h2>\n<p>Ở trên chúng ta sử dụng file extention là <code>.mjs</code>, đây chỉ là một quy ước để dễ phân biệt, trên web nếu javascript được served bằng MIME type \'text/javascript\' thì gần như là như nhau, sự phân biệt thực sự được đánh dấu bằng <code>type="module"</code> trên thẻ <code>script</code></p>\n<h2>Module mặc định là load defer</h2>\n<p>JS bình thường sẽ block HTML parser khi nó chưa load xong, trừ khi chúng ta thêm attribute là <code>defer</code> trên tag script, khi là module, tính năng <code>defer</code> là mặc định <code>true</code></p>\n<p><a href="https://developers.google.com/web/fundamentals/primers/modules">Link bài gốc</a></p>',id:"C:/xampp/htdocs/luckyluu/posts/2018-07-02-javascript-modules-tren-web/index.md absPath of file >>> MarkdownRemark",timeToRead:3,frontmatter:{date:"2018-07-02T13:35:13.234Z",path:"/2018-07-02-javascript-modules-tren-web",tags:["javascript"],title:"Sử dụng javascript modules trên web"}},next:{excerpt:"Cụ thể   sẽ được dùng để thay cho  , giờ nó cũng đã trở thành  Hàm   là một phương thức   sẽ chạy khi component nhận được  props  và đã được khởi tạo. Bởi vì nó là một phương thức   nên không thể sử dụng   bên trong phương thức này hoặc truy cập tới...",html:'<p>Cụ thể <code>getDerivedStateFromProps</code> sẽ được dùng để thay cho <code>componentWillReceiveProps</code>, giờ nó cũng đã trở thành <code>UNSAFE_componentWillReceiveProps</code></p>\n<p>Hàm <code>getDerivedStateFromProps</code> là một phương thức <code>static</code> sẽ chạy khi component nhận được <em>props</em> và đã được khởi tạo. Bởi vì nó là một phương thức <code>static</code> nên không thể sử dụng <code>this</code> bên trong phương thức này hoặc truy cập tới các phương thức khác. Không giống với <code>componentWillReceiveProps</code> chúng ta không dùng được <code>this.setState</code>, nếu muốn cập nhập lại <code>state</code> nào đó ta trả về một object hoặc <code>null</code> nếu không muốn update state nào cả</p>\n<p>Code sử dụng <code>componentWillReceiveProps</code> trước đây</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token function">componentWillReceiveProps</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">if</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">.</span>someValue <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>someValue<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">//Perform some operation</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>someState<span class="token punctuation">:</span> someValue <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">classMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Giờ code lại bằng <code>getDerivedStateFromProps</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token comment" spellcheck="true">// mục tiêu xử lý ở hàm này là những return giá trị state sẽ bị thay đổi khi prop thay đổi</span>\n<span class="token keyword">static</span> <span class="token function">getDerivedStateFromProps</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">,</span> prevState<span class="token punctuation">)</span><span class="token punctuation">{</span>\n   <span class="token keyword">if</span> <span class="token punctuation">(</span>nextProps<span class="token punctuation">.</span>path <span class="token operator">!==</span> prevState<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">{</span>\n     <span class="token keyword">return</span> <span class="token punctuation">{</span> path<span class="token punctuation">:</span> nextProps<span class="token punctuation">.</span>path <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// ở đây chúng ta sẽ set state</span>\n<span class="token function">componentDidUpdate</span><span class="token punctuation">(</span>prevProps<span class="token punctuation">,</span> prevState<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>prevState<span class="token punctuation">.</span>path <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// Thục hiện update state</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">classMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Hàm <code>getDerivedStateFromProps</code> sẽ nhận vào 2 params <code>nextProps</code> và <code>prevState</code>. Chúng ta cần lưu giá trị của <em>props</em> <code>path</code> vào <em>state</em> là <code>path</code>, thực hiện kiểm tra ở đây nếu thấy khác nhau thì return lại object <code>{path: nextProps.path}</code>, khi đó ở <code>componentDidUpdate</code> giá trị của <code>prevState.path</code> sẽ khác với giá trị <code>this.state.path</code> ví <code>this.state.path</code> đã được set lại ở <code>getDerivedStateFromProps</code> trước đó</p>\n<p>Cảm ơn bạn đã đọc hết bài viết</p>\n<p><a href="https://hackernoon.com/replacing-componentwillreceiveprops-with-getderivedstatefromprops-c3956f7ce607">Link bài viết của tác giả Amanshu Kataria</a></p>',id:"C:/xampp/htdocs/luckyluu/posts/2018-06-28-thay-component-will-receive-props/index.md absPath of file >>> MarkdownRemark",timeToRead:2,frontmatter:{date:"2018-06-28T13:35:13.234Z",path:"/2018-06-28-thay-component-will-receive-props",tags:["react","javascript"],title:"Thay componentWillReceiveProps với getDerivedStateFromProps"}}}}}});
//# sourceMappingURL=path---2018-07-01-huong-dan-cai-dat-ten-mien-cho-githubpage-su-dung-godady-ab26ac5e350afba28104.js.map