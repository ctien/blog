webpackJsonp([61],{"./node_modules/json-loader/index.js!./.cache/json/2018-03-16-react-authentication-phan-1.json":function(n,s){n.exports={data:{markdownRemark:{html:'<p>Trong demo chúng ta sẽ sử dụng</p>\n<ul>\n<li>Create React App</li>\n<li>Glamor</li>\n<li>React Router</li>\n<li>Amazon Cognito để authentication</li>\n<li>AWS amplify để tương tác với AWS Services</li>\n</ul>\n<h2>Setup</h2>\n<p>Khởi tạo project và các thư viện sẽ sử dụng</p>\n<div class="gatsby-highlight">\n      <pre class="language-vim"><code class="language-vim">create<span class="token operator">-</span>react<span class="token operator">-</span>app react<span class="token operator">-</span>auth\n<span class="token keyword">cd</span> react<span class="token operator">-</span>auth\n\nnpm i react<span class="token operator">-</span>router<span class="token operator">-</span>dom glamor <span class="token operator">-</span><span class="token operator">-</span>save</code></pre>\n      </div>\n<p>Cài AWSMobile CLI</p>\n<div class="gatsby-highlight">\n      <pre class="language-vim"><code class="language-vim">npm i <span class="token operator">-</span>g awsmobile<span class="token operator">-</span>cli</code></pre>\n      </div>\n<p>Khởi tạo config AWS IAM</p>\n<div class="gatsby-highlight">\n      <pre class="language-vim"><code class="language-vim">awsmobile configure\nawsmobile init</code></pre>\n      </div>\n<p>Nó sẽ tạo project Mobile Hub và file aws-exports.js trong thư mục src. Tiếp theo, thêm user-signin và deploy các config mới</p>\n<div class="gatsby-highlight">\n      <pre class="language-vim"><code class="language-vim">awsmobile user<span class="token operator">-</span>signin enable\nawsmobile push</code></pre>\n      </div>\n<p><code class="language-text">awsmobile user-signin enable</code> sẽ bật Amazon Congito trong project với các thiết đặt mặc định, bao gồm 2 factor authentication với SMS (sẽ thêm TOTP sau). Nếu muôn can thiệp các thiệt đặt, vào trực tiếp <a href="https://signin.aws.amazon.com/signin?redirect_uri=https%253A%252F%252Fconsole.aws.amazon.com%252Fcognito%252Fhome%253Fregion%253Dus-east-1%2526state%253DhashArgs%2523%2526isauthcode%253Dtrue&#x26;client_id=arn%253Aaws%253Aiam%253A%253A015428540659%253Auser%252Fcognito&#x26;forceMobileApp=0">Amazon Cognito</a> để chỉnh</p>\n<h1>Màn hình đăng ký</h1>\n<p><img src="https://cdn-images-1.medium.com/max/800/1*U_Oa4dWFeIqJ9TPJFx9lmQ.jpeg"></p>\n<p>Để tương tác với Amazon Cognito, chúng ta sẽ sử các hàm trong class <code class="language-text">Auth</code> từ thư viện <code class="language-text">aws-amplify</code>:</p>\n<p><code class="language-text">signUp</code> - tạo user mới</p>\n<div class="gatsby-highlight">\n      <pre class="language-typescript"><code class="language-typescript"><span class="token function">signUp</span><span class="token punctuation">(</span>username<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> attributes<span class="token operator">?</span><span class="token punctuation">:</span> object<span class="token punctuation">)</span></code></pre>\n      </div>\n<p><code class="language-text">confirmSignUp</code> - để xác nhận đăng ký thành công</p>\n<div class="gatsby-highlight">\n      <pre class="language-typescript"><code class="language-typescript"><span class="token function">confirmSignUp</span><span class="token punctuation">(</span>username<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> authenticationCode<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p><code class="language-text">signIn</code> - đăng nhập</p>\n<div class="gatsby-highlight">\n      <pre class="language-typescript"><code class="language-typescript"><span class="token function">signIn</span><span class="token punctuation">(</span>username<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p><code class="language-text">confirmSignIn</code> - xác nhận đăng nhập</p>\n<div class="gatsby-highlight">\n      <pre class="language-typescript"><code class="language-typescript"><span class="token function">confirmSignIn</span><span class="token punctuation">(</span>user<span class="token punctuation">:</span> object<span class="token punctuation">,</span> authenticationCode<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<p>Trong file root của project, thường là <code class="language-text">index.js</code> </p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token comment">// một số import khác</span>\n<span class="token comment">// </span>\n<span class="token keyword">import</span> config <span class="token keyword">from</span> <span class="token string">\'./aws-exports\'</span>\n<span class="token keyword">import</span> Amplify <span class="token keyword">from</span> <span class="token string">\'aws-amplify\'</span>\n\nAmplify<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>App</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'root\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token function">registerServiceWorker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n      </div>\n<p>Screen <code class="language-text">SignUp.js</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'glamor\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SignUp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    username<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    password<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    email<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    phone_number<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    authCode<span class="token punctuation">:</span> <span class="token string">\'\'</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>SignUp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>\n  container<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    display<span class="token punctuation">:</span> <span class="token string">\'flex\'</span><span class="token punctuation">,</span>\n    flexDirection<span class="token punctuation">:</span> <span class="token string">\'column\'</span><span class="token punctuation">,</span>\n    alignItems<span class="token punctuation">:</span> <span class="token string">\'center\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>Flow sẽ như thế này, sau khi user cung cấp các thông tin trong form signup, chúng ta gọi đến phương thức <code class="language-text">signUp</code>, user sẽ nhận được một mã code để verify quá SMS, user điền mã code này vào form verify, chúng ta verify cái mã code này bằng phương thức \'confirmSignUp\'</p>\n<p><img src="https://cdn-images-1.medium.com/max/1000/1*Z1sFmf-KG7iiHG_-VMieQw.jpeg"></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'glamor\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SignUp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    username<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    password<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    email<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    phone_number<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    authCode<span class="token punctuation">:</span> <span class="token string">\'\'</span>\n  <span class="token punctuation">}</span>\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>Sign Up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>\n        <span class="token operator">&lt;</span>input\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">\'Username\'</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'username\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">\'Password\'</span>\n          type<span class="token operator">=</span><span class="token string">\'password\'</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">\'Email\'</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'email\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">\'Phone Number\'</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'phone_number\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Sign Up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        \n        <span class="token operator">&lt;</span>input\n          <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">\'Authentication Code\'</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'authCode\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Confirm Sign Up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        \n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">let</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>\n  container<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    display<span class="token punctuation">:</span> <span class="token string">\'flex\'</span><span class="token punctuation">,</span>\n    flexDirection<span class="token punctuation">:</span> <span class="token string">\'column\'</span><span class="token punctuation">,</span>\n    alignItems<span class="token punctuation">:</span> <span class="token string">\'center\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  button<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    width<span class="token punctuation">:</span> <span class="token string">\'170px\'</span><span class="token punctuation">,</span>\n    padding<span class="token punctuation">:</span> <span class="token string">\'10px 0px\'</span><span class="token punctuation">,</span>\n    backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#ddd\'</span><span class="token punctuation">,</span>\n    cursor<span class="token punctuation">:</span> <span class="token string">\'pointer\'</span><span class="token punctuation">,</span>\n    borderRadius<span class="token punctuation">:</span> <span class="token string">\'3px\'</span><span class="token punctuation">,</span>\n    <span class="token string">\':hover\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#ededed\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  input<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>\n    marginBottom<span class="token punctuation">:</span> <span class="token string">\'10px\'</span><span class="token punctuation">,</span>\n    border<span class="token punctuation">:</span> <span class="token string">\'none\'</span><span class="token punctuation">,</span>\n    outline<span class="token punctuation">:</span> <span class="token string">\'none\'</span><span class="token punctuation">,</span>\n    borderBottom<span class="token punctuation">:</span> <span class="token string">\'2px solid #4CAF50\'</span><span class="token punctuation">,</span>\n    fontSize<span class="token punctuation">:</span> <span class="token string">\'16px\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'::placeholder\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      color<span class="token punctuation">:</span> <span class="token string">\'rgba(0, 0, 0, .3)\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> SignUp</code></pre>\n      </div>\n<p>Xong cái UI, giờ ta sử dụng 2 phương thức class <code class="language-text">Auth</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token comment">// previous imports omitted</span>\n\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> Auth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'aws-amplify\'</span>\n\n  <span class="token comment">// previously shown code omitted</span>\n  <span class="token function-variable function">signUp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> email<span class="token punctuation">,</span> phone_number <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state\n    Auth<span class="token punctuation">.</span><span class="token function">signUp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      username<span class="token punctuation">,</span>\n      password<span class="token punctuation">,</span>\n      attributes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        email<span class="token punctuation">,</span>\n        phone_number\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'successful sign up!\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error signing up: \'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function-variable function">confirmSignUp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Auth<span class="token punctuation">.</span><span class="token function">confirmSignUp</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>username<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>authCode<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'successful confirm sign up!\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error confirming signing up: \'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// </span>\n    <span class="token comment">// here we need to update the buttons to attach class methods to onClick event</span>\n    <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>signUp<span class="token punctuation">}</span><span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Sign Up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n    <span class="token operator">&lt;</span>input\n      <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n      placeholder<span class="token operator">=</span><span class="token string">\'Authentication Code\'</span>\n      onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'authCode\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n    <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>confirmSignUp<span class="token punctuation">}</span><span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Confirm Sign Up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">}</span></code></pre>\n      </div>\n<p>Cuối cùng import và sử dụng component trong <code class="language-text">App.js</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> logo <span class="token keyword">from</span> <span class="token string">\'./logo.svg\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./App.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> SignUp <span class="token keyword">from</span> <span class="token string">\'./SignUp\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>logo<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App-logo<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Welcome to React<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SignUp</span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span></code></pre>\n      </div>\n<p>Các thông tin của user sẽ được lại trong \'Manage your User Pools\', vào Amazon Coginito dashboard, chọn ứng dụng đã setup, chọn mục \'Users and Settings\'</p>\n<p><img src="https://cdn-images-1.medium.com/max/1000/1*XQfNfYhaGlkD0wxEPtr8bQ.jpeg"></p>\n<h1>Sign In</h1>\n<p>Sign in thì cũng tương tự như signup, chúng ta sử dụng <code class="language-text">Auth.signIn(username, password)</code>, trả về object nếu thành công, sau đó nó sẽ gởi SMS tới user với code xác nhận lần nữa, verify bằng <code class="language-text">confirmSignIn</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token function">signIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  Auth<span class="token punctuation">.</span><span class="token function">signIn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>username<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>password<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>user <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> user <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error signing in! :\'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">confirmSignIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  Auth<span class="token punctuation">.</span><span class="token function">confirmSignIn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>authCode<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>userData <span class="token operator">=></span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'userdata: \'</span><span class="token punctuation">,</span> userData<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error confirming sign in!: \'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>User data nằm trong cục dữ liệu trả về sau khi gọi hàm <code class="language-text">confirmSignIn</code></p>\n<p><img src="https://cdn-images-1.medium.com/max/800/1*yBT-_MdRPCIj5KN3PnyFmw.png"></p>\n<p>Có rất nhiều cách để lấy thông tin user đang đăng nhập, có thể dùng <code class="language-text">Auth.currentAuthenticatedUser()</code> là dễ nhất, toàn bộ API có thể tham khảo <a href="https://aws.github.io/aws-amplify/api/classes/authclass.html">ở đây</a></p>\n<p>Kết thúc phần 1 ở đây, phần 2 tiếp tục với Routing và TOTP để có thể làm Google Authenticator.</p>\n<hr>\n<p>Bài dịch từ tác giả Nader Dabit trên HackerNoon</p>',
frontmatter:{date:"March 16, 2018",path:"/2018-03-16-react-authentication-phan-1",tags:["javascript","react"],title:"React Authentication với Amazon Cognito - Phần 1",desc:"Implement authentication 2 factor sử dụng React, React Router, Amazone Cognito"}}},pathContext:{prev:{excerpt:"Xem  phần 1 ở đây Phần này chúng ta tiếp tục với React Router, chúng ta chỉ cho phép những user đã login xem ứng dụng, redirect đến trang signup/sign in khi chưa đăng nhập. Ta sẽ build component  , những trang mà user phải đăng nhập để vào xem, nếu...",html:'<p>Xem <a href="https://luubinhan.github.io/blog/2018-03-16-react-authentication-phan-1">phần 1 ở đây</a></p>\n<p>Phần này chúng ta tiếp tục với React Router, chúng ta chỉ cho phép những user đã login xem ứng dụng, redirect đến trang signup/sign in khi chưa đăng nhập.</p>\n<p>Ta sẽ build component <code class="language-text">PrivateRoute</code>, những trang mà user phải đăng nhập để vào xem, nếu cố tình access vào các trang mà chưa đăng nhập thì bị đá ra ngay</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">const</span> <span class="token function-variable function">PrivateRoute</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>component<span class="token punctuation">:</span> Component<span class="token punctuation">,</span> <span class="token operator">...</span>rest<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span>\n        <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">rest</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">render</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>props <span class="token operator">=></span>\n                isAuthenticated <span class="token operator">?</span> <span class="token punctuation">(</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Component</span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n                <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>\n                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Redirect</span>\n                        <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n                            pathname<span class="token punctuation">:</span> <span class="token string">"/auth"</span>\n                            <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n                    <span class="token punctuation">/></span></span>\n                <span class="token punctuation">)</span>\n            <span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PrivateRoute</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/route1<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Route1<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span></code></pre>\n      </div>\n<h2><code class="language-text">Authenticator.js</code></h2>\n<p>Component sẽ là trang sign in và sign up, tách trang sign up và sign in ra 2 route cũng được nhưng làm thế này cho gọn.</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'glamor\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> withRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-router-dom\'</span>\n\n<span class="token keyword">import</span> SignIn <span class="token keyword">from</span> <span class="token string">\'./SignIn\'</span>\n<span class="token keyword">import</span> SignUp <span class="token keyword">from</span> <span class="token string">\'./SignUp\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Authenticator</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    showSignIn<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n  <span class="token function-variable function">switchState</span> <span class="token operator">=</span> <span class="token punctuation">(</span>showSignIn<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      showSignIn\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> showSignIn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>\n          showSignIn <span class="token operator">?</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SignIn</span> <span class="token punctuation">/></span></span>\n          <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SignUp</span> <span class="token punctuation">/></span></span>\n          <span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>buttonContainer<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n          <span class="token operator">&lt;</span>p\n            <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">,</span> showSignIn <span class="token operator">&amp;&amp;</span> styles<span class="token punctuation">.</span>underline<span class="token punctuation">)</span><span class="token punctuation">}</span>\n            onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">switchState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n          <span class="token operator">></span>Sign In<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n          <span class="token operator">&lt;</span>p\n            onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">switchState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n            <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">,</span> <span class="token operator">!</span>showSignIn <span class="token operator">&amp;&amp;</span> styles<span class="token punctuation">.</span>underline<span class="token punctuation">)</span><span class="token punctuation">}</span>\n          <span class="token operator">></span>Sign Up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">withRouter</span><span class="token punctuation">(</span>Authenticator<span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>\n  buttonContainer<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    display<span class="token punctuation">:</span> <span class="token string">\'flex\'</span><span class="token punctuation">,</span>\n    justifyContent<span class="token punctuation">:</span> <span class="token string">\'center\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  button<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    width<span class="token punctuation">:</span> <span class="token string">\'100px\'</span><span class="token punctuation">,</span>\n    paddingBottom<span class="token punctuation">:</span> <span class="token string">\'10px\'</span><span class="token punctuation">,</span>\n    cursor<span class="token punctuation">:</span> <span class="token string">\'pointer\'</span><span class="token punctuation">,</span>\n    borderBottom<span class="token punctuation">:</span> <span class="token string">\'2px solid transparent\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  underline<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    borderBottomColor<span class="token punctuation">:</span> <span class="token string">\'#ddd\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<h2><code class="language-text">Header.js</code></h2>\n<p>Component siêu căn bản, siêu quen thuộc</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'glamor\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Header</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>h2 <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>Auth Demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>\n  title<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    color<span class="token punctuation">:</span> <span class="token string">\'white\'</span><span class="token punctuation">,</span>\n    margin<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    padding<span class="token punctuation">:</span> <span class="token string">\'25px\'</span><span class="token punctuation">,</span>\n    textAlign<span class="token punctuation">:</span> <span class="token string">\'left\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  container<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    height<span class="token punctuation">:</span> <span class="token string">\'80px\'</span><span class="token punctuation">,</span>\n    width<span class="token punctuation">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span>\n    backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#4CAF50\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Header</code></pre>\n      </div>\n<h2><code class="language-text">Home.js</code></h2>\n<p>Trong file này ta sẽ thêm một vài component tương ứng cho 1 route, các component này chỉ được bind vô khi user đã đăng nhập, chuyện kiểm tra này sẽ nằm ở Route</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> withRouter<span class="token punctuation">,</span> Link <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-router-dom\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Auth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'aws-amplify\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Home</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    username<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    Auth<span class="token punctuation">.</span><span class="token function">currentUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>data <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          username<span class="token punctuation">:</span> data<span class="token punctuation">.</span>username\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error: \'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Welcome <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>username<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">\'</span>/route1<span class="token punctuation">\'</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">\'</span>route1<span class="token punctuation">\'</span></span><span class="token punctuation">></span></span>Route <span class="token number">1</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Link</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Route1</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Route <span class="token number">1</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          Auth<span class="token punctuation">.</span><span class="token function">signOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n              <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">\'/auth\'</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error signing out...\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Sign Out<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nHome <span class="token operator">=</span> <span class="token function">withRouter</span><span class="token punctuation">(</span>Home<span class="token punctuation">)</span>\nRoute1 <span class="token operator">=</span> <span class="token function">withRouter</span><span class="token punctuation">(</span>Route1<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token punctuation">{</span>\n  Home<span class="token punctuation">,</span>\n  Route1\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>Các component trên điều được <em>lồng</em> qua <code class="language-text">withRouter</code> để có thể truy cập vào prop <code class="language-text">history</code> trong React Router trong trường hợp cần navigate đến một trang khác.</p>\n<p><img src="https://cdn-images-1.medium.com/max/800/1*DH2Bg4EXTVuoRYtUTNqOXg.jpeg"></p>\n<h2><code class="language-text">SignIn.js</code></h2>\n<p>Update lại component từ phần 1, chỉ một chổ khác là ta sẽ ẩn phần confirm code đi, khi <code class="language-text">confirmSignIn</code> trả về thành công, ta navigate user đến route Home sử dụng <code class="language-text">history</code> prop</p>\n<p><code class="language-text">history.push(&#39;/&#39;)</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'glamor\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Auth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'aws-amplify\'</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> withRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-router-dom\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SignIn</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    username<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    password<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    showConfirmation<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    user<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    authCode<span class="token punctuation">:</span> <span class="token string">\'\'</span>\n  <span class="token punctuation">}</span>\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">:</span> value\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function-variable function">signIn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Auth<span class="token punctuation">.</span><span class="token function">signIn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>username<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>password<span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>user <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> user<span class="token punctuation">,</span> showConfirmation<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error signing in...: \'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function-variable function">confirmSignIn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> history <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props\n    Auth<span class="token punctuation">.</span><span class="token function">confirmSignIn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>authCode<span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>user <span class="token operator">=></span> <span class="token punctuation">{</span>\n        history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error confirming signing in...: \'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n        <span class="token punctuation">{</span>\n          <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>showConfirmation <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n              <span class="token operator">&lt;</span>input\n                onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'username\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n                <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n                placeholder<span class="token operator">=</span><span class="token string">\'username\'</span>\n              <span class="token operator">/</span><span class="token operator">></span>\n              <span class="token operator">&lt;</span>input\n                type<span class="token operator">=</span><span class="token string">\'password\'</span>\n                onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n                <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n                placeholder<span class="token operator">=</span><span class="token string">\'password\'</span>\n              <span class="token operator">/</span><span class="token operator">></span>\n              <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>signIn<span class="token punctuation">}</span><span class="token operator">></span>\n                <span class="token operator">&lt;</span>p <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>buttonText<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>Sign In<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token punctuation">{</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>showConfirmation <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n              <span class="token operator">&lt;</span>input\n                onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'authCode\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n                <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n                placeholder<span class="token operator">=</span><span class="token string">\'Confirmation Code\'</span>\n              <span class="token operator">/</span><span class="token operator">></span>\n              <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>confirmSignIn<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n                <span class="token operator">&lt;</span>p <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>buttonText<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>Confirm Sign In<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>\n  button<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    padding<span class="token punctuation">:</span> <span class="token string">\'10px 60px\'</span><span class="token punctuation">,</span>\n    backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#ddd\'</span><span class="token punctuation">,</span>\n    cursor<span class="token punctuation">:</span> <span class="token string">\'pointer\'</span><span class="token punctuation">,</span>\n    borderRadius<span class="token punctuation">:</span> <span class="token string">\'3px\'</span><span class="token punctuation">,</span>\n    <span class="token string">\':hover\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#ededed\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  buttonText<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    margin<span class="token punctuation">:</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  input<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>\n    marginBottom<span class="token punctuation">:</span> <span class="token string">\'10px\'</span><span class="token punctuation">,</span>\n    border<span class="token punctuation">:</span> <span class="token string">\'none\'</span><span class="token punctuation">,</span>\n    outline<span class="token punctuation">:</span> <span class="token string">\'none\'</span><span class="token punctuation">,</span>\n    borderBottom<span class="token punctuation">:</span> <span class="token string">\'2px solid #4CAF50\'</span><span class="token punctuation">,</span>\n    fontSize<span class="token punctuation">:</span> <span class="token string">\'16px\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'::placeholder\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      color<span class="token punctuation">:</span> <span class="token string">\'rgba(0, 0, 0, .3)\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  container<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    flex<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    paddingTop<span class="token punctuation">:</span> <span class="token string">\'15px\'</span><span class="token punctuation">,</span>\n    display<span class="token punctuation">:</span> <span class="token string">\'flex\'</span><span class="token punctuation">,</span>\n    alignItems<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n    justifyContent<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n    flexDirection<span class="token punctuation">:</span> <span class="token string">\'column\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">withRouter</span><span class="token punctuation">(</span>SignIn<span class="token punctuation">)</span></code></pre>\n      </div>\n<p><img src="https://cdn-images-1.medium.com/max/800/1*aZdu5cNtAcTIkUTgA4PiGA.jpeg"></p>\n<h2><code class="language-text">SignUp.js</code></h2>\n<p>Cập nhập lại từ phần 1</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> css <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'glamor\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> withRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-router-dom\'</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Auth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'aws-amplify\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SignUp</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    username<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    password<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    email<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    phone_number<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    authCode<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    showConfirmation<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n  <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">:</span> value\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function-variable function">signUp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> email<span class="token punctuation">,</span> phone_number <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state\n    Auth<span class="token punctuation">.</span><span class="token function">signUp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      username<span class="token punctuation">,</span>\n      password<span class="token punctuation">,</span>\n      attributes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        email<span class="token punctuation">,</span>\n        phone_number\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> showConfirmation<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error signing up: \'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function-variable function">confirmSignUp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Auth<span class="token punctuation">.</span><span class="token function">confirmSignUp</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>username<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>authCode<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'error confirming signing up: \'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> showConfirmation <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n        <span class="token punctuation">{</span>\n          <span class="token operator">!</span>showConfirmation <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>\n              <span class="token operator">&lt;</span>input\n                <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n                placeholder<span class="token operator">=</span><span class="token string">\'Username\'</span>\n                onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'username\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n              <span class="token operator">/</span><span class="token operator">></span>\n              <span class="token operator">&lt;</span>input\n                <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n                placeholder<span class="token operator">=</span><span class="token string">\'Password\'</span>\n                type<span class="token operator">=</span><span class="token string">\'password\'</span>\n                onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'password\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n              <span class="token operator">/</span><span class="token operator">></span>\n              <span class="token operator">&lt;</span>input\n                <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n                placeholder<span class="token operator">=</span><span class="token string">\'Email\'</span>\n                onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'email\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n              <span class="token operator">/</span><span class="token operator">></span>\n              <span class="token operator">&lt;</span>input\n                <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n                placeholder<span class="token operator">=</span><span class="token string">\'Phone Number\'</span>\n                onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'phone_number\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n              <span class="token operator">/</span><span class="token operator">></span>\n              <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>signUp<span class="token punctuation">}</span><span class="token operator">></span>\n                <span class="token operator">&lt;</span>p <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>buttonText<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>Sign Up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token punctuation">{</span>\n          showConfirmation <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n              <span class="token operator">&lt;</span>input\n                onChange<span class="token operator">=</span><span class="token punctuation">{</span>evt <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span><span class="token string">\'authCode\'</span><span class="token punctuation">,</span> evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>\n                <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">)</span><span class="token punctuation">}</span>\n                placeholder<span class="token operator">=</span><span class="token string">\'Confirmation Code\'</span>\n              <span class="token operator">/</span><span class="token operator">></span>\n              <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">}</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>confirmSignUp<span class="token punctuation">}</span><span class="token operator">></span>\n                <span class="token operator">&lt;</span>p <span class="token punctuation">{</span><span class="token operator">...</span><span class="token function">css</span><span class="token punctuation">(</span>styles<span class="token punctuation">.</span>buttonText<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>Confirm Sign Up<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token punctuation">{</span>\n  button<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    padding<span class="token punctuation">:</span> <span class="token string">\'10px 60px\'</span><span class="token punctuation">,</span>\n    backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#ddd\'</span><span class="token punctuation">,</span>\n    cursor<span class="token punctuation">:</span> <span class="token string">\'pointer\'</span><span class="token punctuation">,</span>\n    borderRadius<span class="token punctuation">:</span> <span class="token string">\'3px\'</span><span class="token punctuation">,</span>\n    <span class="token string">\':hover\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#ededed\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  buttonText<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    margin<span class="token punctuation">:</span> <span class="token number">0</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  container<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    flex<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    display<span class="token punctuation">:</span> <span class="token string">\'flex\'</span><span class="token punctuation">,</span>\n    alignItems<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n    justifyContent<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span>\n    flexDirection<span class="token punctuation">:</span> <span class="token string">\'column\'</span><span class="token punctuation">,</span>\n    paddingTop<span class="token punctuation">:</span> <span class="token string">\'15px\'</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  input<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>\n    marginBottom<span class="token punctuation">:</span> <span class="token string">\'10px\'</span><span class="token punctuation">,</span>\n    border<span class="token punctuation">:</span> <span class="token string">\'none\'</span><span class="token punctuation">,</span>\n    outline<span class="token punctuation">:</span> <span class="token string">\'none\'</span><span class="token punctuation">,</span>\n    borderBottom<span class="token punctuation">:</span> <span class="token string">\'2px solid #4CAF50\'</span><span class="token punctuation">,</span>\n    fontSize<span class="token punctuation">:</span> <span class="token string">\'16px\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'::placeholder\'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      color<span class="token punctuation">:</span> <span class="token string">\'rgba(0, 0, 0, .3)\'</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">withRouter</span><span class="token punctuation">(</span>SignUp<span class="token punctuation">)</span></code></pre>\n      </div>\n<h2><code class="language-text">Router.js</code></h2>\n<p>Cuối cùng, last but not least, router</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  withRouter<span class="token punctuation">,</span>\n  Switch<span class="token punctuation">,</span>\n  Route<span class="token punctuation">,</span>\n  Redirect<span class="token punctuation">,</span>\n  BrowserRouter <span class="token keyword">as</span> Router\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-router-dom\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Auth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'aws-amplify\'</span>\n\n<span class="token keyword">import</span> Authenticator <span class="token keyword">from</span> <span class="token string">\'./Authenticator\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  Home<span class="token punctuation">,</span>\n  Route1\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./Home\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">PrivateRoute</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    loaded<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    isAuthenticated<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>unlisten <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      Auth<span class="token punctuation">.</span><span class="token function">currentAuthenticatedUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>user <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'user: \'</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isAuthenticated<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> isAuthenticated<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unlisten</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    Auth<span class="token punctuation">.</span><span class="token function">currentAuthenticatedUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loaded<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> isAuthenticated<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">\'/auth\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> component<span class="token punctuation">:</span> Component<span class="token punctuation">,</span> <span class="token operator">...</span>rest <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> loaded <span class="token punctuation">,</span> isAuthenticated<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>loaded<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>Route\n        <span class="token punctuation">{</span><span class="token operator">...</span>rest<span class="token punctuation">}</span>\n        render<span class="token operator">=</span><span class="token punctuation">{</span>props <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> isAuthenticated <span class="token operator">?</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Component</span> <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n          <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Redirect</span>\n              <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n                pathname<span class="token punctuation">:</span> <span class="token string">"/auth"</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span>\n          <span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nPrivateRoute <span class="token operator">=</span> <span class="token function">withRouter</span><span class="token punctuation">(</span>PrivateRoute<span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Routes</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Router</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">\'</span>/auth<span class="token punctuation">\'</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Authenticator<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PrivateRoute</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">\'</span>/route1<span class="token punctuation">\'</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Route1<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PrivateRoute</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">\'</span>/<span class="token punctuation">\'</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>Home<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Switch</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Router</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Routes</code></pre>\n      </div>\n<p>Trong phần import sử dụng component <code class="language-text">Redirect</code> của <em>react-router-dom</em>, component này sẽ cho phép navigate user đến một route mới, làm web chắc ai cũng biết redirect là gì mà.</p>\n<p>Component <code class="language-text">PrivateRoute</code> có nhiệm vụ là một <em>container</em> cho các route cần kiểm tra tình trạng đăng nhập.</p>\n<p>Khởi tạo <em>state</em> là <code class="language-text">loaded</code> và <code class="language-text">isAuthenticated</code> với giá trị ban đầu là <code class="language-text">false</code></p>\n<p><code class="language-text">componentDidMount</code> - chúng ta làm chuyện là kiểm tra ngay và luôn tình trạng hôn nhân gia đình, không tình trạng login, nếu chưa thì mời em đến phòng đăng ký (kết hôn), đồng thời trong ta tạo ra tình trạng "hóng tin", listen các sự thay đổi của history (dùng <code class="language-text">this.props.history.listen</code>) và kiểm tra lại trình trạng đăng nhập</p>\n<h2><code class="language-text">App.js</code></h2>\n<p>Bên trong component App và ta có thể thu gọn lại</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./App.css\'</span>\n\n<span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">\'./Header\'</span>\n<span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">\'./Router\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>App<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Router</span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App</code></pre>\n      </div>\n<h2>Về vấn đề TOTP (time-based one-time passwords)</h2>\n<p>TOTP đang trở thành lựa chọn số một của các công ty đề cao tính bảo mật tuyệt đối khi muốn dùng MFA ( Multi-Factor Authentication ), thay thế cho việc dùng MFA với SMS. Sử dụng những ứng dụng như Authy, Google Authenticator &#x26; Dou để tạo ra một access token tạm thời, expire trong 30 đến 60 giây.</p>\n<p>Cognito và bây giờ là AWS Amplify cũng đã bổ sung tính năng này, thử mở rộng ứng dụng ra với tính năng này</p>\n<p>Trước khi sử dụng TOTP thì chúng ta nên nhớ một điều rằng: đừng bao giờ ép buộc user sử dụng nó thay cho MFA, trừ khi user cố tình chọn, vì TOTP thì xài cũng rất ư là phiền phức cho user, với những ứng dụng mà user không cung cấp bất kỳ thông tin gì quan trọng thì hà chi phải làm khó user vậy</p>\n<p>Flow sẽ như thế này</p>\n<ol>\n<li>User đăng ký, mặc định dùng MFA với SMS</li>\n<li>User đăng nhập, ở một hóc bà tó nào đó của ứng dụng, thường là trong mục thiết đặt, cho phép user sử dụng TOTP.</li>\n<li>User bật TOTP lên, cho họ một cái QR Code, họ lấy điện thoại mà scan cái QR code này, kiểu Zalo đó mấy bạn.</li>\n<li>Cho phép user quay lại SMS nếu thích</li>\n</ol>\n<p>Trong ứng dụng ví dụ thì ta thêm nó luôn vô trong <code class="language-text">Home</code>, sử dụng phương thức <code class="language-text">Auth.setupTOTP</code>, nó sẽ trả về một <em>promise</em> để chúng ta dùng tạo QR code cho user</p>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">Auth.setupTOTP(user).then(code =&gt; /* create qrcode */ )</code></pre>\n      </div>\n<p>Cài thêm <code class="language-text">qrcode.react</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">npm install qrcode.react --save</code></pre>\n      </div>\n<p>Bên trong component <code class="language-text">Home</code>, thêm phương thức <code class="language-text">addTop</code> để set QRCode, nhớ import QRCode trong Home nha.</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token function-variable function">addTTOP</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  Auth<span class="token punctuation">.</span><span class="token function">setupTOTP</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>code <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> authCode <span class="token operator">=</span> <span class="token string">"otpauth://totp/AWSCognito:"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>username <span class="token operator">+</span> <span class="token string">"?secret="</span> <span class="token operator">+</span> code <span class="token operator">+</span> <span class="token string">"&amp;issuer=AWSCognito"</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> qrCode<span class="token punctuation">:</span> authCode <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>Cho phép user chọn phương thức xác thực tài khoản MFA hay TOTP</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token function-variable function">setPreferredMFA</span> <span class="token operator">=</span> <span class="token punctuation">(</span>authType<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  Auth<span class="token punctuation">.</span><span class="token function">verifyTotpToken</span><span class="token punctuation">(</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">,</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>challengeAnswer\n  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    Auth<span class="token punctuation">.</span><span class="token function">setPreferredMFA</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">,</span> authType<span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>data <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'MFA update success: \'</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'MFA update error: \'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>Trên UI thêm chổ nhập TOTP code, một vài cái button</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token comment">// previous code omitted</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n      <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>addTTOP<span class="token punctuation">}</span></span>\n      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> border<span class="token punctuation">:</span> <span class="token string">\'1px solid #ddd\'</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">125</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Add <span class="token constant">TOTP</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">{</span>\n      <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>qrCode <span class="token operator">!==</span> <span class="token string">\'\'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>QRCode</span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>qrCode<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n      <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setPreferredMFA</span><span class="token punctuation">(</span><span class="token string">\'TOTP\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> border<span class="token punctuation">:</span> <span class="token string">\'1px solid #ddd\'</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">125</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Prefer <span class="token constant">TOTP</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>\n      <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">\'</span>TOTP Code<span class="token punctuation">\'</span></span>\n      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        challengeAnswer<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> border<span class="token punctuation">:</span> <span class="token string">\'1px solid #ddd\'</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">35</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<h3><code class="language-text">SignIn.js</code></h3>\n<p>Update lại phương thức <code class="language-text">signin</code> để sử dụng MFA, các thông tin cần thiết của user nằm trong object <code class="language-text">user.challengename</code>, chúng ta sử dụng để truyền vào cho <code class="language-text">Auth.confirmSignIn</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token function-variable function">confirmSignIn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> history <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props\n  Auth<span class="token punctuation">.</span><span class="token function">confirmSignIn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>authCode<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>challengeName<span class="token punctuation">)</span>\n  <span class="token comment">// rest of code omitted</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p><img src="https://cdn-images-1.medium.com/max/800/1*xC3g-S2iveqB1PH5U7Ec_A.png"></p>\n<p>Lúc này sau khi user đăng nhập có thể click vào nút <strong>Add TOTP</strong>, scan đoạn QR code và chuyển sang chế độ authentication dùng TOTP</p>\n<p><a href="https://github.com/dabit3/react-authentication-in-depth">Toàn bộ code ở đây</a></p>\n<p>Bài dịch từ tác giả Nader Dabit trên HackerNoon</p>',
id:"E:/anluu/luckyluu/posts/2018-03-17-react-native-authentication-voi-amazone-cognito-phan-2/index.md absPath of file >>> MarkdownRemark",timeToRead:10,frontmatter:{date:"2018-03-17T13:35:13.234Z",path:"/2018-03-17-react-native-authentication-voi-amazone-cognito-phan-2",tags:["javascript","react"],title:"React Authentication với Amazon Cognito - Phần 2"}},next:{excerpt:"JWT là gì JWT là một đoạn string dạng JSON đã được mã hóa và truyền qua header để làm nhiệm vụ authenticate. Bên cạnh secret key, cục JWT còn chứa một số thông tin khác được hash kèm trong JSON. JWT vận hành thế nào Khi user đăng nhập thành công...",html:'<h1>JWT là gì</h1>\n<p>JWT là một đoạn string dạng JSON đã được mã hóa và truyền qua header để làm nhiệm vụ authenticate. Bên cạnh secret key, cục JWT còn chứa một số thông tin khác được hash kèm trong JSON.</p>\n<h1>JWT vận hành thế nào</h1>\n<p>Khi user đăng nhập thành công, server sẽ trả về một cục JWT, chúng ta lưu cục này lại trong <code class="language-text">localStorage</code> để sử dụng về sau. Khi muốn thực hiện một request nào đó, chẳng hạn gọi đến API để lấy dữ liệu, mà cần xác thực đã đăng nhập, ta gởi cái token này kèm trong header của request. Server kiểm trả token này và thực thi yêu cầu nếu kiểm tra thấy hợp lệ.</p>\n<p>Nội dung của header thường sẽ là</p>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">Authorization: Bearer eyJhbGciOiJIUzI1NiIsI </code></pre>\n      </div>\n<p>Hình minh họa sau mô tả cách chạy của quá trình này</p>\n<p><img src="https://cms-assets.tutsplus.com/uploads/users/1885/posts/30460/image/jwt-diagram.png"></p>\n<h1>Authentication sử dụng kết hợp với Redux</h1>\n<p>Tạo Redux Store, ở đây chúng ta sẽ cần sử dụng tới middleware, để mỗi khi có một request đến API, thằng middleware này sẽ chèn thêm vào header đoạn authentication. Setup redux store với middleware</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore<span class="token punctuation">,</span> applyMiddleware <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'redux\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-redux\'</span>\n<span class="token keyword">import</span> thunkMiddleware <span class="token keyword">from</span> <span class="token string">\'redux-thunk\'</span>\n<span class="token keyword">import</span> quotesApp <span class="token keyword">from</span> <span class="token string">\'./reducers\'</span>\n<span class="token keyword">import</span> api <span class="token keyword">from</span> <span class="token string">\'./middleware/api\'</span>\n\n<span class="token keyword">let</span> createStoreWithMiddleware <span class="token operator">=</span> <span class="token function">applyMiddleware</span><span class="token punctuation">(</span>thunkMiddleware<span class="token punctuation">,</span> api<span class="token punctuation">)</span><span class="token punctuation">(</span>createStore<span class="token punctuation">)</span>\n\n<span class="token keyword">let</span> store <span class="token operator">=</span> <span class="token function">createStoreWithMiddleware</span><span class="token punctuation">(</span>quotesApp<span class="token punctuation">)</span>\n\n<span class="token keyword">let</span> rootElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'root\'</span><span class="token punctuation">)</span>\n\n<span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Provider store<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Provider<span class="token operator">></span><span class="token punctuation">,</span>\n  rootElement\n<span class="token punctuation">)</span></code></pre>\n      </div>\n<p>Component App chúng ta sẽ hiện thực nó như sau</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code class="language-jsx"><span class="token comment">// containers/App.js</span>\n\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> PropTypes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> connect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-redux\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> loginUser<span class="token punctuation">,</span> fetchQuote<span class="token punctuation">,</span> fetchSecretQuote <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'../actions\'</span>\n<span class="token keyword">import</span> Login <span class="token keyword">from</span> <span class="token string">\'../components/Login\'</span>\n<span class="token keyword">import</span> Navbar <span class="token keyword">from</span> <span class="token string">\'../components/Navbar\'</span>\n<span class="token keyword">import</span> Quotes <span class="token keyword">from</span> <span class="token string">\'../components/Quotes\'</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> quote<span class="token punctuation">,</span> isAuthenticated<span class="token punctuation">,</span> errorMessage<span class="token punctuation">,</span> isSecretQuote <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Navbar</span>\n          <span class="token attr-name">isAuthenticated</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>isAuthenticated<span class="token punctuation">}</span></span>\n          <span class="token attr-name">errorMessage</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>errorMessage<span class="token punctuation">}</span></span>\n          <span class="token attr-name">dispatch</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dispatch<span class="token punctuation">}</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">\'</span>container<span class="token punctuation">\'</span></span><span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Quotes</span>\n            <span class="token attr-name">onQuoteClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">fetchQuote</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n            <span class="token attr-name">onSecretQuoteClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">fetchSecretQuote</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n            <span class="token attr-name">isAuthenticated</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>isAuthenticated<span class="token punctuation">}</span></span>\n            <span class="token attr-name">quote</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>quote<span class="token punctuation">}</span></span>\n            <span class="token attr-name">isSecretQuote</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>isSecretQuote<span class="token punctuation">}</span></span>\n          <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nApp<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n  dispatch<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>func<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n  quote<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n  isAuthenticated<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>bool<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>\n  errorMessage<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n  isSecretQuote<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>bool<span class="token punctuation">.</span>isRequired\n<span class="token punctuation">}</span>\n\n<span class="token comment">// These props come from the application\'s</span>\n<span class="token comment">// state when it is started</span>\n<span class="token keyword">function</span> <span class="token function">mapStateToProps</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> quotes<span class="token punctuation">,</span> auth <span class="token punctuation">}</span> <span class="token operator">=</span> state\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> quote<span class="token punctuation">,</span> authenticated <span class="token punctuation">}</span> <span class="token operator">=</span> quotes\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> isAuthenticated<span class="token punctuation">,</span> errorMessage <span class="token punctuation">}</span> <span class="token operator">=</span> auth\n\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    quote<span class="token punctuation">,</span>\n    isSecretQuote<span class="token punctuation">:</span> authenticated<span class="token punctuation">,</span>\n    isAuthenticated<span class="token punctuation">,</span>\n    errorMessage\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">connect</span><span class="token punctuation">(</span>mapStateToProps<span class="token punctuation">)</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span></code></pre>\n      </div>\n<p>Action để gọi login</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// actions.js</span>\n\n<span class="token comment">// There are three possible states for our login</span>\n<span class="token comment">// process and we need actions for each of them</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">LOGIN_REQUEST</span> <span class="token operator">=</span> <span class="token string">\'LOGIN_REQUEST\'</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">LOGIN_SUCCESS</span> <span class="token operator">=</span> <span class="token string">\'LOGIN_SUCCESS\'</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">LOGIN_FAILURE</span> <span class="token operator">=</span> <span class="token string">\'LOGIN_FAILURE\'</span>\n\n<span class="token keyword">function</span> <span class="token function">requestLogin</span><span class="token punctuation">(</span>creds<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    type<span class="token punctuation">:</span> <span class="token constant">LOGIN_REQUEST</span><span class="token punctuation">,</span>\n    isFetching<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    isAuthenticated<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    creds\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">receiveLogin</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    type<span class="token punctuation">:</span> <span class="token constant">LOGIN_SUCCESS</span><span class="token punctuation">,</span>\n    isFetching<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    isAuthenticated<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    id_token<span class="token punctuation">:</span> user<span class="token punctuation">.</span>id_token\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">loginError</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    type<span class="token punctuation">:</span> <span class="token constant">LOGIN_FAILURE</span><span class="token punctuation">,</span>\n    isFetching<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    isAuthenticated<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    message\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// Calls the API to get a token and</span>\n<span class="token comment">// dispatches actions along the way</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">loginUser</span><span class="token punctuation">(</span>creds<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n  <span class="token keyword">let</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n    method<span class="token punctuation">:</span> <span class="token string">\'POST\'</span><span class="token punctuation">,</span>\n    headers<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token string">\'Content-Type\'</span><span class="token punctuation">:</span><span class="token string">\'application/x-www-form-urlencoded\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    body<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`username=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>creds<span class="token punctuation">.</span>username<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;password=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>creds<span class="token punctuation">.</span>password<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> dispatch <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// We dispatch requestLogin to kickoff the call to the API</span>\n    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">requestLogin</span><span class="token punctuation">(</span>creds<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">\'http://localhost:3001/sessions/create\'</span><span class="token punctuation">,</span> config<span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=></span>\n        response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>user <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> user<span class="token punctuation">,</span> response <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> user<span class="token punctuation">,</span> response <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span>  <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">// If there was a problem, we want to</span>\n          <span class="token comment">// dispatch the error condition</span>\n          <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">loginError</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span>\n          <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n          <span class="token comment">// If login was successful, set the token in local storage</span>\n          localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">\'id_token\'</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span>id_token<span class="token punctuation">)</span>\n          localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">\'id_token\'</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span>access_token<span class="token punctuation">)</span>\n          <span class="token comment">// Dispatch the success action</span>\n          <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">receiveLogin</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Error: "</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>Ở đây chúng ta cũng đã lưu token này lại nếu user đăng nhập thành công xuống <code class="language-text">localStorage</code>, đồng thời chúng ta cũng dispatch cái action <code class="language-text">receivedLogin</code>, việc lưu token này có thể lưu nó ở chổ nào đó khác, tuy nhiên không được lưu nó trong <code class="language-text">reducer</code>, vì nó có thể gây ra side effect.</p>\n<p>Còn việc logout user cũng tương tự, ta chỉ việc set <code class="language-text">isAuthenticated = false</code> và xóa token này đi</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// Logs the user out</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">logoutUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> dispatch <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">requestLogout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">\'id_token\'</span><span class="token punctuation">)</span>\n    localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">\'access_token\'</span><span class="token punctuation">)</span>\n    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">receiveLogout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<p>reducer sẽ như sau</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> combineReducers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'redux\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  <span class="token constant">LOGIN_REQUEST</span><span class="token punctuation">,</span> <span class="token constant">LOGIN_SUCCESS</span><span class="token punctuation">,</span> <span class="token constant">LOGIN_FAILURE</span><span class="token punctuation">,</span> <span class="token constant">LOGOUT_SUCCESS</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./actions\'</span>\n\n<span class="token comment">// The auth reducer. The starting state sets authentication</span>\n<span class="token comment">// based on a token being in local storage. In a real app,</span>\n<span class="token comment">// we would also want a util to check if the token is expired.</span>\n<span class="token keyword">function</span> <span class="token function">auth</span><span class="token punctuation">(</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    isFetching<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    isAuthenticated<span class="token punctuation">:</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">\'id_token\'</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token constant">LOGIN_REQUEST</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        isFetching<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        isAuthenticated<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        user<span class="token punctuation">:</span> action<span class="token punctuation">.</span>creds\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">case</span> <span class="token constant">LOGIN_SUCCESS</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        isFetching<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        isAuthenticated<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        errorMessage<span class="token punctuation">:</span> <span class="token string">\'\'</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">case</span> <span class="token constant">LOGIN_FAILURE</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        isFetching<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        isAuthenticated<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        errorMessage<span class="token punctuation">:</span> action<span class="token punctuation">.</span>message\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">case</span> <span class="token constant">LOGOUT_SUCCESS</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        isFetching<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        isAuthenticated<span class="token punctuation">:</span> <span class="token boolean">false</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">default</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> state\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// The quotes reducer</span>\n<span class="token keyword">function</span> <span class="token function">quotes</span><span class="token punctuation">(</span>state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">default</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> state\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// We combine the reducers here so that they</span>\n<span class="token comment">// can be left split apart above</span>\n<span class="token keyword">const</span> quotesApp <span class="token operator">=</span> <span class="token function">combineReducers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  auth<span class="token punctuation">,</span>\n  quotes\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> quotesApp</code></pre>\n      </div>\n<p>Quay lại với API middleware, như đã nói trên, giờ mỗi khi send đi một request, trong middleware chúng ta sẽ chèn thêm giá trị JWT này vào header</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// middleware/api.js</span>\n\n<span class="token keyword">const</span> <span class="token constant">BASE_URL</span> <span class="token operator">=</span> <span class="token string">\'http://localhost:3001/api/\'</span>\n\n<span class="token keyword">function</span> <span class="token function">callApi</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span> authenticated<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n  <span class="token keyword">let</span> token <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">\'access_token\'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">null</span>\n  <span class="token keyword">let</span> config <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n  <span class="token keyword">if</span><span class="token punctuation">(</span>authenticated<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      config <span class="token operator">=</span> <span class="token punctuation">{</span>\n        headers<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token string">\'Authorization\'</span><span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span> <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token keyword">throw</span> <span class="token string">"No token saved!"</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token constant">BASE_URL</span> <span class="token operator">+</span> endpoint<span class="token punctuation">,</span> config<span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=></span>\n      response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>text <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> text<span class="token punctuation">,</span> response <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> text<span class="token punctuation">,</span> response <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token keyword">return</span> text\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">CALL_API</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">\'Call API\'</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> store <span class="token operator">=></span> next <span class="token operator">=></span> action <span class="token operator">=></span> <span class="token punctuation">{</span>\n\n  <span class="token keyword">const</span> callAPI <span class="token operator">=</span> action<span class="token punctuation">[</span><span class="token constant">CALL_API</span><span class="token punctuation">]</span>\n\n  <span class="token comment">// So the middleware doesn\'t get applied to every single action</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> callAPI <span class="token operator">===</span> <span class="token string">\'undefined\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">let</span> <span class="token punctuation">{</span> endpoint<span class="token punctuation">,</span> types<span class="token punctuation">,</span> authenticated <span class="token punctuation">}</span> <span class="token operator">=</span> callAPI\n\n  <span class="token keyword">const</span> <span class="token punctuation">[</span> requestType<span class="token punctuation">,</span> successType<span class="token punctuation">,</span> errorType <span class="token punctuation">]</span> <span class="token operator">=</span> types\n\n  <span class="token comment">// Passing the authenticated boolean back in our data will let us distinguish between normal and secret quotes</span>\n  <span class="token keyword">return</span> <span class="token function">callApi</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span> authenticated<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>\n    response <span class="token operator">=></span>\n      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        response<span class="token punctuation">,</span>\n        authenticated<span class="token punctuation">,</span>\n        type<span class="token punctuation">:</span> successType\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    error <span class="token operator">=></span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      error<span class="token punctuation">:</span> error<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">\'There was an error.\'</span><span class="token punctuation">,</span>\n      type<span class="token punctuation">:</span> errorType\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code class="language-js"><span class="token comment">// actions.js</span>\n\n<span class="token comment">// The middleware to call the API for quotes</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">CALL_API</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./middleware/api\'</span>\n\n<span class="token operator">...</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">QUOTE_REQUEST</span> <span class="token operator">=</span> <span class="token string">\'QUOTE_REQUEST\'</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">QUOTE_SUCCESS</span> <span class="token operator">=</span> <span class="token string">\'QUOTE_SUCCESS\'</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">QUOTE_FAILURE</span> <span class="token operator">=</span> <span class="token string">\'QUOTE_FAILURE\'</span>\n\n<span class="token comment">// Uses the API middlware to get a quote</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">fetchQuote</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span><span class="token constant">CALL_API</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      endpoint<span class="token punctuation">:</span> <span class="token string">\'random-quote\'</span><span class="token punctuation">,</span>\n      types<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token constant">QUOTE_REQUEST</span><span class="token punctuation">,</span> <span class="token constant">QUOTE_SUCCESS</span><span class="token punctuation">,</span> <span class="token constant">QUOTE_FAILURE</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// Same API middlware is used to get a</span>\n<span class="token comment">// secret quote, but we set authenticated</span>\n<span class="token comment">// to true so that the auth header is sent</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">fetchSecretQuote</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span><span class="token constant">CALL_API</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      endpoint<span class="token punctuation">:</span> <span class="token string">\'protected/random-quote\'</span><span class="token punctuation">,</span>\n      authenticated<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      types<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token constant">QUOTE_REQUEST</span><span class="token punctuation">,</span> <span class="token constant">QUOTE_SUCCESS</span><span class="token punctuation">,</span> <span class="token constant">QUOTE_FAILURE</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token operator">...</span>\n\nĐoạn code trên có sử dụng cú pháp <span class="token punctuation">[</span>computed property<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>developer<span class="token punctuation">.</span>mozilla<span class="token punctuation">.</span>org<span class="token operator">/</span>en<span class="token operator">-</span><span class="token constant">US</span><span class="token operator">/</span>docs<span class="token operator">/</span>Web<span class="token operator">/</span>JavaScript<span class="token operator">/</span>Reference<span class="token operator">/</span>Operators<span class="token operator">/</span>Object_initializer#Computed_property_names<span class="token punctuation">)</span>\n\n<span class="token template-string"><span class="token string">`quotes`</span></span> reducer sẽ handle cái action trên\n\n<span class="token template-string"><span class="token string">``</span></span>`js\n<span class="token comment">// reducers.js</span>\n\n<span class="token operator">...</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  <span class="token constant">LOGIN_REQUEST</span><span class="token punctuation">,</span> <span class="token constant">LOGIN_SUCCESS</span><span class="token punctuation">,</span> <span class="token constant">LOGIN_FAILURE</span><span class="token punctuation">,</span> <span class="token constant">LOGOUT_SUCCESS</span><span class="token punctuation">,</span>\n  <span class="token constant">QUOTE_REQUEST</span><span class="token punctuation">,</span> <span class="token constant">QUOTE_SUCCESS</span><span class="token punctuation">,</span> <span class="token constant">QUOTE_FAILURE</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'./actions\'</span>\n\n<span class="token operator">...</span>\n\n<span class="token comment">// The quotes reducer</span>\n<span class="token keyword">function</span> <span class="token function">quotes</span><span class="token punctuation">(</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    isFetching<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    quote<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n    authenticated<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token constant">QUOTE_REQUEST</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        isFetching<span class="token punctuation">:</span> <span class="token boolean">true</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">case</span> <span class="token constant">QUOTE_SUCCESS</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        isFetching<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        quote<span class="token punctuation">:</span> action<span class="token punctuation">.</span>response<span class="token punctuation">,</span>\n        authenticated<span class="token punctuation">:</span> action<span class="token punctuation">.</span>authenticated <span class="token operator">||</span> <span class="token boolean">false</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">case</span> <span class="token constant">QUOTE_FAILURE</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        isFetching<span class="token punctuation">:</span> <span class="token boolean">false</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">default</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> state\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token operator">...</span></code></pre>\n      </div>',
id:"E:/anluu/luckyluu/posts/2018-03-14-react-authentication-voi-jwt-redux/index.md absPath of file >>> MarkdownRemark",timeToRead:6,frontmatter:{date:"2018-03-14T13:35:13.234Z",path:"/2018-03-14-react-authentication-voi-jwt-redux",tags:["javascript","react"],title:"Authentication với JWT"}}}}}});
//# sourceMappingURL=path---2018-03-16-react-authentication-phan-1-d93999b8b6415402da6d.js.map