webpackJsonp([28],{"./node_modules/json-loader/index.js!./.cache/json/2017-08-07-gioi-thieu-nhanh-ve-mobx.json":function(n,s){n.exports={data:{markdownRemark:{html:'<h2>Tư tưởng chính của MobX</h2>\n<p>MobX đảm bảo vấn để sau: không cho phép tạo ra một state không thống nhất</p>\n<p><img src="https://mobx.js.org/getting-started-assets/overview.png"></p>\n<ol>\n<li>Application state: có thể là một mớ bồng bông <code>object</code>, <code>array</code> nguyên thủy từ database</li>\n<li>Derivations: tất cả những giá trị có được từ việc kết giữa các Application State với mớ logic lằn ngoằn sau khi tính toán.</li>\n<li>Reactions: tương tự như <code>Derivations</code>, khác nhau chính ở chổ những <code>function</code> này không trả về giá trị, nó sẽ thực hiện một tác vụ nào đó, đảm bảo DOM được cập nhập đúng.</li>\n<li>Actions: là những gì sẽ làm thay đổi <code>state</code>, MobX sẽ đảm bảo tất cả những <code>state</code> bị thay đổi bởi actions sẽ được thông báo cho <code>Derivations</code> và <code>Reactions</code></li>\n</ol>\n<h2>Ví dụ</h2>\n<p>Tạo một cái <code>store</code> Todo, gọi nó là <code>TodoStore</code>, chứa tất một <code>collections</code> <em>todos</em></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">class</span> <span class="token class-name">TodoStore</span><span class="token punctuation">{</span>\n    todos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">get</span> <span class="token function">completedTodosCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>\n            todo <span class="token operator">=</span><span class="token operator">></span> todo<span class="token punctuation">.</span>completed <span class="token operator">===</span> <span class="token boolean">true</span>\n            <span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">report</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span>\n            <span class="token keyword">return</span> <span class="token string">"&lt;none>"</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`Next todo: "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>task<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">". `</span></span> <span class="token operator">+</span>\n            <span class="token template-string"><span class="token string">`Progress: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>completedTodosCount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">addTodo</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            task<span class="token punctuation">:</span> task<span class="token punctuation">,</span>\n            completed<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            assignee<span class="token punctuation">:</span> <span class="token keyword">null</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>    \n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> todoStore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TodoStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Giờ thêm một data cho <strong>TodoStore</strong>, mỗi lần thêm mình gọi hàm <code>report</code> để thấy được kết quả sau khai thay đổi.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>todoStore<span class="token punctuation">.</span><span class="token function">addTodo</span><span class="token punctuation">(</span><span class="token string">"read MobX tutorial"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>todoStore<span class="token punctuation">.</span><span class="token function">report</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n​\ntodoStore<span class="token punctuation">.</span><span class="token function">addTodo</span><span class="token punctuation">(</span><span class="token string">"try MobX"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>todoStore<span class="token punctuation">.</span><span class="token function">report</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n​\ntodoStore<span class="token punctuation">.</span>todos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>completed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>todoStore<span class="token punctuation">.</span><span class="token function">report</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n​\ntodoStore<span class="token punctuation">.</span>todos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>task <span class="token operator">=</span> <span class="token string">"try MobX in own project"</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>todoStore<span class="token punctuation">.</span><span class="token function">report</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n​\ntodoStore<span class="token punctuation">.</span>todos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>task <span class="token operator">=</span> <span class="token string">"grok MobX tutorial"</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>todoStore<span class="token punctuation">.</span><span class="token function">report</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Thay vì phải gọi report như vậy, ta hãy gọi nó một cách tự động khi cái <code>TodoStore</code> bị thay đổi, để được như vậy <code>TodoStore</code> phải trở thành một <em>observable</em> để MobX sẽ tracking tất cả thay đổi trên <code>TodoStore</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">class</span> <span class="token class-name">ObservableTodoStore</span> <span class="token punctuation">{</span>\n    @observable todos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    @observable pendingRequests <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n​\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        mobx<span class="token punctuation">.</span><span class="token function">autorun</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>report<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n​\n    @computed <span class="token keyword">get</span> <span class="token function">completedTodosCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>\n            todo <span class="token operator">=</span><span class="token operator">></span> todo<span class="token punctuation">.</span>completed <span class="token operator">===</span> <span class="token boolean">true</span>\n        <span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n​\n    @computed <span class="token keyword">get</span> <span class="token function">report</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span>\n            <span class="token keyword">return</span> <span class="token string">"&lt;none>"</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`Next todo: "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>task<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">". `</span></span> <span class="token operator">+</span>\n            <span class="token template-string"><span class="token string">`Progress: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>completedTodosCount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n​\n    <span class="token function">addTodo</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>todos<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            task<span class="token punctuation">:</span> task<span class="token punctuation">,</span>\n            completed<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            assignee<span class="token punctuation">:</span> <span class="token keyword">null</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n​\n​\n<span class="token keyword">const</span> observableTodoStore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObservableTodoStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Với những giá trị tính toán dựa trên <code>state</code> đăng ký nó bằng <code>@computed</code> và collection <strong>TodoStore</strong> <code>@observable</code></p>\n<p>Bên trong hàm <code>constructor</code> chúng ta cho gọi hàm <code>report</code> bằng <code>mobx.autorun</code>. Thằng này sẽ chạy (gọi là <em>reaction</em>) mỗi khi observable data có thay đổi bởi vì bên trong hàm <code>report</code> chúng ta có gọi một <em>observable object</em> là <code>this.todos</code></p>\n<h2>Giờ thì kết hợp với <code>React</code></h2>\n<p>Sử dụng decorator <code>@observer</code> từ package <code>mobx-react</code> để wrap 1 component React, đảm bảo các component sẽ được tự động update khi dữ liệu bị thay đổi mà không cần gọi hàm <code>setState</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code>@observer\nclass TodoList extends React.Component {\n  render() {\n    const store = this.props.store;\n    return (\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        { store.report }\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n        { store.todos.map(\n          (todo, idx) => <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TodoView</span> <span class="token attr-name">todo</span><span class="token attr-value"><span class="token punctuation">=</span>{</span> <span class="token attr-name">todo</span> <span class="token attr-name">}</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span>{</span> <span class="token attr-name">idx</span> <span class="token attr-name">}</span> <span class="token punctuation">/></span></span>\n        ) }\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n        { store.pendingRequests > 0 ? <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>marquee</span><span class="token punctuation">></span></span>Loading...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>marquee</span><span class="token punctuation">></span></span> : null }\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token attr-value"><span class="token punctuation">=</span>{</span> <span class="token attr-name">this.onNewTodo</span> <span class="token attr-name">}</span><span class="token punctuation">></span></span>New Todo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">></span></span> (double-click a todo to edit)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RenderCounter</span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    );\n  }\n\n  onNewTodo = () => {\n    this.props.store.addTodo(prompt(\'Enter a new todo:\',\'coffee plz\'));\n  }\n}\n\n@observer\nclass TodoView extends React.Component {\n  render() {\n    const todo = this.props.todo;\n    return (\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">onDoubleClick</span><span class="token attr-value"><span class="token punctuation">=</span>{</span> <span class="token attr-name">this.onRename</span> <span class="token attr-name">}</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>\n          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">\'</span>checkbox<span class="token punctuation">\'</span></span>\n          <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation">=</span>{</span> <span class="token attr-name">todo.completed</span> <span class="token attr-name">}</span>\n          <span class="token attr-name">onChange</span><span class="token attr-value"><span class="token punctuation">=</span>{</span> <span class="token attr-name">this.onToggleCompleted</span> <span class="token attr-name">}</span>\n        <span class="token punctuation">/></span></span>\n        { todo.task }\n        { todo.assignee\n          ? <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">></span></span>{ todo.assignee.name }<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">></span></span>\n          : null\n        }\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RenderCounter</span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n    );\n  }\n\n  onToggleCompleted = () => {\n    const todo = this.props.todo;\n    todo.completed = !todo.completed;\n  }\n\n  onRename = () => {\n    const todo = this.props.todo;\n    todo.task = prompt(\'Task name\', todo.task) || todo.task;\n  }\n}\n\nReactDOM.render(\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TodoList</span> <span class="token attr-name">store</span><span class="token attr-value"><span class="token punctuation">=</span>{</span> <span class="token attr-name">observableTodoStore</span> <span class="token attr-name">}</span> <span class="token punctuation">/></span></span>,\n  document.getElementById(\'reactjs-app\')\n);\n</code></pre>\n      </div>\n<p>Khi đó, khi ta tương tác với object <code>Store</code>, phần việc còn lại sẽ do MobX đảm nhiệm sau cho DOM hiển thị đúng với <code>Store</code> này</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">const</span> store <span class="token operator">=</span> observableTodoStore<span class="token punctuation">;</span>\nstore<span class="token punctuation">.</span>todos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>completed <span class="token operator">=</span> <span class="token operator">!</span>store<span class="token punctuation">.</span>todos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>completed<span class="token punctuation">;</span>\nstore<span class="token punctuation">.</span>todos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>task <span class="token operator">=</span> <span class="token string">"Random todo "</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nstore<span class="token punctuation">.</span>todos<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> task<span class="token punctuation">:</span> <span class="token string">"Find a fine cheese"</span><span class="token punctuation">,</span> completed<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment" spellcheck="true">// etc etc.. add your own statements here...</span>\n</code></pre>\n      </div>',frontmatter:{date:"August 07, 2017",path:"/2017-08-07-gioi-thieu-nhanh-ve-mobx",tags:["javascript","react"],title:"Giới thiệu nhanh về Mobx",desc:"MobX là một một thư viện độc lập để quản lý state, phần lớn nó được sử dụng chung với React"}}},pathContext:{prev:!1,next:{excerpt:"Giới thiệu về React Router Nhiều Route Tái sự dụng component với Nested Route IndexRoute Một số cách khai báo với Route Sử dụng Link, đừng sử dụng tag a Browser History Route với paramater string Giới thiệu về React Router React không phải một...",html:'<!-- MarkdownTOC -->\n<ul>\n<li>Giới thiệu về React Router</li>\n<li>Nhiều Route</li>\n<li>Tái sự dụng component với Nested Route</li>\n<li>IndexRoute</li>\n<li>Một số cách khai báo với Route</li>\n<li>Sử dụng Link, đừng sử dụng tag a</li>\n<li>Browser History</li>\n<li>Route với paramater string</li>\n</ul>\n<!-- /MarkdownTOC -->\n<h1>Giới thiệu về React Router</h1>\n<p>React không phải một framework, nó chỉ là một thư viện javascript, bởi vì vậy nó không thể giải quyết tất cả các yêu cầu một application. Việc mà React làm rất tốt là tạo component và cách thức quản lý state của component, nhưng để tạo một Single Page App (sẽ viết tắt là SPA) phức tạp, nó cần những thư viện khác nữa, đầu tiền cần nhắc đến là React Router</p>\n<p>Cách tiếp cận của React Router không khác mấy so với các thư viện Router trước đây, có chăng chỉ khác ở chổ React-Router thì dùng JSX.</p>\n<p>Ví dụ với 1 component <code>Home</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">class</span> <span class="token class-name">Home</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token punctuation">{</span>\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span><span class="token punctuation">(</span>\n                <span class="token operator">&lt;</span>h1<span class="token operator">></span>Welcome Home<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token punctuation">;</span>\n            <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>Home<span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'root\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Sử dụng với React-Router</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code>ReactDOM.render((\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Router</span><span class="token punctuation">></span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{Home}</span> <span class="token punctuation">/></span></span> \n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Router</span><span class="token punctuation">></span></span>\n), document.getElementById(\'root\'));\n</code></pre>\n      </div>\n<p>2 component <Router> và <Route> là những component React không render trong DOM, nó xác định app sẽ sử dụng component nào với những route khác nhau, chúng ta sẽ gặp lại khái niệm này thường xuyên: ** Một component bản thân không render thành DOM mà chỉ đỉnh cho component khác **</p>\n<p>Câu khai báo trên có thể diễn giải là với route "/" (tương đương với trang chủ), hiển thị component <code>Home</code> vào #root</p>\n<h1>Nhiều Route</h1>\n<p>Xem xét ví dụ sau</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code>ReactDOM.render((\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Router</span><span class="token punctuation">></span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{Home}</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Route</span><span class="token punctuation">></span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/tags<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{TagsPage}</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Route</span><span class="token punctuation">></span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/post/:id<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{Post}</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Route</span><span class="token punctuation">></span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Router</span><span class="token punctuation">></span></span>\n), document.getElementById(\'root\'));\n</code></pre>\n      </div>\n<ul>\n<li>Với URL yourpage.com/ -> render component <code>Home</code></li>\n<li>Với URL yourpage.com/tags -> render component <code>TagsPage</code></li>\n<li>Với URL yourpage.com/post/12 -> render component <code>Post</code></li>\n</ul>\n<h1>Tái sự dụng component với Nested Route</h1>\n<p>Khai báo nested Route như sau</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code>ReactDOM.render((\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Router</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{MainLayout}</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{SearchLayout}</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>users<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserList}</span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Route</span><span class="token punctuation">></span></span> \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Route</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Router</span><span class="token punctuation">></span></span>\n), document.getElementById(\'root\'));\n</code></pre>\n      </div>\n<p>Khi user visit đường dẫn <em>/users</em>, React Router sẽ render component <code>UserList</code> bên trong component <code>SearchLayout</code>, cả 2 component này lại đặt trong component <code>MainLayout</code></p>\n<p>Nếu muốn trang chủ cũng render <code>MainLayout</code> cùng với component <code>Home</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code>ReactDOM.render((\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Router</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{MainLayout}</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{Home}</span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{SearchLayout}</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>users<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserList}</span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>widgets<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{WidgetList}</span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Route</span><span class="token punctuation">></span></span> \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Route</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Router</span><span class="token punctuation">></span></span>\n), document.getElementById(\'root\'));\n</code></pre>\n      </div>\n<h1>IndexRoute</h1>\n<p>Thay vì viết như trên, có thể sử dụng component <code>IndexRoute</code> cũng cho cũng kết quả</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code>ReactDOM.render((\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Router</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{MainLayout}</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IndexRoute</span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{Home}</span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{SearchLayout}</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>users<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserList}</span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>widgets<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{WidgetList}</span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Route</span><span class="token punctuation">></span></span> \n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Route</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Router</span><span class="token punctuation">></span></span>\n), document.getElementById(\'root\'));\n</code></pre>\n      </div>\n<h1>Một số cách khai báo với Route</h1>\n<p>Nếu có một khai báo cho trang <em>User</em> như bên dưới</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user/settings<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserSettings}</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user/inventory<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserInventory}</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user/orders<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserOrders}</span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>viết lại cho gọn</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>settings<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserSettings}</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inventory<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserInventory}</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>orders<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserOrders}</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Route</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>Cần bổ sung thêm component cho trang <code>/user</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>IndexRoute</span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserProfile}</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>settings<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserSettings}</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inventory<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserInventory}</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>orders<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserOrders}</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Route</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<h1>Sử dụng Link, đừng sử dụng tag a</h1>\n<p>Khi đã định nghĩa với Route, nếu muốn gán một đường dẫn đến một route nào đó, sử dụng component <code>&#x3C;Link to="" /></code> thay cho tag <code>&#x3C;a/></code></p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>aside</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary-aside<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Link</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Users<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Link</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/user/settings<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Settings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Link</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>aside</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>\n    {this.props.children}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>Một tính năng cực cool của <code>&#x3C;Link></code> nữa là nó hiểu khi nào đang active</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/users<span class="token punctuation">"</span></span> <span class="token attr-name">activeClassName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Users<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Link</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<h1>Browser History</h1>\n<p><code>&#x3C;Router></code> muốn hoạt động được phải được khai báo với <code>ReactRouter.browserHistory</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">var</span> browserHistory <span class="token operator">=</span> ReactRouter<span class="token punctuation">.</span>browserHistory<span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">(</span>\n\t<span class="token operator">&lt;</span>Router history<span class="token operator">=</span><span class="token punctuation">{</span>browserHistory<span class="token punctuation">}</span><span class="token operator">></span>\n\t<span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">></span>\n<span class="token punctuation">)</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'root\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Những version trước đây của React Router, attribute <code>history</code> có giá trị mặc định là hashHistory giống như router của Backbone.js, các version sau này, attribute history sẽ không có giá trị mặc định và bắt buộc phải khai báo khi sử dụng</p>\n<p>Nếu muốn redirect user đến một route nào đó</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>browserHistory<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">\'/some/path\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<h1>Route với paramater string</h1>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>users/:userId<span class="token punctuation">"</span></span> <span class="token attr-name">component</span><span class="token attr-value"><span class="token punctuation">=</span>{UserProfile}</span> <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<p>Component UserProfile sẽ được render trong các trường hợp: <code>users/1</code>, <code>users/145</code>, <code>users/abc</code>, React Router sẽ truyền vào giá trị <code>userId</code> vào UserProfile như một props, access đến giá trị này bằng <code>this.props.params.userId</code></p>',
id:"C:/anluu/luckyluu/posts/2017-07-31-react-router/index.md absPath of file >>> MarkdownRemark",timeToRead:5,frontmatter:{date:"2017-07-31T13:35:13.234Z",path:"/2017-07-31-react-router",tags:["javascript","react"],title:"Giới thiệu React Router"}}}}}});
//# sourceMappingURL=path---2017-08-07-gioi-thieu-nhanh-ve-mobx-c71cfbf3cb7c9055460f.js.map