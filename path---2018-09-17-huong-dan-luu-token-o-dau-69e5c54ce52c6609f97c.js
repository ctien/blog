webpackJsonp([68531798662674],{1350:function(t,n){t.exports={data:{markdownRemark:{html:'<h1 id="web-storage-local-storage--session-storage"><a href="#web-storage-local-storage--session-storage" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Web Storage (local storage / session storage)</h1>\n<p>Trong đa số các trường hợp, lưu JWT trong local storage của trình duyệt sẽ hoạt động tốt.</p>\n<p>Sau khi đăng nhập thành công, chúng ta sẽ nhận được một Access Token JWT, ở phía client lưu nó xuống <code class="language-text">localStorage</code> hoặc <code class="language-text">sessionStorage</code>, mình chắc không cần giải thích sự khác nhau của 2 thằng này</p>\n<p><strong>Nhược điểm của dùng Web Storage</strong></p>\n<ul>\n<li>Không giống cookies, local storage chỉ có thể truy cập từ một domain cụ thể và không thể truy cập từ domain khác, kể cả sub-domain</li>\n<li>Web storage có thể được truy cập bằng javascript, có thể bị lợi dụng để tấn công cross-site scripting (XSS)</li>\n<li>Lập trình viên phải luôn đảm bảo gởi đi JWT bằng HTTPS, không bao giờ được dùng HTTP</li>\n</ul>\n<p><strong>Ưu điểm</strong></p>\n<ul>\n<li>Truy cập được bằng Javascript</li>\n</ul>\n<h1 id="cookies"><a href="#cookies" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Cookies</h1>\n<p>Chúng ta cũng có thể lưu JWT bằng cookie</p>\n<p>Vòng đời có một cookie có thể tùy biến theo chúng ta lựa chọn</p>\n<ul>\n<li>Cookie sẽ bị xóa sau khi đóng trình duyệt (session cookie)</li>\n<li>Kiểm tra ở phía server, có thể thêm expiration data hoặc theo trình duyệt</li>\n<li>Có thể không bị xóa sau khi đóng trình duyệt, chỉ có expiration date</li>\n<li>Cookie có thể truy cập bằng javascript ở client, hoặc code server. Nếu thay đổi giá trị <code class="language-text">httpOnly</code> chỉ có server mới được truy cập.</li>\n</ul>\n<p><strong>Nhược điểm của dùng Cookie</strong></p>\n<ul>\n<li>Kích thước lớn nhất của cookie là 4kb, nếu muốn thêm một số thông tin vào trong token thì sẽ không được.</li>\n<li>Có thể bị dùng để tấn công bằng cross-site request forgery (CSRF hay XSRF). Có thể chặn một phần CSRF nếu kiểm tra HTTP <code class="language-text">Referer</code> và <code class="language-text">Origin</code></li>\n<li>Không thể truy cập bằng javascript</li>\n</ul>\n<p><strong>Ưu điểm</strong></p>\n<ul>\n<li>Client không thể chỉnh sửa và xem</li>\n</ul>',timeToRead:1,excerpt:"Web Storage (local storage / session storage) Trong đa số các trường hợp, lưu JWT trong local storage của trình duyệt sẽ hoạt động tốt. Sau…",frontmatter:{title:"Lưu token ở đâu?",cover:"",date:"2018-09-17",category:null,tags:["javascript"],desc:"Với ứng dụng xác thực bằng token, hướng dẫn này sẽ giải thích việc lưu token ở đâu cho an toàn"},fields:{slug:"/2018-09-17-huong-dan-luu-token-o-dau"}}},pathContext:{slug:"/2018-09-17-huong-dan-luu-token-o-dau",prev:{frontmatter:{title:"Merging vs Rebasing",desc:"Trong bài viết này, chúng ta sẽ so sanh giữa lệnh git rebase với git merge, những trường hợp ta có thể áp dụng rebase trong quá trình làm việc với git",type:"post",category:null,tags:["javascript"]},fields:{slug:"/2018-09-18-merging-va-rebase-trong-git"}},next:{frontmatter:{title:"Giải thích Workflow theo kiểu Gitflow",desc:"Gitflow là một dạng quy trình làm việc với Git, được giới thiệu bởi Vincent Driessen và sử dụng rất phổ biến trong các công ty phần mềm, đặt ra những quy ước trong việc tổ chức các branch trên Git",type:"post",category:null,tags:["javascript"]},fields:{slug:"/2018-09-16-huong-dan-gitflow-workflow"}}}}}});
//# sourceMappingURL=path---2018-09-17-huong-dan-luu-token-o-dau-69e5c54ce52c6609f97c.js.map