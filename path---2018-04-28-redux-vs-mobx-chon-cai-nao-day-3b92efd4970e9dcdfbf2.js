webpackJsonp([26],{"./node_modules/json-loader/index.js!./.cache/json/2018-04-28-redux-vs-mobx-chon-cai-nao-day.json":function(n,a){n.exports={data:{markdownRemark:{html:"<p>Nói một cách ngắn gọn: MobX dành project tầm 1 - 3 người làm, các app nhỏ. Redux dành cho tất cả những yêu cầu cao hơn.</p>\n<p>Nếu bạn chỉ quan tâm đến thể thì có thể ko cần đọc tiếp phần sau, còn nếu tò mó thì cứ đọc tiếp.</p>\n<h2>Redux</h2>\n<h3>Ưu</h3>\n<ul>\n<li>Dễ test</li>\n<li>Có thể đoán được những state nào bị ảnh hương -> dễ debug</li>\n<li>Mở rộng tốt, phù hợp team bự</li>\n<li>Kiên định, data flow một chiều duy nhất</li>\n</ul>\n<h2>Nhược điểm</h2>\n<ul>\n<li>Quá cứng nhắc, chúng ta phải tuân thủ các pattern của nó, quá trình code sẽ mất nhiều thời gian hơn cho một chuyện hết sức đơn giản</li>\n<li>Học hơi khó khăn, cần nắm rõ kỹ thuật của Flux, thuần thục ES6, ES7 để sử dụng hiệu quả nhất.</li>\n</ul>\n<h2>MobX</h2>\n<h2>Ưu</h2>\n<ul>\n<li>Code nhanh, tự đọng bind dữ liệu 2 chiều luôn</li>\n<li>Không cần quan tâm đến Flux</li>\n<li>Linh động trong việc cho phép tự quản lý state</li>\n</ul>\n<h2>Nhược</h2>\n<ul>\n<li>Khi team phình ra, dự án bự lên <strong>CHỈ</strong> có thể maintain nổi nếu từ đầu tổ chức tốt, ý là thằng code trước mà để lại sh*t thì coi như ăn cho hết</li>\n<li>Quá tự do cũng mệt, dễ dẫn đến chuyện viết theo kiểu hơi chuối, muốn thích viết sau viết mà</li>\n</ul>\n<h2>Một vài nhận định từ các đồng môn</h2>\n<p>Phần lớn người nào học và sử dụng Redux điều cảm thấy, ôi trời ơi sao phải setup lắm thứ thế này, nào action, nào reducer, nào store, nào connect, dispatch. Có những bạn đã từng làm nhiều Angular thường xuyên phàn nàn chuyện rất ghét việc binding dữ liệu 2 chiều (đọc-ghi) trong Angular, với những dự án lớn việc này làm chuyện debug hết sức khó khăn khi có lỗi. Đó là lý do Flux được giới thiệu, rồi khi Redux được giới thiệu, cộng đồng js dev chuyển qua xài nó. Với những dự án nhỏ, sử dụng dao to búa lớn như Redux để giết kiến thì ko cần thiết, hãy cứ đơn giản <code>setState</code> thôi.</p>\n<p>MobX là một sự lựa chọn khác, một option để quản lý state cho dự án nhỏ. Nó sang mang đến những lợi ích thấy rõ khi kick off các dự án không quá bự. Thực sự mình chưa xài MobX nhiều nên việc lợi ích thấy rõ thì mình mong bạn nào đã dùng nhiều chỉ giáo.</p>\n<p>DHTML -> JQuery -> Backbone vs. Knockout vs. Ember -> Meteor -> Angular vs React. Quá trình <em>thăng tiến</em> của front-end dev là thế. MobX là một công cụ tốt ở thời điểm hiện tại, hy vọng nó không như Knockout JS và các thư viện MVVM trước đây, mọi thứ mới bắt đầu vận hành mượt mà như một phép màu, 6-12 tháng sau, phép màu và tự do trở thành thảm họa cho những người dev kế thừa</p>",frontmatter:{date:"April 28, 2018",path:"/2018-04-28-redux-vs-mobx-chon-cai-nao-day",tags:["javascript","react"],title:"Redux vs Mobx chọn cái nào đây",desc:"Khi nhắc tới thư viện để quản lý state cho một app js, thì chúng sẽ hay rất phân vân giữa 2 lựa chọn Redux hay Mobx"}}},pathContext:{prev:!1,next:{excerpt:"Nhúng Google Maps vào web site bình thường thì quá sức đơn giản, để sử dụng với React Js thì hơi vụng công một chút. Để sử dụng Google Maps API, ta chỉ cần load đoạn js từ googleapis, chèn thêm một cái   với id là  map  chằng hạn. Đoạn script của...",html:'<p>Nhúng Google Maps vào web site bình thường thì quá sức đơn giản, để sử dụng với React Js thì hơi vụng công một chút.</p>\n<p>Để sử dụng Google Maps API, ta chỉ cần load đoạn js từ googleapis, chèn thêm một cái <code>div</code> với id là <em>map</em> chằng hạn.</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token doctype">&lt;!DOCTYPE html></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Basic Google Map on a web page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://maps.googleapis.com/maps/api/js?key<span class="token punctuation">=</span>YOUR_API_KEY&amp;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>Đoạn script của google sẽ được load <strong>sau khi</strong> có static DOM, cái <code>&#x3C;div id=\'map\' /></code> lúc đó đã tồn tại và có thể được sử dụng thoải mái bởi google maps api.</p>\n<p>Nhưng mà trong React JS thì DOM được render và re-render từ <strong>virtual DOM</strong>, một file html của app React JS thường là chỉ có thế này</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token doctype">&lt;!DOCTYPE html></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Simple React app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/app.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>Tức là nếu làm như cách bình thường ở trên thì cái <code>&#x3C;div id=\'map\' /></code> chưa hề tồn tại trên xã hội.</p>\n<h2>Load bất đồng bộ (Asynchronous Loading)</h2>\n<p>Cả hai đoạn script React và Google maps đều phải tốn thời gian để load, chúng ta phải đảm bảo Google Map chỉ được tạo ra <strong>sau khi</strong> React app đã khởi tạo và render DOM xong. Thoạt nhìn thì dùng asyn google map sẽ là một giải pháp.</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://maps.googleapis.com/maps/api/js?key<span class="token punctuation">=</span>YOUR_API_KEY&amp;callback<span class="token punctuation">=</span>initMap<span class="token punctuation">"</span></span>\n        <span class="token attr-name">async</span> <span class="token attr-name">defer</span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>Chúng ta thêm <code>asyn</code> và <code>defer</code> để load đoạn googleapis này sau cùng, đồng thời thêm hàm <em>callback</em> sau khi load xong. Nếu <code>initMap</code> là một <em>global function</em> thì ta có thể gọi nó bên trong React Component</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">initMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">google<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>Map</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'map\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Buồn thay! Không chạy đâu các bạn ạ. Ngay cả khi Google Maps chỉ được load sau khi React được load, không có nghĩa là toàn bộ cây DOM đã được <em>mount</em> và <em>render</em> khi thực thi hàm <em>callback</em>.</p>\n<p>Ok, chúng ta cần giải pháp tốt hơn. Về cơ bản </p>\n<blockquote>\n<p>chúng ta muốn load đoạn script của google ngay khi <em>component</em> có sử dụng đến google api được <strong>mounted</strong></p>\n</blockquote>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code>componentDidMount <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// trỏ global function window.initMap này vào hàm initMap của component để thằng google có thể  gọi trong hàm callback</span>\n    window<span class="token punctuation">.</span>initMap <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>initMap<span class="token punctuation">;</span>\n\n    <span class="token comment" spellcheck="true">// chèn ngay đoạn js của googleapis cho anh xài ngay.</span>\n    <span class="token function">loadJS</span><span class="token punctuation">(</span><span class="token string">\'https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&amp;callback=initMap\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\ninitMap <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">google<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>Map</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>refs<span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">getDOMNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">/* các options khác*/</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nrender <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>map<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">height</span><span class="token punctuation">:</span> <span class="token string">\'500px\'</span>, <span class="token property">width</span><span class="token punctuation">:</span> <span class="token string">\'500px\'</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token operator">&lt;</span>⁄div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>⁄div<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// hàm này để chèn thêm &lt;script /> sau khi gọi</span>\n<span class="token keyword">function</span> <span class="token function">loadJS</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> ref <span class="token operator">=</span> window<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> script <span class="token operator">=</span> window<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    script<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>\n    script<span class="token punctuation">.</span><span class="token keyword">async</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    ref<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>script<span class="token punctuation">,</span> ref<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Để ý là ta thêm <code>ref=\'map\'</code> để trỏ tới đúng cái <code>div</code> sử dụng để đưa vào cho Google Map constructor bằng hàm <code>this.refs.map.getDOMNode()</code> ngay khi DOM đã render.</p>\n<p>Vậy là xong. Google Map đã có thể hoạt động trơn tru với React Component, đúng hơn là với Virtual DOM.</p>',id:"E:/anluu/luckyluu/posts/2018-04-27-google-maps-va-react/index.md absPath of file >>> MarkdownRemark",timeToRead:3,frontmatter:{date:"2018-04-27T13:35:13.234Z",path:"/2018-04-27-google-maps-va-react",tags:["javascript","react"],title:"Google Maps và React"}}}}}});
//# sourceMappingURL=path---2018-04-28-redux-vs-mobx-chon-cai-nao-day-3b92efd4970e9dcdfbf2.js.map