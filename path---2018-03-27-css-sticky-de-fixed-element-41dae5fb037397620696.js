webpackJsonp([57],{"./node_modules/json-loader/index.js!./.cache/json/2018-03-27-css-sticky-de-fixed-element.json":function(n,s){n.exports={data:{markdownRemark:{html:'<h2>Bài toán cần giải quyết</h2>\n<p>Cái Popup Modal chúng ta có cái nút <code>close</code>, cái modal chắc chắn là ta phải set <code>position: fixed</code> để cố định nó với window, cái nội dung bên trong cái modal có thể scroll được</p>\n<p><img src="https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1521121189/modal_unnmdd.png"></p>\n<p>Nút close này chúng ta sẽ set <code>position: absolute</code> cho nó lên góc phải đúng không</p>\n<p><img src="https://res.cloudinary.com/css-tricks/image/upload/c_scale,w_1000,f_auto,q_auto/v1521121253/hidden-close-button_p4cj3m.png"></p>\n<p>Nhưng mà khi scroll thì ta sẽ bị mất nút <code>close</code>, ta không thể set <code>position: fixed</code> cho cái nút close được, vì fixe position nghĩa là ta bắt nó định vị trí theo window.</p>\n<p>Nếu cái modal mà ta có set <code>transform</code> bất kỳ giá trị nào, thì nút <code>close</code> sẽ trở về với body</p>\n<p><img src="https://cdn.css-tricks.com/wp-content/uploads/2018/03/fixed.gif"></p>\n<h2>Giải pháp</h2>\n<p><code>position: sticky</code> cho nút close là xong, đơn giản quá.</p>\n<p><img src="https://cdn.css-tricks.com/wp-content/uploads/2018/03/sticky-scroll.gif"></p>',frontmatter:{date:"March 27, 2018",path:"/2018-03-27-css-sticky-de-fixed-element",tags:["css"],title:"Trick Sử dụng Sticky trong CSS",desc:"Một cái trick hay để giải quyết vấn đề thường mắt phải"}}},pathContext:{prev:{excerpt:"Kéo thả các Element Bên trong tab Elements có thể kéo các element HTML và thả nó vào vị trí mới Reference đến element đang chọn trong console Để reference đến 1 element đang được chọn, gõ  , nếu đang load jquery thì có thể dùng  Gọi lại giá trị tính...",html:'<h2>Kéo thả các Element</h2>\n<p>Bên trong tab Elements có thể kéo các element HTML và thả nó vào vị trí mới</p>\n<p><img src="https://flaviocopes.com/chrome-devtools-tips/drag-and-drop.gif" alt="Kéo thả các Element"></p>\n<h2>Reference đến element đang chọn trong console</h2>\n<p>Để reference đến 1 element đang được chọn, gõ <code>$0</code>, nếu đang load jquery thì có thể dùng <code>$($0)</code></p>\n<p><img src="https://flaviocopes.com/chrome-devtools-tips/reference-elements.gif" alt="Reference đến element đang chọn trong console"></p>\n<h2>Gọi lại giá trị tính toán lần trước trong console</h2>\n<p><code>$_</code> để gọi lại giá trị tính toán lần trước</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>3 + 4\n// = 7\n$_ * 2\n// = 14</code></pre>\n      </div>\n<p><img src="https://flaviocopes.com/chrome-devtools-tips/use-last-result.gif" alt="Gọi lại giá trị tính toán lần trước trong console"></p>\n<h2>Xác định đoạn CSS được định nghĩa ở đâu</h2>\n<p><code>cmd-click</code> (<code>ctrl-click</code> trong windows) vào property CSS trong tab Elements để nhảy ngay tới chổ định nghĩa</p>\n<p><img src="https://flaviocopes.com/chrome-devtools-tips/find-where-css-defined.gif" alt="Xác định đoạn CSS được định nghĩa ở đâu"></p>\n<h2>screenshot một element</h2>\n<p>Chọn element + nhấn <code>cmd+shift+p</code> (<code>ctrl+shift+p</code> trong windows) để mở menu Command và chọn <strong>Capture node screenshot</strong></p>\n<p><img src="https://flaviocopes.com/chrome-devtools-tips/screenshot-node.gif" alt="screenshot một element"></p>\n<h2>Tìm element sử dụng CSS selectors</h2>\n<p><code>ctrl+f</code> (<code>cmd+f</code> trong Mac) mở ô search, gõ đoạn css selector ở đây</p>\n<p><img src="https://flaviocopes.com/chrome-devtools-tips/find-elements-css-selectors.gif" alt="Tìm element sử dụng CSS selectors"></p>\n<h2>Shift-Enter trong console</h2>\n<p>Để gõ đoạn code trên nhiều dòng trong console, ấn phím <code>shift-enter</code></p>\n<p><img src="https://flaviocopes.com/chrome-devtools-tips/multiple-lines-commands.gif" alt="Shift-Enter trong console"></p>\n<h2>Clear console</h2>\n<p>Để clear console thường ta sẽ nhấn nút Clear ở trên cùng, hoặc bằng gõ <code>ctrl+l</code> (<code>cmd+k</code>)</p>\n<h2><code>Go to</code> như trong sumblime text hay VSCode</h2>\n<p>Trong tab Source</p>\n<ul>\n<li><code>ctrl+o</code> (cmd+o) để hiển thị tất cả file đang load</li>\n<li><code>ctrl+shift+o</code> (cmd+shift+o) để hiển thị biểu tượng property, function hay là class trong file hiện tại</li>\n<li><code>ctrl+g</code> để nhảy đến dòng</li>\n</ul>\n<h2>Watch Expression</h2>\n<p>Thay vì phải viết đi viết lại biến hoặc expression trong lúc debug, thêm nó vào trong Watch Expression</p>\n<p><img src="https://flaviocopes.com/chrome-devtools-tips/watch-expressions.gif" alt="Watch Expression"></p>\n<h2>XHR/Fetch debugging</h2>\n<p>Chỉ định khi nào dừng nếu send đi một XHR/Fetch request trong XHR/Fetch breakpoint panel</p>\n<p><img src="https://flaviocopes.com/chrome-devtools-tips/xhr-fetch-breakpoints.png"></p>\n<h2>Debug khi DOM bị thay đổi</h2>\n<p>Right click vào element -> chọn <strong>enable Break on Subtree Modifications</strong>, khi có đoạn script nào thay đổi element, debugger sẽ stop ngay lập tức</p>\n<p><img src="https://flaviocopes.com/chrome-devtools-tips/break-subtree-modifications.png" alt="Debug khi DOM bị thay đổi"></p>',id:"C:/xampp/htdocs/luckyluu/posts/2018-03-28-mot-vai-tip-su-dung-chrome-dev-tools/index.md absPath of file >>> MarkdownRemark",timeToRead:1,frontmatter:{date:"2018-03-28T13:35:13.234Z",path:"/2018-03-28-mot-vai-tip-su-dung-chrome-dev-tools",tags:["javascript"],title:"Một vài tip sử dụng Chrome Dev Tools"}},next:{excerpt:"Container/View Cách chia container và view thế này đang được sử dụng khá nhiều vì khả năng mở rộng sau này tốt, cái view chỉ cần quan tâm hiển thị dữ liệu như thế nào, phần xử lý logic sẽ do container đảm nhiệm. Container / Branch / View Chia cái...",html:'<h2>Container/View</h2>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">class</span> <span class="token class-name">PlanetView</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">renderLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Loading<span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">renderError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>I\'m sorry<span class="token operator">!</span> Please <span class="token keyword">try</span> again<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">renderPlanet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span>name<span class="token punctuation">,</span> climate<span class="token punctuation">,</span> terrain<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>planet<span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Climate<span class="token punctuation">:</span> <span class="token punctuation">{</span>climate<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Terrain<span class="token punctuation">:</span> <span class="token punctuation">{</span>terrain<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>loading<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>planet<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderPlanet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">PlanetContainer</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    state <span class="token operator">=</span> <span class="token punctuation">{</span>loading<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">\'www.api.com/planet/5\'</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>\n                planet <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> planet<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                error <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> error<span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token operator">&lt;</span>PlanetView <span class="token punctuation">{</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Cách chia container và view thế này đang được sử dụng khá nhiều vì khả năng mở rộng sau này tốt, cái view chỉ cần quan tâm hiển thị dữ liệu như thế nào, phần xử lý logic sẽ do container đảm nhiệm.</p>\n<h2>Container / Branch / View</h2>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">const</span> LoadingView <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Loading<span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token keyword">const</span> ErrorView <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>I\'m sorry<span class="token operator">!</span> Please <span class="token keyword">try</span> again<span class="token punctuation">.</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> PlanetView <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">,</span> climate<span class="token punctuation">,</span> terrain <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Climate<span class="token punctuation">:</span> <span class="token punctuation">{</span>climate<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Terrain<span class="token punctuation">:</span> <span class="token punctuation">{</span>terrain<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> PlanetBranch <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token punctuation">,</span> planet <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>loading<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LoadingView</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>planet<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>PlanetView <span class="token punctuation">{</span><span class="token operator">...</span>planet<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ErrorView</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">PlanetContainer</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span> loading<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"https://swapi.co/api/planets/5"</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>\n        planet <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> planet <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        error <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> error <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>PlanetBranch <span class="token punctuation">{</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> PlanetContainer<span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Chia cái View ra nhỏ hơn nữa thành Branch > View, việc quyết định chia nhỏ xuống bao nhiêu là vừa thì tùy theo trường hợp cụ thể để tính toán, với nguyên tắc bất di bất dịch anh ơi viết cho nó đơn giản dể hiểu chừng nào tốt chừng đấy, không phải ai cũng đủ trình thông minh để đọc hết code của anh.</p>\n<h2>Higher Order Components</h2>\n<p>Cái này có bài viết rồi, đọc lại bài cũ <a href="https://luubinhan.github.io/blog/2018-03-02-gioi-thieu-higher-order-component-trong-react">ở đây</a></p>\n<h2>Stateless function</h2>\n<p>Khuyến khích sử dụng vì có thể tái sử dụng component rất nhiều lần, trong component không được chứa <code>state</code>, chỉ nhận <code>prop</code> rồi return</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">const</span> Greeting <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Hi There<span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>Với <code>props</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">const</span> Greeting <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> \n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>color<span class="token punctuation">:</span> context<span class="token punctuation">.</span>color<span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Hi <span class="token punctuation">{</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>Có thể khai báo biến</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">const</span> Greeting <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span>\n    fontWeight<span class="token punctuation">:</span> <span class="token string">"bold"</span><span class="token punctuation">,</span>\n    color<span class="token punctuation">:</span> context<span class="token punctuation">.</span>color<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Có thể khai báo <code>defaultProps</code>, <code>propTypes</code>, <code>contextTypes</code> như thường</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code>Greeting<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">.</span>isRequired\n<span class="token punctuation">}</span>\nGreeting<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">"An.Luu"</span>\n<span class="token punctuation">}</span>\nGreeting<span class="token punctuation">.</span>contextTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n  color<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h2>JSX spread attributes</h2>\n<p>Giống như cách viết <code>...</code> để spread object, 2 Cách viết sau sẽ cho cùng kết quả</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>\n\n<span class="token comment" spellcheck="true">// dùng spread attributes</span>\n<span class="token operator">&lt;</span>main <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">{</span>className<span class="token punctuation">:</span> <span class="token string">"main"</span><span class="token punctuation">,</span> role<span class="token punctuation">:</span> <span class="token string">"main"</span><span class="token punctuation">,</span> children<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n</code></pre>\n      </div>\n<p>Cái đoạn trên chắc sẽ ít thấy ai viết, thường gặp như thế này nhiều hơn</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">const</span> FancyDiv <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"fancy"</span> <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n</code></pre>\n      </div>\n<p>Lưu ý thứ tự sẽ ảnh hưởng đến chuyện override, thí dụ nếu truyền <code>className</code> như sau sẽ override lại cái class <em>fancy</em></p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FancyDiv</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>my-fancy-div<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token comment" spellcheck="true">// kết quả &lt;div class=\'my-fancy-div\'/></span>\n</code></pre>\n      </div>\n<p>Nhưng nếu khai báo <code>FancyDiv</code> như vầy thì sẽ ko bị override</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">const</span> FancyDiv <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span>div <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> className<span class="token operator">=</span><span class="token string">"fancy"</span> <span class="token operator">/</span><span class="token operator">></span>\n</code></pre>\n      </div>\n<h2>render theo điều kiện đúng sai</h2>\n<p>Render khi điều kiện === true</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token punctuation">{</span>condition <span class="token operator">&amp;&amp;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Got it<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Render khi điều kiện === false</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token punctuation">{</span>condition <span class="token operator">||</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Got it<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Render với cập điều kiện đúng sai</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token punctuation">{</span> condition\n    <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Got it<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Not really<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p><a href="https://luubinhan.github.io/blog/2018-03-05-8-cach-render-component-trong-react">Một số kiểu viết với rendẻ theo điều kiện</a></p>\n<h2>Style component</h2>\n<p>Tên này tự chế cái tên này thôi, cũng rất hay sử dụng nên viết ra nếu bạn nào chưa biết có thể tham khảo. Nếu sử dụng qua Bootstrap bạn sẽ biết nó viết CSS theo kiểu inherite, một button có thể có nhiều style </p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn btn-default<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>Để implement kiểu viết này, ta sử dụng thêm một thư viện <code>classnames</code>, viết thường cũng được mà dùng <code>classnames</code> tiện hơn</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token keyword">import</span> classnames <span class="token keyword">from</span> <span class="token string">\'classnames\'</span>\n\n<span class="token keyword">const</span> PrimaryBtn <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span>Btn <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span> primary <span class="token operator">/</span><span class="token operator">></span>\n\n<span class="token keyword">const</span> Btn <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> className<span class="token punctuation">,</span> primary<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\n    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>\n    <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">classnames</span><span class="token punctuation">(</span>\n      <span class="token string">"btn"</span><span class="token punctuation">,</span>\n      primary <span class="token operator">&amp;&amp;</span> <span class="token string">"btn-primary"</span><span class="token punctuation">,</span>\n      className\n    <span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n    <span class="token attr-name">{...props}</span>\n  <span class="token punctuation">/></span></span>\n</code></pre>\n      </div>\n<h2>Event switch</h2>\n<p>Với component cần handle nhiều kiểu event khác nhau, tạo một hàm và dùng câu <code>switch</code> trong đó sẽ trực quan hơn</p>\n<div class="gatsby-highlight">\n      <pre class="language-jsx"><code><span class="token comment" spellcheck="true">// Thay vì</span>\n<span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./actions/doStuff"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">/* action stuff */</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>\n<span class="token function">handleMouseEnter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> hovered<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>\n<span class="token function">handleMouseLeave</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> hovered<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// Thì viết</span>\n<span class="token function">handleEvent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>type<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">switch</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token string">"click"</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./actions/doStuff"</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">/* action dates */</span><span class="token punctuation">)</span>\n    <span class="token keyword">case</span> <span class="token string">"mouseenter"</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> hovered<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">case</span> <span class="token string">"mouseleave"</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> hovered<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">default</span><span class="token punctuation">:</span>\n      <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`No case for event type "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">"`</span></span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>',
id:"C:/xampp/htdocs/luckyluu/posts/2018-03-19-react-patterns-can-ban/index.md absPath of file >>> MarkdownRemark",timeToRead:5,frontmatter:{date:"2018-03-19T13:35:13.234Z",path:"/2018-03-19-react-patterns-can-ban",tags:["javascript","react"],title:"React Pattern căn bản"}}}}}});
//# sourceMappingURL=path---2018-03-27-css-sticky-de-fixed-element-41dae5fb037397620696.js.map